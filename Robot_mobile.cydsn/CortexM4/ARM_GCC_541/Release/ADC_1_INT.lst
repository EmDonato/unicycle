ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"ADC_1_INT.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.ADC_1_ISR,"ax",%progbits
  21              		.align	1
  22              		.global	ADC_1_ISR
  23              		.thumb
  24              		.thumb_func
  25              		.type	ADC_1_ISR, %function
  26              	ADC_1_ISR:
  27              	.LFB271:
  28              		.file 1 "Generated_Source\\PSoC6\\ADC_1_INT.c"
   1:Generated_Source\PSoC6/ADC_1_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1_INT.c **** * \file     ADC_1_INT.c
   3:Generated_Source\PSoC6/ADC_1_INT.c **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1_INT.c **** *
   5:Generated_Source\PSoC6/ADC_1_INT.c **** * \brief
   6:Generated_Source\PSoC6/ADC_1_INT.c **** * Provides the initialization data structure for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1_INT.c **** *
   8:Generated_Source\PSoC6/ADC_1_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1_INT.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_1_INT.c **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1_INT.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1_INT.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1_INT.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1_INT.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1_INT.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1_INT.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1_INT.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1_INT.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_1_INT.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1_INT.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1_INT.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1_INT.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_1_INT.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1_INT.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1_INT.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1_INT.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1_INT.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1_INT.c **** * changes to the Software without notice. Cypress does not assume any
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 2


  30:Generated_Source\PSoC6/ADC_1_INT.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_1_INT.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1_INT.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1_INT.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1_INT.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1_INT.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1_INT.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1_INT.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1_INT.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC6/ADC_1_INT.c **** #include "cyapicallbacks.h"
  41:Generated_Source\PSoC6/ADC_1_INT.c **** 
  42:Generated_Source\PSoC6/ADC_1_INT.c **** /******************************************************************************
  43:Generated_Source\PSoC6/ADC_1_INT.c **** * Custom Declarations and Variables
  44:Generated_Source\PSoC6/ADC_1_INT.c **** * - add user include files, prototypes and variables between the following
  45:Generated_Source\PSoC6/ADC_1_INT.c **** *   #START and #END tags
  46:Generated_Source\PSoC6/ADC_1_INT.c **** ******************************************************************************/
  47:Generated_Source\PSoC6/ADC_1_INT.c **** /* `#START ADC_1_SYS_VAR`  */
  48:Generated_Source\PSoC6/ADC_1_INT.c **** 
  49:Generated_Source\PSoC6/ADC_1_INT.c **** /* `#END`  */
  50:Generated_Source\PSoC6/ADC_1_INT.c **** 
  51:Generated_Source\PSoC6/ADC_1_INT.c **** /******************************************************************************
  52:Generated_Source\PSoC6/ADC_1_INT.c **** * Function Name: ADC_1_ISR
  53:Generated_Source\PSoC6/ADC_1_INT.c **** *******************************************************************************
  54:Generated_Source\PSoC6/ADC_1_INT.c **** *
  55:Generated_Source\PSoC6/ADC_1_INT.c **** * \brief Handle Interrupt Service Routine.
  56:Generated_Source\PSoC6/ADC_1_INT.c **** *
  57:Generated_Source\PSoC6/ADC_1_INT.c **** * \param None
  58:Generated_Source\PSoC6/ADC_1_INT.c **** *
  59:Generated_Source\PSoC6/ADC_1_INT.c **** * \return None
  60:Generated_Source\PSoC6/ADC_1_INT.c **** *
  61:Generated_Source\PSoC6/ADC_1_INT.c **** * \sideeffect None
  62:Generated_Source\PSoC6/ADC_1_INT.c **** *
  63:Generated_Source\PSoC6/ADC_1_INT.c **** ******************************************************************************/
  64:Generated_Source\PSoC6/ADC_1_INT.c **** void ADC_1_ISR(void)
  65:Generated_Source\PSoC6/ADC_1_INT.c **** {
  29              		.loc 1 65 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.LBB8:
  36              	.LBB9:
  37              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 3


  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 4


  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 5


 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 6


 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 7


 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 8


 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 9


 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 10


 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 11


 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 12


 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 13


 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 14


 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 15


 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 16


 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 17


 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 18


 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 19


 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 20


 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 21


1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 22


1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 23


1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 24


1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 25


1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 26


1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 27


1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 28


1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 29


1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 30


1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR(base);
  38              		.loc 2 1556 0
  39 0000 044B     		ldr	r3, .L2
  40 0002 D3F81022 		ldr	r2, [r3, #528]
  41              	.LVL1:
  42              	.LBE9:
  43              	.LBE8:
  44              	.LBB10:
  45              	.LBB11:
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
  46              		.loc 2 1587 0
  47 0006 C3F81022 		str	r2, [r3, #528]
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_INTR(base);
  48              		.loc 2 1590 0
  49 000a D3F81022 		ldr	r2, [r3, #528]
  50              	.LVL2:
  51              	.LBE11:
  52              	.LBE10:
  53              	.LBB12:
  54              	.LBB13:
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 31


  55              		.loc 2 1556 0
  56 000e D3F81032 		ldr	r3, [r3, #528]
  57              	.LVL3:
  58 0012 7047     		bx	lr
  59              	.L3:
  60              		.align	2
  61              	.L2:
  62 0014 00001D41 		.word	1092419584
  63              	.LBE13:
  64              	.LBE12:
  65              		.cfi_endproc
  66              	.LFE271:
  67              		.size	ADC_1_ISR, .-ADC_1_ISR
  68              		.text
  69              	.Letext0:
  70              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
  71              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
  72              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
  73              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
  74              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
  75              		.file 8 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
  76              		.section	.debug_info,"",%progbits
  77              	.Ldebug_info0:
  78 0000 C2090000 		.4byte	0x9c2
  79 0004 0400     		.2byte	0x4
  80 0006 00000000 		.4byte	.Ldebug_abbrev0
  81 000a 04       		.byte	0x4
  82 000b 01       		.uleb128 0x1
  83 000c 56000000 		.4byte	.LASF168
  84 0010 0C       		.byte	0xc
  85 0011 06080000 		.4byte	.LASF169
  86 0015 C1010000 		.4byte	.LASF170
  87 0019 00000000 		.4byte	.Ldebug_ranges0+0
  88 001d 00000000 		.4byte	0
  89 0021 00000000 		.4byte	.Ldebug_line0
  90 0025 02       		.uleb128 0x2
  91 0026 02       		.byte	0x2
  92 0027 05       		.byte	0x5
  93 0028 DE070000 		.4byte	.LASF0
  94 002c 02       		.uleb128 0x2
  95 002d 01       		.byte	0x1
  96 002e 06       		.byte	0x6
  97 002f A8020000 		.4byte	.LASF1
  98 0033 03       		.uleb128 0x3
  99 0034 50010000 		.4byte	.LASF3
 100 0038 03       		.byte	0x3
 101 0039 1D       		.byte	0x1d
 102 003a 3E000000 		.4byte	0x3e
 103 003e 02       		.uleb128 0x2
 104 003f 01       		.byte	0x1
 105 0040 08       		.byte	0x8
 106 0041 A8070000 		.4byte	.LASF2
 107 0045 03       		.uleb128 0x3
 108 0046 20040000 		.4byte	.LASF4
 109 004a 03       		.byte	0x3
 110 004b 29       		.byte	0x29
 111 004c 25000000 		.4byte	0x25
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 32


 112 0050 03       		.uleb128 0x3
 113 0051 CA080000 		.4byte	.LASF5
 114 0055 03       		.byte	0x3
 115 0056 2B       		.byte	0x2b
 116 0057 5B000000 		.4byte	0x5b
 117 005b 02       		.uleb128 0x2
 118 005c 02       		.byte	0x2
 119 005d 07       		.byte	0x7
 120 005e 2B090000 		.4byte	.LASF6
 121 0062 03       		.uleb128 0x3
 122 0063 E8080000 		.4byte	.LASF7
 123 0067 03       		.byte	0x3
 124 0068 3F       		.byte	0x3f
 125 0069 6D000000 		.4byte	0x6d
 126 006d 02       		.uleb128 0x2
 127 006e 04       		.byte	0x4
 128 006f 05       		.byte	0x5
 129 0070 12030000 		.4byte	.LASF8
 130 0074 03       		.uleb128 0x3
 131 0075 F7030000 		.4byte	.LASF9
 132 0079 03       		.byte	0x3
 133 007a 41       		.byte	0x41
 134 007b 7F000000 		.4byte	0x7f
 135 007f 02       		.uleb128 0x2
 136 0080 04       		.byte	0x4
 137 0081 07       		.byte	0x7
 138 0082 A1040000 		.4byte	.LASF10
 139 0086 02       		.uleb128 0x2
 140 0087 08       		.byte	0x8
 141 0088 05       		.byte	0x5
 142 0089 9A020000 		.4byte	.LASF11
 143 008d 02       		.uleb128 0x2
 144 008e 08       		.byte	0x8
 145 008f 07       		.byte	0x7
 146 0090 AA010000 		.4byte	.LASF12
 147 0094 04       		.uleb128 0x4
 148 0095 04       		.byte	0x4
 149 0096 05       		.byte	0x5
 150 0097 696E7400 		.ascii	"int\000"
 151 009b 02       		.uleb128 0x2
 152 009c 04       		.byte	0x4
 153 009d 07       		.byte	0x7
 154 009e 79040000 		.4byte	.LASF13
 155 00a2 03       		.uleb128 0x3
 156 00a3 E9090000 		.4byte	.LASF14
 157 00a7 04       		.byte	0x4
 158 00a8 18       		.byte	0x18
 159 00a9 33000000 		.4byte	0x33
 160 00ad 03       		.uleb128 0x3
 161 00ae 92020000 		.4byte	.LASF15
 162 00b2 04       		.byte	0x4
 163 00b3 20       		.byte	0x20
 164 00b4 45000000 		.4byte	0x45
 165 00b8 03       		.uleb128 0x3
 166 00b9 86040000 		.4byte	.LASF16
 167 00bd 04       		.byte	0x4
 168 00be 24       		.byte	0x24
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 33


 169 00bf 50000000 		.4byte	0x50
 170 00c3 03       		.uleb128 0x3
 171 00c4 A0070000 		.4byte	.LASF17
 172 00c8 04       		.byte	0x4
 173 00c9 2C       		.byte	0x2c
 174 00ca 62000000 		.4byte	0x62
 175 00ce 03       		.uleb128 0x3
 176 00cf 84080000 		.4byte	.LASF18
 177 00d3 04       		.byte	0x4
 178 00d4 30       		.byte	0x30
 179 00d5 74000000 		.4byte	0x74
 180 00d9 02       		.uleb128 0x2
 181 00da 04       		.byte	0x4
 182 00db 07       		.byte	0x7
 183 00dc 21060000 		.4byte	.LASF19
 184 00e0 05       		.uleb128 0x5
 185 00e1 CE000000 		.4byte	0xce
 186 00e5 06       		.uleb128 0x6
 187 00e6 E0000000 		.4byte	0xe0
 188 00ea 07       		.uleb128 0x7
 189 00eb E5000000 		.4byte	0xe5
 190 00ef FA000000 		.4byte	0xfa
 191 00f3 08       		.uleb128 0x8
 192 00f4 D9000000 		.4byte	0xd9
 193 00f8 01       		.byte	0x1
 194 00f9 00       		.byte	0
 195 00fa 07       		.uleb128 0x7
 196 00fb E0000000 		.4byte	0xe0
 197 00ff 0A010000 		.4byte	0x10a
 198 0103 08       		.uleb128 0x8
 199 0104 D9000000 		.4byte	0xd9
 200 0108 0F       		.byte	0xf
 201 0109 00       		.byte	0
 202 010a 07       		.uleb128 0x7
 203 010b E5000000 		.4byte	0xe5
 204 010f 1A010000 		.4byte	0x11a
 205 0113 08       		.uleb128 0x8
 206 0114 D9000000 		.4byte	0xd9
 207 0118 0F       		.byte	0xf
 208 0119 00       		.byte	0
 209 011a 07       		.uleb128 0x7
 210 011b E5000000 		.4byte	0xe5
 211 011f 2A010000 		.4byte	0x12a
 212 0123 08       		.uleb128 0x8
 213 0124 D9000000 		.4byte	0xd9
 214 0128 02       		.byte	0x2
 215 0129 00       		.byte	0
 216 012a 07       		.uleb128 0x7
 217 012b E5000000 		.4byte	0xe5
 218 012f 3A010000 		.4byte	0x13a
 219 0133 08       		.uleb128 0x8
 220 0134 D9000000 		.4byte	0xd9
 221 0138 0E       		.byte	0xe
 222 0139 00       		.byte	0
 223 013a 09       		.uleb128 0x9
 224 013b 080F     		.2byte	0xf08
 225 013d 05       		.byte	0x5
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 34


 226 013e 21       		.byte	0x21
 227 013f C2030000 		.4byte	0x3c2
 228 0143 0A       		.uleb128 0xa
 229 0144 7F090000 		.4byte	.LASF20
 230 0148 05       		.byte	0x5
 231 0149 22       		.byte	0x22
 232 014a E0000000 		.4byte	0xe0
 233 014e 00       		.byte	0
 234 014f 0A       		.uleb128 0xa
 235 0150 77060000 		.4byte	.LASF21
 236 0154 05       		.byte	0x5
 237 0155 23       		.byte	0x23
 238 0156 E0000000 		.4byte	0xe0
 239 015a 04       		.byte	0x4
 240 015b 0A       		.uleb128 0xa
 241 015c F1070000 		.4byte	.LASF22
 242 0160 05       		.byte	0x5
 243 0161 24       		.byte	0x24
 244 0162 C7030000 		.4byte	0x3c7
 245 0166 08       		.byte	0x8
 246 0167 0A       		.uleb128 0xa
 247 0168 12040000 		.4byte	.LASF23
 248 016c 05       		.byte	0x5
 249 016d 25       		.byte	0x25
 250 016e E0000000 		.4byte	0xe0
 251 0172 10       		.byte	0x10
 252 0173 0A       		.uleb128 0xa
 253 0174 A8060000 		.4byte	.LASF24
 254 0178 05       		.byte	0x5
 255 0179 26       		.byte	0x26
 256 017a E0000000 		.4byte	0xe0
 257 017e 14       		.byte	0x14
 258 017f 0A       		.uleb128 0xa
 259 0180 83060000 		.4byte	.LASF25
 260 0184 05       		.byte	0x5
 261 0185 27       		.byte	0x27
 262 0186 E0000000 		.4byte	0xe0
 263 018a 18       		.byte	0x18
 264 018b 0A       		.uleb128 0xa
 265 018c 86010000 		.4byte	.LASF26
 266 0190 05       		.byte	0x5
 267 0191 28       		.byte	0x28
 268 0192 E0000000 		.4byte	0xe0
 269 0196 1C       		.byte	0x1c
 270 0197 0A       		.uleb128 0xa
 271 0198 A0060000 		.4byte	.LASF27
 272 019c 05       		.byte	0x5
 273 019d 29       		.byte	0x29
 274 019e E0000000 		.4byte	0xe0
 275 01a2 20       		.byte	0x20
 276 01a3 0A       		.uleb128 0xa
 277 01a4 DA050000 		.4byte	.LASF28
 278 01a8 05       		.byte	0x5
 279 01a9 2A       		.byte	0x2a
 280 01aa E0000000 		.4byte	0xe0
 281 01ae 24       		.byte	0x24
 282 01af 0A       		.uleb128 0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 35


 283 01b0 36070000 		.4byte	.LASF29
 284 01b4 05       		.byte	0x5
 285 01b5 2B       		.byte	0x2b
 286 01b6 E1030000 		.4byte	0x3e1
 287 01ba 28       		.byte	0x28
 288 01bb 0A       		.uleb128 0xa
 289 01bc 38040000 		.4byte	.LASF30
 290 01c0 05       		.byte	0x5
 291 01c1 2C       		.byte	0x2c
 292 01c2 E6030000 		.4byte	0x3e6
 293 01c6 80       		.byte	0x80
 294 01c7 0A       		.uleb128 0xa
 295 01c8 52080000 		.4byte	.LASF31
 296 01cc 05       		.byte	0x5
 297 01cd 2D       		.byte	0x2d
 298 01ce F0030000 		.4byte	0x3f0
 299 01d2 C0       		.byte	0xc0
 300 01d3 0B       		.uleb128 0xb
 301 01d4 55090000 		.4byte	.LASF32
 302 01d8 05       		.byte	0x5
 303 01d9 2E       		.byte	0x2e
 304 01da FA030000 		.4byte	0x3fa
 305 01de 0001     		.2byte	0x100
 306 01e0 0B       		.uleb128 0xb
 307 01e1 4A070000 		.4byte	.LASF33
 308 01e5 05       		.byte	0x5
 309 01e6 2F       		.byte	0x2f
 310 01e7 04040000 		.4byte	0x404
 311 01eb 4001     		.2byte	0x140
 312 01ed 0B       		.uleb128 0xb
 313 01ee 35060000 		.4byte	.LASF34
 314 01f2 05       		.byte	0x5
 315 01f3 30       		.byte	0x30
 316 01f4 0E040000 		.4byte	0x40e
 317 01f8 8001     		.2byte	0x180
 318 01fa 0B       		.uleb128 0xb
 319 01fb 6A080000 		.4byte	.LASF35
 320 01ff 05       		.byte	0x5
 321 0200 31       		.byte	0x31
 322 0201 18040000 		.4byte	0x418
 323 0205 C001     		.2byte	0x1c0
 324 0207 0B       		.uleb128 0xb
 325 0208 3C050000 		.4byte	.LASF36
 326 020c 05       		.byte	0x5
 327 020d 32       		.byte	0x32
 328 020e E5000000 		.4byte	0xe5
 329 0212 0002     		.2byte	0x200
 330 0214 0B       		.uleb128 0xb
 331 0215 D5090000 		.4byte	.LASF37
 332 0219 05       		.byte	0x5
 333 021a 33       		.byte	0x33
 334 021b E5000000 		.4byte	0xe5
 335 021f 0402     		.2byte	0x204
 336 0221 0B       		.uleb128 0xb
 337 0222 B3040000 		.4byte	.LASF38
 338 0226 05       		.byte	0x5
 339 0227 34       		.byte	0x34
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 36


 340 0228 E5000000 		.4byte	0xe5
 341 022c 0802     		.2byte	0x208
 342 022e 0B       		.uleb128 0xb
 343 022f 3D080000 		.4byte	.LASF39
 344 0233 05       		.byte	0x5
 345 0234 35       		.byte	0x35
 346 0235 E5000000 		.4byte	0xe5
 347 0239 0C02     		.2byte	0x20c
 348 023b 0B       		.uleb128 0xb
 349 023c 12090000 		.4byte	.LASF40
 350 0240 05       		.byte	0x5
 351 0241 36       		.byte	0x36
 352 0242 E0000000 		.4byte	0xe0
 353 0246 1002     		.2byte	0x210
 354 0248 0B       		.uleb128 0xb
 355 0249 E5050000 		.4byte	.LASF41
 356 024d 05       		.byte	0x5
 357 024e 37       		.byte	0x37
 358 024f E0000000 		.4byte	0xe0
 359 0253 1402     		.2byte	0x214
 360 0255 0B       		.uleb128 0xb
 361 0256 E4040000 		.4byte	.LASF42
 362 025a 05       		.byte	0x5
 363 025b 38       		.byte	0x38
 364 025c E0000000 		.4byte	0xe0
 365 0260 1802     		.2byte	0x218
 366 0262 0B       		.uleb128 0xb
 367 0263 F9060000 		.4byte	.LASF43
 368 0267 05       		.byte	0x5
 369 0268 39       		.byte	0x39
 370 0269 E5000000 		.4byte	0xe5
 371 026d 1C02     		.2byte	0x21c
 372 026f 0B       		.uleb128 0xb
 373 0270 2A040000 		.4byte	.LASF44
 374 0274 05       		.byte	0x5
 375 0275 3A       		.byte	0x3a
 376 0276 E0000000 		.4byte	0xe0
 377 027a 2002     		.2byte	0x220
 378 027c 0B       		.uleb128 0xb
 379 027d E7060000 		.4byte	.LASF45
 380 0281 05       		.byte	0x5
 381 0282 3B       		.byte	0x3b
 382 0283 E0000000 		.4byte	0xe0
 383 0287 2402     		.2byte	0x224
 384 0289 0B       		.uleb128 0xb
 385 028a FF080000 		.4byte	.LASF46
 386 028e 05       		.byte	0x5
 387 028f 3C       		.byte	0x3c
 388 0290 E0000000 		.4byte	0xe0
 389 0294 2802     		.2byte	0x228
 390 0296 0B       		.uleb128 0xb
 391 0297 77050000 		.4byte	.LASF47
 392 029b 05       		.byte	0x5
 393 029c 3D       		.byte	0x3d
 394 029d E5000000 		.4byte	0xe5
 395 02a1 2C02     		.2byte	0x22c
 396 02a3 0B       		.uleb128 0xb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 37


 397 02a4 31050000 		.4byte	.LASF48
 398 02a8 05       		.byte	0x5
 399 02a9 3E       		.byte	0x3e
 400 02aa E0000000 		.4byte	0xe0
 401 02ae 3002     		.2byte	0x230
 402 02b0 0B       		.uleb128 0xb
 403 02b1 310A0000 		.4byte	.LASF49
 404 02b5 05       		.byte	0x5
 405 02b6 3F       		.byte	0x3f
 406 02b7 E0000000 		.4byte	0xe0
 407 02bb 3402     		.2byte	0x234
 408 02bd 0B       		.uleb128 0xb
 409 02be 82020000 		.4byte	.LASF50
 410 02c2 05       		.byte	0x5
 411 02c3 40       		.byte	0x40
 412 02c4 E0000000 		.4byte	0xe0
 413 02c8 3802     		.2byte	0x238
 414 02ca 0B       		.uleb128 0xb
 415 02cb 610A0000 		.4byte	.LASF51
 416 02cf 05       		.byte	0x5
 417 02d0 41       		.byte	0x41
 418 02d1 E5000000 		.4byte	0xe5
 419 02d5 3C02     		.2byte	0x23c
 420 02d7 0B       		.uleb128 0xb
 421 02d8 2D030000 		.4byte	.LASF52
 422 02dc 05       		.byte	0x5
 423 02dd 42       		.byte	0x42
 424 02de E5000000 		.4byte	0xe5
 425 02e2 4002     		.2byte	0x240
 426 02e4 0B       		.uleb128 0xb
 427 02e5 60070000 		.4byte	.LASF53
 428 02e9 05       		.byte	0x5
 429 02ea 43       		.byte	0x43
 430 02eb 22040000 		.4byte	0x422
 431 02ef 4402     		.2byte	0x244
 432 02f1 0B       		.uleb128 0xb
 433 02f2 1F000000 		.4byte	.LASF54
 434 02f6 05       		.byte	0x5
 435 02f7 44       		.byte	0x44
 436 02f8 E0000000 		.4byte	0xe0
 437 02fc 8002     		.2byte	0x280
 438 02fe 0B       		.uleb128 0xb
 439 02ff 6A070000 		.4byte	.LASF55
 440 0303 05       		.byte	0x5
 441 0304 45       		.byte	0x45
 442 0305 2C040000 		.4byte	0x42c
 443 0309 8402     		.2byte	0x284
 444 030b 0B       		.uleb128 0xb
 445 030c 46030000 		.4byte	.LASF56
 446 0310 05       		.byte	0x5
 447 0311 46       		.byte	0x46
 448 0312 E5000000 		.4byte	0xe5
 449 0316 9002     		.2byte	0x290
 450 0318 0B       		.uleb128 0xb
 451 0319 74070000 		.4byte	.LASF57
 452 031d 05       		.byte	0x5
 453 031e 47       		.byte	0x47
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 38


 454 031f 36040000 		.4byte	0x436
 455 0323 9402     		.2byte	0x294
 456 0325 0B       		.uleb128 0xb
 457 0326 A9090000 		.4byte	.LASF58
 458 032a 05       		.byte	0x5
 459 032b 48       		.byte	0x48
 460 032c E5000000 		.4byte	0xe5
 461 0330 A002     		.2byte	0x2a0
 462 0332 0B       		.uleb128 0xb
 463 0333 16000000 		.4byte	.LASF59
 464 0337 05       		.byte	0x5
 465 0338 49       		.byte	0x49
 466 0339 E5000000 		.4byte	0xe5
 467 033d A402     		.2byte	0x2a4
 468 033f 0B       		.uleb128 0xb
 469 0340 7E070000 		.4byte	.LASF60
 470 0344 05       		.byte	0x5
 471 0345 4A       		.byte	0x4a
 472 0346 40040000 		.4byte	0x440
 473 034a A802     		.2byte	0x2a8
 474 034c 0B       		.uleb128 0xb
 475 034d 36010000 		.4byte	.LASF61
 476 0351 05       		.byte	0x5
 477 0352 4B       		.byte	0x4b
 478 0353 E0000000 		.4byte	0xe0
 479 0357 0003     		.2byte	0x300
 480 0359 0B       		.uleb128 0xb
 481 035a 92030000 		.4byte	.LASF62
 482 035e 05       		.byte	0x5
 483 035f 4C       		.byte	0x4c
 484 0360 E0000000 		.4byte	0xe0
 485 0364 0403     		.2byte	0x304
 486 0366 0B       		.uleb128 0xb
 487 0367 88070000 		.4byte	.LASF63
 488 036b 05       		.byte	0x5
 489 036c 4D       		.byte	0x4d
 490 036d 5A040000 		.4byte	0x45a
 491 0371 0803     		.2byte	0x308
 492 0373 0B       		.uleb128 0xb
 493 0374 D1040000 		.4byte	.LASF64
 494 0378 05       		.byte	0x5
 495 0379 4E       		.byte	0x4e
 496 037a E0000000 		.4byte	0xe0
 497 037e 4003     		.2byte	0x340
 498 0380 0B       		.uleb128 0xb
 499 0381 6C090000 		.4byte	.LASF65
 500 0385 05       		.byte	0x5
 501 0386 4F       		.byte	0x4f
 502 0387 E0000000 		.4byte	0xe0
 503 038b 4403     		.2byte	0x344
 504 038d 0B       		.uleb128 0xb
 505 038e 1B030000 		.4byte	.LASF66
 506 0392 05       		.byte	0x5
 507 0393 50       		.byte	0x50
 508 0394 E5000000 		.4byte	0xe5
 509 0398 4803     		.2byte	0x348
 510 039a 0B       		.uleb128 0xb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 39


 511 039b FD020000 		.4byte	.LASF67
 512 039f 05       		.byte	0x5
 513 03a0 51       		.byte	0x51
 514 03a1 75040000 		.4byte	0x475
 515 03a5 4C03     		.2byte	0x34c
 516 03a7 0B       		.uleb128 0xb
 517 03a8 6E020000 		.4byte	.LASF68
 518 03ac 05       		.byte	0x5
 519 03ad 52       		.byte	0x52
 520 03ae E0000000 		.4byte	0xe0
 521 03b2 000F     		.2byte	0xf00
 522 03b4 0B       		.uleb128 0xb
 523 03b5 78020000 		.4byte	.LASF69
 524 03b9 05       		.byte	0x5
 525 03ba 53       		.byte	0x53
 526 03bb E0000000 		.4byte	0xe0
 527 03bf 040F     		.2byte	0xf04
 528 03c1 00       		.byte	0
 529 03c2 05       		.uleb128 0x5
 530 03c3 EA000000 		.4byte	0xea
 531 03c7 06       		.uleb128 0x6
 532 03c8 C2030000 		.4byte	0x3c2
 533 03cc 07       		.uleb128 0x7
 534 03cd E5000000 		.4byte	0xe5
 535 03d1 DC030000 		.4byte	0x3dc
 536 03d5 08       		.uleb128 0x8
 537 03d6 D9000000 		.4byte	0xd9
 538 03da 15       		.byte	0x15
 539 03db 00       		.byte	0
 540 03dc 05       		.uleb128 0x5
 541 03dd CC030000 		.4byte	0x3cc
 542 03e1 06       		.uleb128 0x6
 543 03e2 DC030000 		.4byte	0x3dc
 544 03e6 05       		.uleb128 0x5
 545 03e7 FA000000 		.4byte	0xfa
 546 03eb 05       		.uleb128 0x5
 547 03ec 0A010000 		.4byte	0x10a
 548 03f0 06       		.uleb128 0x6
 549 03f1 EB030000 		.4byte	0x3eb
 550 03f5 05       		.uleb128 0x5
 551 03f6 0A010000 		.4byte	0x10a
 552 03fa 06       		.uleb128 0x6
 553 03fb F5030000 		.4byte	0x3f5
 554 03ff 05       		.uleb128 0x5
 555 0400 0A010000 		.4byte	0x10a
 556 0404 06       		.uleb128 0x6
 557 0405 FF030000 		.4byte	0x3ff
 558 0409 05       		.uleb128 0x5
 559 040a 0A010000 		.4byte	0x10a
 560 040e 06       		.uleb128 0x6
 561 040f 09040000 		.4byte	0x409
 562 0413 05       		.uleb128 0x5
 563 0414 0A010000 		.4byte	0x10a
 564 0418 06       		.uleb128 0x6
 565 0419 13040000 		.4byte	0x413
 566 041d 05       		.uleb128 0x5
 567 041e 2A010000 		.4byte	0x12a
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 40


 568 0422 06       		.uleb128 0x6
 569 0423 1D040000 		.4byte	0x41d
 570 0427 05       		.uleb128 0x5
 571 0428 1A010000 		.4byte	0x11a
 572 042c 06       		.uleb128 0x6
 573 042d 27040000 		.4byte	0x427
 574 0431 05       		.uleb128 0x5
 575 0432 1A010000 		.4byte	0x11a
 576 0436 06       		.uleb128 0x6
 577 0437 31040000 		.4byte	0x431
 578 043b 05       		.uleb128 0x5
 579 043c CC030000 		.4byte	0x3cc
 580 0440 06       		.uleb128 0x6
 581 0441 3B040000 		.4byte	0x43b
 582 0445 07       		.uleb128 0x7
 583 0446 E5000000 		.4byte	0xe5
 584 044a 55040000 		.4byte	0x455
 585 044e 08       		.uleb128 0x8
 586 044f D9000000 		.4byte	0xd9
 587 0453 0D       		.byte	0xd
 588 0454 00       		.byte	0
 589 0455 05       		.uleb128 0x5
 590 0456 45040000 		.4byte	0x445
 591 045a 06       		.uleb128 0x6
 592 045b 55040000 		.4byte	0x455
 593 045f 07       		.uleb128 0x7
 594 0460 E5000000 		.4byte	0xe5
 595 0464 70040000 		.4byte	0x470
 596 0468 0C       		.uleb128 0xc
 597 0469 D9000000 		.4byte	0xd9
 598 046d EC02     		.2byte	0x2ec
 599 046f 00       		.byte	0
 600 0470 05       		.uleb128 0x5
 601 0471 5F040000 		.4byte	0x45f
 602 0475 06       		.uleb128 0x6
 603 0476 70040000 		.4byte	0x470
 604 047a 03       		.uleb128 0x3
 605 047b FA070000 		.4byte	.LASF70
 606 047f 05       		.byte	0x5
 607 0480 54       		.byte	0x54
 608 0481 3A010000 		.4byte	0x13a
 609 0485 0D       		.uleb128 0xd
 610 0486 F7040000 		.4byte	.LASF71
 611 048a 06       		.byte	0x6
 612 048b 5206     		.2byte	0x652
 613 048d 7A040000 		.4byte	0x47a
 614 0491 02       		.uleb128 0x2
 615 0492 08       		.byte	0x8
 616 0493 04       		.byte	0x4
 617 0494 9F080000 		.4byte	.LASF72
 618 0498 0E       		.uleb128 0xe
 619 0499 B8       		.byte	0xb8
 620 049a 07       		.byte	0x7
 621 049b 34       		.byte	0x34
 622 049c A9080000 		.4byte	0x8a9
 623 04a0 0A       		.uleb128 0xa
 624 04a1 91010000 		.4byte	.LASF73
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 41


 625 04a5 07       		.byte	0x7
 626 04a6 37       		.byte	0x37
 627 04a7 CE000000 		.4byte	0xce
 628 04ab 00       		.byte	0
 629 04ac 0A       		.uleb128 0xa
 630 04ad C9020000 		.4byte	.LASF74
 631 04b1 07       		.byte	0x7
 632 04b2 38       		.byte	0x38
 633 04b3 CE000000 		.4byte	0xce
 634 04b7 04       		.byte	0x4
 635 04b8 0A       		.uleb128 0xa
 636 04b9 51030000 		.4byte	.LASF75
 637 04bd 07       		.byte	0x7
 638 04be 39       		.byte	0x39
 639 04bf CE000000 		.4byte	0xce
 640 04c3 08       		.byte	0x8
 641 04c4 0A       		.uleb128 0xa
 642 04c5 92070000 		.4byte	.LASF76
 643 04c9 07       		.byte	0x7
 644 04ca 3A       		.byte	0x3a
 645 04cb CE000000 		.4byte	0xce
 646 04cf 0C       		.byte	0xc
 647 04d0 0A       		.uleb128 0xa
 648 04d1 D4020000 		.4byte	.LASF77
 649 04d5 07       		.byte	0x7
 650 04d6 3B       		.byte	0x3b
 651 04d7 CE000000 		.4byte	0xce
 652 04db 10       		.byte	0x10
 653 04dc 0A       		.uleb128 0xa
 654 04dd 08030000 		.4byte	.LASF78
 655 04e1 07       		.byte	0x7
 656 04e2 3C       		.byte	0x3c
 657 04e3 CE000000 		.4byte	0xce
 658 04e7 14       		.byte	0x14
 659 04e8 0A       		.uleb128 0xa
 660 04e9 EE040000 		.4byte	.LASF79
 661 04ed 07       		.byte	0x7
 662 04ee 3D       		.byte	0x3d
 663 04ef CE000000 		.4byte	0xce
 664 04f3 18       		.byte	0x18
 665 04f4 0A       		.uleb128 0xa
 666 04f5 2D010000 		.4byte	.LASF80
 667 04f9 07       		.byte	0x7
 668 04fa 3E       		.byte	0x3e
 669 04fb CE000000 		.4byte	0xce
 670 04ff 1C       		.byte	0x1c
 671 0500 0A       		.uleb128 0xa
 672 0501 590A0000 		.4byte	.LASF81
 673 0505 07       		.byte	0x7
 674 0506 3F       		.byte	0x3f
 675 0507 CE000000 		.4byte	0xce
 676 050b 20       		.byte	0x20
 677 050c 0A       		.uleb128 0xa
 678 050d CF060000 		.4byte	.LASF82
 679 0511 07       		.byte	0x7
 680 0512 40       		.byte	0x40
 681 0513 CE000000 		.4byte	0xce
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 42


 682 0517 24       		.byte	0x24
 683 0518 0A       		.uleb128 0xa
 684 0519 EE050000 		.4byte	.LASF83
 685 051d 07       		.byte	0x7
 686 051e 43       		.byte	0x43
 687 051f A2000000 		.4byte	0xa2
 688 0523 28       		.byte	0x28
 689 0524 0A       		.uleb128 0xa
 690 0525 13010000 		.4byte	.LASF84
 691 0529 07       		.byte	0x7
 692 052a 44       		.byte	0x44
 693 052b A2000000 		.4byte	0xa2
 694 052f 29       		.byte	0x29
 695 0530 0A       		.uleb128 0xa
 696 0531 4F0A0000 		.4byte	.LASF85
 697 0535 07       		.byte	0x7
 698 0536 45       		.byte	0x45
 699 0537 A2000000 		.4byte	0xa2
 700 053b 2A       		.byte	0x2a
 701 053c 0A       		.uleb128 0xa
 702 053d C1060000 		.4byte	.LASF86
 703 0541 07       		.byte	0x7
 704 0542 46       		.byte	0x46
 705 0543 A2000000 		.4byte	0xa2
 706 0547 2B       		.byte	0x2b
 707 0548 0A       		.uleb128 0xa
 708 0549 5B050000 		.4byte	.LASF87
 709 054d 07       		.byte	0x7
 710 054e 47       		.byte	0x47
 711 054f A2000000 		.4byte	0xa2
 712 0553 2C       		.byte	0x2c
 713 0554 0A       		.uleb128 0xa
 714 0555 F2080000 		.4byte	.LASF88
 715 0559 07       		.byte	0x7
 716 055a 48       		.byte	0x48
 717 055b A2000000 		.4byte	0xa2
 718 055f 2D       		.byte	0x2d
 719 0560 0A       		.uleb128 0xa
 720 0561 DD020000 		.4byte	.LASF89
 721 0565 07       		.byte	0x7
 722 0566 49       		.byte	0x49
 723 0567 A2000000 		.4byte	0xa2
 724 056b 2E       		.byte	0x2e
 725 056c 0A       		.uleb128 0xa
 726 056d 00060000 		.4byte	.LASF90
 727 0571 07       		.byte	0x7
 728 0572 4A       		.byte	0x4a
 729 0573 A2000000 		.4byte	0xa2
 730 0577 2F       		.byte	0x2f
 731 0578 0A       		.uleb128 0xa
 732 0579 B0080000 		.4byte	.LASF91
 733 057d 07       		.byte	0x7
 734 057e 4B       		.byte	0x4b
 735 057f A2000000 		.4byte	0xa2
 736 0583 30       		.byte	0x30
 737 0584 0A       		.uleb128 0xa
 738 0585 C6040000 		.4byte	.LASF92
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 43


 739 0589 07       		.byte	0x7
 740 058a 4E       		.byte	0x4e
 741 058b A2000000 		.4byte	0xa2
 742 058f 31       		.byte	0x31
 743 0590 0A       		.uleb128 0xa
 744 0591 42010000 		.4byte	.LASF93
 745 0595 07       		.byte	0x7
 746 0596 4F       		.byte	0x4f
 747 0597 A2000000 		.4byte	0xa2
 748 059b 32       		.byte	0x32
 749 059c 0A       		.uleb128 0xa
 750 059d 6D040000 		.4byte	.LASF94
 751 05a1 07       		.byte	0x7
 752 05a2 50       		.byte	0x50
 753 05a3 A2000000 		.4byte	0xa2
 754 05a7 33       		.byte	0x33
 755 05a8 0A       		.uleb128 0xa
 756 05a9 41060000 		.4byte	.LASF95
 757 05ad 07       		.byte	0x7
 758 05ae 51       		.byte	0x51
 759 05af A2000000 		.4byte	0xa2
 760 05b3 34       		.byte	0x34
 761 05b4 0A       		.uleb128 0xa
 762 05b5 5F090000 		.4byte	.LASF96
 763 05b9 07       		.byte	0x7
 764 05ba 52       		.byte	0x52
 765 05bb AD000000 		.4byte	0xad
 766 05bf 36       		.byte	0x36
 767 05c0 0A       		.uleb128 0xa
 768 05c1 6B030000 		.4byte	.LASF97
 769 05c5 07       		.byte	0x7
 770 05c6 53       		.byte	0x53
 771 05c7 AD000000 		.4byte	0xad
 772 05cb 38       		.byte	0x38
 773 05cc 0A       		.uleb128 0xa
 774 05cd B0090000 		.4byte	.LASF98
 775 05d1 07       		.byte	0x7
 776 05d2 54       		.byte	0x54
 777 05d3 AD000000 		.4byte	0xad
 778 05d7 3A       		.byte	0x3a
 779 05d8 0A       		.uleb128 0xa
 780 05d9 400A0000 		.4byte	.LASF99
 781 05dd 07       		.byte	0x7
 782 05de 55       		.byte	0x55
 783 05df A2000000 		.4byte	0xa2
 784 05e3 3C       		.byte	0x3c
 785 05e4 0A       		.uleb128 0xa
 786 05e5 A4030000 		.4byte	.LASF100
 787 05e9 07       		.byte	0x7
 788 05ea 56       		.byte	0x56
 789 05eb A2000000 		.4byte	0xa2
 790 05ef 3D       		.byte	0x3d
 791 05f0 0A       		.uleb128 0xa
 792 05f1 5C080000 		.4byte	.LASF101
 793 05f5 07       		.byte	0x7
 794 05f6 57       		.byte	0x57
 795 05f7 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 44


 796 05fb 3E       		.byte	0x3e
 797 05fc 0A       		.uleb128 0xa
 798 05fd 21010000 		.4byte	.LASF102
 799 0601 07       		.byte	0x7
 800 0602 58       		.byte	0x58
 801 0603 A2000000 		.4byte	0xa2
 802 0607 3F       		.byte	0x3f
 803 0608 0A       		.uleb128 0xa
 804 0609 DA060000 		.4byte	.LASF103
 805 060d 07       		.byte	0x7
 806 060e 59       		.byte	0x59
 807 060f A2000000 		.4byte	0xa2
 808 0613 40       		.byte	0x40
 809 0614 0A       		.uleb128 0xa
 810 0615 02040000 		.4byte	.LASF104
 811 0619 07       		.byte	0x7
 812 061a 5A       		.byte	0x5a
 813 061b A2000000 		.4byte	0xa2
 814 061f 41       		.byte	0x41
 815 0620 0A       		.uleb128 0xa
 816 0621 8C050000 		.4byte	.LASF105
 817 0625 07       		.byte	0x7
 818 0626 5B       		.byte	0x5b
 819 0627 A2000000 		.4byte	0xa2
 820 062b 42       		.byte	0x42
 821 062c 0A       		.uleb128 0xa
 822 062d B6060000 		.4byte	.LASF106
 823 0631 07       		.byte	0x7
 824 0632 5C       		.byte	0x5c
 825 0633 A2000000 		.4byte	0xa2
 826 0637 43       		.byte	0x43
 827 0638 0A       		.uleb128 0xa
 828 0639 5A030000 		.4byte	.LASF107
 829 063d 07       		.byte	0x7
 830 063e 5D       		.byte	0x5d
 831 063f A2000000 		.4byte	0xa2
 832 0643 44       		.byte	0x44
 833 0644 0A       		.uleb128 0xa
 834 0645 8D080000 		.4byte	.LASF108
 835 0649 07       		.byte	0x7
 836 064a 5E       		.byte	0x5e
 837 064b CE000000 		.4byte	0xce
 838 064f 48       		.byte	0x48
 839 0650 0A       		.uleb128 0xa
 840 0651 38030000 		.4byte	.LASF109
 841 0655 07       		.byte	0x7
 842 0656 5F       		.byte	0x5f
 843 0657 CE000000 		.4byte	0xce
 844 065b 4C       		.byte	0x4c
 845 065c 0A       		.uleb128 0xa
 846 065d 9B0A0000 		.4byte	.LASF110
 847 0661 07       		.byte	0x7
 848 0662 60       		.byte	0x60
 849 0663 A2000000 		.4byte	0xa2
 850 0667 50       		.byte	0x50
 851 0668 0A       		.uleb128 0xa
 852 0669 5C020000 		.4byte	.LASF111
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 45


 853 066d 07       		.byte	0x7
 854 066e 61       		.byte	0x61
 855 066f A2000000 		.4byte	0xa2
 856 0673 51       		.byte	0x51
 857 0674 0A       		.uleb128 0xa
 858 0675 C5090000 		.4byte	.LASF112
 859 0679 07       		.byte	0x7
 860 067a 62       		.byte	0x62
 861 067b A2000000 		.4byte	0xa2
 862 067f 52       		.byte	0x52
 863 0680 0A       		.uleb128 0xa
 864 0681 890A0000 		.4byte	.LASF113
 865 0685 07       		.byte	0x7
 866 0686 63       		.byte	0x63
 867 0687 A2000000 		.4byte	0xa2
 868 068b 53       		.byte	0x53
 869 068c 0A       		.uleb128 0xa
 870 068d 74080000 		.4byte	.LASF114
 871 0691 07       		.byte	0x7
 872 0692 64       		.byte	0x64
 873 0693 A2000000 		.4byte	0xa2
 874 0697 54       		.byte	0x54
 875 0698 0A       		.uleb128 0xa
 876 0699 95090000 		.4byte	.LASF115
 877 069d 07       		.byte	0x7
 878 069e 65       		.byte	0x65
 879 069f A2000000 		.4byte	0xa2
 880 06a3 55       		.byte	0x55
 881 06a4 0A       		.uleb128 0xa
 882 06a5 17090000 		.4byte	.LASF116
 883 06a9 07       		.byte	0x7
 884 06aa 66       		.byte	0x66
 885 06ab A2000000 		.4byte	0xa2
 886 06af 56       		.byte	0x56
 887 06b0 0A       		.uleb128 0xa
 888 06b1 00050000 		.4byte	.LASF117
 889 06b5 07       		.byte	0x7
 890 06b6 67       		.byte	0x67
 891 06b7 A2000000 		.4byte	0xa2
 892 06bb 57       		.byte	0x57
 893 06bc 0A       		.uleb128 0xa
 894 06bd 2F000000 		.4byte	.LASF118
 895 06c1 07       		.byte	0x7
 896 06c2 68       		.byte	0x68
 897 06c3 A2000000 		.4byte	0xa2
 898 06c7 58       		.byte	0x58
 899 06c8 0A       		.uleb128 0xa
 900 06c9 B6070000 		.4byte	.LASF119
 901 06cd 07       		.byte	0x7
 902 06ce 69       		.byte	0x69
 903 06cf A2000000 		.4byte	0xa2
 904 06d3 59       		.byte	0x59
 905 06d4 0A       		.uleb128 0xa
 906 06d5 2A060000 		.4byte	.LASF120
 907 06d9 07       		.byte	0x7
 908 06da 6E       		.byte	0x6e
 909 06db B8000000 		.4byte	0xb8
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 46


 910 06df 5A       		.byte	0x5a
 911 06e0 0A       		.uleb128 0xa
 912 06e1 3E090000 		.4byte	.LASF121
 913 06e5 07       		.byte	0x7
 914 06e6 6F       		.byte	0x6f
 915 06e7 B8000000 		.4byte	0xb8
 916 06eb 5C       		.byte	0x5c
 917 06ec 0A       		.uleb128 0xa
 918 06ed 9B010000 		.4byte	.LASF122
 919 06f1 07       		.byte	0x7
 920 06f2 70       		.byte	0x70
 921 06f3 A2000000 		.4byte	0xa2
 922 06f7 5E       		.byte	0x5e
 923 06f8 0A       		.uleb128 0xa
 924 06f9 E1030000 		.4byte	.LASF123
 925 06fd 07       		.byte	0x7
 926 06fe 71       		.byte	0x71
 927 06ff A2000000 		.4byte	0xa2
 928 0703 5F       		.byte	0x5f
 929 0704 0A       		.uleb128 0xa
 930 0705 8F060000 		.4byte	.LASF124
 931 0709 07       		.byte	0x7
 932 070a 72       		.byte	0x72
 933 070b A2000000 		.4byte	0xa2
 934 070f 60       		.byte	0x60
 935 0710 0A       		.uleb128 0xa
 936 0711 0B070000 		.4byte	.LASF125
 937 0715 07       		.byte	0x7
 938 0716 73       		.byte	0x73
 939 0717 CE000000 		.4byte	0xce
 940 071b 64       		.byte	0x64
 941 071c 0A       		.uleb128 0xa
 942 071d 29020000 		.4byte	.LASF126
 943 0721 07       		.byte	0x7
 944 0722 76       		.byte	0x76
 945 0723 B8000000 		.4byte	0xb8
 946 0727 68       		.byte	0x68
 947 0728 0A       		.uleb128 0xa
 948 0729 8F040000 		.4byte	.LASF127
 949 072d 07       		.byte	0x7
 950 072e 77       		.byte	0x77
 951 072f B8000000 		.4byte	0xb8
 952 0733 6A       		.byte	0x6a
 953 0734 0A       		.uleb128 0xa
 954 0735 14050000 		.4byte	.LASF128
 955 0739 07       		.byte	0x7
 956 073a 78       		.byte	0x78
 957 073b B8000000 		.4byte	0xb8
 958 073f 6C       		.byte	0x6c
 959 0740 0A       		.uleb128 0xa
 960 0741 4E050000 		.4byte	.LASF129
 961 0745 07       		.byte	0x7
 962 0746 79       		.byte	0x79
 963 0747 B8000000 		.4byte	0xb8
 964 074b 6E       		.byte	0x6e
 965 074c 0A       		.uleb128 0xa
 966 074d 29080000 		.4byte	.LASF130
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 47


 967 0751 07       		.byte	0x7
 968 0752 7B       		.byte	0x7b
 969 0753 A2000000 		.4byte	0xa2
 970 0757 70       		.byte	0x70
 971 0758 0A       		.uleb128 0xa
 972 0759 B4020000 		.4byte	.LASF131
 973 075d 07       		.byte	0x7
 974 075e 7C       		.byte	0x7c
 975 075f A2000000 		.4byte	0xa2
 976 0763 71       		.byte	0x71
 977 0764 0A       		.uleb128 0xa
 978 0765 730A0000 		.4byte	.LASF132
 979 0769 07       		.byte	0x7
 980 076a 7D       		.byte	0x7d
 981 076b A2000000 		.4byte	0xa2
 982 076f 72       		.byte	0x72
 983 0770 0A       		.uleb128 0xa
 984 0771 52060000 		.4byte	.LASF133
 985 0775 07       		.byte	0x7
 986 0776 7E       		.byte	0x7e
 987 0777 A2000000 		.4byte	0xa2
 988 077b 73       		.byte	0x73
 989 077c 0A       		.uleb128 0xa
 990 077d BB030000 		.4byte	.LASF134
 991 0781 07       		.byte	0x7
 992 0782 80       		.byte	0x80
 993 0783 B8000000 		.4byte	0xb8
 994 0787 74       		.byte	0x74
 995 0788 0A       		.uleb128 0xa
 996 0789 D5080000 		.4byte	.LASF135
 997 078d 07       		.byte	0x7
 998 078e 81       		.byte	0x81
 999 078f B8000000 		.4byte	0xb8
 1000 0793 76       		.byte	0x76
 1001 0794 0A       		.uleb128 0xa
 1002 0795 7D030000 		.4byte	.LASF136
 1003 0799 07       		.byte	0x7
 1004 079a 82       		.byte	0x82
 1005 079b B8000000 		.4byte	0xb8
 1006 079f 78       		.byte	0x78
 1007 07a0 0A       		.uleb128 0xa
 1008 07a1 5A010000 		.4byte	.LASF137
 1009 07a5 07       		.byte	0x7
 1010 07a6 83       		.byte	0x83
 1011 07a7 B8000000 		.4byte	0xb8
 1012 07ab 7A       		.byte	0x7a
 1013 07ac 0A       		.uleb128 0xa
 1014 07ad 060A0000 		.4byte	.LASF138
 1015 07b1 07       		.byte	0x7
 1016 07b2 86       		.byte	0x86
 1017 07b3 A2000000 		.4byte	0xa2
 1018 07b7 7C       		.byte	0x7c
 1019 07b8 0A       		.uleb128 0xa
 1020 07b9 84090000 		.4byte	.LASF139
 1021 07bd 07       		.byte	0x7
 1022 07be 87       		.byte	0x87
 1023 07bf A2000000 		.4byte	0xa2
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 48


 1024 07c3 7D       		.byte	0x7d
 1025 07c4 0A       		.uleb128 0xa
 1026 07c5 43000000 		.4byte	.LASF140
 1027 07c9 07       		.byte	0x7
 1028 07ca 88       		.byte	0x88
 1029 07cb A2000000 		.4byte	0xa2
 1030 07cf 7E       		.byte	0x7e
 1031 07d0 0A       		.uleb128 0xa
 1032 07d1 CD030000 		.4byte	.LASF141
 1033 07d5 07       		.byte	0x7
 1034 07d6 89       		.byte	0x89
 1035 07d7 A2000000 		.4byte	0xa2
 1036 07db 7F       		.byte	0x7f
 1037 07dc 0A       		.uleb128 0xa
 1038 07dd 59040000 		.4byte	.LASF142
 1039 07e1 07       		.byte	0x7
 1040 07e2 8A       		.byte	0x8a
 1041 07e3 A2000000 		.4byte	0xa2
 1042 07e7 80       		.byte	0x80
 1043 07e8 0A       		.uleb128 0xa
 1044 07e9 C3050000 		.4byte	.LASF143
 1045 07ed 07       		.byte	0x7
 1046 07ee 8D       		.byte	0x8d
 1047 07ef CE000000 		.4byte	0xce
 1048 07f3 84       		.byte	0x84
 1049 07f4 0A       		.uleb128 0xa
 1050 07f5 6F010000 		.4byte	.LASF144
 1051 07f9 07       		.byte	0x7
 1052 07fa 8E       		.byte	0x8e
 1053 07fb CE000000 		.4byte	0xce
 1054 07ff 88       		.byte	0x88
 1055 0800 0A       		.uleb128 0xa
 1056 0801 F1090000 		.4byte	.LASF145
 1057 0805 07       		.byte	0x7
 1058 0806 8F       		.byte	0x8f
 1059 0807 CE000000 		.4byte	0xce
 1060 080b 8C       		.byte	0x8c
 1061 080c 0A       		.uleb128 0xa
 1062 080d 0C060000 		.4byte	.LASF146
 1063 0811 07       		.byte	0x7
 1064 0812 90       		.byte	0x90
 1065 0813 CE000000 		.4byte	0xce
 1066 0817 90       		.byte	0x90
 1067 0818 0A       		.uleb128 0xa
 1068 0819 44040000 		.4byte	.LASF147
 1069 081d 07       		.byte	0x7
 1070 081e 91       		.byte	0x91
 1071 081f CE000000 		.4byte	0xce
 1072 0823 94       		.byte	0x94
 1073 0824 0A       		.uleb128 0xa
 1074 0825 AD050000 		.4byte	.LASF148
 1075 0829 07       		.byte	0x7
 1076 082a 92       		.byte	0x92
 1077 082b CE000000 		.4byte	0xce
 1078 082f 98       		.byte	0x98
 1079 0830 0A       		.uleb128 0xa
 1080 0831 1B0A0000 		.4byte	.LASF149
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 49


 1081 0835 07       		.byte	0x7
 1082 0836 93       		.byte	0x93
 1083 0837 CE000000 		.4byte	0xce
 1084 083b 9C       		.byte	0x9c
 1085 083c 0A       		.uleb128 0xa
 1086 083d 39020000 		.4byte	.LASF150
 1087 0841 07       		.byte	0x7
 1088 0842 94       		.byte	0x94
 1089 0843 CE000000 		.4byte	0xce
 1090 0847 A0       		.byte	0xa0
 1091 0848 0A       		.uleb128 0xa
 1092 0849 E8020000 		.4byte	.LASF151
 1093 084d 07       		.byte	0x7
 1094 084e 95       		.byte	0x95
 1095 084f B8000000 		.4byte	0xb8
 1096 0853 A4       		.byte	0xa4
 1097 0854 0A       		.uleb128 0xa
 1098 0855 98050000 		.4byte	.LASF152
 1099 0859 07       		.byte	0x7
 1100 085a 96       		.byte	0x96
 1101 085b B8000000 		.4byte	0xb8
 1102 085f A6       		.byte	0xa6
 1103 0860 0A       		.uleb128 0xa
 1104 0861 54070000 		.4byte	.LASF153
 1105 0865 07       		.byte	0x7
 1106 0866 97       		.byte	0x97
 1107 0867 B8000000 		.4byte	0xb8
 1108 086b A8       		.byte	0xa8
 1109 086c 0A       		.uleb128 0xa
 1110 086d BC080000 		.4byte	.LASF154
 1111 0871 07       		.byte	0x7
 1112 0872 98       		.byte	0x98
 1113 0873 B8000000 		.4byte	0xb8
 1114 0877 AA       		.byte	0xaa
 1115 0878 0A       		.uleb128 0xa
 1116 0879 23050000 		.4byte	.LASF155
 1117 087d 07       		.byte	0x7
 1118 087e 99       		.byte	0x99
 1119 087f B8000000 		.4byte	0xb8
 1120 0883 AC       		.byte	0xac
 1121 0884 0A       		.uleb128 0xa
 1122 0885 69060000 		.4byte	.LASF156
 1123 0889 07       		.byte	0x7
 1124 088a 9A       		.byte	0x9a
 1125 088b B8000000 		.4byte	0xb8
 1126 088f AE       		.byte	0xae
 1127 0890 0A       		.uleb128 0xa
 1128 0891 47090000 		.4byte	.LASF157
 1129 0895 07       		.byte	0x7
 1130 0896 9D       		.byte	0x9d
 1131 0897 B8000000 		.4byte	0xb8
 1132 089b B0       		.byte	0xb0
 1133 089c 0A       		.uleb128 0xa
 1134 089d CA070000 		.4byte	.LASF158
 1135 08a1 07       		.byte	0x7
 1136 08a2 9E       		.byte	0x9e
 1137 08a3 CE000000 		.4byte	0xce
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 50


 1138 08a7 B4       		.byte	0xb4
 1139 08a8 00       		.byte	0
 1140 08a9 03       		.uleb128 0x3
 1141 08aa 67050000 		.4byte	.LASF159
 1142 08ae 07       		.byte	0x7
 1143 08af 9F       		.byte	0x9f
 1144 08b0 98040000 		.4byte	0x498
 1145 08b4 02       		.uleb128 0x2
 1146 08b5 01       		.byte	0x1
 1147 08b6 08       		.byte	0x8
 1148 08b7 AB080000 		.4byte	.LASF160
 1149 08bb 02       		.uleb128 0x2
 1150 08bc 04       		.byte	0x4
 1151 08bd 04       		.byte	0x4
 1152 08be 05070000 		.4byte	.LASF161
 1153 08c2 02       		.uleb128 0x2
 1154 08c3 08       		.byte	0x8
 1155 08c4 04       		.byte	0x4
 1156 08c5 76030000 		.4byte	.LASF162
 1157 08c9 02       		.uleb128 0x2
 1158 08ca 01       		.byte	0x1
 1159 08cb 02       		.byte	0x2
 1160 08cc 9A070000 		.4byte	.LASF163
 1161 08d0 0F       		.uleb128 0xf
 1162 08d1 1C070000 		.4byte	.LASF171
 1163 08d5 02       		.byte	0x2
 1164 08d6 1206     		.2byte	0x612
 1165 08d8 CE000000 		.4byte	0xce
 1166 08dc 03       		.byte	0x3
 1167 08dd EE080000 		.4byte	0x8ee
 1168 08e1 10       		.uleb128 0x10
 1169 08e2 FB050000 		.4byte	.LASF164
 1170 08e6 02       		.byte	0x2
 1171 08e7 1206     		.2byte	0x612
 1172 08e9 EE080000 		.4byte	0x8ee
 1173 08ed 00       		.byte	0
 1174 08ee 11       		.uleb128 0x11
 1175 08ef 04       		.byte	0x4
 1176 08f0 F4080000 		.4byte	0x8f4
 1177 08f4 06       		.uleb128 0x6
 1178 08f5 85040000 		.4byte	0x485
 1179 08f9 12       		.uleb128 0x12
 1180 08fa 00000000 		.4byte	.LASF172
 1181 08fe 02       		.byte	0x2
 1182 08ff 2F06     		.2byte	0x62f
 1183 0901 03       		.byte	0x3
 1184 0902 1F090000 		.4byte	0x91f
 1185 0906 10       		.uleb128 0x10
 1186 0907 FB050000 		.4byte	.LASF164
 1187 090b 02       		.byte	0x2
 1188 090c 2F06     		.2byte	0x62f
 1189 090e 1F090000 		.4byte	0x91f
 1190 0912 10       		.uleb128 0x10
 1191 0913 E8070000 		.4byte	.LASF165
 1192 0917 02       		.byte	0x2
 1193 0918 2F06     		.2byte	0x62f
 1194 091a CE000000 		.4byte	0xce
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 51


 1195 091e 00       		.byte	0
 1196 091f 11       		.uleb128 0x11
 1197 0920 04       		.byte	0x4
 1198 0921 85040000 		.4byte	0x485
 1199 0925 13       		.uleb128 0x13
 1200 0926 09010000 		.4byte	.LASF173
 1201 092a 01       		.byte	0x1
 1202 092b 40       		.byte	0x40
 1203 092c 00000000 		.4byte	.LFB271
 1204 0930 18000000 		.4byte	.LFE271-.LFB271
 1205 0934 01       		.uleb128 0x1
 1206 0935 9C       		.byte	0x9c
 1207 0936 9E090000 		.4byte	0x99e
 1208 093a 14       		.uleb128 0x14
 1209 093b AF030000 		.4byte	.LASF174
 1210 093f 01       		.byte	0x1
 1211 0940 42       		.byte	0x42
 1212 0941 CE000000 		.4byte	0xce
 1213 0945 15       		.uleb128 0x15
 1214 0946 D0080000 		.4byte	0x8d0
 1215 094a 00000000 		.4byte	.LBB8
 1216 094e 06000000 		.4byte	.LBE8-.LBB8
 1217 0952 01       		.byte	0x1
 1218 0953 45       		.byte	0x45
 1219 0954 62090000 		.4byte	0x962
 1220 0958 16       		.uleb128 0x16
 1221 0959 E1080000 		.4byte	0x8e1
 1222 095d 00000000 		.4byte	.LLST0
 1223 0961 00       		.byte	0
 1224 0962 15       		.uleb128 0x15
 1225 0963 F9080000 		.4byte	0x8f9
 1226 0967 06000000 		.4byte	.LBB10
 1227 096b 08000000 		.4byte	.LBE10-.LBB10
 1228 096f 01       		.byte	0x1
 1229 0970 55       		.byte	0x55
 1230 0971 84090000 		.4byte	0x984
 1231 0975 17       		.uleb128 0x17
 1232 0976 12090000 		.4byte	0x912
 1233 097a 16       		.uleb128 0x16
 1234 097b 06090000 		.4byte	0x906
 1235 097f 18000000 		.4byte	.LLST1
 1236 0983 00       		.byte	0
 1237 0984 18       		.uleb128 0x18
 1238 0985 D0080000 		.4byte	0x8d0
 1239 0989 0E000000 		.4byte	.LBB12
 1240 098d 0A000000 		.4byte	.LBE12-.LBB12
 1241 0991 01       		.byte	0x1
 1242 0992 57       		.byte	0x57
 1243 0993 16       		.uleb128 0x16
 1244 0994 E1080000 		.4byte	0x8e1
 1245 0998 30000000 		.4byte	.LLST2
 1246 099c 00       		.byte	0
 1247 099d 00       		.byte	0
 1248 099e 19       		.uleb128 0x19
 1249 099f 4F020000 		.4byte	.LASF166
 1250 09a3 08       		.byte	0x8
 1251 09a4 F907     		.2byte	0x7f9
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 52


 1252 09a6 AA090000 		.4byte	0x9aa
 1253 09aa 05       		.uleb128 0x5
 1254 09ab C3000000 		.4byte	0xc3
 1255 09af 1A       		.uleb128 0x1a
 1256 09b0 40070000 		.4byte	.LASF167
 1257 09b4 07       		.byte	0x7
 1258 09b5 A7       		.byte	0xa7
 1259 09b6 BA090000 		.4byte	0x9ba
 1260 09ba 11       		.uleb128 0x11
 1261 09bb 04       		.byte	0x4
 1262 09bc C0090000 		.4byte	0x9c0
 1263 09c0 06       		.uleb128 0x6
 1264 09c1 A9080000 		.4byte	0x8a9
 1265 09c5 00       		.byte	0
 1266              		.section	.debug_abbrev,"",%progbits
 1267              	.Ldebug_abbrev0:
 1268 0000 01       		.uleb128 0x1
 1269 0001 11       		.uleb128 0x11
 1270 0002 01       		.byte	0x1
 1271 0003 25       		.uleb128 0x25
 1272 0004 0E       		.uleb128 0xe
 1273 0005 13       		.uleb128 0x13
 1274 0006 0B       		.uleb128 0xb
 1275 0007 03       		.uleb128 0x3
 1276 0008 0E       		.uleb128 0xe
 1277 0009 1B       		.uleb128 0x1b
 1278 000a 0E       		.uleb128 0xe
 1279 000b 55       		.uleb128 0x55
 1280 000c 17       		.uleb128 0x17
 1281 000d 11       		.uleb128 0x11
 1282 000e 01       		.uleb128 0x1
 1283 000f 10       		.uleb128 0x10
 1284 0010 17       		.uleb128 0x17
 1285 0011 00       		.byte	0
 1286 0012 00       		.byte	0
 1287 0013 02       		.uleb128 0x2
 1288 0014 24       		.uleb128 0x24
 1289 0015 00       		.byte	0
 1290 0016 0B       		.uleb128 0xb
 1291 0017 0B       		.uleb128 0xb
 1292 0018 3E       		.uleb128 0x3e
 1293 0019 0B       		.uleb128 0xb
 1294 001a 03       		.uleb128 0x3
 1295 001b 0E       		.uleb128 0xe
 1296 001c 00       		.byte	0
 1297 001d 00       		.byte	0
 1298 001e 03       		.uleb128 0x3
 1299 001f 16       		.uleb128 0x16
 1300 0020 00       		.byte	0
 1301 0021 03       		.uleb128 0x3
 1302 0022 0E       		.uleb128 0xe
 1303 0023 3A       		.uleb128 0x3a
 1304 0024 0B       		.uleb128 0xb
 1305 0025 3B       		.uleb128 0x3b
 1306 0026 0B       		.uleb128 0xb
 1307 0027 49       		.uleb128 0x49
 1308 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 53


 1309 0029 00       		.byte	0
 1310 002a 00       		.byte	0
 1311 002b 04       		.uleb128 0x4
 1312 002c 24       		.uleb128 0x24
 1313 002d 00       		.byte	0
 1314 002e 0B       		.uleb128 0xb
 1315 002f 0B       		.uleb128 0xb
 1316 0030 3E       		.uleb128 0x3e
 1317 0031 0B       		.uleb128 0xb
 1318 0032 03       		.uleb128 0x3
 1319 0033 08       		.uleb128 0x8
 1320 0034 00       		.byte	0
 1321 0035 00       		.byte	0
 1322 0036 05       		.uleb128 0x5
 1323 0037 35       		.uleb128 0x35
 1324 0038 00       		.byte	0
 1325 0039 49       		.uleb128 0x49
 1326 003a 13       		.uleb128 0x13
 1327 003b 00       		.byte	0
 1328 003c 00       		.byte	0
 1329 003d 06       		.uleb128 0x6
 1330 003e 26       		.uleb128 0x26
 1331 003f 00       		.byte	0
 1332 0040 49       		.uleb128 0x49
 1333 0041 13       		.uleb128 0x13
 1334 0042 00       		.byte	0
 1335 0043 00       		.byte	0
 1336 0044 07       		.uleb128 0x7
 1337 0045 01       		.uleb128 0x1
 1338 0046 01       		.byte	0x1
 1339 0047 49       		.uleb128 0x49
 1340 0048 13       		.uleb128 0x13
 1341 0049 01       		.uleb128 0x1
 1342 004a 13       		.uleb128 0x13
 1343 004b 00       		.byte	0
 1344 004c 00       		.byte	0
 1345 004d 08       		.uleb128 0x8
 1346 004e 21       		.uleb128 0x21
 1347 004f 00       		.byte	0
 1348 0050 49       		.uleb128 0x49
 1349 0051 13       		.uleb128 0x13
 1350 0052 2F       		.uleb128 0x2f
 1351 0053 0B       		.uleb128 0xb
 1352 0054 00       		.byte	0
 1353 0055 00       		.byte	0
 1354 0056 09       		.uleb128 0x9
 1355 0057 13       		.uleb128 0x13
 1356 0058 01       		.byte	0x1
 1357 0059 0B       		.uleb128 0xb
 1358 005a 05       		.uleb128 0x5
 1359 005b 3A       		.uleb128 0x3a
 1360 005c 0B       		.uleb128 0xb
 1361 005d 3B       		.uleb128 0x3b
 1362 005e 0B       		.uleb128 0xb
 1363 005f 01       		.uleb128 0x1
 1364 0060 13       		.uleb128 0x13
 1365 0061 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 54


 1366 0062 00       		.byte	0
 1367 0063 0A       		.uleb128 0xa
 1368 0064 0D       		.uleb128 0xd
 1369 0065 00       		.byte	0
 1370 0066 03       		.uleb128 0x3
 1371 0067 0E       		.uleb128 0xe
 1372 0068 3A       		.uleb128 0x3a
 1373 0069 0B       		.uleb128 0xb
 1374 006a 3B       		.uleb128 0x3b
 1375 006b 0B       		.uleb128 0xb
 1376 006c 49       		.uleb128 0x49
 1377 006d 13       		.uleb128 0x13
 1378 006e 38       		.uleb128 0x38
 1379 006f 0B       		.uleb128 0xb
 1380 0070 00       		.byte	0
 1381 0071 00       		.byte	0
 1382 0072 0B       		.uleb128 0xb
 1383 0073 0D       		.uleb128 0xd
 1384 0074 00       		.byte	0
 1385 0075 03       		.uleb128 0x3
 1386 0076 0E       		.uleb128 0xe
 1387 0077 3A       		.uleb128 0x3a
 1388 0078 0B       		.uleb128 0xb
 1389 0079 3B       		.uleb128 0x3b
 1390 007a 0B       		.uleb128 0xb
 1391 007b 49       		.uleb128 0x49
 1392 007c 13       		.uleb128 0x13
 1393 007d 38       		.uleb128 0x38
 1394 007e 05       		.uleb128 0x5
 1395 007f 00       		.byte	0
 1396 0080 00       		.byte	0
 1397 0081 0C       		.uleb128 0xc
 1398 0082 21       		.uleb128 0x21
 1399 0083 00       		.byte	0
 1400 0084 49       		.uleb128 0x49
 1401 0085 13       		.uleb128 0x13
 1402 0086 2F       		.uleb128 0x2f
 1403 0087 05       		.uleb128 0x5
 1404 0088 00       		.byte	0
 1405 0089 00       		.byte	0
 1406 008a 0D       		.uleb128 0xd
 1407 008b 16       		.uleb128 0x16
 1408 008c 00       		.byte	0
 1409 008d 03       		.uleb128 0x3
 1410 008e 0E       		.uleb128 0xe
 1411 008f 3A       		.uleb128 0x3a
 1412 0090 0B       		.uleb128 0xb
 1413 0091 3B       		.uleb128 0x3b
 1414 0092 05       		.uleb128 0x5
 1415 0093 49       		.uleb128 0x49
 1416 0094 13       		.uleb128 0x13
 1417 0095 00       		.byte	0
 1418 0096 00       		.byte	0
 1419 0097 0E       		.uleb128 0xe
 1420 0098 13       		.uleb128 0x13
 1421 0099 01       		.byte	0x1
 1422 009a 0B       		.uleb128 0xb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 55


 1423 009b 0B       		.uleb128 0xb
 1424 009c 3A       		.uleb128 0x3a
 1425 009d 0B       		.uleb128 0xb
 1426 009e 3B       		.uleb128 0x3b
 1427 009f 0B       		.uleb128 0xb
 1428 00a0 01       		.uleb128 0x1
 1429 00a1 13       		.uleb128 0x13
 1430 00a2 00       		.byte	0
 1431 00a3 00       		.byte	0
 1432 00a4 0F       		.uleb128 0xf
 1433 00a5 2E       		.uleb128 0x2e
 1434 00a6 01       		.byte	0x1
 1435 00a7 03       		.uleb128 0x3
 1436 00a8 0E       		.uleb128 0xe
 1437 00a9 3A       		.uleb128 0x3a
 1438 00aa 0B       		.uleb128 0xb
 1439 00ab 3B       		.uleb128 0x3b
 1440 00ac 05       		.uleb128 0x5
 1441 00ad 27       		.uleb128 0x27
 1442 00ae 19       		.uleb128 0x19
 1443 00af 49       		.uleb128 0x49
 1444 00b0 13       		.uleb128 0x13
 1445 00b1 20       		.uleb128 0x20
 1446 00b2 0B       		.uleb128 0xb
 1447 00b3 01       		.uleb128 0x1
 1448 00b4 13       		.uleb128 0x13
 1449 00b5 00       		.byte	0
 1450 00b6 00       		.byte	0
 1451 00b7 10       		.uleb128 0x10
 1452 00b8 05       		.uleb128 0x5
 1453 00b9 00       		.byte	0
 1454 00ba 03       		.uleb128 0x3
 1455 00bb 0E       		.uleb128 0xe
 1456 00bc 3A       		.uleb128 0x3a
 1457 00bd 0B       		.uleb128 0xb
 1458 00be 3B       		.uleb128 0x3b
 1459 00bf 05       		.uleb128 0x5
 1460 00c0 49       		.uleb128 0x49
 1461 00c1 13       		.uleb128 0x13
 1462 00c2 00       		.byte	0
 1463 00c3 00       		.byte	0
 1464 00c4 11       		.uleb128 0x11
 1465 00c5 0F       		.uleb128 0xf
 1466 00c6 00       		.byte	0
 1467 00c7 0B       		.uleb128 0xb
 1468 00c8 0B       		.uleb128 0xb
 1469 00c9 49       		.uleb128 0x49
 1470 00ca 13       		.uleb128 0x13
 1471 00cb 00       		.byte	0
 1472 00cc 00       		.byte	0
 1473 00cd 12       		.uleb128 0x12
 1474 00ce 2E       		.uleb128 0x2e
 1475 00cf 01       		.byte	0x1
 1476 00d0 03       		.uleb128 0x3
 1477 00d1 0E       		.uleb128 0xe
 1478 00d2 3A       		.uleb128 0x3a
 1479 00d3 0B       		.uleb128 0xb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 56


 1480 00d4 3B       		.uleb128 0x3b
 1481 00d5 05       		.uleb128 0x5
 1482 00d6 27       		.uleb128 0x27
 1483 00d7 19       		.uleb128 0x19
 1484 00d8 20       		.uleb128 0x20
 1485 00d9 0B       		.uleb128 0xb
 1486 00da 01       		.uleb128 0x1
 1487 00db 13       		.uleb128 0x13
 1488 00dc 00       		.byte	0
 1489 00dd 00       		.byte	0
 1490 00de 13       		.uleb128 0x13
 1491 00df 2E       		.uleb128 0x2e
 1492 00e0 01       		.byte	0x1
 1493 00e1 3F       		.uleb128 0x3f
 1494 00e2 19       		.uleb128 0x19
 1495 00e3 03       		.uleb128 0x3
 1496 00e4 0E       		.uleb128 0xe
 1497 00e5 3A       		.uleb128 0x3a
 1498 00e6 0B       		.uleb128 0xb
 1499 00e7 3B       		.uleb128 0x3b
 1500 00e8 0B       		.uleb128 0xb
 1501 00e9 27       		.uleb128 0x27
 1502 00ea 19       		.uleb128 0x19
 1503 00eb 11       		.uleb128 0x11
 1504 00ec 01       		.uleb128 0x1
 1505 00ed 12       		.uleb128 0x12
 1506 00ee 06       		.uleb128 0x6
 1507 00ef 40       		.uleb128 0x40
 1508 00f0 18       		.uleb128 0x18
 1509 00f1 9742     		.uleb128 0x2117
 1510 00f3 19       		.uleb128 0x19
 1511 00f4 01       		.uleb128 0x1
 1512 00f5 13       		.uleb128 0x13
 1513 00f6 00       		.byte	0
 1514 00f7 00       		.byte	0
 1515 00f8 14       		.uleb128 0x14
 1516 00f9 34       		.uleb128 0x34
 1517 00fa 00       		.byte	0
 1518 00fb 03       		.uleb128 0x3
 1519 00fc 0E       		.uleb128 0xe
 1520 00fd 3A       		.uleb128 0x3a
 1521 00fe 0B       		.uleb128 0xb
 1522 00ff 3B       		.uleb128 0x3b
 1523 0100 0B       		.uleb128 0xb
 1524 0101 49       		.uleb128 0x49
 1525 0102 13       		.uleb128 0x13
 1526 0103 00       		.byte	0
 1527 0104 00       		.byte	0
 1528 0105 15       		.uleb128 0x15
 1529 0106 1D       		.uleb128 0x1d
 1530 0107 01       		.byte	0x1
 1531 0108 31       		.uleb128 0x31
 1532 0109 13       		.uleb128 0x13
 1533 010a 11       		.uleb128 0x11
 1534 010b 01       		.uleb128 0x1
 1535 010c 12       		.uleb128 0x12
 1536 010d 06       		.uleb128 0x6
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 57


 1537 010e 58       		.uleb128 0x58
 1538 010f 0B       		.uleb128 0xb
 1539 0110 59       		.uleb128 0x59
 1540 0111 0B       		.uleb128 0xb
 1541 0112 01       		.uleb128 0x1
 1542 0113 13       		.uleb128 0x13
 1543 0114 00       		.byte	0
 1544 0115 00       		.byte	0
 1545 0116 16       		.uleb128 0x16
 1546 0117 05       		.uleb128 0x5
 1547 0118 00       		.byte	0
 1548 0119 31       		.uleb128 0x31
 1549 011a 13       		.uleb128 0x13
 1550 011b 02       		.uleb128 0x2
 1551 011c 17       		.uleb128 0x17
 1552 011d 00       		.byte	0
 1553 011e 00       		.byte	0
 1554 011f 17       		.uleb128 0x17
 1555 0120 05       		.uleb128 0x5
 1556 0121 00       		.byte	0
 1557 0122 31       		.uleb128 0x31
 1558 0123 13       		.uleb128 0x13
 1559 0124 00       		.byte	0
 1560 0125 00       		.byte	0
 1561 0126 18       		.uleb128 0x18
 1562 0127 1D       		.uleb128 0x1d
 1563 0128 01       		.byte	0x1
 1564 0129 31       		.uleb128 0x31
 1565 012a 13       		.uleb128 0x13
 1566 012b 11       		.uleb128 0x11
 1567 012c 01       		.uleb128 0x1
 1568 012d 12       		.uleb128 0x12
 1569 012e 06       		.uleb128 0x6
 1570 012f 58       		.uleb128 0x58
 1571 0130 0B       		.uleb128 0xb
 1572 0131 59       		.uleb128 0x59
 1573 0132 0B       		.uleb128 0xb
 1574 0133 00       		.byte	0
 1575 0134 00       		.byte	0
 1576 0135 19       		.uleb128 0x19
 1577 0136 34       		.uleb128 0x34
 1578 0137 00       		.byte	0
 1579 0138 03       		.uleb128 0x3
 1580 0139 0E       		.uleb128 0xe
 1581 013a 3A       		.uleb128 0x3a
 1582 013b 0B       		.uleb128 0xb
 1583 013c 3B       		.uleb128 0x3b
 1584 013d 05       		.uleb128 0x5
 1585 013e 49       		.uleb128 0x49
 1586 013f 13       		.uleb128 0x13
 1587 0140 3F       		.uleb128 0x3f
 1588 0141 19       		.uleb128 0x19
 1589 0142 3C       		.uleb128 0x3c
 1590 0143 19       		.uleb128 0x19
 1591 0144 00       		.byte	0
 1592 0145 00       		.byte	0
 1593 0146 1A       		.uleb128 0x1a
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 58


 1594 0147 34       		.uleb128 0x34
 1595 0148 00       		.byte	0
 1596 0149 03       		.uleb128 0x3
 1597 014a 0E       		.uleb128 0xe
 1598 014b 3A       		.uleb128 0x3a
 1599 014c 0B       		.uleb128 0xb
 1600 014d 3B       		.uleb128 0x3b
 1601 014e 0B       		.uleb128 0xb
 1602 014f 49       		.uleb128 0x49
 1603 0150 13       		.uleb128 0x13
 1604 0151 3F       		.uleb128 0x3f
 1605 0152 19       		.uleb128 0x19
 1606 0153 3C       		.uleb128 0x3c
 1607 0154 19       		.uleb128 0x19
 1608 0155 00       		.byte	0
 1609 0156 00       		.byte	0
 1610 0157 00       		.byte	0
 1611              		.section	.debug_loc,"",%progbits
 1612              	.Ldebug_loc0:
 1613              	.LLST0:
 1614 0000 00000000 		.4byte	.LVL0
 1615 0004 06000000 		.4byte	.LVL1
 1616 0008 0600     		.2byte	0x6
 1617 000a 0C       		.byte	0xc
 1618 000b 00001D41 		.4byte	0x411d0000
 1619 000f 9F       		.byte	0x9f
 1620 0010 00000000 		.4byte	0
 1621 0014 00000000 		.4byte	0
 1622              	.LLST1:
 1623 0018 06000000 		.4byte	.LVL1
 1624 001c 0E000000 		.4byte	.LVL2
 1625 0020 0600     		.2byte	0x6
 1626 0022 0C       		.byte	0xc
 1627 0023 00001D41 		.4byte	0x411d0000
 1628 0027 9F       		.byte	0x9f
 1629 0028 00000000 		.4byte	0
 1630 002c 00000000 		.4byte	0
 1631              	.LLST2:
 1632 0030 0E000000 		.4byte	.LVL2
 1633 0034 12000000 		.4byte	.LVL3
 1634 0038 0600     		.2byte	0x6
 1635 003a 0C       		.byte	0xc
 1636 003b 00001D41 		.4byte	0x411d0000
 1637 003f 9F       		.byte	0x9f
 1638 0040 00000000 		.4byte	0
 1639 0044 00000000 		.4byte	0
 1640              		.section	.debug_aranges,"",%progbits
 1641 0000 1C000000 		.4byte	0x1c
 1642 0004 0200     		.2byte	0x2
 1643 0006 00000000 		.4byte	.Ldebug_info0
 1644 000a 04       		.byte	0x4
 1645 000b 00       		.byte	0
 1646 000c 0000     		.2byte	0
 1647 000e 0000     		.2byte	0
 1648 0010 00000000 		.4byte	.LFB271
 1649 0014 18000000 		.4byte	.LFE271-.LFB271
 1650 0018 00000000 		.4byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 59


 1651 001c 00000000 		.4byte	0
 1652              		.section	.debug_ranges,"",%progbits
 1653              	.Ldebug_ranges0:
 1654 0000 00000000 		.4byte	.LFB271
 1655 0004 18000000 		.4byte	.LFE271
 1656 0008 00000000 		.4byte	0
 1657 000c 00000000 		.4byte	0
 1658              		.section	.debug_line,"",%progbits
 1659              	.Ldebug_line0:
 1660 0000 9A020000 		.section	.debug_str,"MS",%progbits,1
 1660      02007702 
 1660      00000201 
 1660      FB0E0D00 
 1660      01010101 
 1661              	.LASF172:
 1662 0000 43795F53 		.ascii	"Cy_SAR_ClearInterrupt\000"
 1662      41525F43 
 1662      6C656172 
 1662      496E7465 
 1662      72727570 
 1663              	.LASF59:
 1664 0016 4156475F 		.ascii	"AVG_STAT\000"
 1664      53544154 
 1664      00
 1665              	.LASF54:
 1666 001f 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 1666      4348414E 
 1666      5F434F4E 
 1666      46494700 
 1667              	.LASF118:
 1668 002f 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 1668      6843746C 
 1668      4D61696E 
 1668      57733346 
 1668      72657100 
 1669              	.LASF140:
 1670 0043 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 1670      50727443 
 1670      6667496E 
 1670      4F666673 
 1670      657400
 1671              	.LASF168:
 1672 0056 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1672      43313120 
 1672      352E342E 
 1672      31203230 
 1672      31363036 
 1673 0089 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 1673      20726576 
 1673      6973696F 
 1673      6E203233 
 1673      37373135 
 1674 00bc 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Os -ffunction-s"
 1674      70202D6D 
 1674      6670753D 
 1674      66707634 
 1674      2D73702D 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 60


 1675 00ef 65637469 		.ascii	"ections -ffat-lto-objects\000"
 1675      6F6E7320 
 1675      2D666661 
 1675      742D6C74 
 1675      6F2D6F62 
 1676              	.LASF173:
 1677 0109 4144435F 		.ascii	"ADC_1_ISR\000"
 1677      315F4953 
 1677      5200
 1678              	.LASF84:
 1679 0113 63727970 		.ascii	"cryptoVersion\000"
 1679      746F5665 
 1679      7273696F 
 1679      6E00
 1680              	.LASF102:
 1681 0121 70657269 		.ascii	"periClockNr\000"
 1681      436C6F63 
 1681      6B4E7200 
 1682              	.LASF80:
 1683 012d 70617373 		.ascii	"passBase\000"
 1683      42617365 
 1683      00
 1684              	.LASF61:
 1685 0136 4D55585F 		.ascii	"MUX_SWITCH0\000"
 1685      53574954 
 1685      43483000 
 1686              	.LASF93:
 1687 0142 63707573 		.ascii	"cpussIpcIrqNr\000"
 1687      73497063 
 1687      4972714E 
 1687      7200
 1688              	.LASF3:
 1689 0150 5F5F7569 		.ascii	"__uint8_t\000"
 1689      6E74385F 
 1689      7400
 1690              	.LASF137:
 1691 015a 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 1691      44697632 
 1691      345F3543 
 1691      746C4F66 
 1691      66736574 
 1692              	.LASF144:
 1693 016f 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 1693      73436D34 
 1693      436C6F63 
 1693      6B43746C 
 1693      4F666673 
 1694              	.LASF26:
 1695 0186 52414E47 		.ascii	"RANGE_COND\000"
 1695      455F434F 
 1695      4E4400
 1696              	.LASF73:
 1697 0191 63707573 		.ascii	"cpussBase\000"
 1697      73426173 
 1697      6500
 1698              	.LASF122:
 1699 019b 64774368 		.ascii	"dwChCtlPrioPos\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 61


 1699      43746C50 
 1699      72696F50 
 1699      6F7300
 1700              	.LASF12:
 1701 01aa 6C6F6E67 		.ascii	"long long unsigned int\000"
 1701      206C6F6E 
 1701      6720756E 
 1701      7369676E 
 1701      65642069 
 1702              	.LASF170:
 1703 01c1 433A5C55 		.ascii	"C:\\Users\\mcfdo\\OneDrive\\Documents\\PSoC Creator"
 1703      73657273 
 1703      5C6D6366 
 1703      646F5C4F 
 1703      6E654472 
 1704 01ef 5C576F72 		.ascii	"\\Workspace_prog1\\Mario_mobile_robot_Copy_01_Copy_"
 1704      6B737061 
 1704      63655F70 
 1704      726F6731 
 1704      5C4D6172 
 1705 0220 30312E63 		.ascii	"01.cydsn\000"
 1705      7964736E 
 1705      00
 1706              	.LASF126:
 1707 0229 70657269 		.ascii	"periTrCmdOffset\000"
 1707      5472436D 
 1707      644F6666 
 1707      73657400 
 1708              	.LASF150:
 1709 0239 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 1709      73537973 
 1709      5469636B 
 1709      43746C4F 
 1709      66667365 
 1710              	.LASF166:
 1711 024f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1711      52784275 
 1711      66666572 
 1711      00
 1712              	.LASF111:
 1713 025c 666C6173 		.ascii	"flashPipeRequired\000"
 1713      68506970 
 1713      65526571 
 1713      75697265 
 1713      6400
 1714              	.LASF68:
 1715 026e 414E415F 		.ascii	"ANA_TRIM0\000"
 1715      5452494D 
 1715      3000
 1716              	.LASF69:
 1717 0278 414E415F 		.ascii	"ANA_TRIM1\000"
 1717      5452494D 
 1717      3100
 1718              	.LASF50:
 1719 0282 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 1719      455F494E 
 1719      54525F4D 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 62


 1719      41534B00 
 1720              	.LASF15:
 1721 0292 696E7431 		.ascii	"int16_t\000"
 1721      365F7400 
 1722              	.LASF11:
 1723 029a 6C6F6E67 		.ascii	"long long int\000"
 1723      206C6F6E 
 1723      6720696E 
 1723      7400
 1724              	.LASF1:
 1725 02a8 7369676E 		.ascii	"signed char\000"
 1725      65642063 
 1725      68617200 
 1726              	.LASF131:
 1727 02b4 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 1727      44697643 
 1727      6D645479 
 1727      70655365 
 1727      6C506F73 
 1728              	.LASF74:
 1729 02c9 666C6173 		.ascii	"flashcBase\000"
 1729      68634261 
 1729      736500
 1730              	.LASF77:
 1731 02d4 70726F74 		.ascii	"protBase\000"
 1731      42617365 
 1731      00
 1732              	.LASF89:
 1733 02dd 69706356 		.ascii	"ipcVersion\000"
 1733      65727369 
 1733      6F6E00
 1734              	.LASF151:
 1735 02e8 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 1735      73436D30 
 1735      4E6D6943 
 1735      746C4F66 
 1735      66736574 
 1736              	.LASF67:
 1737 02fd 52455345 		.ascii	"RESERVED10\000"
 1737      52564544 
 1737      313000
 1738              	.LASF78:
 1739 0308 6873696F 		.ascii	"hsiomBase\000"
 1739      6D426173 
 1739      6500
 1740              	.LASF8:
 1741 0312 6C6F6E67 		.ascii	"long int\000"
 1741      20696E74 
 1741      00
 1742              	.LASF66:
 1743 031b 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 1743      53574954 
 1743      43485F53 
 1743      54415455 
 1743      5300
 1744              	.LASF52:
 1745 032d 494E5452 		.ascii	"INTR_CAUSE\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 63


 1745      5F434155 
 1745      534500
 1746              	.LASF109:
 1747 0338 63727970 		.ascii	"cryptoMemSize\000"
 1747      746F4D65 
 1747      6D53697A 
 1747      6500
 1748              	.LASF56:
 1749 0346 494E4A5F 		.ascii	"INJ_RESULT\000"
 1749      52455355 
 1749      4C5400
 1750              	.LASF75:
 1751 0351 70657269 		.ascii	"periBase\000"
 1751      42617365 
 1751      00
 1752              	.LASF107:
 1753 035a 73797350 		.ascii	"sysPmSimoPresent\000"
 1753      6D53696D 
 1753      6F507265 
 1753      73656E74 
 1753      00
 1754              	.LASF97:
 1755 036b 63707573 		.ascii	"cpussFmIrq\000"
 1755      73466D49 
 1755      727100
 1756              	.LASF162:
 1757 0376 646F7562 		.ascii	"double\000"
 1757      6C6500
 1758              	.LASF136:
 1759 037d 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 1759      44697631 
 1759      365F3543 
 1759      746C4F66 
 1759      66736574 
 1760              	.LASF62:
 1761 0392 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 1761      53574954 
 1761      43485F43 
 1761      4C454152 
 1761      3000
 1762              	.LASF100:
 1763 03a4 73727373 		.ascii	"srssNumPll\000"
 1763      4E756D50 
 1763      6C6C00
 1764              	.LASF174:
 1765 03af 696E7472 		.ascii	"intr_status\000"
 1765      5F737461 
 1765      74757300 
 1766              	.LASF134:
 1767 03bb 70657269 		.ascii	"periDiv8CtlOffset\000"
 1767      44697638 
 1767      43746C4F 
 1767      66667365 
 1767      7400
 1768              	.LASF141:
 1769 03cd 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 1769      50727443 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 64


 1769      66674F75 
 1769      744F6666 
 1769      73657400 
 1770              	.LASF123:
 1771 03e1 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 1771      43746C50 
 1771      7265656D 
 1771      70746162 
 1771      6C65506F 
 1772              	.LASF9:
 1773 03f7 5F5F7569 		.ascii	"__uint32_t\000"
 1773      6E743332 
 1773      5F7400
 1774              	.LASF104:
 1775 0402 70617373 		.ascii	"passSarChannels\000"
 1775      53617243 
 1775      68616E6E 
 1775      656C7300 
 1776              	.LASF23:
 1777 0412 53414D50 		.ascii	"SAMPLE_TIME01\000"
 1777      4C455F54 
 1777      494D4530 
 1777      3100
 1778              	.LASF4:
 1779 0420 5F5F696E 		.ascii	"__int16_t\000"
 1779      7431365F 
 1779      7400
 1780              	.LASF44:
 1781 042a 53415455 		.ascii	"SATURATE_INTR\000"
 1781      52415445 
 1781      5F494E54 
 1781      5200
 1782              	.LASF30:
 1783 0438 4348414E 		.ascii	"CHAN_CONFIG\000"
 1783      5F434F4E 
 1783      46494700 
 1784              	.LASF147:
 1785 0444 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 1785      73436D34 
 1785      50777243 
 1785      746C4F66 
 1785      66736574 
 1786              	.LASF142:
 1787 0459 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 1787      50727443 
 1787      66675369 
 1787      6F4F6666 
 1787      73657400 
 1788              	.LASF94:
 1789 046d 63707573 		.ascii	"cpussDwChNr\000"
 1789      73447743 
 1789      684E7200 
 1790              	.LASF13:
 1791 0479 756E7369 		.ascii	"unsigned int\000"
 1791      676E6564 
 1791      20696E74 
 1791      00
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 65


 1792              	.LASF16:
 1793 0486 75696E74 		.ascii	"uint16_t\000"
 1793      31365F74 
 1793      00
 1794              	.LASF127:
 1795 048f 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 1795      5472436D 
 1795      64477253 
 1795      656C4D73 
 1795      6B00
 1796              	.LASF10:
 1797 04a1 6C6F6E67 		.ascii	"long unsigned int\000"
 1797      20756E73 
 1797      69676E65 
 1797      6420696E 
 1797      7400
 1798              	.LASF38:
 1799 04b3 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 1799      5F574F52 
 1799      4B5F4E45 
 1799      5756414C 
 1799      554500
 1800              	.LASF92:
 1801 04c6 63707573 		.ascii	"cpussIpcNr\000"
 1801      73497063 
 1801      4E7200
 1802              	.LASF64:
 1803 04d1 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 1803      53574954 
 1803      43485F44 
 1803      535F4354 
 1803      524C00
 1804              	.LASF42:
 1805 04e4 494E5452 		.ascii	"INTR_MASK\000"
 1805      5F4D4153 
 1805      4B00
 1806              	.LASF79:
 1807 04ee 6770696F 		.ascii	"gpioBase\000"
 1807      42617365 
 1807      00
 1808              	.LASF71:
 1809 04f7 5341525F 		.ascii	"SAR_Type\000"
 1809      54797065 
 1809      00
 1810              	.LASF117:
 1811 0500 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 1811      6843746C 
 1811      4D61696E 
 1811      57733246 
 1811      72657100 
 1812              	.LASF128:
 1813 0514 70657269 		.ascii	"periTrGrOffset\000"
 1813      54724772 
 1813      4F666673 
 1813      657400
 1814              	.LASF155:
 1815 0523 63707573 		.ascii	"cpussRam1Ctl0\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 66


 1815      7352616D 
 1815      3143746C 
 1815      3000
 1816              	.LASF48:
 1817 0531 52414E47 		.ascii	"RANGE_INTR\000"
 1817      455F494E 
 1817      545200
 1818              	.LASF36:
 1819 053c 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 1819      5F574F52 
 1819      4B5F5550 
 1819      44415445 
 1819      4400
 1820              	.LASF129:
 1821 054e 70657269 		.ascii	"periTrGrSize\000"
 1821      54724772 
 1821      53697A65 
 1821      00
 1822              	.LASF87:
 1823 055b 6770696F 		.ascii	"gpioVersion\000"
 1823      56657273 
 1823      696F6E00 
 1824              	.LASF159:
 1825 0567 63795F73 		.ascii	"cy_stc_device_t\000"
 1825      74635F64 
 1825      65766963 
 1825      655F7400 
 1826              	.LASF47:
 1827 0577 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 1827      52415445 
 1827      5F494E54 
 1827      525F4D41 
 1827      534B4544 
 1828              	.LASF105:
 1829 058c 65704D6F 		.ascii	"epMonitorNr\000"
 1829      6E69746F 
 1829      724E7200 
 1830              	.LASF152:
 1831 0598 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 1831      73436D34 
 1831      4E6D6943 
 1831      746C4F66 
 1831      66736574 
 1832              	.LASF148:
 1833 05ad 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 1833      73547269 
 1833      6D52616D 
 1833      43746C4F 
 1833      66667365 
 1834              	.LASF143:
 1835 05c3 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 1835      73436D30 
 1835      436C6F63 
 1835      6B43746C 
 1835      4F666673 
 1836              	.LASF28:
 1837 05da 53544152 		.ascii	"START_CTRL\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 67


 1837      545F4354 
 1837      524C00
 1838              	.LASF41:
 1839 05e5 494E5452 		.ascii	"INTR_SET\000"
 1839      5F534554 
 1839      00
 1840              	.LASF83:
 1841 05ee 63707573 		.ascii	"cpussVersion\000"
 1841      73566572 
 1841      73696F6E 
 1841      00
 1842              	.LASF164:
 1843 05fb 62617365 		.ascii	"base\000"
 1843      00
 1844              	.LASF90:
 1845 0600 70657269 		.ascii	"periVersion\000"
 1845      56657273 
 1845      696F6E00 
 1846              	.LASF146:
 1847 060c 63707573 		.ascii	"cpussCm0StatusOffset\000"
 1847      73436D30 
 1847      53746174 
 1847      75734F66 
 1847      66736574 
 1848              	.LASF19:
 1849 0621 73697A65 		.ascii	"sizetype\000"
 1849      74797065 
 1849      00
 1850              	.LASF120:
 1851 062a 64774368 		.ascii	"dwChOffset\000"
 1851      4F666673 
 1851      657400
 1852              	.LASF34:
 1853 0635 4348414E 		.ascii	"CHAN_RESULT\000"
 1853      5F524553 
 1853      554C5400 
 1854              	.LASF95:
 1855 0641 63707573 		.ascii	"cpussFlashPaSize\000"
 1855      73466C61 
 1855      73685061 
 1855      53697A65 
 1855      00
 1856              	.LASF133:
 1857 0652 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 1857      44697643 
 1857      6D645061 
 1857      54797065 
 1857      53656C50 
 1858              	.LASF156:
 1859 0669 63707573 		.ascii	"cpussRam2Ctl0\000"
 1859      7352616D 
 1859      3243746C 
 1859      3000
 1860              	.LASF21:
 1861 0677 53414D50 		.ascii	"SAMPLE_CTRL\000"
 1861      4C455F43 
 1861      54524C00 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 68


 1862              	.LASF25:
 1863 0683 52414E47 		.ascii	"RANGE_THRES\000"
 1863      455F5448 
 1863      52455300 
 1864              	.LASF124:
 1865 068f 64775374 		.ascii	"dwStatusChIdxPos\000"
 1865      61747573 
 1865      43684964 
 1865      78506F73 
 1865      00
 1866              	.LASF27:
 1867 06a0 4348414E 		.ascii	"CHAN_EN\000"
 1867      5F454E00 
 1868              	.LASF24:
 1869 06a8 53414D50 		.ascii	"SAMPLE_TIME23\000"
 1869      4C455F54 
 1869      494D4532 
 1869      3300
 1870              	.LASF106:
 1871 06b6 75646250 		.ascii	"udbPresent\000"
 1871      72657365 
 1871      6E7400
 1872              	.LASF86:
 1873 06c1 666C6173 		.ascii	"flashcVersion\000"
 1873      68635665 
 1873      7273696F 
 1873      6E00
 1874              	.LASF82:
 1875 06cf 63727970 		.ascii	"cryptoBase\000"
 1875      746F4261 
 1875      736500
 1876              	.LASF103:
 1877 06da 736D6966 		.ascii	"smifDeviceNr\000"
 1877      44657669 
 1877      63654E72 
 1877      00
 1878              	.LASF45:
 1879 06e7 53415455 		.ascii	"SATURATE_INTR_SET\000"
 1879      52415445 
 1879      5F494E54 
 1879      525F5345 
 1879      5400
 1880              	.LASF43:
 1881 06f9 494E5452 		.ascii	"INTR_MASKED\000"
 1881      5F4D4153 
 1881      4B454400 
 1882              	.LASF161:
 1883 0705 666C6F61 		.ascii	"float\000"
 1883      7400
 1884              	.LASF125:
 1885 070b 64775374 		.ascii	"dwStatusChIdxMsk\000"
 1885      61747573 
 1885      43684964 
 1885      784D736B 
 1885      00
 1886              	.LASF171:
 1887 071c 43795F53 		.ascii	"Cy_SAR_GetInterruptStatus\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 69


 1887      41525F47 
 1887      6574496E 
 1887      74657272 
 1887      75707453 
 1888              	.LASF29:
 1889 0736 52455345 		.ascii	"RESERVED1\000"
 1889      52564544 
 1889      3100
 1890              	.LASF167:
 1891 0740 63795F64 		.ascii	"cy_device\000"
 1891      65766963 
 1891      6500
 1892              	.LASF33:
 1893 074a 52455345 		.ascii	"RESERVED3\000"
 1893      52564544 
 1893      3300
 1894              	.LASF153:
 1895 0754 63707573 		.ascii	"cpussRomCtl\000"
 1895      73526F6D 
 1895      43746C00 
 1896              	.LASF53:
 1897 0760 52455345 		.ascii	"RESERVED5\000"
 1897      52564544 
 1897      3500
 1898              	.LASF55:
 1899 076a 52455345 		.ascii	"RESERVED6\000"
 1899      52564544 
 1899      3600
 1900              	.LASF57:
 1901 0774 52455345 		.ascii	"RESERVED7\000"
 1901      52564544 
 1901      3700
 1902              	.LASF60:
 1903 077e 52455345 		.ascii	"RESERVED8\000"
 1903      52564544 
 1903      3800
 1904              	.LASF63:
 1905 0788 52455345 		.ascii	"RESERVED9\000"
 1905      52564544 
 1905      3900
 1906              	.LASF76:
 1907 0792 75646242 		.ascii	"udbBase\000"
 1907      61736500 
 1908              	.LASF163:
 1909 079a 5F426F6F 		.ascii	"_Bool\000"
 1909      6C00
 1910              	.LASF17:
 1911 07a0 696E7433 		.ascii	"int32_t\000"
 1911      325F7400 
 1912              	.LASF2:
 1913 07a8 756E7369 		.ascii	"unsigned char\000"
 1913      676E6564 
 1913      20636861 
 1913      7200
 1914              	.LASF119:
 1915 07b6 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 1915      6843746C 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 70


 1915      4D61696E 
 1915      57733446 
 1915      72657100 
 1916              	.LASF158:
 1917 07ca 6970634C 		.ascii	"ipcLockStatusOffset\000"
 1917      6F636B53 
 1917      74617475 
 1917      734F6666 
 1917      73657400 
 1918              	.LASF0:
 1919 07de 73686F72 		.ascii	"short int\000"
 1919      7420696E 
 1919      7400
 1920              	.LASF165:
 1921 07e8 696E7472 		.ascii	"intrMask\000"
 1921      4D61736B 
 1921      00
 1922              	.LASF22:
 1923 07f1 52455345 		.ascii	"RESERVED\000"
 1923      52564544 
 1923      00
 1924              	.LASF70:
 1925 07fa 5341525F 		.ascii	"SAR_V1_Type\000"
 1925      56315F54 
 1925      79706500 
 1926              	.LASF169:
 1927 0806 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_1_INT.c\000"
 1927      72617465 
 1927      645F536F 
 1927      75726365 
 1927      5C50536F 
 1928              	.LASF130:
 1929 0829 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 1929      44697643 
 1929      6D644469 
 1929      7653656C 
 1929      4D736B00 
 1930              	.LASF39:
 1931 083d 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 1931      5F524553 
 1931      554C545F 
 1931      4E455756 
 1931      414C5545 
 1932              	.LASF31:
 1933 0852 52455345 		.ascii	"RESERVED2\000"
 1933      52564544 
 1933      3200
 1934              	.LASF101:
 1935 085c 73727373 		.ascii	"srssNumHfroot\000"
 1935      4E756D48 
 1935      66726F6F 
 1935      7400
 1936              	.LASF35:
 1937 086a 52455345 		.ascii	"RESERVED4\000"
 1937      52564544 
 1937      3400
 1938              	.LASF114:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 71


 1939 0874 666C6173 		.ascii	"flashEraseDelay\000"
 1939      68457261 
 1939      73654465 
 1939      6C617900 
 1940              	.LASF18:
 1941 0884 75696E74 		.ascii	"uint32_t\000"
 1941      33325F74 
 1941      00
 1942              	.LASF108:
 1943 088d 70726F74 		.ascii	"protBusMasterMask\000"
 1943      4275734D 
 1943      61737465 
 1943      724D6173 
 1943      6B00
 1944              	.LASF72:
 1945 089f 6C6F6E67 		.ascii	"long double\000"
 1945      20646F75 
 1945      626C6500 
 1946              	.LASF160:
 1947 08ab 63686172 		.ascii	"char\000"
 1947      00
 1948              	.LASF91:
 1949 08b0 70726F74 		.ascii	"protVersion\000"
 1949      56657273 
 1949      696F6E00 
 1950              	.LASF154:
 1951 08bc 63707573 		.ascii	"cpussRam0Ctl0\000"
 1951      7352616D 
 1951      3043746C 
 1951      3000
 1952              	.LASF5:
 1953 08ca 5F5F7569 		.ascii	"__uint16_t\000"
 1953      6E743136 
 1953      5F7400
 1954              	.LASF135:
 1955 08d5 70657269 		.ascii	"periDiv16CtlOffset\000"
 1955      44697631 
 1955      3643746C 
 1955      4F666673 
 1955      657400
 1956              	.LASF7:
 1957 08e8 5F5F696E 		.ascii	"__int32_t\000"
 1957      7433325F 
 1957      7400
 1958              	.LASF88:
 1959 08f2 6873696F 		.ascii	"hsiomVersion\000"
 1959      6D566572 
 1959      73696F6E 
 1959      00
 1960              	.LASF46:
 1961 08ff 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 1961      52415445 
 1961      5F494E54 
 1961      525F4D41 
 1961      534B00
 1962              	.LASF40:
 1963 0912 494E5452 		.ascii	"INTR\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 72


 1963      00
 1964              	.LASF116:
 1965 0917 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 1965      6843746C 
 1965      4D61696E 
 1965      57733146 
 1965      72657100 
 1966              	.LASF6:
 1967 092b 73686F72 		.ascii	"short unsigned int\000"
 1967      7420756E 
 1967      7369676E 
 1967      65642069 
 1967      6E7400
 1968              	.LASF121:
 1969 093e 64774368 		.ascii	"dwChSize\000"
 1969      53697A65 
 1969      00
 1970              	.LASF157:
 1971 0947 69706353 		.ascii	"ipcStructSize\000"
 1971      74727563 
 1971      7453697A 
 1971      6500
 1972              	.LASF32:
 1973 0955 4348414E 		.ascii	"CHAN_WORK\000"
 1973      5F574F52 
 1973      4B00
 1974              	.LASF96:
 1975 095f 63707573 		.ascii	"cpussIpc0Irq\000"
 1975      73497063 
 1975      30497271 
 1975      00
 1976              	.LASF65:
 1977 096c 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 1977      53574954 
 1977      43485F53 
 1977      515F4354 
 1977      524C00
 1978              	.LASF20:
 1979 097f 4354524C 		.ascii	"CTRL\000"
 1979      00
 1980              	.LASF139:
 1981 0984 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 1981      50727443 
 1981      66674F66 
 1981      66736574 
 1981      00
 1982              	.LASF115:
 1983 0995 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 1983      6843746C 
 1983      4D61696E 
 1983      57733046 
 1983      72657100 
 1984              	.LASF58:
 1985 09a9 53544154 		.ascii	"STATUS\000"
 1985      555300
 1986              	.LASF98:
 1987 09b0 63707573 		.ascii	"cpussNotConnectedIrq\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 73


 1987      734E6F74 
 1987      436F6E6E 
 1987      65637465 
 1987      64497271 
 1988              	.LASF112:
 1989 09c5 666C6173 		.ascii	"flashWriteDelay\000"
 1989      68577269 
 1989      74654465 
 1989      6C617900 
 1990              	.LASF37:
 1991 09d5 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 1991      5F524553 
 1991      554C545F 
 1991      55504441 
 1991      54454400 
 1992              	.LASF14:
 1993 09e9 75696E74 		.ascii	"uint8_t\000"
 1993      385F7400 
 1994              	.LASF145:
 1995 09f1 63707573 		.ascii	"cpussCm4StatusOffset\000"
 1995      73436D34 
 1995      53746174 
 1995      75734F66 
 1995      66736574 
 1996              	.LASF138:
 1997 0a06 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 1997      50727449 
 1997      6E747243 
 1997      66674F66 
 1997      66736574 
 1998              	.LASF149:
 1999 0a1b 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 1999      73547269 
 1999      6D526F6D 
 1999      43746C4F 
 1999      66667365 
 2000              	.LASF49:
 2001 0a31 52414E47 		.ascii	"RANGE_INTR_SET\000"
 2001      455F494E 
 2001      54525F53 
 2001      455400
 2002              	.LASF99:
 2003 0a40 73727373 		.ascii	"srssNumClkpath\000"
 2003      4E756D43 
 2003      6C6B7061 
 2003      746800
 2004              	.LASF85:
 2005 0a4f 64775665 		.ascii	"dwVersion\000"
 2005      7273696F 
 2005      6E00
 2006              	.LASF81:
 2007 0a59 69706342 		.ascii	"ipcBase\000"
 2007      61736500 
 2008              	.LASF51:
 2009 0a61 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 2009      455F494E 
 2009      54525F4D 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccZ4fm4r.s 			page 74


 2009      41534B45 
 2009      4400
 2010              	.LASF132:
 2011 0a73 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 2011      44697643 
 2011      6D645061 
 2011      44697653 
 2011      656C506F 
 2012              	.LASF113:
 2013 0a89 666C6173 		.ascii	"flashProgramDelay\000"
 2013      6850726F 
 2013      6772616D 
 2013      44656C61 
 2013      7900
 2014              	.LASF110:
 2015 0a9b 666C6173 		.ascii	"flashRwwRequired\000"
 2015      68527777 
 2015      52657175 
 2015      69726564 
 2015      00
 2016              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
