ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"cy_sar.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.Cy_SAR_Init,"ax",%progbits
  21              		.align	1
  22              		.global	Cy_SAR_Init
  23              		.thumb
  24              		.thumb_func
  25              		.type	Cy_SAR_Init, %function
  26              	Cy_SAR_Init:
  27              	.LFB192:
  28              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\sar\\cy_sar.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \file cy_sar.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Provides the public functions for the API for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #include "cy_sar.h"
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #ifdef CY_IP_MXS40PASS_SAR
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #if defined(__cplusplus)
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** extern "C" {
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #endif
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** static cy_stc_sar_state_backup_t enabledBeforeSleep =
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     0uL,
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     0uL
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** };
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 2


  30:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Init
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Initialize all SAR configuration registers.
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If routing is to be configured, all switches will be cleared before
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * being initialized.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param config
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure containing configuration data. See \ref cy_stc_sar_config_t
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and guidance in the \ref group_sar_initialization section.
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : initialization complete
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : input pointers are null, initialization incomplete
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INIT_CUSTOM
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config)
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
  29              		.loc 1 57 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  35              		.cfi_def_cfa_offset 36
  36              		.cfi_offset 4, -36
  37              		.cfi_offset 5, -32
  38              		.cfi_offset 6, -28
  39              		.cfi_offset 7, -24
  40              		.cfi_offset 8, -20
  41              		.cfi_offset 9, -16
  42              		.cfi_offset 10, -12
  43              		.cfi_offset 11, -8
  44              		.cfi_offset 14, -4
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != base);
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != config);
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint8_t chan;
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t counts;
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool vrefNegSelect;
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool singleEndedSigned;
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool chanSingleEnded;
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if ((NULL == base) || (NULL == config))
  45              		.loc 1 68 0
  46 0004 0028     		cmp	r0, #0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 3


  47 0006 6CD0     		beq	.L10
  48              		.loc 1 68 0 is_stmt 0 discriminator 1
  49 0008 0029     		cmp	r1, #0
  50 000a 6AD0     		beq	.L10
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_BAD_PARAM;
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CTRL(config->ctrl));
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_CTRL(config->sampleCtrl));
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_TIME(config->sampleTime01));
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_TIME(config->sampleTime23));
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L3(CY_SAR_RANGECOND(config->rangeCond));
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->chanEn));
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_INTRMASK(config->intrMask));
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->satIntrMask));
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->rangeIntrMask));
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the EOS_DSI_OUT_EN bit so the EOS signal can be routed */
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) = config->sampleCtrl | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk;
  51              		.loc 1 85 0 is_stmt 1
  52 000c 4A68     		ldr	r2, [r1, #4]
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = config->sampleTime01;
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = config->sampleTime23;
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_THRES(base) = config->rangeThres;
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = (uint32_t)config->rangeCond << SAR_RANGE_COND_RANGE_COND_Pos;
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = config->chanEn;
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Check whether NEG_SEL is set for VREF */
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         vrefNegSelect = ((uint32_t)CY_SAR_NEG_SEL_VREF == (config->ctrl & SAR_CTRL_NEG_SEL_Msk))? t
  53              		.loc 1 93 0
  54 000e 0C68     		ldr	r4, [r1]
  55 0010 354E     		ldr	r6, .L22
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Check whether single ended channels are set to signed */
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         singleEndedSigned = (SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk == (config->sampleCtrl & SAR_S
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_CHAN_CONFIG(config->chanConfig[chan]));
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CHAN_CONFIG(base, chan) = config->chanConfig[chan];
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             counts = (int32_t) CY_SAR_WRK_MAX_12BIT;
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* For signed single ended channels with NEG_SEL set to VREF,
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****              * set the offset to minus half scale to convert results to unsigned format */
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             chanSingleEnded = (0uL == (config->chanConfig[chan] & (SAR_CHAN_CONFIG_DIFFERENTIAL_EN_
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (chanSingleEnded && vrefNegSelect && singleEndedSigned)
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 Cy_SAR_offset[chan] = (int16_t) (counts / -2);
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             else
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 Cy_SAR_offset[chan] = 0;
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 4


 117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Calculate gain in counts per 10 volts with rounding */
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             Cy_SAR_countsPer10Volt[chan] = (int16_t)(((counts * CY_SAR_10MV_COUNTS) + (int32_t)conf
  56              		.loc 1 118 0
  57 0012 DFF8DC80 		ldr	r8, .L22+8
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = config->sampleTime01;
  58              		.loc 1 85 0
  59 0016 42F00043 		orr	r3, r2, #-2147483648
  60 001a 4360     		str	r3, [r0, #4]
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = config->sampleTime01;
  61              		.loc 1 86 0
  62 001c 8B68     		ldr	r3, [r1, #8]
  63 001e 0361     		str	r3, [r0, #16]
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_THRES(base) = config->rangeThres;
  64              		.loc 1 87 0
  65 0020 CB68     		ldr	r3, [r1, #12]
  66 0022 4361     		str	r3, [r0, #20]
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = (uint32_t)config->rangeCond << SAR_RANGE_COND_RANGE_COND_Pos;
  67              		.loc 1 88 0
  68 0024 0B69     		ldr	r3, [r1, #16]
  69 0026 8361     		str	r3, [r0, #24]
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = config->chanEn;
  70              		.loc 1 89 0
  71 0028 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  72              		.loc 1 95 0
  73 002a 02F0040C 		and	ip, r2, #4
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = config->chanEn;
  74              		.loc 1 89 0
  75 002e 9B07     		lsls	r3, r3, #30
  76              		.loc 1 118 0
  77 0030 4A6F     		ldr	r2, [r1, #116]
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = config->chanEn;
  78              		.loc 1 89 0
  79 0032 C361     		str	r3, [r0, #28]
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  80              		.loc 1 90 0
  81 0034 8B69     		ldr	r3, [r1, #24]
  82 0036 0362     		str	r3, [r0, #32]
  83              		.loc 1 118 0
  84 0038 02F11C73 		add	r3, r2, #40894464
  85 003c 03F58033 		add	r3, r3, #65536
  86 0040 5200     		lsls	r2, r2, #1
  87 0042 93FBF2F3 		sdiv	r3, r3, r2
  88 0046 1AB2     		sxth	r2, r3
  89 0048 0023     		movs	r3, #0
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Check whether single ended channels are set to signed */
  90              		.loc 1 93 0
  91 004a 04F4606E 		and	lr, r4, #3584
  92              	.LVL1:
  93 004e 01F11805 		add	r5, r1, #24
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
  94              		.loc 1 114 0
  95 0052 9946     		mov	r9, r3
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
  96              		.loc 1 110 0
  97 0054 4FF4784A 		mov	r10, #63488
  98              	.LVL2:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 5


  99              	.L5:
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 100              		.loc 1 101 0
 101 0058 55F8047F 		ldr	r7, [r5, #4]!
 102 005c 03F1200B 		add	fp, r3, #32
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 103              		.loc 1 108 0
 104 0060 17F0012F 		tst	r7, #16777472
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 105              		.loc 1 101 0
 106 0064 40F82B70 		str	r7, [r0, fp, lsl #2]
 107              	.LVL3:
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 108              		.loc 1 108 0
 109 0068 08D1     		bne	.L3
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 110              		.loc 1 108 0 is_stmt 0 discriminator 1
 111 006a BEF5606F 		cmp	lr, #3584
 112 006e 05D1     		bne	.L3
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 113              		.loc 1 108 0 discriminator 2
 114 0070 BCF1000F 		cmp	ip, #0
 115 0074 02D0     		beq	.L3
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 116              		.loc 1 110 0 is_stmt 1
 117 0076 26F813A0 		strh	r10, [r6, r3, lsl #1]	@ movhi
 118 007a 01E0     		b	.L4
 119              	.L3:
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 120              		.loc 1 114 0
 121 007c 26F81390 		strh	r9, [r6, r3, lsl #1]	@ movhi
 122              	.L4:
 123              		.loc 1 118 0 discriminator 2
 124 0080 48F82320 		str	r2, [r8, r3, lsl #2]
 125              	.LVL4:
 126 0084 0133     		adds	r3, r3, #1
 127              	.LVL5:
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 128              		.loc 1 97 0 discriminator 2
 129 0086 102B     		cmp	r3, #16
 130 0088 E6D1     		bne	.L5
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR_MASK(base) = config->intrMask;
 131              		.loc 1 120 0
 132 008a CB6D     		ldr	r3, [r1, #92]
 133 008c C0F81832 		str	r3, [r0, #536]
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = config->intrMask;
 134              		.loc 1 121 0
 135 0090 C0F81032 		str	r3, [r0, #528]
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR_MASK(base) = config->satIntrMask;
 136              		.loc 1 122 0
 137 0094 0B6E     		ldr	r3, [r1, #96]
 138 0096 C0F82832 		str	r3, [r0, #552]
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR(base) = config->satIntrMask;
 139              		.loc 1 123 0
 140 009a C0F82032 		str	r3, [r0, #544]
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR_MASK(base) = config->rangeIntrMask;
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 6


 141              		.loc 1 124 0
 142 009e 4B6E     		ldr	r3, [r1, #100]
 143 00a0 C0F83832 		str	r3, [r0, #568]
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR(base) = config->rangeIntrMask;
 144              		.loc 1 125 0
 145 00a4 C0F83032 		str	r3, [r0, #560]
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set routing related registers if enabled */
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == config->configRouting)
 146              		.loc 1 128 0
 147 00a8 91F87030 		ldrb	r3, [r1, #112]	@ zero_extendqisi2
 148 00ac 4BB1     		cbz	r3, .L6
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_SWITCHMASK(config->muxSwitch));
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_SQMASK(config->muxSwitchSqCtrl));
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Clear out all the switches so that only the desired switches in the config structure
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_CLEAR0(base) = CY_SAR_CLEAR_ALL_SWITCHES;
 149              		.loc 1 134 0
 150 00ae 6FF04043 		mvn	r3, #-1073741824
 151 00b2 C0F80433 		str	r3, [r0, #772]
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH0(base) = config->muxSwitch;
 152              		.loc 1 136 0
 153 00b6 8B6E     		ldr	r3, [r1, #104]
 154 00b8 C0F80033 		str	r3, [r0, #768]
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_SQ_CTRL(base) = config->muxSwitchSqCtrl;
 155              		.loc 1 137 0
 156 00bc CB6E     		ldr	r3, [r1, #108]
 157 00be C0F84433 		str	r3, [r0, #836]
 158              	.L6:
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the Cap trim if it was trimmed out of range from sflash */
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if ((CY_SAR_CAP_TRIM_MAX == SAR_ANA_TRIM0(base)) || (CY_SAR_CAP_TRIM_MIN == SAR_ANA_TRIM0(b
 159              		.loc 1 141 0
 160 00c2 D0F8003F 		ldr	r3, [r0, #3840]
 161 00c6 3F2B     		cmp	r3, #63
 162 00c8 02D0     		beq	.L7
 163              		.loc 1 141 0 is_stmt 0 discriminator 1
 164 00ca D0F8003F 		ldr	r3, [r0, #3840]
 165 00ce 13B9     		cbnz	r3, .L8
 166              	.L7:
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_ANA_TRIM0(base) = CY_SAR_CAP_TRIM;
 167              		.loc 1 143 0 is_stmt 1
 168 00d0 0B23     		movs	r3, #11
 169 00d2 C0F8003F 		str	r3, [r0, #3840]
 170              	.L8:
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the REFBUF_EN bit as this is required for proper operation. */
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) = config->ctrl | SAR_CTRL_REFBUF_EN_Msk;
 171              		.loc 1 147 0
 172 00d6 44F40014 		orr	r4, r4, #2097152
 173 00da 0460     		str	r4, [r0]
 174              	.LVL6:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 7


 148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 175              		.loc 1 149 0
 176 00dc 0020     		movs	r0, #0
 177              	.LVL7:
 178 00de BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 179              	.LVL8:
 180              	.L10:
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 181              		.loc 1 70 0
 182 00e2 0248     		ldr	r0, .L22+4
 183              	.LVL9:
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 184              		.loc 1 153 0
 185 00e4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 186              	.L23:
 187              		.align	2
 188              	.L22:
 189 00e8 00000000 		.word	Cy_SAR_offset
 190 00ec 01000600 		.word	393217
 191 00f0 00000000 		.word	Cy_SAR_countsPer10Volt
 192              		.cfi_endproc
 193              	.LFE192:
 194              		.size	Cy_SAR_Init, .-Cy_SAR_Init
 195              		.section	.text.Cy_SAR_DeInit,"ax",%progbits
 196              		.align	1
 197              		.global	Cy_SAR_DeInit
 198              		.thumb
 199              		.thumb_func
 200              		.type	Cy_SAR_DeInit, %function
 201              	Cy_SAR_DeInit:
 202              	.LFB193:
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeInit
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Reset SAR registers back to power on reset defaults.
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The \ref Cy_SAR_offset and \ref Cy_SAR_countsPer10Volt arrays are NOT reset.
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param deInitRouting
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If true, all SARMUX switches are opened and switch control registers are reset
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * to zero. If false, switch registers are untouched.
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : de-initialization complete
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : input pointers are null, de-initialization incomplete
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 8


 176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_DEINIT
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting)
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 203              		.loc 1 180 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              	.LVL10:
 208 0000 30B5     		push	{r4, r5, lr}
 209              		.cfi_def_cfa_offset 12
 210              		.cfi_offset 4, -12
 211              		.cfi_offset 5, -8
 212              		.cfi_offset 14, -4
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != base);
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint8_t chan;
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (NULL == base)
 213              		.loc 1 186 0
 214 0002 20B3     		cbz	r0, .L27
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****        result = CY_SAR_BAD_PARAM;
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) = CY_SAR_DEINIT;
 215              		.loc 1 192 0
 216 0004 0023     		movs	r3, #0
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) = CY_SAR_DEINIT;
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 217              		.loc 1 194 0
 218 0006 4FF00312 		mov	r2, #196611
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) = CY_SAR_DEINIT;
 219              		.loc 1 192 0
 220 000a 0360     		str	r3, [r0]
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_THRES(base) = CY_SAR_DEINIT;
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = CY_SAR_DEINIT;
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = CY_SAR_DEINIT;
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CHAN_CONFIG(base, chan) = CY_SAR_DEINIT;
 221              		.loc 1 201 0
 222 000c 1D46     		mov	r5, r3
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 223              		.loc 1 193 0
 224 000e 4360     		str	r3, [r0, #4]
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 225              		.loc 1 194 0
 226 0010 0261     		str	r2, [r0, #16]
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 227              		.loc 1 195 0
 228 0012 4261     		str	r2, [r0, #20]
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = CY_SAR_DEINIT;
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 9


 229              		.loc 1 196 0
 230 0014 8361     		str	r3, [r0, #24]
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = CY_SAR_DEINIT;
 231              		.loc 1 197 0
 232 0016 C361     		str	r3, [r0, #28]
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 233              		.loc 1 198 0
 234 0018 0362     		str	r3, [r0, #32]
 235              	.LVL11:
 236              	.L26:
 237              		.loc 1 201 0 discriminator 3
 238 001a 03F12004 		add	r4, r3, #32
 239 001e 0133     		adds	r3, r3, #1
 240              	.LVL12:
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 241              		.loc 1 199 0 discriminator 3
 242 0020 102B     		cmp	r3, #16
 243              		.loc 1 201 0 discriminator 3
 244 0022 4FF00002 		mov	r2, #0
 245 0026 40F82450 		str	r5, [r0, r4, lsl #2]
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 246              		.loc 1 199 0 discriminator 3
 247 002a F6D1     		bne	.L26
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR_MASK(base) = CY_SAR_DEINIT;
 248              		.loc 1 203 0
 249 002c C0F81822 		str	r2, [r0, #536]
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR_MASK(base) = CY_SAR_DEINIT;
 250              		.loc 1 204 0
 251 0030 C0F82822 		str	r2, [r0, #552]
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR_MASK(base) = CY_SAR_DEINIT;
 252              		.loc 1 205 0
 253 0034 C0F83822 		str	r2, [r0, #568]
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == deInitRouting)
 254              		.loc 1 206 0
 255 0038 59B1     		cbz	r1, .L28
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_CLEAR0(base) = CY_SAR_CLEAR_ALL_SWITCHES;
 256              		.loc 1 208 0
 257 003a 6FF04043 		mvn	r3, #-1073741824
 258 003e C0F80433 		str	r3, [r0, #772]
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_DS_CTRL(base) = CY_SAR_DEINIT;
 259              		.loc 1 209 0
 260 0042 C0F84023 		str	r2, [r0, #832]
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_SQ_CTRL(base) = CY_SAR_DEINIT;
 261              		.loc 1 210 0
 262 0046 C0F84423 		str	r2, [r0, #836]
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 263              		.loc 1 212 0
 264 004a 1046     		mov	r0, r2
 265              	.LVL13:
 266 004c 30BD     		pop	{r4, r5, pc}
 267              	.LVL14:
 268              	.L27:
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 269              		.loc 1 188 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 10


 270 004e 0248     		ldr	r0, .L30
 271              	.LVL15:
 272 0050 30BD     		pop	{r4, r5, pc}
 273              	.LVL16:
 274              	.L28:
 275              		.loc 1 212 0
 276 0052 0846     		mov	r0, r1
 277              	.LVL17:
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 278              		.loc 1 216 0
 279 0054 30BD     		pop	{r4, r5, pc}
 280              	.L31:
 281 0056 00BF     		.align	2
 282              	.L30:
 283 0058 01000600 		.word	393217
 284              		.cfi_endproc
 285              	.LFE193:
 286              		.size	Cy_SAR_DeInit, .-Cy_SAR_DeInit
 287              		.section	.text.Cy_SAR_Enable,"ax",%progbits
 288              		.align	1
 289              		.global	Cy_SAR_Enable
 290              		.thumb
 291              		.thumb_func
 292              		.type	Cy_SAR_Enable, %function
 293              	Cy_SAR_Enable:
 294              	.LFB194:
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Enable
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Power up the SAR ADC subsystem block. The hardware is ready to use
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * after 2 us, which is included in this function.
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_Enable(SAR_Type *base)
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 295              		.loc 1 233 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 300              	.LVL18:
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (0uL == (SAR_CTRL(base) & SAR_CTRL_ENABLED_Msk))
 301              		.loc 1 234 0
 302 0000 0368     		ldr	r3, [r0]
 303 0002 002B     		cmp	r3, #0
 304 0004 0ADB     		blt	.L32
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 11


 305              	.L35:
 306              	.LBB8:
 307              	.LBB9:
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while (0uL != (SAR_STATUS(base) & SAR_STATUS_BUSY_Msk))
 308              		.loc 1 236 0
 309 0006 D0F8A032 		ldr	r3, [r0, #672]
 310 000a 002B     		cmp	r3, #0
 311 000c FBDB     		blt	.L35
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Wait for SAR to go idle to avoid deadlock */
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) |= SAR_CTRL_ENABLED_Msk;
 312              		.loc 1 241 0
 313 000e 0368     		ldr	r3, [r0]
 314 0010 43F00043 		orr	r3, r3, #-2147483648
 315 0014 0360     		str	r3, [r0]
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* The block is ready to use 2 us after the enable signal is set high. */
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SysLib_DelayUs(CY_SAR_2US_DELAY);
 316              		.loc 1 244 0
 317 0016 0220     		movs	r0, #2
 318              	.LVL19:
 319 0018 FFF7FEBF 		b	Cy_SysLib_DelayUs
 320              	.LVL20:
 321              	.L32:
 322 001c 7047     		bx	lr
 323              	.LBE9:
 324              	.LBE8:
 325              		.cfi_endproc
 326              	.LFE194:
 327              		.size	Cy_SAR_Enable, .-Cy_SAR_Enable
 328              		.section	.text.Cy_SAR_Wakeup,"ax",%progbits
 329              		.align	1
 330              		.global	Cy_SAR_Wakeup
 331              		.thumb
 332              		.thumb_func
 333              		.type	Cy_SAR_Wakeup, %function
 334              	Cy_SAR_Wakeup:
 335              	.LFB196:
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeepSleep
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This is the preferred routine to prepare the hardware for Deep Sleep.
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * It will call \ref Cy_SAR_StopConvert to disable continuous conversions
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and wait for SAR conversions to stop before entering Deep Sleep.
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If the SARMUX is not configured for Deep Sleep operation, the entire SAR hardware
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * block will be turned off.
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 12


 261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used in the \ref Cy_SAR_DeepSleepCallback. There is no
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * need to call this function directly.
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_DeepSleep(SAR_Type *base)
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t ctrlReg = SAR_CTRL(base);
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     enabledBeforeSleep.hwEnabled = ctrlReg & SAR_CTRL_ENABLED_Msk;
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn off the reference buffer */
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     ctrlReg &= ~SAR_CTRL_REFBUF_EN_Msk;
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_CTRL_ENABLED_Msk == enabledBeforeSleep.hwEnabled)
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Save state of CONTINUOUS bit so that conversions can be re-started upon wake-up */
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         enabledBeforeSleep.continuous = SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_StopConvert(base);
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while (0uL != (SAR_STATUS(base) & SAR_STATUS_BUSY_Msk))
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Wait for SAR to stop conversions before entering low power */
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Turn off the entire hardware block only if the SARMUX is not
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****          * enabled for Deep Sleep operation. */
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_CTRL_DEEPSLEEP_ON_Msk != (ctrlReg & SAR_CTRL_DEEPSLEEP_ON_Msk))
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_CTRL(base) = ctrlReg;
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Wakeup
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This is the preferred routine to restore the hardware to the state after calling
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_DeepSleep. Restoring the hardware involves re-enabling the hardware,
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * the reference buffer, and continuous scanning if it was previously
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * enabled before entering sleep.
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \sideeffect
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 13


 318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Calling this function without previously calling \ref Cy_SAR_DeepSleep can lead to
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * unpredictable results.
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used in the \ref Cy_SAR_DeepSleepCallback. There is no
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * need to call this function directly.
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_Wakeup(SAR_Type *base)
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 336              		.loc 1 330 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              	.LVL21:
 341 0000 38B5     		push	{r3, r4, r5, lr}
 342              		.cfi_def_cfa_offset 16
 343              		.cfi_offset 3, -16
 344              		.cfi_offset 4, -12
 345              		.cfi_offset 5, -8
 346              		.cfi_offset 14, -4
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn on the reference buffer */
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_CTRL(base) |= SAR_CTRL_REFBUF_EN_Msk;
 347              		.loc 1 332 0
 348 0002 0368     		ldr	r3, [r0]
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_CTRL_ENABLED_Msk == enabledBeforeSleep.hwEnabled)
 349              		.loc 1 334 0
 350 0004 094D     		ldr	r5, .L41
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 351              		.loc 1 332 0
 352 0006 43F40013 		orr	r3, r3, #2097152
 353 000a 0360     		str	r3, [r0]
 354              		.loc 1 334 0
 355 000c 2B68     		ldr	r3, [r5]
 356 000e B3F1004F 		cmp	r3, #-2147483648
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn on the reference buffer */
 357              		.loc 1 330 0
 358 0012 0446     		mov	r4, r0
 359              		.loc 1 334 0
 360 0014 09D1     		bne	.L37
 361              	.LVL22:
 362              	.LBB14:
 363              	.LBB15:
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_Enable(base);
 364              		.loc 1 336 0
 365 0016 FFF7FEFF 		bl	Cy_SAR_Enable
 366              	.LVL23:
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_CONTINUOUS_Msk == enabledBeforeSleep.continuous)
 367              		.loc 1 338 0
 368 001a 6B68     		ldr	r3, [r5, #4]
 369 001c B3F5803F 		cmp	r3, #65536
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 14


 370              	.LVL24:
 371              	.LBB16:
 372              	.LBB17:
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             Cy_SAR_StartConvert(base, CY_SAR_START_CONVERT_CONTINUOUS);
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_StartConvert
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Start a single scan (one shot) of all enabled channels or start scanning
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * continuously. When in continuous mode, all firmware and hardware triggers
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * are ignored. To stop continuous scanning, call \ref Cy_SAR_StopConvert.
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param startSelect
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_start_convert_sel_t
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_START_CONVERT
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect)
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_STARTCONVERT(startSelect));
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(startSelect)
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_START_CONVERT_CONTINUOUS:
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) |= SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 373              		.loc 1 374 0
 374 0020 02BF     		ittt	eq
 375 0022 6368     		ldreq	r3, [r4, #4]
 376 0024 43F48033 		orreq	r3, r3, #65536
 377 0028 6360     		streq	r3, [r4, #4]
 378              	.LVL25:
 379              	.L37:
 380 002a 38BD     		pop	{r3, r4, r5, pc}
 381              	.LVL26:
 382              	.L42:
 383              		.align	2
 384              	.L41:
 385 002c 00000000 		.word	.LANCHOR0
 386              	.LBE17:
 387              	.LBE16:
 388              	.LBE15:
 389              	.LBE14:
 390              		.cfi_endproc
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 15


 391              	.LFE196:
 392              		.size	Cy_SAR_Wakeup, .-Cy_SAR_Wakeup
 393              		.section	.text.Cy_SAR_StartConvert,"ax",%progbits
 394              		.align	1
 395              		.global	Cy_SAR_StartConvert
 396              		.thumb
 397              		.thumb_func
 398              		.type	Cy_SAR_StartConvert, %function
 399              	Cy_SAR_StartConvert:
 400              	.LFB197:
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_STARTCONVERT(startSelect));
 401              		.loc 1 368 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		@ link register save eliminated.
 406              	.LVL27:
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 407              		.loc 1 371 0
 408 0000 0129     		cmp	r1, #1
 409              		.loc 1 374 0
 410 0002 09BF     		itett	eq
 411 0004 4368     		ldreq	r3, [r0, #4]
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_START_CONVERT_SINGLE_SHOT:
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_START_CTRL(base) = SAR_START_CTRL_FW_TRIGGER_Msk;
 412              		.loc 1 378 0
 413 0006 0123     		movne	r3, #1
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 414              		.loc 1 374 0
 415 0008 43F48033 		orreq	r3, r3, #65536
 416 000c 4360     		streq	r3, [r0, #4]
 417              		.loc 1 378 0
 418 000e 18BF     		it	ne
 419 0010 4362     		strne	r3, [r0, #36]
 420 0012 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE197:
 423              		.size	Cy_SAR_StartConvert, .-Cy_SAR_StartConvert
 424              		.section	.text.Cy_SAR_StopConvert,"ax",%progbits
 425              		.align	1
 426              		.global	Cy_SAR_StopConvert
 427              		.thumb
 428              		.thumb_func
 429              		.type	Cy_SAR_StopConvert, %function
 430              	Cy_SAR_StopConvert:
 431              	.LFB198:
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_StopConvert
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 16


 388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Stop continuous scanning of enabled channels.
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If a conversion is currently executing, that conversion will complete,
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * but no further conversions will occur until the next call to
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_StartConvert or the next hardware trigger, if enabled.
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_STOP_CONVERT
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_StopConvert(SAR_Type *base)
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 432              		.loc 1 404 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437              	.LVL28:
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_SAMPLE_CTRL_CONTINUOUS_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_CONTINUOUS_Msk))
 438              		.loc 1 405 0
 439 0000 4368     		ldr	r3, [r0, #4]
 440 0002 DB03     		lsls	r3, r3, #15
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) &= ~SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 441              		.loc 1 407 0
 442 0004 42BF     		ittt	mi
 443 0006 4368     		ldrmi	r3, [r0, #4]
 444 0008 23F48033 		bicmi	r3, r3, #65536
 445 000c 4360     		strmi	r3, [r0, #4]
 446 000e 7047     		bx	lr
 447              		.cfi_endproc
 448              	.LFE198:
 449              		.size	Cy_SAR_StopConvert, .-Cy_SAR_StopConvert
 450              		.section	.text.Cy_SAR_DeepSleep,"ax",%progbits
 451              		.align	1
 452              		.global	Cy_SAR_DeepSleep
 453              		.thumb
 454              		.thumb_func
 455              		.type	Cy_SAR_DeepSleep, %function
 456              	Cy_SAR_DeepSleep:
 457              	.LFB195:
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t ctrlReg = SAR_CTRL(base);
 458              		.loc 1 272 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              	.LVL29:
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 463              		.loc 1 273 0
 464 0000 0168     		ldr	r1, [r0]
 465              	.LVL30:
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t ctrlReg = SAR_CTRL(base);
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 17


 466              		.loc 1 272 0
 467 0002 38B5     		push	{r3, r4, r5, lr}
 468              		.cfi_def_cfa_offset 16
 469              		.cfi_offset 3, -16
 470              		.cfi_offset 4, -12
 471              		.cfi_offset 5, -8
 472              		.cfi_offset 14, -4
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 473              		.loc 1 275 0
 474 0004 0C4C     		ldr	r4, .L59
 475 0006 01F00043 		and	r3, r1, #-2147483648
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t ctrlReg = SAR_CTRL(base);
 476              		.loc 1 272 0
 477 000a 0246     		mov	r2, r0
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 478              		.loc 1 275 0
 479 000c 2360     		str	r3, [r4]
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 480              		.loc 1 278 0
 481 000e 21F40015 		bic	r5, r1, #2097152
 482              	.LVL31:
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 483              		.loc 1 280 0
 484 0012 7BB1     		cbz	r3, .L55
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 485              		.loc 1 284 0
 486 0014 4368     		ldr	r3, [r0, #4]
 487 0016 03F48033 		and	r3, r3, #65536
 488 001a 6360     		str	r3, [r4, #4]
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 489              		.loc 1 286 0
 490 001c FFF7FEFF 		bl	Cy_SAR_StopConvert
 491              	.LVL32:
 492              	.L56:
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 493              		.loc 1 288 0 discriminator 1
 494 0020 D2F8A032 		ldr	r3, [r2, #672]
 495 0024 002B     		cmp	r3, #0
 496 0026 FBDB     		blt	.L56
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 497              		.loc 1 295 0
 498 0028 0B01     		lsls	r3, r1, #4
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 499              		.loc 1 297 0
 500 002a 5EBF     		ittt	pl
 501 002c 1368     		ldrpl	r3, [r2]
 502 002e 23F00043 		bicpl	r3, r3, #-2147483648
 503 0032 1360     		strpl	r3, [r2]
 504              	.L55:
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 505              		.loc 1 301 0
 506 0034 1560     		str	r5, [r2]
 507 0036 38BD     		pop	{r3, r4, r5, pc}
 508              	.LVL33:
 509              	.L60:
 510              		.align	2
 511              	.L59:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 18


 512 0038 00000000 		.word	.LANCHOR0
 513              		.cfi_endproc
 514              	.LFE195:
 515              		.size	Cy_SAR_DeepSleep, .-Cy_SAR_DeepSleep
 516              		.section	.text.Cy_SAR_SetConvertMode,"ax",%progbits
 517              		.align	1
 518              		.global	Cy_SAR_SetConvertMode
 519              		.thumb
 520              		.thumb_func
 521              		.type	Cy_SAR_SetConvertMode, %function
 522              	Cy_SAR_SetConvertMode:
 523              	.LFB199:
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetConvertMode
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the mode in which conversions are triggered. This function does
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * not start any conversions; it only configures the mode for subsequent conversions.
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * There are three modes:
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware only; hardware triggering is disabled
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware and edge sensitive hardware triggering
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware and level sensitive hardware triggering
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Note that firmware triggering is always enabled.
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param mode
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_sample_ctrl_trigger_mode_t
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_CONVERT_MODE
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode)
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 524              		.loc 1 440 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529              	.LVL34:
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_TRIGGER(mode));
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Clear the TRIGGER_EN and TRIGGER_LEVEL bits */
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t sampleCtrlReg = SAR_SAMPLE_CTRL(base) & ~(SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAM
 530              		.loc 1 444 0
 531 0000 4368     		ldr	r3, [r0, #4]
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 19


 532              	.LVL35:
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_SAMPLE_CTRL(base) = sampleCtrlReg | mode;
 533              		.loc 1 446 0
 534 0002 23F4C023 		bic	r3, r3, #393216
 535              	.LVL36:
 536 0006 1943     		orrs	r1, r1, r3
 537              	.LVL37:
 538 0008 4160     		str	r1, [r0, #4]
 539 000a 7047     		bx	lr
 540              		.cfi_endproc
 541              	.LFE199:
 542              		.size	Cy_SAR_SetConvertMode, .-Cy_SAR_SetConvertMode
 543              		.section	.text.Cy_SAR_IsEndConversion,"ax",%progbits
 544              		.align	1
 545              		.global	Cy_SAR_IsEndConversion
 546              		.thumb
 547              		.thumb_func
 548              		.type	Cy_SAR_IsEndConversion, %function
 549              	Cy_SAR_IsEndConversion:
 550              	.LFB200:
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsEndConversion
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Immediately return the status of the conversion or does not return (blocking)
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * until the conversion completes, depending on the retMode parameter.
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * In blocking mode, there is a time out of about 10 seconds for a CPU speed of
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 100 MHz.
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param retMode
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_return_mode_t
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : the last conversion is complete
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_CONVERSION_NOT_COMPLETE : the conversion has not completed
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_TIMEOUT : the watchdog timer has expired in blocking mode
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \sideeffect
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function reads the end of conversion status and clears it after.
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_END_CONVERSION
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode)
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 551              		.loc 1 479 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 20


 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556              	.LVL38:
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_RETURN(retMode));
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t endOfConversion = SAR_INTR(base) & SAR_INTR_EOS_INTR_Msk;
 557              		.loc 1 484 0
 558 0000 D0F81032 		ldr	r3, [r0, #528]
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t wdt = 0x1555555uL; /* Watchdog timer for blocking while loop */
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(retMode)
 559              		.loc 1 487 0
 560 0004 0129     		cmp	r1, #1
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t wdt = 0x1555555uL; /* Watchdog timer for blocking while loop */
 561              		.loc 1 484 0
 562 0006 03F00103 		and	r3, r3, #1
 563              	.LVL39:
 564              		.loc 1 487 0
 565 000a 11D1     		bne	.L72
 566 000c 0A4A     		ldr	r2, .L75
 567              	.LVL40:
 568              	.L65:
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_WAIT_FOR_RESULT:
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while((0uL == endOfConversion) && (0uL != wdt))
 569              		.loc 1 490 0
 570 000e 43B9     		cbnz	r3, .L66
 571              		.loc 1 490 0 is_stmt 0 discriminator 1
 572 0010 013A     		subs	r2, r2, #1
 573              	.LVL41:
 574 0012 04D0     		beq	.L74
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             endOfConversion = SAR_INTR(base) & SAR_INTR_EOS_INTR_Msk;
 575              		.loc 1 492 0 is_stmt 1
 576 0014 D0F81032 		ldr	r3, [r0, #528]
 577              	.LVL42:
 578 0018 03F00103 		and	r3, r3, #1
 579              	.LVL43:
 580 001c F7E7     		b	.L65
 581              	.LVL44:
 582              	.L74:
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             wdt--;
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_RETURN_STATUS:
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Clear the EOS bit */
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_INTR_EOS_INTR_Msk == endOfConversion)
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = SAR_INTR_EOS_INTR_Msk;
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Do a dummy read after write for buffered write */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 21


 507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         (void) SAR_INTR(base);
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else if (0uL == wdt)
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_TIMEOUT;
 583              		.loc 1 511 0
 584 001e 0748     		ldr	r0, .L75+4
 585              	.LVL45:
 586 0020 7047     		bx	lr
 587              	.LVL46:
 588              	.L66:
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Do a dummy read after write for buffered write */
 589              		.loc 1 505 0
 590 0022 0123     		movs	r3, #1
 591 0024 C0F81032 		str	r3, [r0, #528]
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 592              		.loc 1 507 0
 593 0028 D0F81032 		ldr	r3, [r0, #528]
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = SAR_INTR_EOS_INTR_Msk;
 594              		.loc 1 504 0
 595 002c 0020     		movs	r0, #0
 596              	.LVL47:
 597 002e 7047     		bx	lr
 598              	.LVL48:
 599              	.L72:
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 600              		.loc 1 502 0
 601 0030 002B     		cmp	r3, #0
 602 0032 F6D1     		bne	.L66
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_CONVERSION_NOT_COMPLETE;
 603              		.loc 1 515 0
 604 0034 0248     		ldr	r0, .L75+8
 605              	.LVL49:
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 606              		.loc 1 519 0
 607 0036 7047     		bx	lr
 608              	.L76:
 609              		.align	2
 610              	.L75:
 611 0038 56555501 		.word	22369622
 612 003c 02000600 		.word	393218
 613 0040 03000600 		.word	393219
 614              		.cfi_endproc
 615              	.LFE200:
 616              		.size	Cy_SAR_IsEndConversion, .-Cy_SAR_IsEndConversion
 617              		.section	.text.Cy_SAR_IsChannelSingleEnded,"ax",%progbits
 618              		.align	1
 619              		.global	Cy_SAR_IsChannelSingleEnded
 620              		.thumb
 621              		.thumb_func
 622              		.type	Cy_SAR_IsChannelSingleEnded, %function
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 22


 623              	Cy_SAR_IsChannelSingleEnded:
 624              	.LFB202:
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsChannelSigned
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return true if channel result is configured for signed format, else false.
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The formats for single-ended and differential channels are independent.
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function will first check whether the channel is single-ended or differential.
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to check, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, false is returned
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_SIGNED
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan)
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool isSigned = false;
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Sign bits are stored separately for differential and single ended channels. */
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == Cy_SAR_IsChannelDifferential(base, chan))
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Differential channel */
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 isSigned = true;
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         else
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Single ended channel */
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 isSigned = true;
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return isSigned;
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 23


 575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsChannelSingleEnded
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return true if channel is single ended, else false
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to check, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, false is returned
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_SE
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan)
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 625              		.loc 1 595 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630              	.LVL50:
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool isSingleEnded = false;
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 631              		.loc 1 600 0
 632 0000 0F29     		cmp	r1, #15
 633 0002 08D8     		bhi	.L79
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (0uL == (SAR_CHAN_CONFIG(base, chan) & (SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk | SAR_CHAN_C
 634              		.loc 1 602 0
 635 0004 2031     		adds	r1, r1, #32
 636              	.LVL51:
 637 0006 50F82130 		ldr	r3, [r0, r1, lsl #2]
 638 000a 13F0012F 		tst	r3, #16777472
 639 000e 0CBF     		ite	eq
 640 0010 0120     		moveq	r0, #1
 641              	.LVL52:
 642 0012 0020     		movne	r0, #0
 643 0014 7047     		bx	lr
 644              	.LVL53:
 645              	.L79:
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 646              		.loc 1 598 0
 647 0016 0020     		movs	r0, #0
 648              	.LVL54:
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             isSingleEnded = true;
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 24


 607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return isSingleEnded;
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 649              		.loc 1 608 0
 650 0018 7047     		bx	lr
 651              		.cfi_endproc
 652              	.LFE202:
 653              		.size	Cy_SAR_IsChannelSingleEnded, .-Cy_SAR_IsChannelSingleEnded
 654              		.section	.text.Cy_SAR_IsChannelSigned,"ax",%progbits
 655              		.align	1
 656              		.global	Cy_SAR_IsChannelSigned
 657              		.thumb
 658              		.thumb_func
 659              		.type	Cy_SAR_IsChannelSigned, %function
 660              	Cy_SAR_IsChannelSigned:
 661              	.LFB201:
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 662              		.loc 1 545 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              	.LVL55:
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 667              		.loc 1 550 0
 668 0000 0F29     		cmp	r1, #15
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 669              		.loc 1 545 0
 670 0002 08B5     		push	{r3, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 3, -8
 673              		.cfi_offset 14, -4
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 674              		.loc 1 545 0
 675 0004 0246     		mov	r2, r0
 676              	.LVL56:
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 677              		.loc 1 550 0
 678 0006 0AD8     		bhi	.L83
 679              	.LVL57:
 680              	.LBB22:
 681              	.LBB23:
 682              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\sar\\cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \addtogroup group_sar
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 25


  17:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 26


  74:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 27


 131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 28


 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 29


 245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 30


 302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 31


 359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 32


 416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 33


 473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 34


 530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \{
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 35


 587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 36


 644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 37


 701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 38


 758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 39


 815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 40


 872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 41


 929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 42


 986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 43


1043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 44


1100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 45


1157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 46


1214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       Configuration Structures
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 47


1271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 48


1328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 49


1385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 50


1442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 51


1499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 52


1556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR(base);
1557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
1588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_INTR(base);
1591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterrupt
1596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger an interrupt with software.
1599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts to set.
1605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 53


1613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask)
1614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR_SET(base) = intrMask;
1618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterruptMask
1623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which interrupts can trigger the CPU interrupt controller.
1626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts. Select one or more values from \ref cy_en_sar_intr_mask_t
1632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and "OR" them together.
1633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_MASK_NONE : Disable EOS, overflow, and firmware collision interrupts.
1634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_INTERRUPT_MASK
1643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask)
1646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR_MASK(base) = intrMask;
1650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptMask
1655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger the CPU interrupt controller
1658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * as configured by \ref Cy_SAR_SetInterruptMask.
1659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Interrupt mask. Compare this value with masks in \ref cy_en_sar_intr_mask_t.
1665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_INTERRUPT_MASK
1669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 54


1670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base)
1672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_MASK(base);
1674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatusMasked
1679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the interrupt request and mask registers.
1682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetInterruptStatus and \ref Cy_SAR_GetInterruptMask.
1683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND of the interrupt request and mask registers
1689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base)
1692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_MASKED(base);
1694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatus
1699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the range interrupt register status.
1702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), range detection is not enabled for the
1704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel (\ref Cy_SAR_SetRangeInterruptMask), or range detection was not
1705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * triggered for the channel.
1706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The range interrupt status for all channels. Bit 0 is for channel 0, etc.
1712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RANGE_INTERRUPT_STATUS
1716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base)
1719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR(base);
1721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearRangeInterrupt
1726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 55


1727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the range interrupt for the specified channel mask.
1729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that
1730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the hardware can set subset interrupts and those interrupts can
1731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be forwarded to the interrupt controller, if enabled.
1732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetRangeInterruptStatus.
1739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR(base) = chanMask;
1748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_RANGE_INTR(base);
1751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterrupt
1756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger a range interrupt with software for the specific channel mask.
1759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR_SET(base) = chanMask;
1774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterruptMask
1779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which channels can trigger a range interrupt.
1782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 56


1784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_INTERRUPT_MASK
1794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask)
1797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR_MASK(base) = chanMask;
1801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptMask
1806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger a range interrupt as configured by
1809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_SetRangeInterruptMask.
1810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The range interrupt mask
1816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base)
1819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR_MASK(base);
1821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatusMasked
1826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the range interrupt request and mask registers.
1829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetRangeInterruptStatus and \ref Cy_SAR_GetRangeInterruptMask.
1830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND between of range interrupt request and mask
1836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base)
1839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR_MASKED(base);
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 57


1841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatus
1846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the saturate interrupt register status.
1849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), saturation detection is not enabled for the
1851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel (\ref Cy_SAR_SetSatInterruptMask), or saturation detection was not
1852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * triggered for the channel.
1853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The saturate interrupt status for all channels. Bit 0 is for channel 0, etc.
1859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_STATUS
1863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base)
1866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR(base);
1868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearSatInterrupt
1873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the saturate interrupt for the specified channel mask.
1876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * to the interrupt controller, if enabled.
1879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetSatInterruptStatus.
1886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask)
1891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR(base) = chanMask;
1895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_SATURATE_INTR(base);
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 58


1898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterrupt
1903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger a saturate interrupt with software for the specific channel mask.
1906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask)
1917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR_SET(base) = chanMask;
1921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterruptMask
1926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which channels can trigger a saturate interrupt.
1929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_MASK
1941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask)
1944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR_MASK(base) = chanMask;
1948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptMask
1953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 59


1955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger a saturate interrupt as configured
1956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * by \ref Cy_SAR_SetSatInterruptMask.
1957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The saturate interrupt mask. Bit 0 is for channel 0, etc.
1963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base)
1966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASK(base);
1968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatusMasked
1972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the saturate interrupt request and mask registers.
1975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetSatInterruptStatus and \ref Cy_SAR_GetSatInterruptMask.
1976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND of the saturate interrupt request and mask
1982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base)
1985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASKED(base);
1987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptCause
1992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the cause of the interrupt.
1995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt routine can be called due to one of the following events:
1996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - End of scan (EOS)
1997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Overflow
1998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Firmware collision
1999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Saturation detected on one or more channels
2000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Range detected on one or more channels
2001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
2003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
2004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
2006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Mask of what caused the interrupt. Compare this value with one of these masks:
2007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_EOS_MASKED_MIR_Msk : EOS caused the interrupt
2008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_OVERFLOW_MASKED_MIR_Msk : Overflow caused the interrupt
2009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_FW_COLLISION_MASKED_MIR_Msk : Firmware collision cause the interrupt
2010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_SATURATE_MASKED_RED_Msk : Saturation detection on one or more channels caused 
2011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_RANGE_MASKED_RED_Msk : Range detection on one or more channels caused the inte
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 60


2012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
2014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base)
2015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
2016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_CAUSE(base);
2017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
2018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
2019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
2021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
2022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
2023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
2026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_IsChannelDifferential
2027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
2028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return true of channel is differential, else false.
2030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
2032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
2033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chan
2035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel to check, starting at 0.
2036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
2038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A false is return if chan is invalid.
2039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
2041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_DIFF
2043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
2045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan)
2046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
2047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return !Cy_SAR_IsChannelSingleEnded(base, chan);
 683              		.loc 2 2047 0
 684 0008 FFF7FEFF 		bl	Cy_SAR_IsChannelSingleEnded
 685              	.LVL58:
 686              	.LBE23:
 687              	.LBE22:
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Differential channel */
 688              		.loc 1 554 0
 689 000c 18B9     		cbnz	r0, .L82
 690              	.LVL59:
 691              	.LBB24:
 692              	.LBB25:
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 693              		.loc 1 556 0
 694 000e 5068     		ldr	r0, [r2, #4]
 695 0010 C0F3C000 		ubfx	r0, r0, #3, #1
 696 0014 08BD     		pop	{r3, pc}
 697              	.LVL60:
 698              	.L82:
 699              	.LBE25:
 700              	.LBE24:
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 61


 701              		.loc 1 563 0
 702 0016 5068     		ldr	r0, [r2, #4]
 703 0018 C0F38000 		ubfx	r0, r0, #2, #1
 704 001c 08BD     		pop	{r3, pc}
 705              	.LVL61:
 706              	.L83:
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 707              		.loc 1 548 0
 708 001e 0020     		movs	r0, #0
 709              	.LVL62:
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 710              		.loc 1 571 0
 711 0020 08BD     		pop	{r3, pc}
 712              		.cfi_endproc
 713              	.LFE201:
 714              		.size	Cy_SAR_IsChannelSigned, .-Cy_SAR_IsChannelSigned
 715              		.section	.text.Cy_SAR_GetResult16,"ax",%progbits
 716              		.align	1
 717              		.global	Cy_SAR_GetResult16
 718              		.thumb
 719              		.thumb_func
 720              		.type	Cy_SAR_GetResult16, %function
 721              	Cy_SAR_GetResult16:
 722              	.LFB203:
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetResult16
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the data available in the channel result data register as a signed
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 16-bit integer.
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to read the result from, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Data is returned as a signed 16-bit integer.
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, 0 is returned.
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RESULT16
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan)
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 723              		.loc 1 634 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 728              	.LVL63:
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 62


 636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t adcResult = 0uL;
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 729              		.loc 1 639 0
 730 0000 0F29     		cmp	r1, #15
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult = SAR_CHAN_RESULT(base, chan) & SAR_CHAN_RESULT_RESULT_Msk;
 731              		.loc 1 641 0
 732 0002 97BF     		itett	ls
 733 0004 6031     		addls	r1, r1, #96
 734              	.LVL64:
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 735              		.loc 1 637 0
 736 0006 0020     		movhi	r0, #0
 737              	.LVL65:
 738              		.loc 1 641 0
 739 0008 50F82100 		ldrls	r0, [r0, r1, lsl #2]
 740 000c 80B2     		uxthls	r0, r0
 741              	.LVL66:
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int16_t) adcResult;
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 742              		.loc 1 645 0
 743 000e 00B2     		sxth	r0, r0
 744              	.LVL67:
 745 0010 7047     		bx	lr
 746              		.cfi_endproc
 747              	.LFE203:
 748              		.size	Cy_SAR_GetResult16, .-Cy_SAR_GetResult16
 749              		.section	.text.Cy_SAR_GetResult32,"ax",%progbits
 750              		.align	1
 751              		.global	Cy_SAR_GetResult32
 752              		.thumb
 753              		.thumb_func
 754              		.type	Cy_SAR_GetResult32, %function
 755              	Cy_SAR_GetResult32:
 756              	.LFB204:
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetResult32
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the data available in the channel result data register as a signed
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 32-bit integer.
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to read the result from, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Data is returned as a signed 32-bit integer.
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, 0 is returned.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 63


 664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RESULT32
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan)
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 757              		.loc 1 671 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              	.LVL68:
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t adcResult = 0uL;
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int16_t adcResult16;
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t finalResult;
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 762              		.loc 1 678 0
 763 0000 0F29     		cmp	r1, #15
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult = SAR_CHAN_RESULT(base, chan) & SAR_CHAN_RESULT_RESULT_Msk;
 764              		.loc 1 680 0
 765 0002 98BF     		it	ls
 766 0004 01F16003 		addls	r3, r1, #96
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 767              		.loc 1 671 0
 768 0008 10B5     		push	{r4, lr}
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 4, -8
 771              		.cfi_offset 14, -4
 772              		.loc 1 680 0
 773 000a 96BF     		itet	ls
 774 000c 50F82340 		ldrls	r4, [r0, r3, lsl #2]
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int16_t adcResult16;
 775              		.loc 1 674 0
 776 0010 0024     		movhi	r4, #0
 777              		.loc 1 680 0
 778 0012 A4B2     		uxthls	r4, r4
 779              	.LVL69:
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (true == Cy_SAR_IsChannelSigned(base, chan))
 780              		.loc 1 683 0
 781 0014 FFF7FEFF 		bl	Cy_SAR_IsChannelSigned
 782              	.LVL70:
 783 0018 08B1     		cbz	r0, .L89
 784              	.LVL71:
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult16 = (int16_t) adcResult;
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         finalResult = (int32_t) adcResult16;
 785              		.loc 1 686 0
 786 001a 20B2     		sxth	r0, r4
 787              	.LVL72:
 788 001c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 64


 789              	.LVL73:
 790              	.L89:
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         finalResult = (int32_t) adcResult;
 791              		.loc 1 690 0
 792 001e 2046     		mov	r0, r4
 793              	.LVL74:
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return finalResult;
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 794              		.loc 1 694 0
 795 0020 10BD     		pop	{r4, pc}
 796              		.cfi_endproc
 797              	.LFE204:
 798              		.size	Cy_SAR_GetResult32, .-Cy_SAR_GetResult32
 799              		.section	.text.Cy_SAR_SetLowLimit,"ax",%progbits
 800              		.align	1
 801              		.global	Cy_SAR_SetLowLimit
 802              		.thumb
 803              		.thumb_func
 804              		.type	Cy_SAR_SetLowLimit, %function
 805              	Cy_SAR_SetLowLimit:
 806              	.LFB205:
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetLowLimit
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the low threshold for range detection. The values are interpreted
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * as signed or unsigned according to the channel configuration. Range
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * detection is done on the value stored in the result register. That is, after
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging, shifting sign extension, and left/right alignment.
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param lowLimit
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The low threshold for range detection
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_LOWHIGH_LIMIT
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit)
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 807              		.loc 1 720 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              		@ link register save eliminated.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 65


 812              	.LVL75:
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_RANGE_LIMIT(lowLimit));
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t rangeThresReg;
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Preserve the RANGE_HIGH field value when changing the RANGE_LOW field value */
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg = SAR_RANGE_THRES(base) & ~SAR_RANGE_THRES_RANGE_LOW_Msk;
 813              		.loc 1 726 0
 814 0000 8369     		ldr	r3, [r0, #24]
 815 0002 1B0C     		lsrs	r3, r3, #16
 816 0004 1B04     		lsls	r3, r3, #16
 817              	.LVL76:
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg |= lowLimit  & SAR_RANGE_THRES_RANGE_LOW_Msk;
 818              		.loc 1 727 0
 819 0006 89B2     		uxth	r1, r1
 820              	.LVL77:
 821 0008 0B43     		orrs	r3, r3, r1
 822              	.LVL78:
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_RANGE_THRES(base) = rangeThresReg;
 823              		.loc 1 728 0
 824 000a 8361     		str	r3, [r0, #24]
 825 000c 7047     		bx	lr
 826              		.cfi_endproc
 827              	.LFE205:
 828              		.size	Cy_SAR_SetLowLimit, .-Cy_SAR_SetLowLimit
 829              		.section	.text.Cy_SAR_SetHighLimit,"ax",%progbits
 830              		.align	1
 831              		.global	Cy_SAR_SetHighLimit
 832              		.thumb
 833              		.thumb_func
 834              		.type	Cy_SAR_SetHighLimit, %function
 835              	Cy_SAR_SetHighLimit:
 836              	.LFB206:
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetHighLimit
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the high threshold for range detection. The values are interpreted
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * as signed or unsigned according to the channel configuration. Range
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * detection is done on the value stored in the result register. That is, after
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging, shifting sign extension, and left/right alignment.
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param highLimit
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The high threshold for range detection
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_LOWHIGH_LIMIT
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 66


 753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit)
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 837              		.loc 1 755 0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841              		@ link register save eliminated.
 842              	.LVL79:
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_RANGE_LIMIT(highLimit));
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t rangeThresReg;
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg = SAR_RANGE_THRES(base) & ~SAR_RANGE_THRES_RANGE_HIGH_Msk;
 843              		.loc 1 760 0
 844 0000 8369     		ldr	r3, [r0, #24]
 845 0002 9BB2     		uxth	r3, r3
 846              	.LVL80:
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg |= (highLimit << SAR_RANGE_THRES_RANGE_HIGH_Pos) & SAR_RANGE_THRES_RANGE_HIGH_Msk
 847              		.loc 1 761 0
 848 0004 43EA0141 		orr	r1, r3, r1, lsl #16
 849              	.LVL81:
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_RANGE_THRES(base) = rangeThresReg;
 850              		.loc 1 762 0
 851 0008 8161     		str	r1, [r0, #24]
 852 000a 7047     		bx	lr
 853              		.cfi_endproc
 854              	.LFE206:
 855              		.size	Cy_SAR_SetHighLimit, .-Cy_SAR_SetHighLimit
 856              		.section	.text.Cy_SAR_SetOffset,"ax",%progbits
 857              		.align	1
 858              		.global	Cy_SAR_SetOffset
 859              		.thumb
 860              		.thumb_func
 861              		.type	Cy_SAR_SetOffset, %function
 862              	Cy_SAR_SetOffset:
 863              	.LFB207:
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetOffset
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Override the channel offset stored in the \ref Cy_SAR_offset array
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * for the voltage conversion functions.
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Offset is applied to counts before unit scaling and gain.
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref Cy_SAR_CountsTo_Volts for more about this formula.
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * To change channel 0's offset based on a known V_offset_mV, use:
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Cy_SAR_SetOffset(0uL, -1 * V_offset_mV * (1uL << Resolution) / (2 * V_ref_mV));
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1.
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 67


 783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param offset
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The count value measured when the inputs are shorted or
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * connected to the same input voltage.
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : offset was set successfully
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : channel number is equal to or greater than \ref CY_SAR_MAX_NUM_CHANNELS
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset)
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 864              		.loc 1 793 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 869              	.LVL82:
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result = CY_SAR_BAD_PARAM;
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 870              		.loc 1 798 0
 871 0000 0F28     		cmp	r0, #15
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_offset[chan] = offset;
 872              		.loc 1 800 0
 873 0002 9DBF     		ittte	ls
 874 0004 024B     		ldrls	r3, .L97
 875 0006 23F81010 		strhls	r1, [r3, r0, lsl #1]	@ movhi
 876              	.LVL83:
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 877              		.loc 1 801 0
 878 000a 0020     		movls	r0, #0
 879              	.LVL84:
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 880              		.loc 1 796 0
 881 000c 0148     		ldrhi	r0, .L97+4
 882              	.LVL85:
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 883              		.loc 1 805 0
 884 000e 7047     		bx	lr
 885              	.L98:
 886              		.align	2
 887              	.L97:
 888 0010 00000000 		.word	Cy_SAR_offset
 889 0014 01000600 		.word	393217
 890              		.cfi_endproc
 891              	.LFE207:
 892              		.size	Cy_SAR_SetOffset, .-Cy_SAR_SetOffset
 893              		.section	.text.Cy_SAR_SetGain,"ax",%progbits
 894              		.align	1
 895              		.global	Cy_SAR_SetGain
 896              		.thumb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 68


 897              		.thumb_func
 898              		.type	Cy_SAR_SetGain, %function
 899              	Cy_SAR_SetGain:
 900              	.LFB208:
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetGain
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Override the gain stored in the \ref Cy_SAR_countsPer10Volt array for the voltage conversion func
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The gain is configured at initialization in \ref Cy_SAR_Init
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * based on the SARADC resolution and voltage reference.
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Gain is applied after offset and unit scaling.
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref Cy_SAR_CountsTo_Volts for more about this formula.
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * To change channel 0's gain based on a known V_ref_mV, use:
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Cy_SAR_SetGain(0uL, 10000 * (1uL << Resolution) / (2 * V_ref_mV));
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1.
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcGain
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The gain in counts per 10 volt.
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : gain was set successfully
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : channel number is equal to or greater than \ref CY_SAR_MAX_NUM_CHANNELS
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain)
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 901              		.loc 1 835 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 906              	.LVL86:
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result = CY_SAR_BAD_PARAM;
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 907              		.loc 1 840 0
 908 0000 0F28     		cmp	r0, #15
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_countsPer10Volt[chan] = adcGain;
 909              		.loc 1 842 0
 910 0002 9DBF     		ittte	ls
 911 0004 024B     		ldrls	r3, .L102
 912 0006 43F82010 		strls	r1, [r3, r0, lsl #2]
 913              	.LVL87:
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 914              		.loc 1 843 0
 915 000a 0020     		movls	r0, #0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 69


 916              	.LVL88:
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 917              		.loc 1 838 0
 918 000c 0148     		ldrhi	r0, .L102+4
 919              	.LVL89:
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 920              		.loc 1 847 0
 921 000e 7047     		bx	lr
 922              	.L103:
 923              		.align	2
 924              	.L102:
 925 0010 00000000 		.word	Cy_SAR_countsPer10Volt
 926 0014 01000600 		.word	393217
 927              		.cfi_endproc
 928              	.LFE208:
 929              		.size	Cy_SAR_SetGain, .-Cy_SAR_SetGain
 930              		.section	.text.Cy_SAR_RawCounts2Counts,"ax",%progbits
 931              		.align	1
 932              		.global	Cy_SAR_RawCounts2Counts
 933              		.thumb
 934              		.thumb_func
 935              		.type	Cy_SAR_RawCounts2Counts, %function
 936              	Cy_SAR_RawCounts2Counts:
 937              	.LFB209:
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_RawCounts2Counts
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the channel result to a consistent result after accounting for
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging and subtracting the offset.
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Counts = (RawCounts/AvgDivider - Offset)
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 70


 878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * adcCounts after averaging and offset adjustments.
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, adcCounts is returned unmodified.
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used by \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and \ref Cy_SAR_CountsTo_uVolts. Calling this function directly is usually
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * not needed.
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 938              		.loc 1 890 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              	.LVL90:
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t temp;
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t averageAdcSamplesDiv;
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 943              		.loc 1 896 0
 944 0000 0F29     		cmp	r1, #15
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 945              		.loc 1 890 0
 946 0002 70B5     		push	{r4, r5, r6, lr}
 947              		.cfi_def_cfa_offset 16
 948              		.cfi_offset 4, -16
 949              		.cfi_offset 5, -12
 950              		.cfi_offset 6, -8
 951              		.cfi_offset 14, -4
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 952              		.loc 1 890 0
 953 0004 0E46     		mov	r6, r1
 954 0006 1446     		mov	r4, r2
 955              		.loc 1 896 0
 956 0008 25D8     		bhi	.L105
 957              	.LVL91:
 958              	.LBB28:
 959              	.LBB29:
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_AVG_SHIFT_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_SHIFT_Msk
 960              		.loc 1 900 0
 961 000a 4368     		ldr	r3, [r0, #4]
 962 000c 1906     		lsls	r1, r3, #24
 963              	.LVL92:
 964 000e 1DD4     		bmi	.L106
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* If Average mode != fixed */
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_CHAN_CONFIG_AVG_EN_Msk == (SAR_CHAN_CONFIG(base, chan) & SAR_CHAN_CONFIG_AVG_EN
 965              		.loc 1 903 0
 966 0010 06F12003 		add	r3, r6, #32
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 71


 967 0014 50F82330 		ldr	r3, [r0, r3, lsl #2]
 968 0018 5A05     		lsls	r2, r3, #21
 969              	.LVL93:
 970 001a 17D5     		bpl	.L106
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             { /* If channel uses averaging */
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* Divide by 2^(AVG_CNT + 1) */
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 averageAdcSamplesDiv = (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_CNT_Msk) >> SAR
 971              		.loc 1 907 0
 972 001c 4568     		ldr	r5, [r0, #4]
 973              	.LVL94:
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 974              		.loc 1 908 0
 975 001e C5F30215 		ubfx	r5, r5, #4, #3
 976              	.LVL95:
 977 0022 0123     		movs	r3, #1
 978 0024 0135     		adds	r5, r5, #1
 979 0026 03FA05F5 		lsl	r5, r3, r5
 980              	.LVL96:
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* If averaging mode is ACCUNDUMP (channel will be sampled back to back and average
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 * divider limit is 16 */
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 if (SAR_SAMPLE_CTRL_AVG_MODE_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_MO
 981              		.loc 1 912 0
 982 002a 4368     		ldr	r3, [r0, #4]
 983 002c DB05     		lsls	r3, r3, #23
 984 002e 02D4     		bmi	.L107
 985 0030 102D     		cmp	r5, #16
 986 0032 28BF     		it	cs
 987 0034 1025     		movcs	r5, #16
 988              	.LVL97:
 989              	.L107:
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     if (averageAdcSamplesDiv > 16uL)
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     {
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                         averageAdcSamplesDiv = 16uL;
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     }
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* If unsigned format, prevent sign extension */
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 if (false == Cy_SAR_IsChannelSigned(base, chan))
 990              		.loc 1 921 0
 991 0036 3146     		mov	r1, r6
 992 0038 FFF7FEFF 		bl	Cy_SAR_IsChannelSigned
 993              	.LVL98:
 994 003c 18B9     		cbnz	r0, .L108
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 995              		.loc 1 923 0
 996 003e A4B2     		uxth	r4, r4
 997 0040 B4FBF5F4 		udiv	r4, r4, r5
 998              	.LVL99:
 999 0044 01E0     		b	.L112
 1000              	.LVL100:
 1001              	.L108:
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     adcCounts = (int16_t) temp;
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 72


 926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 else
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     adcCounts /= (int16_t) averageAdcSamplesDiv;
 1002              		.loc 1 928 0
 1003 0046 94FBF5F4 		sdiv	r4, r4, r5
 1004              	.LVL101:
 1005              	.L112:
 1006 004a 24B2     		sxth	r4, r4
 1007              	.LVL102:
 1008              	.L106:
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Subtract ADC offset */
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcCounts -= Cy_SAR_offset[chan];
 1009              		.loc 1 934 0
 1010 004c 034B     		ldr	r3, .L113
 1011 004e 33F81620 		ldrh	r2, [r3, r6, lsl #1]
 1012 0052 A41A     		subs	r4, r4, r2
 1013              	.LVL103:
 1014 0054 24B2     		sxth	r4, r4
 1015              	.LVL104:
 1016              	.L105:
 1017              	.LBE29:
 1018              	.LBE28:
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return adcCounts;
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1019              		.loc 1 938 0
 1020 0056 2046     		mov	r0, r4
 1021 0058 70BD     		pop	{r4, r5, r6, pc}
 1022              	.LVL105:
 1023              	.L114:
 1024 005a 00BF     		.align	2
 1025              	.L113:
 1026 005c 00000000 		.word	Cy_SAR_offset
 1027              		.cfi_endproc
 1028              	.LFE209:
 1029              		.size	Cy_SAR_RawCounts2Counts, .-Cy_SAR_RawCounts2Counts
 1030              		.section	.text.Cy_SAR_CountsTo_Volts,"ax",%progbits
 1031              		.align	1
 1032              		.global	Cy_SAR_CountsTo_Volts
 1033              		.thumb
 1034              		.thumb_func
 1035              		.type	Cy_SAR_CountsTo_Volts, %function
 1036              	Cy_SAR_CountsTo_Volts:
 1037              	.LFB210:
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_Volts
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to Volts as a float32. For example, if the ADC
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 0.534.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 73


 947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in Volts.
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is invalid, 0 is returned.
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_VOLTS
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1038              		.loc 1 987 0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 0
 1041              		@ frame_needed = 0, uses_anonymous_args = 0
 1042              	.LVL106:
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     float32_t result_Volts = 0.0f;
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1043              		.loc 1 992 0
 1044 0000 0F29     		cmp	r1, #15
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1045              		.loc 1 987 0
 1046 0002 10B5     		push	{r4, lr}
 1047              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 74


 1048              		.cfi_offset 4, -8
 1049              		.cfi_offset 14, -4
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1050              		.loc 1 987 0
 1051 0004 0C46     		mov	r4, r1
 1052              		.loc 1 992 0
 1053 0006 16D8     		bhi	.L118
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 1054              		.loc 1 994 0
 1055 0008 4368     		ldr	r3, [r0, #4]
 1056 000a 9B07     		lsls	r3, r3, #30
 1057 000c 13D4     		bmi	.L118
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 1058              		.loc 1 996 0
 1059 000e FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 1060              	.LVL107:
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts = (float32_t)adcCounts * CY_SAR_10V_COUNTS;
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts /= (float32_t)Cy_SAR_countsPer10Volt[chan];
 1061              		.loc 1 999 0
 1062 0012 0B4B     		ldr	r3, .L119
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts /= (float32_t)Cy_SAR_countsPer10Volt[chan];
 1063              		.loc 1 998 0
 1064 0014 07EE900A 		vmov	s15, r0	@ int
 1065              		.loc 1 999 0
 1066 0018 53F82430 		ldr	r3, [r3, r4, lsl #2]
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts /= (float32_t)Cy_SAR_countsPer10Volt[chan];
 1067              		.loc 1 998 0
 1068 001c F8EEE77A 		vcvt.f32.s32	s15, s15
 1069              		.loc 1 999 0
 1070 0020 07EE103A 		vmov	s14, r3	@ int
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts /= (float32_t)Cy_SAR_countsPer10Volt[chan];
 1071              		.loc 1 998 0
 1072 0024 F2EE046A 		vmov.f32	s13, #1.0e+1
 1073 0028 67EEA66A 		vmul.f32	s13, s15, s13
 1074              	.LVL108:
 1075              		.loc 1 999 0
 1076 002c B8EEC77A 		vcvt.f32.s32	s14, s14
 1077 0030 C6EE877A 		vdiv.f32	s15, s13, s14
 1078              	.LVL109:
 1079 0034 01E0     		b	.L116
 1080              	.LVL110:
 1081              	.L118:
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1082              		.loc 1 990 0
 1083 0036 DFED037A 		vldr.32	s15, .L119+4
 1084              	.LVL111:
 1085              	.L116:
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result_Volts;
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1086              		.loc 1 1004 0
 1087 003a 17EE900A 		vmov	r0, s15
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 75


 1088 003e 10BD     		pop	{r4, pc}
 1089              	.LVL112:
 1090              	.L120:
 1091              		.align	2
 1092              	.L119:
 1093 0040 00000000 		.word	Cy_SAR_countsPer10Volt
 1094 0044 00000000 		.word	0
 1095              		.cfi_endproc
 1096              	.LFE210:
 1097              		.size	Cy_SAR_CountsTo_Volts, .-Cy_SAR_CountsTo_Volts
 1098              		.section	.text.Cy_SAR_CountsTo_mVolts,"ax",%progbits
 1099              		.align	1
 1100              		.global	Cy_SAR_CountsTo_mVolts
 1101              		.thumb
 1102              		.thumb_func
 1103              		.type	Cy_SAR_CountsTo_mVolts, %function
 1104              	Cy_SAR_CountsTo_mVolts:
 1105              	.LFB211:
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_mVolts
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to millivolts as an int16. For example, if the ADC
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 534.
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     mV = V * 1000
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 76


1044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in millivolts.
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is invalid, 0 is returned.
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_MVOLTS
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1106              		.loc 1 1054 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 1110              	.LVL113:
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t result_mVolts = 0;
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1111              		.loc 1 1059 0
 1112 0000 0F29     		cmp	r1, #15
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1113              		.loc 1 1054 0
 1114 0002 10B5     		push	{r4, lr}
 1115              		.cfi_def_cfa_offset 8
 1116              		.cfi_offset 4, -8
 1117              		.cfi_offset 14, -4
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1118              		.loc 1 1054 0
 1119 0004 0C46     		mov	r4, r1
 1120              		.loc 1 1059 0
 1121 0006 18D8     		bhi	.L126
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 1122              		.loc 1 1061 0
 1123 0008 4368     		ldr	r3, [r0, #4]
 1124 000a 9B07     		lsls	r3, r3, #30
 1125 000c 15D4     		bmi	.L126
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 1126              		.loc 1 1063 0
 1127 000e FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 1128              	.LVL114:
 1129 0012 0B4A     		ldr	r2, .L127
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_mVolts = ((int32_t)adcCounts * CY_SAR_10MV_COUNTS);
 1130              		.loc 1 1065 0
 1131 0014 42F21073 		movw	r3, #10000
 1132 0018 10FB03F3 		smulbb	r3, r0, r3
 1133              	.LVL115:
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (adcCounts > 0)
 1134              		.loc 1 1066 0
 1135 001c 0028     		cmp	r0, #0
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 result_mVolts += Cy_SAR_countsPer10Volt[chan] / 2;
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 77


 1136              		.loc 1 1068 0
 1137 001e 52F82410 		ldr	r1, [r2, r4, lsl #2]
 1138 0022 4FF00200 		mov	r0, #2
 1139              	.LVL116:
 1140 0026 91FBF0F0 		sdiv	r0, r1, r0
 1141 002a CCBF     		ite	gt
 1142 002c C018     		addgt	r0, r0, r3
 1143              	.LVL117:
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             else
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 result_mVolts -= Cy_SAR_countsPer10Volt[chan] / 2;
 1144              		.loc 1 1072 0
 1145 002e 181A     		suble	r0, r3, r0
 1146              	.LVL118:
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_mVolts /= Cy_SAR_countsPer10Volt[chan];
 1147              		.loc 1 1074 0
 1148 0030 52F82430 		ldr	r3, [r2, r4, lsl #2]
 1149 0034 90FBF3F0 		sdiv	r0, r0, r3
 1150              	.LVL119:
 1151 0038 00E0     		b	.L122
 1152              	.LVL120:
 1153              	.L126:
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1154              		.loc 1 1057 0
 1155 003a 0020     		movs	r0, #0
 1156              	.LVL121:
 1157              	.L122:
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int16_t) result_mVolts;
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1158              		.loc 1 1079 0
 1159 003c 00B2     		sxth	r0, r0
 1160              	.LVL122:
 1161 003e 10BD     		pop	{r4, pc}
 1162              	.LVL123:
 1163              	.L128:
 1164              		.align	2
 1165              	.L127:
 1166 0040 00000000 		.word	Cy_SAR_countsPer10Volt
 1167              		.cfi_endproc
 1168              	.LFE211:
 1169              		.size	Cy_SAR_CountsTo_mVolts, .-Cy_SAR_CountsTo_mVolts
 1170              		.global	__aeabi_ldivmod
 1171              		.section	.text.Cy_SAR_CountsTo_uVolts,"ax",%progbits
 1172              		.align	1
 1173              		.global	Cy_SAR_CountsTo_uVolts
 1174              		.thumb
 1175              		.thumb_func
 1176              		.type	Cy_SAR_CountsTo_uVolts, %function
 1177              	Cy_SAR_CountsTo_uVolts:
 1178              	.LFB212:
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 78


1082:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_uVolts
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to microvolts as a int32. For example, if the ADC
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 534000.
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     uV = V * 1000000
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in microvolts.
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is valid, 0 is returned.
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_UVOLTS
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1179              		.loc 1 1129 0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              	.LVL124:
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int64_t result_uVolts = 0;
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 79


1134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1184              		.loc 1 1134 0
 1185 0000 0F29     		cmp	r1, #15
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1186              		.loc 1 1129 0
 1187 0002 38B5     		push	{r3, r4, r5, lr}
 1188              		.cfi_def_cfa_offset 16
 1189              		.cfi_offset 3, -16
 1190              		.cfi_offset 4, -12
 1191              		.cfi_offset 5, -8
 1192              		.cfi_offset 14, -4
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1193              		.loc 1 1129 0
 1194 0004 0C46     		mov	r4, r1
 1195              		.loc 1 1134 0
 1196 0006 12D8     		bhi	.L132
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 1197              		.loc 1 1136 0
 1198 0008 4368     		ldr	r3, [r0, #4]
 1199 000a 9B07     		lsls	r3, r3, #30
 1200 000c 0FD4     		bmi	.L132
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 1201              		.loc 1 1138 0
 1202 000e FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 1203              	.LVL125:
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_uVolts = (int64_t)adcCounts * CY_SAR_10UV_COUNTS;
 1204              		.loc 1 1139 0
 1205 0012 084D     		ldr	r5, .L133
 1206 0014 02B2     		sxth	r2, r0
 1207 0016 D317     		asrs	r3, r2, #31
 1208 0018 A2FB0501 		umull	r0, r1, r2, r5
 1209              	.LVL126:
 1210 001c 05FB0311 		mla	r1, r5, r3, r1
 1211              	.LVL127:
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_uVolts /= Cy_SAR_countsPer10Volt[chan];
 1212              		.loc 1 1140 0
 1213 0020 054B     		ldr	r3, .L133+4
 1214 0022 53F82420 		ldr	r2, [r3, r4, lsl #2]
 1215              	.LVL128:
 1216 0026 D317     		asrs	r3, r2, #31
 1217 0028 FFF7FEFF 		bl	__aeabi_ldivmod
 1218              	.LVL129:
 1219 002c 38BD     		pop	{r3, r4, r5, pc}
 1220              	.LVL130:
 1221              	.L132:
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1222              		.loc 1 1132 0
 1223 002e 0020     		movs	r0, #0
 1224              	.LVL131:
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int32_t)result_uVolts;
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1225              		.loc 1 1145 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 80


 1226 0030 38BD     		pop	{r3, r4, r5, pc}
 1227              	.L134:
 1228 0032 00BF     		.align	2
 1229              	.L133:
 1230 0034 80969800 		.word	10000000
 1231 0038 00000000 		.word	Cy_SAR_countsPer10Volt
 1232              		.cfi_endproc
 1233              	.LFE212:
 1234              		.size	Cy_SAR_CountsTo_uVolts, .-Cy_SAR_CountsTo_uVolts
 1235              		.section	.text.Cy_SAR_SetAnalogSwitch,"ax",%progbits
 1236              		.align	1
 1237              		.global	Cy_SAR_SetAnalogSwitch
 1238              		.thumb
 1239              		.thumb_func
 1240              		.type	Cy_SAR_SetAnalogSwitch, %function
 1241              	Cy_SAR_SetAnalogSwitch:
 1242              	.LFB213:
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetAnalogSwitch
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Provide firmware control of the SARMUX switches for firmware sequencing.
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Each call to this function can open or close a set of switches.
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Previously configured switches are untouched.
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If the SARSEQ is enabled, there is no need to use this function.
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchSelect
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The switch register that contains the desired switches. Select a value
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * from \ref cy_en_sar_switch_register_sel_t.
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchMask
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The mask of the switches to either open or close.
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Select one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and "OR" them together.
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param state
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Open or close the desired swithces. Select a value from \ref cy_en_sar_switch_state_t.
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_ANALOG_SWITCH
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1243              		.loc 1 1181 0
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 0
 1246              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 81


 1247              		@ link register save eliminated.
 1248              	.LVL132:
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSELECT(switchSelect));
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_SWITCHMASK(switchMask));
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSTATE(state));
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     __IOM uint32_t *switchReg;
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     __IOM uint32_t *switchClearReg;
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switchReg = &SAR_MUX_SWITCH0(base);
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switchClearReg = &SAR_MUX_SWITCH_CLEAR0(base);
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(state)
 1249              		.loc 1 1192 0
 1250 0000 012B     		cmp	r3, #1
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_CLOSE:
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         *switchReg |= switchMask;
 1251              		.loc 1 1195 0
 1252 0002 09BF     		itett	eq
 1253 0004 D0F80033 		ldreq	r3, [r0, #768]
 1254              	.LVL133:
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_OPEN:
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Unlike the close case, we are not OR'ing the register. Set 1 to clear.*/
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         *switchClearReg = switchMask;
 1255              		.loc 1 1201 0
 1256 0008 C0F80423 		strne	r2, [r0, #772]
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 1257              		.loc 1 1195 0
 1258 000c 1A43     		orreq	r2, r2, r3
 1259              	.LVL134:
 1260 000e C0F80023 		streq	r2, [r0, #768]
 1261 0012 7047     		bx	lr
 1262              		.cfi_endproc
 1263              	.LFE213:
 1264              		.size	Cy_SAR_SetAnalogSwitch, .-Cy_SAR_SetAnalogSwitch
 1265              		.section	.text.Cy_SAR_GetAnalogSwitch,"ax",%progbits
 1266              		.align	1
 1267              		.global	Cy_SAR_GetAnalogSwitch
 1268              		.thumb
 1269              		.thumb_func
 1270              		.type	Cy_SAR_GetAnalogSwitch, %function
 1271              	Cy_SAR_GetAnalogSwitch:
 1272              	.LFB214:
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetAnalogSwitch
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the state (open or close) of SARMUX switches.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 82


1212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchSelect
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The switch register that contains the desired switches. Select a value
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * from \ref cy_en_sar_switch_register_sel_t.
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Each bit corresponds to a single switch, where a bit value of 0 is open
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and 1 is closed.
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Compare this value to the switch masks in \ref cy_en_sar_mux_switch_fw_ctrl_t.
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1273              		.loc 1 1227 0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 0
 1276              		@ frame_needed = 0, uses_anonymous_args = 0
 1277              		@ link register save eliminated.
 1278              	.LVL135:
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSELECT(switchSelect));
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return SAR_MUX_SWITCH0(base);
 1279              		.loc 1 1230 0
 1280 0000 D0F80003 		ldr	r0, [r0, #768]
 1281              	.LVL136:
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1282              		.loc 1 1231 0
 1283 0004 7047     		bx	lr
 1284              		.cfi_endproc
 1285              	.LFE214:
 1286              		.size	Cy_SAR_GetAnalogSwitch, .-Cy_SAR_GetAnalogSwitch
 1287              		.section	.text.Cy_SAR_SetSwitchSarSeqCtrl,"ax",%progbits
 1288              		.align	1
 1289              		.global	Cy_SAR_SetSwitchSarSeqCtrl
 1290              		.thumb
 1291              		.thumb_func
 1292              		.type	Cy_SAR_SetSwitchSarSeqCtrl, %function
 1293              	Cy_SAR_SetSwitchSarSeqCtrl:
 1294              	.LFB215:
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetSwitchSarSeqCtrl
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Enable or disable SARSEQ control of one or more switches.
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Previously configured switches are untouched.
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchMask
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The mask of the switches.
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Select one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 83


1247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and "OR" them together.
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param ctrl
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Enable or disable SARSEQ control. Select a value from \ref cy_en_sar_switch_sar_seq_ctrl_t.
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_SWITCH_SAR_SEQ_CTRL
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1295              		.loc 1 1260 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 0
 1298              		@ frame_needed = 0, uses_anonymous_args = 0
 1299              		@ link register save eliminated.
 1300              	.LVL137:
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_SQMASK(switchMask));
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SQCTRL(ctrl));
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(ctrl)
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_SEQ_CTRL_ENABLE:
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_MUX_SWITCH_SQ_CTRL(base) |= switchMask;
 1301              		.loc 1 1267 0
 1302 0000 D0F84433 		ldr	r3, [r0, #836]
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 1303              		.loc 1 1264 0
 1304 0004 012A     		cmp	r2, #1
 1305              		.loc 1 1267 0
 1306 0006 0CBF     		ite	eq
 1307 0008 1943     		orreq	r1, r1, r3
 1308              	.LVL138:
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_SEQ_CTRL_DISABLE:
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_MUX_SWITCH_SQ_CTRL(base) &= ~switchMask;
 1309              		.loc 1 1271 0
 1310 000a 23EA0101 		bicne	r1, r3, r1
 1311 000e C0F84413 		str	r1, [r0, #836]
 1312 0012 7047     		bx	lr
 1313              		.cfi_endproc
 1314              	.LFE215:
 1315              		.size	Cy_SAR_SetSwitchSarSeqCtrl, .-Cy_SAR_SetSwitchSarSeqCtrl
 1316              		.section	.text.Cy_SAR_DeepSleepCallback,"ax",%progbits
 1317              		.align	1
 1318              		.global	Cy_SAR_DeepSleepCallback
 1319              		.thumb
 1320              		.thumb_func
 1321              		.type	Cy_SAR_DeepSleepCallback, %function
 1322              	Cy_SAR_DeepSleepCallback:
 1323              	.LFB216:
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 84


1274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeepSleepCallback
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Callback to prepare the SAR before entering Deep Sleep
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and to re-enable the SAR after exiting Deep Sleep.
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param callbackParams
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure of type \ref cy_stc_syspm_callback_params_t
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param mode
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Callback mode, see \ref cy_en_syspm_callback_mode_t
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref cy_en_syspm_status_t
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_DEEPSLEEP_CALLBACK
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1324              		.loc 1 1299 0
 1325              		.cfi_startproc
 1326              		@ args = 0, pretend = 0, frame = 0
 1327              		@ frame_needed = 0, uses_anonymous_args = 0
 1328              	.LVL139:
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_syspm_status_t returnValue = CY_SYSPM_SUCCESS;
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (CY_SYSPM_BEFORE_TRANSITION == mode)
 1329              		.loc 1 1302 0
 1330 0000 0429     		cmp	r1, #4
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_syspm_status_t returnValue = CY_SYSPM_SUCCESS;
 1331              		.loc 1 1299 0
 1332 0002 08B5     		push	{r3, lr}
 1333              		.cfi_def_cfa_offset 8
 1334              		.cfi_offset 3, -8
 1335              		.cfi_offset 14, -4
 1336              		.loc 1 1302 0
 1337 0004 03D1     		bne	.L148
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Actions that should be done before entering the Deep Sleep mode */
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_DeepSleep((SAR_V1_Type *)callbackParams->base);
 1338              		.loc 1 1304 0
 1339 0006 0068     		ldr	r0, [r0]
 1340              	.LVL140:
 1341 0008 FFF7FEFF 		bl	Cy_SAR_DeepSleep
 1342              	.LVL141:
 1343 000c 04E0     		b	.L149
 1344              	.LVL142:
 1345              	.L148:
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else if (CY_SYSPM_AFTER_TRANSITION == mode)
 1346              		.loc 1 1306 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 85


 1347 000e 0829     		cmp	r1, #8
 1348 0010 02D1     		bne	.L149
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Actions that should be done after exiting the Deep Sleep mode */
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_Wakeup((SAR_V1_Type *)callbackParams->base);
 1349              		.loc 1 1308 0
 1350 0012 0068     		ldr	r0, [r0]
 1351              	.LVL143:
 1352 0014 FFF7FEFF 		bl	Cy_SAR_Wakeup
 1353              	.LVL144:
 1354              	.L149:
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Does nothing in other modes */
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return returnValue;
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1355              		.loc 1 1315 0
 1356 0018 0020     		movs	r0, #0
 1357 001a 08BD     		pop	{r3, pc}
 1358              		.cfi_endproc
 1359              	.LFE216:
 1360              		.size	Cy_SAR_DeepSleepCallback, .-Cy_SAR_DeepSleepCallback
 1361              		.comm	Cy_SAR_countsPer10Volt,64,4
 1362              		.comm	Cy_SAR_offset,32,2
 1363              		.bss
 1364              		.align	2
 1365              		.set	.LANCHOR0,. + 0
 1366              		.type	enabledBeforeSleep, %object
 1367              		.size	enabledBeforeSleep, 8
 1368              	enabledBeforeSleep:
 1369 0000 00000000 		.space	8
 1369      00000000 
 1370              		.text
 1371              	.Letext0:
 1372              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1373              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1374              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 1375              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 1376              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 1377              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 1378              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syspm/cy_syspm.h"
 1379              		.file 10 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 1380              		.section	.debug_info,"",%progbits
 1381              	.Ldebug_info0:
 1382 0000 D2160000 		.4byte	0x16d2
 1383 0004 0400     		.2byte	0x4
 1384 0006 00000000 		.4byte	.Ldebug_abbrev0
 1385 000a 04       		.byte	0x4
 1386 000b 01       		.uleb128 0x1
 1387 000c 650D0000 		.4byte	.LASF304
 1388 0010 0C       		.byte	0xc
 1389 0011 DB0E0000 		.4byte	.LASF305
 1390 0015 51020000 		.4byte	.LASF306
 1391 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1392 001d 00000000 		.4byte	0
 1393 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 86


 1394 0025 02       		.uleb128 0x2
 1395 0026 01       		.byte	0x1
 1396 0027 06       		.byte	0x6
 1397 0028 F7110000 		.4byte	.LASF0
 1398 002c 03       		.uleb128 0x3
 1399 002d D10E0000 		.4byte	.LASF2
 1400 0031 03       		.byte	0x3
 1401 0032 1D       		.byte	0x1d
 1402 0033 37000000 		.4byte	0x37
 1403 0037 02       		.uleb128 0x2
 1404 0038 01       		.byte	0x1
 1405 0039 08       		.byte	0x8
 1406 003a 68100000 		.4byte	.LASF1
 1407 003e 03       		.uleb128 0x3
 1408 003f DD090000 		.4byte	.LASF3
 1409 0043 03       		.byte	0x3
 1410 0044 29       		.byte	0x29
 1411 0045 49000000 		.4byte	0x49
 1412 0049 02       		.uleb128 0x2
 1413 004a 02       		.byte	0x2
 1414 004b 05       		.byte	0x5
 1415 004c 39020000 		.4byte	.LASF4
 1416 0050 03       		.uleb128 0x3
 1417 0051 66050000 		.4byte	.LASF5
 1418 0055 03       		.byte	0x3
 1419 0056 2B       		.byte	0x2b
 1420 0057 5B000000 		.4byte	0x5b
 1421 005b 02       		.uleb128 0x2
 1422 005c 02       		.byte	0x2
 1423 005d 07       		.byte	0x7
 1424 005e 410B0000 		.4byte	.LASF6
 1425 0062 03       		.uleb128 0x3
 1426 0063 9D010000 		.4byte	.LASF7
 1427 0067 03       		.byte	0x3
 1428 0068 3F       		.byte	0x3f
 1429 0069 6D000000 		.4byte	0x6d
 1430 006d 02       		.uleb128 0x2
 1431 006e 04       		.byte	0x4
 1432 006f 05       		.byte	0x5
 1433 0070 B30C0000 		.4byte	.LASF8
 1434 0074 03       		.uleb128 0x3
 1435 0075 8A100000 		.4byte	.LASF9
 1436 0079 03       		.byte	0x3
 1437 007a 41       		.byte	0x41
 1438 007b 7F000000 		.4byte	0x7f
 1439 007f 02       		.uleb128 0x2
 1440 0080 04       		.byte	0x4
 1441 0081 07       		.byte	0x7
 1442 0082 9B0F0000 		.4byte	.LASF10
 1443 0086 03       		.uleb128 0x3
 1444 0087 2D0B0000 		.4byte	.LASF11
 1445 008b 03       		.byte	0x3
 1446 008c 59       		.byte	0x59
 1447 008d 91000000 		.4byte	0x91
 1448 0091 02       		.uleb128 0x2
 1449 0092 08       		.byte	0x8
 1450 0093 05       		.byte	0x5
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 87


 1451 0094 49090000 		.4byte	.LASF12
 1452 0098 02       		.uleb128 0x2
 1453 0099 08       		.byte	0x8
 1454 009a 07       		.byte	0x7
 1455 009b DD040000 		.4byte	.LASF13
 1456 009f 04       		.uleb128 0x4
 1457 00a0 04       		.byte	0x4
 1458 00a1 05       		.byte	0x5
 1459 00a2 696E7400 		.ascii	"int\000"
 1460 00a6 02       		.uleb128 0x2
 1461 00a7 04       		.byte	0x4
 1462 00a8 07       		.byte	0x7
 1463 00a9 2C010000 		.4byte	.LASF14
 1464 00ad 03       		.uleb128 0x3
 1465 00ae 75080000 		.4byte	.LASF15
 1466 00b2 04       		.byte	0x4
 1467 00b3 18       		.byte	0x18
 1468 00b4 2C000000 		.4byte	0x2c
 1469 00b8 03       		.uleb128 0x3
 1470 00b9 BB040000 		.4byte	.LASF16
 1471 00bd 04       		.byte	0x4
 1472 00be 20       		.byte	0x20
 1473 00bf 3E000000 		.4byte	0x3e
 1474 00c3 03       		.uleb128 0x3
 1475 00c4 600B0000 		.4byte	.LASF17
 1476 00c8 04       		.byte	0x4
 1477 00c9 24       		.byte	0x24
 1478 00ca 50000000 		.4byte	0x50
 1479 00ce 03       		.uleb128 0x3
 1480 00cf CC0F0000 		.4byte	.LASF18
 1481 00d3 04       		.byte	0x4
 1482 00d4 2C       		.byte	0x2c
 1483 00d5 62000000 		.4byte	0x62
 1484 00d9 03       		.uleb128 0x3
 1485 00da 63040000 		.4byte	.LASF19
 1486 00de 04       		.byte	0x4
 1487 00df 30       		.byte	0x30
 1488 00e0 74000000 		.4byte	0x74
 1489 00e4 03       		.uleb128 0x3
 1490 00e5 2F060000 		.4byte	.LASF20
 1491 00e9 04       		.byte	0x4
 1492 00ea 38       		.byte	0x38
 1493 00eb 86000000 		.4byte	0x86
 1494 00ef 02       		.uleb128 0x2
 1495 00f0 08       		.byte	0x8
 1496 00f1 04       		.byte	0x4
 1497 00f2 540B0000 		.4byte	.LASF21
 1498 00f6 02       		.uleb128 0x2
 1499 00f7 04       		.byte	0x4
 1500 00f8 07       		.byte	0x7
 1501 00f9 E10B0000 		.4byte	.LASF22
 1502 00fd 05       		.uleb128 0x5
 1503 00fe D9000000 		.4byte	0xd9
 1504 0102 06       		.uleb128 0x6
 1505 0103 FD000000 		.4byte	0xfd
 1506 0107 07       		.uleb128 0x7
 1507 0108 02010000 		.4byte	0x102
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 88


 1508 010c 17010000 		.4byte	0x117
 1509 0110 08       		.uleb128 0x8
 1510 0111 F6000000 		.4byte	0xf6
 1511 0115 01       		.byte	0x1
 1512 0116 00       		.byte	0
 1513 0117 07       		.uleb128 0x7
 1514 0118 FD000000 		.4byte	0xfd
 1515 011c 27010000 		.4byte	0x127
 1516 0120 08       		.uleb128 0x8
 1517 0121 F6000000 		.4byte	0xf6
 1518 0125 0F       		.byte	0xf
 1519 0126 00       		.byte	0
 1520 0127 07       		.uleb128 0x7
 1521 0128 02010000 		.4byte	0x102
 1522 012c 37010000 		.4byte	0x137
 1523 0130 08       		.uleb128 0x8
 1524 0131 F6000000 		.4byte	0xf6
 1525 0135 0F       		.byte	0xf
 1526 0136 00       		.byte	0
 1527 0137 07       		.uleb128 0x7
 1528 0138 02010000 		.4byte	0x102
 1529 013c 47010000 		.4byte	0x147
 1530 0140 08       		.uleb128 0x8
 1531 0141 F6000000 		.4byte	0xf6
 1532 0145 02       		.byte	0x2
 1533 0146 00       		.byte	0
 1534 0147 07       		.uleb128 0x7
 1535 0148 02010000 		.4byte	0x102
 1536 014c 57010000 		.4byte	0x157
 1537 0150 08       		.uleb128 0x8
 1538 0151 F6000000 		.4byte	0xf6
 1539 0155 0E       		.byte	0xe
 1540 0156 00       		.byte	0
 1541 0157 09       		.uleb128 0x9
 1542 0158 080F     		.2byte	0xf08
 1543 015a 05       		.byte	0x5
 1544 015b 21       		.byte	0x21
 1545 015c DF030000 		.4byte	0x3df
 1546 0160 0A       		.uleb128 0xa
 1547 0161 C1130000 		.4byte	.LASF23
 1548 0165 05       		.byte	0x5
 1549 0166 22       		.byte	0x22
 1550 0167 FD000000 		.4byte	0xfd
 1551 016b 00       		.byte	0
 1552 016c 0A       		.uleb128 0xa
 1553 016d 4F0A0000 		.4byte	.LASF24
 1554 0171 05       		.byte	0x5
 1555 0172 23       		.byte	0x23
 1556 0173 FD000000 		.4byte	0xfd
 1557 0177 04       		.byte	0x4
 1558 0178 0A       		.uleb128 0xa
 1559 0179 2B000000 		.4byte	.LASF25
 1560 017d 05       		.byte	0x5
 1561 017e 24       		.byte	0x24
 1562 017f E4030000 		.4byte	0x3e4
 1563 0183 08       		.byte	0x8
 1564 0184 0A       		.uleb128 0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 89


 1565 0185 B9020000 		.4byte	.LASF26
 1566 0189 05       		.byte	0x5
 1567 018a 25       		.byte	0x25
 1568 018b FD000000 		.4byte	0xfd
 1569 018f 10       		.byte	0x10
 1570 0190 0A       		.uleb128 0xa
 1571 0191 4D050000 		.4byte	.LASF27
 1572 0195 05       		.byte	0x5
 1573 0196 26       		.byte	0x26
 1574 0197 FD000000 		.4byte	0xfd
 1575 019b 14       		.byte	0x14
 1576 019c 0A       		.uleb128 0xa
 1577 019d 4E0D0000 		.4byte	.LASF28
 1578 01a1 05       		.byte	0x5
 1579 01a2 27       		.byte	0x27
 1580 01a3 FD000000 		.4byte	0xfd
 1581 01a7 18       		.byte	0x18
 1582 01a8 0A       		.uleb128 0xa
 1583 01a9 73060000 		.4byte	.LASF29
 1584 01ad 05       		.byte	0x5
 1585 01ae 28       		.byte	0x28
 1586 01af FD000000 		.4byte	0xfd
 1587 01b3 1C       		.byte	0x1c
 1588 01b4 0A       		.uleb128 0xa
 1589 01b5 BF000000 		.4byte	.LASF30
 1590 01b9 05       		.byte	0x5
 1591 01ba 29       		.byte	0x29
 1592 01bb FD000000 		.4byte	0xfd
 1593 01bf 20       		.byte	0x20
 1594 01c0 0A       		.uleb128 0xa
 1595 01c1 E40A0000 		.4byte	.LASF31
 1596 01c5 05       		.byte	0x5
 1597 01c6 2A       		.byte	0x2a
 1598 01c7 FD000000 		.4byte	0xfd
 1599 01cb 24       		.byte	0x24
 1600 01cc 0A       		.uleb128 0xa
 1601 01cd B6120000 		.4byte	.LASF32
 1602 01d1 05       		.byte	0x5
 1603 01d2 2B       		.byte	0x2b
 1604 01d3 FE030000 		.4byte	0x3fe
 1605 01d7 28       		.byte	0x28
 1606 01d8 0A       		.uleb128 0xa
 1607 01d9 31100000 		.4byte	.LASF33
 1608 01dd 05       		.byte	0x5
 1609 01de 2C       		.byte	0x2c
 1610 01df 03040000 		.4byte	0x403
 1611 01e3 80       		.byte	0x80
 1612 01e4 0A       		.uleb128 0xa
 1613 01e5 340C0000 		.4byte	.LASF34
 1614 01e9 05       		.byte	0x5
 1615 01ea 2D       		.byte	0x2d
 1616 01eb 0D040000 		.4byte	0x40d
 1617 01ef C0       		.byte	0xc0
 1618 01f0 0B       		.uleb128 0xb
 1619 01f1 670E0000 		.4byte	.LASF35
 1620 01f5 05       		.byte	0x5
 1621 01f6 2E       		.byte	0x2e
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 90


 1622 01f7 17040000 		.4byte	0x417
 1623 01fb 0001     		.2byte	0x100
 1624 01fd 0B       		.uleb128 0xb
 1625 01fe 3E0C0000 		.4byte	.LASF36
 1626 0202 05       		.byte	0x5
 1627 0203 2F       		.byte	0x2f
 1628 0204 21040000 		.4byte	0x421
 1629 0208 4001     		.2byte	0x140
 1630 020a 0B       		.uleb128 0xb
 1631 020b 050A0000 		.4byte	.LASF37
 1632 020f 05       		.byte	0x5
 1633 0210 30       		.byte	0x30
 1634 0211 2B040000 		.4byte	0x42b
 1635 0215 8001     		.2byte	0x180
 1636 0217 0B       		.uleb128 0xb
 1637 0218 480C0000 		.4byte	.LASF38
 1638 021c 05       		.byte	0x5
 1639 021d 31       		.byte	0x31
 1640 021e 35040000 		.4byte	0x435
 1641 0222 C001     		.2byte	0x1c0
 1642 0224 0B       		.uleb128 0xb
 1643 0225 46000000 		.4byte	.LASF39
 1644 0229 05       		.byte	0x5
 1645 022a 32       		.byte	0x32
 1646 022b 02010000 		.4byte	0x102
 1647 022f 0002     		.2byte	0x200
 1648 0231 0B       		.uleb128 0xb
 1649 0232 E00F0000 		.4byte	.LASF40
 1650 0236 05       		.byte	0x5
 1651 0237 33       		.byte	0x33
 1652 0238 02010000 		.4byte	0x102
 1653 023c 0402     		.2byte	0x204
 1654 023e 0B       		.uleb128 0xb
 1655 023f A7010000 		.4byte	.LASF41
 1656 0243 05       		.byte	0x5
 1657 0244 34       		.byte	0x34
 1658 0245 02010000 		.4byte	0x102
 1659 0249 0802     		.2byte	0x208
 1660 024b 0B       		.uleb128 0xb
 1661 024c 1F080000 		.4byte	.LASF42
 1662 0250 05       		.byte	0x5
 1663 0251 35       		.byte	0x35
 1664 0252 02010000 		.4byte	0x102
 1665 0256 0C02     		.2byte	0x20c
 1666 0258 0B       		.uleb128 0xb
 1667 0259 80040000 		.4byte	.LASF43
 1668 025d 05       		.byte	0x5
 1669 025e 36       		.byte	0x36
 1670 025f FD000000 		.4byte	0xfd
 1671 0263 1002     		.2byte	0x210
 1672 0265 0B       		.uleb128 0xb
 1673 0266 0E030000 		.4byte	.LASF44
 1674 026a 05       		.byte	0x5
 1675 026b 37       		.byte	0x37
 1676 026c FD000000 		.4byte	0xfd
 1677 0270 1402     		.2byte	0x214
 1678 0272 0B       		.uleb128 0xb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 91


 1679 0273 450A0000 		.4byte	.LASF45
 1680 0277 05       		.byte	0x5
 1681 0278 38       		.byte	0x38
 1682 0279 FD000000 		.4byte	0xfd
 1683 027d 1802     		.2byte	0x218
 1684 027f 0B       		.uleb128 0xb
 1685 0280 510F0000 		.4byte	.LASF46
 1686 0284 05       		.byte	0x5
 1687 0285 39       		.byte	0x39
 1688 0286 02010000 		.4byte	0x102
 1689 028a 1C02     		.2byte	0x21c
 1690 028c 0B       		.uleb128 0xb
 1691 028d 43020000 		.4byte	.LASF47
 1692 0291 05       		.byte	0x5
 1693 0292 3A       		.byte	0x3a
 1694 0293 FD000000 		.4byte	0xfd
 1695 0297 2002     		.2byte	0x220
 1696 0299 0B       		.uleb128 0xb
 1697 029a 94070000 		.4byte	.LASF48
 1698 029e 05       		.byte	0x5
 1699 029f 3B       		.byte	0x3b
 1700 02a0 FD000000 		.4byte	0xfd
 1701 02a4 2402     		.2byte	0x224
 1702 02a6 0B       		.uleb128 0xb
 1703 02a7 E7100000 		.4byte	.LASF49
 1704 02ab 05       		.byte	0x5
 1705 02ac 3C       		.byte	0x3c
 1706 02ad FD000000 		.4byte	0xfd
 1707 02b1 2802     		.2byte	0x228
 1708 02b3 0B       		.uleb128 0xb
 1709 02b4 6D070000 		.4byte	.LASF50
 1710 02b8 05       		.byte	0x5
 1711 02b9 3D       		.byte	0x3d
 1712 02ba 02010000 		.4byte	0x102
 1713 02be 2C02     		.2byte	0x22c
 1714 02c0 0B       		.uleb128 0xb
 1715 02c1 2E0A0000 		.4byte	.LASF51
 1716 02c5 05       		.byte	0x5
 1717 02c6 3E       		.byte	0x3e
 1718 02c7 FD000000 		.4byte	0xfd
 1719 02cb 3002     		.2byte	0x230
 1720 02cd 0B       		.uleb128 0xb
 1721 02ce 12090000 		.4byte	.LASF52
 1722 02d2 05       		.byte	0x5
 1723 02d3 3F       		.byte	0x3f
 1724 02d4 FD000000 		.4byte	0xfd
 1725 02d8 3402     		.2byte	0x234
 1726 02da 0B       		.uleb128 0xb
 1727 02db 49060000 		.4byte	.LASF53
 1728 02df 05       		.byte	0x5
 1729 02e0 40       		.byte	0x40
 1730 02e1 FD000000 		.4byte	0xfd
 1731 02e5 3802     		.2byte	0x238
 1732 02e7 0B       		.uleb128 0xb
 1733 02e8 34000000 		.4byte	.LASF54
 1734 02ec 05       		.byte	0x5
 1735 02ed 41       		.byte	0x41
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 92


 1736 02ee 02010000 		.4byte	0x102
 1737 02f2 3C02     		.2byte	0x23c
 1738 02f4 0B       		.uleb128 0xb
 1739 02f5 39010000 		.4byte	.LASF55
 1740 02f9 05       		.byte	0x5
 1741 02fa 42       		.byte	0x42
 1742 02fb 02010000 		.4byte	0x102
 1743 02ff 4002     		.2byte	0x240
 1744 0301 0B       		.uleb128 0xb
 1745 0302 520C0000 		.4byte	.LASF56
 1746 0306 05       		.byte	0x5
 1747 0307 43       		.byte	0x43
 1748 0308 3F040000 		.4byte	0x43f
 1749 030c 4402     		.2byte	0x244
 1750 030e 0B       		.uleb128 0xb
 1751 030f 34080000 		.4byte	.LASF57
 1752 0313 05       		.byte	0x5
 1753 0314 44       		.byte	0x44
 1754 0315 FD000000 		.4byte	0xfd
 1755 0319 8002     		.2byte	0x280
 1756 031b 0B       		.uleb128 0xb
 1757 031c 5C0C0000 		.4byte	.LASF58
 1758 0320 05       		.byte	0x5
 1759 0321 45       		.byte	0x45
 1760 0322 49040000 		.4byte	0x449
 1761 0326 8402     		.2byte	0x284
 1762 0328 0B       		.uleb128 0xb
 1763 0329 DE020000 		.4byte	.LASF59
 1764 032d 05       		.byte	0x5
 1765 032e 46       		.byte	0x46
 1766 032f 02010000 		.4byte	0x102
 1767 0333 9002     		.2byte	0x290
 1768 0335 0B       		.uleb128 0xb
 1769 0336 660C0000 		.4byte	.LASF60
 1770 033a 05       		.byte	0x5
 1771 033b 47       		.byte	0x47
 1772 033c 53040000 		.4byte	0x453
 1773 0340 9402     		.2byte	0x294
 1774 0342 0B       		.uleb128 0xb
 1775 0343 CF120000 		.4byte	.LASF61
 1776 0347 05       		.byte	0x5
 1777 0348 48       		.byte	0x48
 1778 0349 02010000 		.4byte	0x102
 1779 034d A002     		.2byte	0x2a0
 1780 034f 0B       		.uleb128 0xb
 1781 0350 5B080000 		.4byte	.LASF62
 1782 0354 05       		.byte	0x5
 1783 0355 49       		.byte	0x49
 1784 0356 02010000 		.4byte	0x102
 1785 035a A402     		.2byte	0x2a4
 1786 035c 0B       		.uleb128 0xb
 1787 035d 700C0000 		.4byte	.LASF63
 1788 0361 05       		.byte	0x5
 1789 0362 4A       		.byte	0x4a
 1790 0363 5D040000 		.4byte	0x45d
 1791 0367 A802     		.2byte	0x2a8
 1792 0369 0B       		.uleb128 0xb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 93


 1793 036a D40F0000 		.4byte	.LASF64
 1794 036e 05       		.byte	0x5
 1795 036f 4B       		.byte	0x4b
 1796 0370 FD000000 		.4byte	0xfd
 1797 0374 0003     		.2byte	0x300
 1798 0376 0B       		.uleb128 0xb
 1799 0377 700A0000 		.4byte	.LASF65
 1800 037b 05       		.byte	0x5
 1801 037c 4C       		.byte	0x4c
 1802 037d FD000000 		.4byte	0xfd
 1803 0381 0403     		.2byte	0x304
 1804 0383 0B       		.uleb128 0xb
 1805 0384 7A0C0000 		.4byte	.LASF66
 1806 0388 05       		.byte	0x5
 1807 0389 4D       		.byte	0x4d
 1808 038a 77040000 		.4byte	0x477
 1809 038e 0803     		.2byte	0x308
 1810 0390 0B       		.uleb128 0xb
 1811 0391 92060000 		.4byte	.LASF67
 1812 0395 05       		.byte	0x5
 1813 0396 4E       		.byte	0x4e
 1814 0397 FD000000 		.4byte	0xfd
 1815 039b 4003     		.2byte	0x340
 1816 039d 0B       		.uleb128 0xb
 1817 039e A00C0000 		.4byte	.LASF68
 1818 03a2 05       		.byte	0x5
 1819 03a3 4F       		.byte	0x4f
 1820 03a4 FD000000 		.4byte	0xfd
 1821 03a8 4403     		.2byte	0x344
 1822 03aa 0B       		.uleb128 0xb
 1823 03ab 65120000 		.4byte	.LASF69
 1824 03af 05       		.byte	0x5
 1825 03b0 50       		.byte	0x50
 1826 03b1 02010000 		.4byte	0x102
 1827 03b5 4803     		.2byte	0x348
 1828 03b7 0B       		.uleb128 0xb
 1829 03b8 02110000 		.4byte	.LASF70
 1830 03bc 05       		.byte	0x5
 1831 03bd 51       		.byte	0x51
 1832 03be 92040000 		.4byte	0x492
 1833 03c2 4C03     		.2byte	0x34c
 1834 03c4 0B       		.uleb128 0xb
 1835 03c5 76100000 		.4byte	.LASF71
 1836 03c9 05       		.byte	0x5
 1837 03ca 52       		.byte	0x52
 1838 03cb FD000000 		.4byte	0xfd
 1839 03cf 000F     		.2byte	0xf00
 1840 03d1 0B       		.uleb128 0xb
 1841 03d2 80100000 		.4byte	.LASF72
 1842 03d6 05       		.byte	0x5
 1843 03d7 53       		.byte	0x53
 1844 03d8 FD000000 		.4byte	0xfd
 1845 03dc 040F     		.2byte	0xf04
 1846 03de 00       		.byte	0
 1847 03df 05       		.uleb128 0x5
 1848 03e0 07010000 		.4byte	0x107
 1849 03e4 06       		.uleb128 0x6
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 94


 1850 03e5 DF030000 		.4byte	0x3df
 1851 03e9 07       		.uleb128 0x7
 1852 03ea 02010000 		.4byte	0x102
 1853 03ee F9030000 		.4byte	0x3f9
 1854 03f2 08       		.uleb128 0x8
 1855 03f3 F6000000 		.4byte	0xf6
 1856 03f7 15       		.byte	0x15
 1857 03f8 00       		.byte	0
 1858 03f9 05       		.uleb128 0x5
 1859 03fa E9030000 		.4byte	0x3e9
 1860 03fe 06       		.uleb128 0x6
 1861 03ff F9030000 		.4byte	0x3f9
 1862 0403 05       		.uleb128 0x5
 1863 0404 17010000 		.4byte	0x117
 1864 0408 05       		.uleb128 0x5
 1865 0409 27010000 		.4byte	0x127
 1866 040d 06       		.uleb128 0x6
 1867 040e 08040000 		.4byte	0x408
 1868 0412 05       		.uleb128 0x5
 1869 0413 27010000 		.4byte	0x127
 1870 0417 06       		.uleb128 0x6
 1871 0418 12040000 		.4byte	0x412
 1872 041c 05       		.uleb128 0x5
 1873 041d 27010000 		.4byte	0x127
 1874 0421 06       		.uleb128 0x6
 1875 0422 1C040000 		.4byte	0x41c
 1876 0426 05       		.uleb128 0x5
 1877 0427 27010000 		.4byte	0x127
 1878 042b 06       		.uleb128 0x6
 1879 042c 26040000 		.4byte	0x426
 1880 0430 05       		.uleb128 0x5
 1881 0431 27010000 		.4byte	0x127
 1882 0435 06       		.uleb128 0x6
 1883 0436 30040000 		.4byte	0x430
 1884 043a 05       		.uleb128 0x5
 1885 043b 47010000 		.4byte	0x147
 1886 043f 06       		.uleb128 0x6
 1887 0440 3A040000 		.4byte	0x43a
 1888 0444 05       		.uleb128 0x5
 1889 0445 37010000 		.4byte	0x137
 1890 0449 06       		.uleb128 0x6
 1891 044a 44040000 		.4byte	0x444
 1892 044e 05       		.uleb128 0x5
 1893 044f 37010000 		.4byte	0x137
 1894 0453 06       		.uleb128 0x6
 1895 0454 4E040000 		.4byte	0x44e
 1896 0458 05       		.uleb128 0x5
 1897 0459 E9030000 		.4byte	0x3e9
 1898 045d 06       		.uleb128 0x6
 1899 045e 58040000 		.4byte	0x458
 1900 0462 07       		.uleb128 0x7
 1901 0463 02010000 		.4byte	0x102
 1902 0467 72040000 		.4byte	0x472
 1903 046b 08       		.uleb128 0x8
 1904 046c F6000000 		.4byte	0xf6
 1905 0470 0D       		.byte	0xd
 1906 0471 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 95


 1907 0472 05       		.uleb128 0x5
 1908 0473 62040000 		.4byte	0x462
 1909 0477 06       		.uleb128 0x6
 1910 0478 72040000 		.4byte	0x472
 1911 047c 07       		.uleb128 0x7
 1912 047d 02010000 		.4byte	0x102
 1913 0481 8D040000 		.4byte	0x48d
 1914 0485 0C       		.uleb128 0xc
 1915 0486 F6000000 		.4byte	0xf6
 1916 048a EC02     		.2byte	0x2ec
 1917 048c 00       		.byte	0
 1918 048d 05       		.uleb128 0x5
 1919 048e 7C040000 		.4byte	0x47c
 1920 0492 06       		.uleb128 0x6
 1921 0493 8D040000 		.4byte	0x48d
 1922 0497 03       		.uleb128 0x3
 1923 0498 2D070000 		.4byte	.LASF73
 1924 049c 05       		.byte	0x5
 1925 049d 54       		.byte	0x54
 1926 049e 57010000 		.4byte	0x157
 1927 04a2 0D       		.uleb128 0xd
 1928 04a3 B8030000 		.4byte	.LASF74
 1929 04a7 06       		.byte	0x6
 1930 04a8 5206     		.2byte	0x652
 1931 04aa 97040000 		.4byte	0x497
 1932 04ae 0E       		.uleb128 0xe
 1933 04af B8       		.byte	0xb8
 1934 04b0 07       		.byte	0x7
 1935 04b1 34       		.byte	0x34
 1936 04b2 BF080000 		.4byte	0x8bf
 1937 04b6 0A       		.uleb128 0xa
 1938 04b7 CC010000 		.4byte	.LASF75
 1939 04bb 07       		.byte	0x7
 1940 04bc 37       		.byte	0x37
 1941 04bd D9000000 		.4byte	0xd9
 1942 04c1 00       		.byte	0
 1943 04c2 0A       		.uleb128 0xa
 1944 04c3 B0040000 		.4byte	.LASF76
 1945 04c7 07       		.byte	0x7
 1946 04c8 38       		.byte	0x38
 1947 04c9 D9000000 		.4byte	0xd9
 1948 04cd 04       		.byte	0x4
 1949 04ce 0A       		.uleb128 0xa
 1950 04cf DC000000 		.4byte	.LASF77
 1951 04d3 07       		.byte	0x7
 1952 04d4 39       		.byte	0x39
 1953 04d5 D9000000 		.4byte	0xd9
 1954 04d9 08       		.byte	0x8
 1955 04da 0A       		.uleb128 0xa
 1956 04db B7000000 		.4byte	.LASF78
 1957 04df 07       		.byte	0x7
 1958 04e0 3A       		.byte	0x3a
 1959 04e1 D9000000 		.4byte	0xd9
 1960 04e5 0C       		.byte	0xc
 1961 04e6 0A       		.uleb128 0xa
 1962 04e7 690B0000 		.4byte	.LASF79
 1963 04eb 07       		.byte	0x7
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 96


 1964 04ec 3B       		.byte	0x3b
 1965 04ed D9000000 		.4byte	0xd9
 1966 04f1 10       		.byte	0x10
 1967 04f2 0A       		.uleb128 0xa
 1968 04f3 E7090000 		.4byte	.LASF80
 1969 04f7 07       		.byte	0x7
 1970 04f8 3C       		.byte	0x3c
 1971 04f9 D9000000 		.4byte	0xd9
 1972 04fd 14       		.byte	0x14
 1973 04fe 0A       		.uleb128 0xa
 1974 04ff A5060000 		.4byte	.LASF81
 1975 0503 07       		.byte	0x7
 1976 0504 3D       		.byte	0x3d
 1977 0505 D9000000 		.4byte	0xd9
 1978 0509 18       		.byte	0x18
 1979 050a 0A       		.uleb128 0xa
 1980 050b AD120000 		.4byte	.LASF82
 1981 050f 07       		.byte	0x7
 1982 0510 3E       		.byte	0x3e
 1983 0511 D9000000 		.4byte	0xd9
 1984 0515 1C       		.byte	0x1c
 1985 0516 0A       		.uleb128 0xa
 1986 0517 57090000 		.4byte	.LASF83
 1987 051b 07       		.byte	0x7
 1988 051c 3F       		.byte	0x3f
 1989 051d D9000000 		.4byte	0xd9
 1990 0521 20       		.byte	0x20
 1991 0522 0A       		.uleb128 0xa
 1992 0523 6E090000 		.4byte	.LASF84
 1993 0527 07       		.byte	0x7
 1994 0528 40       		.byte	0x40
 1995 0529 D9000000 		.4byte	0xd9
 1996 052d 24       		.byte	0x24
 1997 052e 0A       		.uleb128 0xa
 1998 052f D60C0000 		.4byte	.LASF85
 1999 0533 07       		.byte	0x7
 2000 0534 43       		.byte	0x43
 2001 0535 AD000000 		.4byte	0xad
 2002 0539 28       		.byte	0x28
 2003 053a 0A       		.uleb128 0xa
 2004 053b 8B040000 		.4byte	.LASF86
 2005 053f 07       		.byte	0x7
 2006 0540 44       		.byte	0x44
 2007 0541 AD000000 		.4byte	0xad
 2008 0545 29       		.byte	0x29
 2009 0546 0A       		.uleb128 0xa
 2010 0547 9F0B0000 		.4byte	.LASF87
 2011 054b 07       		.byte	0x7
 2012 054c 45       		.byte	0x45
 2013 054d AD000000 		.4byte	0xad
 2014 0551 2A       		.byte	0x2a
 2015 0552 0A       		.uleb128 0xa
 2016 0553 040D0000 		.4byte	.LASF88
 2017 0557 07       		.byte	0x7
 2018 0558 46       		.byte	0x46
 2019 0559 AD000000 		.4byte	0xad
 2020 055d 2B       		.byte	0x2b
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 97


 2021 055e 0A       		.uleb128 0xa
 2022 055f F80C0000 		.4byte	.LASF89
 2023 0563 07       		.byte	0x7
 2024 0564 47       		.byte	0x47
 2025 0565 AD000000 		.4byte	0xad
 2026 0569 2C       		.byte	0x2c
 2027 056a 0A       		.uleb128 0xa
 2028 056b 8E0F0000 		.4byte	.LASF90
 2029 056f 07       		.byte	0x7
 2030 0570 48       		.byte	0x48
 2031 0571 AD000000 		.4byte	0xad
 2032 0575 2D       		.byte	0x2d
 2033 0576 0A       		.uleb128 0xa
 2034 0577 86130000 		.4byte	.LASF91
 2035 057b 07       		.byte	0x7
 2036 057c 49       		.byte	0x49
 2037 057d AD000000 		.4byte	0xad
 2038 0581 2E       		.byte	0x2e
 2039 0582 0A       		.uleb128 0xa
 2040 0583 77120000 		.4byte	.LASF92
 2041 0587 07       		.byte	0x7
 2042 0588 4A       		.byte	0x4a
 2043 0589 AD000000 		.4byte	0xad
 2044 058d 2F       		.byte	0x2f
 2045 058e 0A       		.uleb128 0xa
 2046 058f 8B030000 		.4byte	.LASF93
 2047 0593 07       		.byte	0x7
 2048 0594 4B       		.byte	0x4b
 2049 0595 AD000000 		.4byte	0xad
 2050 0599 30       		.byte	0x30
 2051 059a 0A       		.uleb128 0xa
 2052 059b 650A0000 		.4byte	.LASF94
 2053 059f 07       		.byte	0x7
 2054 05a0 4E       		.byte	0x4e
 2055 05a1 AD000000 		.4byte	0xad
 2056 05a5 31       		.byte	0x31
 2057 05a6 0A       		.uleb128 0xa
 2058 05a7 0E120000 		.4byte	.LASF95
 2059 05ab 07       		.byte	0x7
 2060 05ac 4F       		.byte	0x4f
 2061 05ad AD000000 		.4byte	0xad
 2062 05b1 32       		.byte	0x32
 2063 05b2 0A       		.uleb128 0xa
 2064 05b3 390A0000 		.4byte	.LASF96
 2065 05b7 07       		.byte	0x7
 2066 05b8 50       		.byte	0x50
 2067 05b9 AD000000 		.4byte	0xad
 2068 05bd 33       		.byte	0x33
 2069 05be 0A       		.uleb128 0xa
 2070 05bf 73010000 		.4byte	.LASF97
 2071 05c3 07       		.byte	0x7
 2072 05c4 51       		.byte	0x51
 2073 05c5 AD000000 		.4byte	0xad
 2074 05c9 34       		.byte	0x34
 2075 05ca 0A       		.uleb128 0xa
 2076 05cb EA110000 		.4byte	.LASF98
 2077 05cf 07       		.byte	0x7
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 98


 2078 05d0 52       		.byte	0x52
 2079 05d1 B8000000 		.4byte	0xb8
 2080 05d5 36       		.byte	0x36
 2081 05d6 0A       		.uleb128 0xa
 2082 05d7 FA010000 		.4byte	.LASF99
 2083 05db 07       		.byte	0x7
 2084 05dc 53       		.byte	0x53
 2085 05dd B8000000 		.4byte	0xb8
 2086 05e1 38       		.byte	0x38
 2087 05e2 0A       		.uleb128 0xa
 2088 05e3 24020000 		.4byte	.LASF100
 2089 05e7 07       		.byte	0x7
 2090 05e8 54       		.byte	0x54
 2091 05e9 B8000000 		.4byte	0xb8
 2092 05ed 3A       		.byte	0x3a
 2093 05ee 0A       		.uleb128 0xa
 2094 05ef C0120000 		.4byte	.LASF101
 2095 05f3 07       		.byte	0x7
 2096 05f4 55       		.byte	0x55
 2097 05f5 AD000000 		.4byte	0xad
 2098 05f9 3C       		.byte	0x3c
 2099 05fa 0A       		.uleb128 0xa
 2100 05fb 03060000 		.4byte	.LASF102
 2101 05ff 07       		.byte	0x7
 2102 0600 56       		.byte	0x56
 2103 0601 AD000000 		.4byte	0xad
 2104 0605 3D       		.byte	0x3d
 2105 0606 0A       		.uleb128 0xa
 2106 0607 910B0000 		.4byte	.LASF103
 2107 060b 07       		.byte	0x7
 2108 060c 57       		.byte	0x57
 2109 060d AD000000 		.4byte	0xad
 2110 0611 3E       		.byte	0x3e
 2111 0612 0A       		.uleb128 0xa
 2112 0613 A6000000 		.4byte	.LASF104
 2113 0617 07       		.byte	0x7
 2114 0618 58       		.byte	0x58
 2115 0619 AD000000 		.4byte	0xad
 2116 061d 3F       		.byte	0x3f
 2117 061e 0A       		.uleb128 0xa
 2118 061f 44010000 		.4byte	.LASF105
 2119 0623 07       		.byte	0x7
 2120 0624 59       		.byte	0x59
 2121 0625 AD000000 		.4byte	0xad
 2122 0629 40       		.byte	0x40
 2123 062a 0A       		.uleb128 0xa
 2124 062b 820A0000 		.4byte	.LASF106
 2125 062f 07       		.byte	0x7
 2126 0630 5A       		.byte	0x5a
 2127 0631 AD000000 		.4byte	0xad
 2128 0635 41       		.byte	0x41
 2129 0636 0A       		.uleb128 0xa
 2130 0637 BC110000 		.4byte	.LASF107
 2131 063b 07       		.byte	0x7
 2132 063c 5B       		.byte	0x5b
 2133 063d AD000000 		.4byte	0xad
 2134 0641 42       		.byte	0x42
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 99


 2135 0642 0A       		.uleb128 0xa
 2136 0643 EC060000 		.4byte	.LASF108
 2137 0647 07       		.byte	0x7
 2138 0648 5C       		.byte	0x5c
 2139 0649 AD000000 		.4byte	0xad
 2140 064d 43       		.byte	0x43
 2141 064e 0A       		.uleb128 0xa
 2142 064f 0E080000 		.4byte	.LASF109
 2143 0653 07       		.byte	0x7
 2144 0654 5D       		.byte	0x5d
 2145 0655 AD000000 		.4byte	0xad
 2146 0659 44       		.byte	0x44
 2147 065a 0A       		.uleb128 0xa
 2148 065b 120D0000 		.4byte	.LASF110
 2149 065f 07       		.byte	0x7
 2150 0660 5E       		.byte	0x5e
 2151 0661 D9000000 		.4byte	0xd9
 2152 0665 48       		.byte	0x48
 2153 0666 0A       		.uleb128 0xa
 2154 0667 17030000 		.4byte	.LASF111
 2155 066b 07       		.byte	0x7
 2156 066c 5F       		.byte	0x5f
 2157 066d D9000000 		.4byte	0xd9
 2158 0671 4C       		.byte	0x4c
 2159 0672 0A       		.uleb128 0xa
 2160 0673 9A110000 		.4byte	.LASF112
 2161 0677 07       		.byte	0x7
 2162 0678 60       		.byte	0x60
 2163 0679 AD000000 		.4byte	0xad
 2164 067d 50       		.byte	0x50
 2165 067e 0A       		.uleb128 0xa
 2166 067f 37060000 		.4byte	.LASF113
 2167 0683 07       		.byte	0x7
 2168 0684 61       		.byte	0x61
 2169 0685 AD000000 		.4byte	0xad
 2170 0689 51       		.byte	0x51
 2171 068a 0A       		.uleb128 0xa
 2172 068b A3090000 		.4byte	.LASF114
 2173 068f 07       		.byte	0x7
 2174 0690 62       		.byte	0x62
 2175 0691 AD000000 		.4byte	0xad
 2176 0695 52       		.byte	0x52
 2177 0696 0A       		.uleb128 0xa
 2178 0697 99040000 		.4byte	.LASF115
 2179 069b 07       		.byte	0x7
 2180 069c 63       		.byte	0x63
 2181 069d AD000000 		.4byte	0xad
 2182 06a1 53       		.byte	0x53
 2183 06a2 0A       		.uleb128 0xa
 2184 06a3 1B110000 		.4byte	.LASF116
 2185 06a7 07       		.byte	0x7
 2186 06a8 64       		.byte	0x64
 2187 06a9 AD000000 		.4byte	0xad
 2188 06ad 54       		.byte	0x54
 2189 06ae 0A       		.uleb128 0xa
 2190 06af 7E060000 		.4byte	.LASF117
 2191 06b3 07       		.byte	0x7
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 100


 2192 06b4 65       		.byte	0x65
 2193 06b5 AD000000 		.4byte	0xad
 2194 06b9 55       		.byte	0x55
 2195 06ba 0A       		.uleb128 0xa
 2196 06bb 00000000 		.4byte	.LASF118
 2197 06bf 07       		.byte	0x7
 2198 06c0 66       		.byte	0x66
 2199 06c1 AD000000 		.4byte	0xad
 2200 06c5 56       		.byte	0x56
 2201 06c6 0A       		.uleb128 0xa
 2202 06c7 A90B0000 		.4byte	.LASF119
 2203 06cb 07       		.byte	0x7
 2204 06cc 67       		.byte	0x67
 2205 06cd AD000000 		.4byte	0xad
 2206 06d1 57       		.byte	0x57
 2207 06d2 0A       		.uleb128 0xa
 2208 06d3 EF050000 		.4byte	.LASF120
 2209 06d7 07       		.byte	0x7
 2210 06d8 68       		.byte	0x68
 2211 06d9 AD000000 		.4byte	0xad
 2212 06dd 58       		.byte	0x58
 2213 06de 0A       		.uleb128 0xa
 2214 06df E7120000 		.4byte	.LASF121
 2215 06e3 07       		.byte	0x7
 2216 06e4 69       		.byte	0x69
 2217 06e5 AD000000 		.4byte	0xad
 2218 06e9 59       		.byte	0x59
 2219 06ea 0A       		.uleb128 0xa
 2220 06eb 03120000 		.4byte	.LASF122
 2221 06ef 07       		.byte	0x7
 2222 06f0 6E       		.byte	0x6e
 2223 06f1 C3000000 		.4byte	0xc3
 2224 06f5 5A       		.byte	0x5a
 2225 06f6 0A       		.uleb128 0xa
 2226 06f7 07010000 		.4byte	.LASF123
 2227 06fb 07       		.byte	0x7
 2228 06fc 6F       		.byte	0x6f
 2229 06fd C3000000 		.4byte	0xc3
 2230 0701 5C       		.byte	0x5c
 2231 0702 0A       		.uleb128 0xa
 2232 0703 5F090000 		.4byte	.LASF124
 2233 0707 07       		.byte	0x7
 2234 0708 70       		.byte	0x70
 2235 0709 AD000000 		.4byte	0xad
 2236 070d 5E       		.byte	0x5e
 2237 070e 0A       		.uleb128 0xa
 2238 070f 1C120000 		.4byte	.LASF125
 2239 0713 07       		.byte	0x7
 2240 0714 71       		.byte	0x71
 2241 0715 AD000000 		.4byte	0xad
 2242 0719 5F       		.byte	0x5f
 2243 071a 0A       		.uleb128 0xa
 2244 071b 12070000 		.4byte	.LASF126
 2245 071f 07       		.byte	0x7
 2246 0720 72       		.byte	0x72
 2247 0721 AD000000 		.4byte	0xad
 2248 0725 60       		.byte	0x60
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 101


 2249 0726 0A       		.uleb128 0xa
 2250 0727 64080000 		.4byte	.LASF127
 2251 072b 07       		.byte	0x7
 2252 072c 73       		.byte	0x73
 2253 072d D9000000 		.4byte	0xd9
 2254 0731 64       		.byte	0x64
 2255 0732 0A       		.uleb128 0xa
 2256 0733 9A130000 		.4byte	.LASF128
 2257 0737 07       		.byte	0x7
 2258 0738 76       		.byte	0x76
 2259 0739 C3000000 		.4byte	0xc3
 2260 073d 68       		.byte	0x68
 2261 073e 0A       		.uleb128 0xa
 2262 073f 720B0000 		.4byte	.LASF129
 2263 0743 07       		.byte	0x7
 2264 0744 77       		.byte	0x77
 2265 0745 C3000000 		.4byte	0xc3
 2266 0749 6A       		.byte	0x6a
 2267 074a 0A       		.uleb128 0xa
 2268 074b 1F0A0000 		.4byte	.LASF130
 2269 074f 07       		.byte	0x7
 2270 0750 78       		.byte	0x78
 2271 0751 C3000000 		.4byte	0xc3
 2272 0755 6C       		.byte	0x6c
 2273 0756 0A       		.uleb128 0xa
 2274 0757 5D030000 		.4byte	.LASF131
 2275 075b 07       		.byte	0x7
 2276 075c 79       		.byte	0x79
 2277 075d C3000000 		.4byte	0xc3
 2278 0761 6E       		.byte	0x6e
 2279 0762 0A       		.uleb128 0xa
 2280 0763 D7080000 		.4byte	.LASF132
 2281 0767 07       		.byte	0x7
 2282 0768 7B       		.byte	0x7b
 2283 0769 AD000000 		.4byte	0xad
 2284 076d 70       		.byte	0x70
 2285 076e 0A       		.uleb128 0xa
 2286 076f E9030000 		.4byte	.LASF133
 2287 0773 07       		.byte	0x7
 2288 0774 7C       		.byte	0x7c
 2289 0775 AD000000 		.4byte	0xad
 2290 0779 71       		.byte	0x71
 2291 077a 0A       		.uleb128 0xa
 2292 077b E9020000 		.4byte	.LASF134
 2293 077f 07       		.byte	0x7
 2294 0780 7D       		.byte	0x7d
 2295 0781 AD000000 		.4byte	0xad
 2296 0785 72       		.byte	0x72
 2297 0786 0A       		.uleb128 0xa
 2298 0787 1F050000 		.4byte	.LASF135
 2299 078b 07       		.byte	0x7
 2300 078c 7E       		.byte	0x7e
 2301 078d AD000000 		.4byte	0xad
 2302 0791 73       		.byte	0x73
 2303 0792 0A       		.uleb128 0xa
 2304 0793 220C0000 		.4byte	.LASF136
 2305 0797 07       		.byte	0x7
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 102


 2306 0798 80       		.byte	0x80
 2307 0799 C3000000 		.4byte	0xc3
 2308 079d 74       		.byte	0x74
 2309 079e 0A       		.uleb128 0xa
 2310 079f 050B0000 		.4byte	.LASF137
 2311 07a3 07       		.byte	0x7
 2312 07a4 81       		.byte	0x81
 2313 07a5 C3000000 		.4byte	0xc3
 2314 07a9 76       		.byte	0x76
 2315 07aa 0A       		.uleb128 0xa
 2316 07ab F9070000 		.4byte	.LASF138
 2317 07af 07       		.byte	0x7
 2318 07b0 82       		.byte	0x82
 2319 07b1 C3000000 		.4byte	0xc3
 2320 07b5 78       		.byte	0x78
 2321 07b6 0A       		.uleb128 0xa
 2322 07b7 87090000 		.4byte	.LASF139
 2323 07bb 07       		.byte	0x7
 2324 07bc 83       		.byte	0x83
 2325 07bd C3000000 		.4byte	0xc3
 2326 07c1 7A       		.byte	0x7a
 2327 07c2 0A       		.uleb128 0xa
 2328 07c3 250F0000 		.4byte	.LASF140
 2329 07c7 07       		.byte	0x7
 2330 07c8 86       		.byte	0x86
 2331 07c9 AD000000 		.4byte	0xad
 2332 07cd 7C       		.byte	0x7c
 2333 07ce 0A       		.uleb128 0xa
 2334 07cf AB110000 		.4byte	.LASF141
 2335 07d3 07       		.byte	0x7
 2336 07d4 87       		.byte	0x87
 2337 07d5 AD000000 		.4byte	0xad
 2338 07d9 7D       		.byte	0x7d
 2339 07da 0A       		.uleb128 0xa
 2340 07db C3040000 		.4byte	.LASF142
 2341 07df 07       		.byte	0x7
 2342 07e0 88       		.byte	0x88
 2343 07e1 AD000000 		.4byte	0xad
 2344 07e5 7E       		.byte	0x7e
 2345 07e6 0A       		.uleb128 0xa
 2346 07e7 6C040000 		.4byte	.LASF143
 2347 07eb 07       		.byte	0x7
 2348 07ec 89       		.byte	0x89
 2349 07ed AD000000 		.4byte	0xad
 2350 07f1 7F       		.byte	0x7f
 2351 07f2 0A       		.uleb128 0xa
 2352 07f3 04050000 		.4byte	.LASF144
 2353 07f7 07       		.byte	0x7
 2354 07f8 8A       		.byte	0x8a
 2355 07f9 AD000000 		.4byte	0xad
 2356 07fd 80       		.byte	0x80
 2357 07fe 0A       		.uleb128 0xa
 2358 07ff 77110000 		.4byte	.LASF145
 2359 0803 07       		.byte	0x7
 2360 0804 8D       		.byte	0x8d
 2361 0805 D9000000 		.4byte	0xd9
 2362 0809 84       		.byte	0x84
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 103


 2363 080a 0A       		.uleb128 0xa
 2364 080b 3A0F0000 		.4byte	.LASF146
 2365 080f 07       		.byte	0x7
 2366 0810 8E       		.byte	0x8e
 2367 0811 D9000000 		.4byte	0xd9
 2368 0815 88       		.byte	0x88
 2369 0816 0A       		.uleb128 0xa
 2370 0817 45120000 		.4byte	.LASF147
 2371 081b 07       		.byte	0x7
 2372 081c 8F       		.byte	0x8f
 2373 081d D9000000 		.4byte	0xd9
 2374 0821 8C       		.byte	0x8c
 2375 0822 0A       		.uleb128 0xa
 2376 0823 0D0C0000 		.4byte	.LASF148
 2377 0827 07       		.byte	0x7
 2378 0828 90       		.byte	0x90
 2379 0829 D9000000 		.4byte	0xd9
 2380 082d 90       		.byte	0x90
 2381 082e 0A       		.uleb128 0xa
 2382 082f BC0E0000 		.4byte	.LASF149
 2383 0833 07       		.byte	0x7
 2384 0834 91       		.byte	0x91
 2385 0835 D9000000 		.4byte	0xd9
 2386 0839 94       		.byte	0x94
 2387 083a 0A       		.uleb128 0xa
 2388 083b 10040000 		.4byte	.LASF150
 2389 083f 07       		.byte	0x7
 2390 0840 92       		.byte	0x92
 2391 0841 D9000000 		.4byte	0xd9
 2392 0845 98       		.byte	0x98
 2393 0846 0A       		.uleb128 0xa
 2394 0847 5D0F0000 		.4byte	.LASF151
 2395 084b 07       		.byte	0x7
 2396 084c 93       		.byte	0x93
 2397 084d D9000000 		.4byte	0xd9
 2398 0851 9C       		.byte	0x9c
 2399 0852 0A       		.uleb128 0xa
 2400 0853 D6060000 		.4byte	.LASF152
 2401 0857 07       		.byte	0x7
 2402 0858 94       		.byte	0x94
 2403 0859 D9000000 		.4byte	0xd9
 2404 085d A0       		.byte	0xa0
 2405 085e 0A       		.uleb128 0xa
 2406 085f F2000000 		.4byte	.LASF153
 2407 0863 07       		.byte	0x7
 2408 0864 95       		.byte	0x95
 2409 0865 C3000000 		.4byte	0xc3
 2410 0869 A4       		.byte	0xa4
 2411 086a 0A       		.uleb128 0xa
 2412 086b D2100000 		.4byte	.LASF154
 2413 086f 07       		.byte	0x7
 2414 0870 96       		.byte	0x96
 2415 0871 C3000000 		.4byte	0xc3
 2416 0875 A6       		.byte	0xa6
 2417 0876 0A       		.uleb128 0xa
 2418 0877 AD0F0000 		.4byte	.LASF155
 2419 087b 07       		.byte	0x7
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 104


 2420 087c 97       		.byte	0x97
 2421 087d C3000000 		.4byte	0xc3
 2422 0881 A8       		.byte	0xa8
 2423 0882 0A       		.uleb128 0xa
 2424 0883 3B090000 		.4byte	.LASF156
 2425 0887 07       		.byte	0x7
 2426 0888 98       		.byte	0x98
 2427 0889 C3000000 		.4byte	0xc3
 2428 088d AA       		.byte	0xaa
 2429 088e 0A       		.uleb128 0xa
 2430 088f 110A0000 		.4byte	.LASF157
 2431 0893 07       		.byte	0x7
 2432 0894 99       		.byte	0x99
 2433 0895 C3000000 		.4byte	0xc3
 2434 0899 AC       		.byte	0xac
 2435 089a 0A       		.uleb128 0xa
 2436 089b 920A0000 		.4byte	.LASF158
 2437 089f 07       		.byte	0x7
 2438 08a0 9A       		.byte	0x9a
 2439 08a1 C3000000 		.4byte	0xc3
 2440 08a5 AE       		.byte	0xae
 2441 08a6 0A       		.uleb128 0xa
 2442 08a7 6A030000 		.4byte	.LASF159
 2443 08ab 07       		.byte	0x7
 2444 08ac 9D       		.byte	0x9d
 2445 08ad C3000000 		.4byte	0xc3
 2446 08b1 B0       		.byte	0xb0
 2447 08b2 0A       		.uleb128 0xa
 2448 08b3 AB100000 		.4byte	.LASF160
 2449 08b7 07       		.byte	0x7
 2450 08b8 9E       		.byte	0x9e
 2451 08b9 D9000000 		.4byte	0xd9
 2452 08bd B4       		.byte	0xb4
 2453 08be 00       		.byte	0
 2454 08bf 03       		.uleb128 0x3
 2455 08c0 53040000 		.4byte	.LASF161
 2456 08c4 07       		.byte	0x7
 2457 08c5 9F       		.byte	0x9f
 2458 08c6 AE040000 		.4byte	0x4ae
 2459 08ca 02       		.uleb128 0x2
 2460 08cb 01       		.byte	0x1
 2461 08cc 08       		.byte	0x8
 2462 08cd B2000000 		.4byte	.LASF162
 2463 08d1 0D       		.uleb128 0xd
 2464 08d2 88050000 		.4byte	.LASF163
 2465 08d6 08       		.byte	0x8
 2466 08d7 F701     		.2byte	0x1f7
 2467 08d9 DD080000 		.4byte	0x8dd
 2468 08dd 02       		.uleb128 0x2
 2469 08de 04       		.byte	0x4
 2470 08df 04       		.byte	0x4
 2471 08e0 85040000 		.4byte	.LASF164
 2472 08e4 02       		.uleb128 0x2
 2473 08e5 08       		.byte	0x8
 2474 08e6 04       		.byte	0x4
 2475 08e7 59060000 		.4byte	.LASF165
 2476 08eb 0D       		.uleb128 0xd
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 105


 2477 08ec 9C090000 		.4byte	.LASF166
 2478 08f0 08       		.byte	0x8
 2479 08f1 EB03     		.2byte	0x3eb
 2480 08f3 C3000000 		.4byte	0xc3
 2481 08f7 0F       		.uleb128 0xf
 2482 08f8 04       		.byte	0x4
 2483 08f9 A6000000 		.4byte	0xa6
 2484 08fd 09       		.byte	0x9
 2485 08fe 1405     		.2byte	0x514
 2486 0900 38090000 		.4byte	0x938
 2487 0904 10       		.uleb128 0x10
 2488 0905 DE050000 		.4byte	.LASF167
 2489 0909 00       		.byte	0
 2490 090a 11       		.uleb128 0x11
 2491 090b C8110000 		.4byte	.LASF168
 2492 090f 01004200 		.4byte	0x420001
 2493 0913 11       		.uleb128 0x11
 2494 0914 39070000 		.4byte	.LASF169
 2495 0918 02004200 		.4byte	0x420002
 2496 091c 11       		.uleb128 0x11
 2497 091d 56070000 		.4byte	.LASF170
 2498 0921 03004200 		.4byte	0x420003
 2499 0925 11       		.uleb128 0x11
 2500 0926 82070000 		.4byte	.LASF171
 2501 092a 04004200 		.4byte	0x420004
 2502 092e 11       		.uleb128 0x11
 2503 092f 0D110000 		.4byte	.LASF172
 2504 0933 FF004200 		.4byte	0x4200ff
 2505 0937 00       		.byte	0
 2506 0938 0D       		.uleb128 0xd
 2507 0939 C7000000 		.4byte	.LASF173
 2508 093d 09       		.byte	0x9
 2509 093e 1C05     		.2byte	0x51c
 2510 0940 F7080000 		.4byte	0x8f7
 2511 0944 0F       		.uleb128 0xf
 2512 0945 01       		.byte	0x1
 2513 0946 37000000 		.4byte	0x37
 2514 094a 09       		.byte	0x9
 2515 094b BC05     		.2byte	0x5bc
 2516 094d 6A090000 		.4byte	0x96a
 2517 0951 10       		.uleb128 0x10
 2518 0952 FB130000 		.4byte	.LASF174
 2519 0956 01       		.byte	0x1
 2520 0957 10       		.uleb128 0x10
 2521 0958 3F040000 		.4byte	.LASF175
 2522 095c 02       		.byte	0x2
 2523 095d 10       		.uleb128 0x10
 2524 095e C6130000 		.4byte	.LASF176
 2525 0962 04       		.byte	0x4
 2526 0963 10       		.uleb128 0x10
 2527 0964 E1130000 		.4byte	.LASF177
 2528 0968 08       		.byte	0x8
 2529 0969 00       		.byte	0
 2530 096a 0D       		.uleb128 0xd
 2531 096b 840C0000 		.4byte	.LASF178
 2532 096f 09       		.byte	0x9
 2533 0970 CB05     		.2byte	0x5cb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 106


 2534 0972 44090000 		.4byte	0x944
 2535 0976 12       		.uleb128 0x12
 2536 0977 08       		.byte	0x8
 2537 0978 09       		.byte	0x9
 2538 0979 E705     		.2byte	0x5e7
 2539 097b 9A090000 		.4byte	0x99a
 2540 097f 13       		.uleb128 0x13
 2541 0980 AB040000 		.4byte	.LASF179
 2542 0984 09       		.byte	0x9
 2543 0985 E905     		.2byte	0x5e9
 2544 0987 9A090000 		.4byte	0x99a
 2545 098b 00       		.byte	0
 2546 098c 13       		.uleb128 0x13
 2547 098d D5090000 		.4byte	.LASF180
 2548 0991 09       		.byte	0x9
 2549 0992 EC05     		.2byte	0x5ec
 2550 0994 9A090000 		.4byte	0x99a
 2551 0998 04       		.byte	0x4
 2552 0999 00       		.byte	0
 2553 099a 14       		.uleb128 0x14
 2554 099b 04       		.byte	0x4
 2555 099c 0D       		.uleb128 0xd
 2556 099d 58000000 		.4byte	.LASF181
 2557 09a1 09       		.byte	0x9
 2558 09a2 EF05     		.2byte	0x5ef
 2559 09a4 76090000 		.4byte	0x976
 2560 09a8 15       		.uleb128 0x15
 2561 09a9 04       		.byte	0x4
 2562 09aa 9C090000 		.4byte	0x99c
 2563 09ae 0F       		.uleb128 0xf
 2564 09af 04       		.byte	0x4
 2565 09b0 A6000000 		.4byte	0xa6
 2566 09b4 02       		.byte	0x2
 2567 09b5 FE02     		.2byte	0x2fe
 2568 09b7 DD090000 		.4byte	0x9dd
 2569 09bb 10       		.uleb128 0x10
 2570 09bc 03090000 		.4byte	.LASF182
 2571 09c0 00       		.byte	0
 2572 09c1 11       		.uleb128 0x11
 2573 09c2 AE060000 		.4byte	.LASF183
 2574 09c6 01000600 		.4byte	0x60001
 2575 09ca 11       		.uleb128 0x11
 2576 09cb EF0A0000 		.4byte	.LASF184
 2577 09cf 02000600 		.4byte	0x60002
 2578 09d3 11       		.uleb128 0x11
 2579 09d4 05020000 		.4byte	.LASF185
 2580 09d8 03000600 		.4byte	0x60003
 2581 09dc 00       		.byte	0
 2582 09dd 0D       		.uleb128 0xd
 2583 09de AE080000 		.4byte	.LASF186
 2584 09e2 02       		.byte	0x2
 2585 09e3 0303     		.2byte	0x303
 2586 09e5 AE090000 		.4byte	0x9ae
 2587 09e9 0F       		.uleb128 0xf
 2588 09ea 01       		.byte	0x1
 2589 09eb 37000000 		.4byte	0x37
 2590 09ef 02       		.byte	0x2
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 107


 2591 09f0 0703     		.2byte	0x307
 2592 09f2 030A0000 		.4byte	0xa03
 2593 09f6 10       		.uleb128 0x10
 2594 09f7 B70A0000 		.4byte	.LASF187
 2595 09fb 00       		.byte	0
 2596 09fc 10       		.uleb128 0x10
 2597 09fd 53130000 		.4byte	.LASF188
 2598 0a01 01       		.byte	0x1
 2599 0a02 00       		.byte	0
 2600 0a03 0D       		.uleb128 0xd
 2601 0a04 3F030000 		.4byte	.LASF189
 2602 0a08 02       		.byte	0x2
 2603 0a09 0A03     		.2byte	0x30a
 2604 0a0b E9090000 		.4byte	0x9e9
 2605 0a0f 0F       		.uleb128 0xf
 2606 0a10 01       		.byte	0x1
 2607 0a11 37000000 		.4byte	0x37
 2608 0a15 02       		.byte	0x2
 2609 0a16 0E03     		.2byte	0x30e
 2610 0a18 290A0000 		.4byte	0xa29
 2611 0a1c 10       		.uleb128 0x10
 2612 0a1d EA0B0000 		.4byte	.LASF190
 2613 0a21 00       		.byte	0
 2614 0a22 10       		.uleb128 0x10
 2615 0a23 C7020000 		.4byte	.LASF191
 2616 0a27 01       		.byte	0x1
 2617 0a28 00       		.byte	0
 2618 0a29 0D       		.uleb128 0xd
 2619 0a2a F40F0000 		.4byte	.LASF192
 2620 0a2e 02       		.byte	0x2
 2621 0a2f 1103     		.2byte	0x311
 2622 0a31 0F0A0000 		.4byte	0xa0f
 2623 0a35 0F       		.uleb128 0xf
 2624 0a36 01       		.byte	0x1
 2625 0a37 37000000 		.4byte	0x37
 2626 0a3b 02       		.byte	0x2
 2627 0a3c 1503     		.2byte	0x315
 2628 0a3e 4F0A0000 		.4byte	0xa4f
 2629 0a42 10       		.uleb128 0x10
 2630 0a43 BF100000 		.4byte	.LASF193
 2631 0a47 00       		.byte	0
 2632 0a48 10       		.uleb128 0x10
 2633 0a49 09130000 		.4byte	.LASF194
 2634 0a4d 01       		.byte	0x1
 2635 0a4e 00       		.byte	0
 2636 0a4f 0D       		.uleb128 0xd
 2637 0a50 84010000 		.4byte	.LASF195
 2638 0a54 02       		.byte	0x2
 2639 0a55 1803     		.2byte	0x318
 2640 0a57 350A0000 		.4byte	0xa35
 2641 0a5b 0F       		.uleb128 0xf
 2642 0a5c 01       		.byte	0x1
 2643 0a5d 37000000 		.4byte	0x37
 2644 0a61 02       		.byte	0x2
 2645 0a62 1C03     		.2byte	0x31c
 2646 0a64 750A0000 		.4byte	0xa75
 2647 0a68 10       		.uleb128 0x10
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 108


 2648 0a69 58110000 		.4byte	.LASF196
 2649 0a6d 00       		.byte	0
 2650 0a6e 10       		.uleb128 0x10
 2651 0a6f 180E0000 		.4byte	.LASF197
 2652 0a73 01       		.byte	0x1
 2653 0a74 00       		.byte	0
 2654 0a75 0D       		.uleb128 0xd
 2655 0a76 BE070000 		.4byte	.LASF198
 2656 0a7a 02       		.byte	0x2
 2657 0a7b 1F03     		.2byte	0x31f
 2658 0a7d 5B0A0000 		.4byte	0xa5b
 2659 0a81 0F       		.uleb128 0xf
 2660 0a82 01       		.byte	0x1
 2661 0a83 37000000 		.4byte	0x37
 2662 0a87 02       		.byte	0x2
 2663 0a88 2303     		.2byte	0x323
 2664 0a8a 950A0000 		.4byte	0xa95
 2665 0a8e 10       		.uleb128 0x10
 2666 0a8f 0E060000 		.4byte	.LASF199
 2667 0a93 00       		.byte	0
 2668 0a94 00       		.byte	0
 2669 0a95 0D       		.uleb128 0xd
 2670 0a96 710E0000 		.4byte	.LASF200
 2671 0a9a 02       		.byte	0x2
 2672 0a9b 2503     		.2byte	0x325
 2673 0a9d 810A0000 		.4byte	0xa81
 2674 0aa1 0F       		.uleb128 0xf
 2675 0aa2 02       		.byte	0x2
 2676 0aa3 5B000000 		.4byte	0x5b
 2677 0aa7 02       		.byte	0x2
 2678 0aa8 5703     		.2byte	0x357
 2679 0aaa DF0A0000 		.4byte	0xadf
 2680 0aae 10       		.uleb128 0x10
 2681 0aaf 16100000 		.4byte	.LASF201
 2682 0ab3 00       		.byte	0
 2683 0ab4 16       		.uleb128 0x16
 2684 0ab5 BA010000 		.4byte	.LASF202
 2685 0ab9 0004     		.2byte	0x400
 2686 0abb 16       		.uleb128 0x16
 2687 0abc FE030000 		.4byte	.LASF203
 2688 0ac0 0006     		.2byte	0x600
 2689 0ac2 16       		.uleb128 0x16
 2690 0ac3 D6010000 		.4byte	.LASF204
 2691 0ac7 0008     		.2byte	0x800
 2692 0ac9 16       		.uleb128 0x16
 2693 0aca E8010000 		.4byte	.LASF205
 2694 0ace 000A     		.2byte	0xa00
 2695 0ad0 16       		.uleb128 0x16
 2696 0ad1 180B0000 		.4byte	.LASF206
 2697 0ad5 000C     		.2byte	0xc00
 2698 0ad7 16       		.uleb128 0x16
 2699 0ad8 92000000 		.4byte	.LASF207
 2700 0adc 000E     		.2byte	0xe00
 2701 0ade 00       		.byte	0
 2702 0adf 0F       		.uleb128 0xf
 2703 0ae0 04       		.byte	0x4
 2704 0ae1 A6000000 		.4byte	0xa6
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 109


 2705 0ae5 02       		.byte	0x2
 2706 0ae6 E403     		.2byte	0x3e4
 2707 0ae8 050B0000 		.4byte	0xb05
 2708 0aec 10       		.uleb128 0x10
 2709 0aed 4B0E0000 		.4byte	.LASF208
 2710 0af1 00       		.byte	0
 2711 0af2 11       		.uleb128 0x11
 2712 0af3 B3090000 		.4byte	.LASF209
 2713 0af7 00000200 		.4byte	0x20000
 2714 0afb 11       		.uleb128 0x11
 2715 0afc 7D080000 		.4byte	.LASF210
 2716 0b00 00000600 		.4byte	0x60000
 2717 0b04 00       		.byte	0
 2718 0b05 0D       		.uleb128 0xd
 2719 0b06 240D0000 		.4byte	.LASF211
 2720 0b0a 02       		.byte	0x2
 2721 0b0b E803     		.2byte	0x3e8
 2722 0b0d DF0A0000 		.4byte	0xadf
 2723 0b11 0F       		.uleb128 0xf
 2724 0b12 01       		.byte	0x1
 2725 0b13 37000000 		.4byte	0x37
 2726 0b17 02       		.byte	0x2
 2727 0b18 1304     		.2byte	0x413
 2728 0b1a 370B0000 		.4byte	0xb37
 2729 0b1e 10       		.uleb128 0x10
 2730 0b1f 97030000 		.4byte	.LASF212
 2731 0b23 00       		.byte	0
 2732 0b24 10       		.uleb128 0x10
 2733 0b25 C5050000 		.4byte	.LASF213
 2734 0b29 01       		.byte	0x1
 2735 0b2a 10       		.uleb128 0x10
 2736 0b2b A6070000 		.4byte	.LASF214
 2737 0b2f 02       		.byte	0x2
 2738 0b30 10       		.uleb128 0x10
 2739 0b31 51010000 		.4byte	.LASF215
 2740 0b35 03       		.byte	0x3
 2741 0b36 00       		.byte	0
 2742 0b37 0D       		.uleb128 0xd
 2743 0b38 1D130000 		.4byte	.LASF216
 2744 0b3c 02       		.byte	0x2
 2745 0b3d 1804     		.2byte	0x418
 2746 0b3f 110B0000 		.4byte	0xb11
 2747 0b43 12       		.uleb128 0x12
 2748 0b44 78       		.byte	0x78
 2749 0b45 02       		.byte	0x2
 2750 0b46 0205     		.2byte	0x502
 2751 0b48 100C0000 		.4byte	0xc10
 2752 0b4c 13       		.uleb128 0x13
 2753 0b4d A6050000 		.4byte	.LASF217
 2754 0b51 02       		.byte	0x2
 2755 0b52 0405     		.2byte	0x504
 2756 0b54 D9000000 		.4byte	0xd9
 2757 0b58 00       		.byte	0
 2758 0b59 13       		.uleb128 0x13
 2759 0b5a 4F100000 		.4byte	.LASF218
 2760 0b5e 02       		.byte	0x2
 2761 0b5f 0505     		.2byte	0x505
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 110


 2762 0b61 D9000000 		.4byte	0xd9
 2763 0b65 04       		.byte	0x4
 2764 0b66 13       		.uleb128 0x13
 2765 0b67 840B0000 		.4byte	.LASF219
 2766 0b6b 02       		.byte	0x2
 2767 0b6c 0605     		.2byte	0x506
 2768 0b6e D9000000 		.4byte	0xd9
 2769 0b72 08       		.byte	0x8
 2770 0b73 13       		.uleb128 0x13
 2771 0b74 730F0000 		.4byte	.LASF220
 2772 0b78 02       		.byte	0x2
 2773 0b79 0705     		.2byte	0x507
 2774 0b7b D9000000 		.4byte	0xd9
 2775 0b7f 0C       		.byte	0xc
 2776 0b80 13       		.uleb128 0x13
 2777 0b81 5B050000 		.4byte	.LASF221
 2778 0b85 02       		.byte	0x2
 2779 0b86 0805     		.2byte	0x508
 2780 0b88 D9000000 		.4byte	0xd9
 2781 0b8c 10       		.byte	0x10
 2782 0b8d 13       		.uleb128 0x13
 2783 0b8e 31090000 		.4byte	.LASF222
 2784 0b92 02       		.byte	0x2
 2785 0b93 0905     		.2byte	0x509
 2786 0b95 370B0000 		.4byte	0xb37
 2787 0b99 14       		.byte	0x14
 2788 0b9a 13       		.uleb128 0x13
 2789 0b9b F2070000 		.4byte	.LASF223
 2790 0b9f 02       		.byte	0x2
 2791 0ba0 0A05     		.2byte	0x50a
 2792 0ba2 D9000000 		.4byte	0xd9
 2793 0ba6 18       		.byte	0x18
 2794 0ba7 13       		.uleb128 0x13
 2795 0ba8 5A120000 		.4byte	.LASF224
 2796 0bac 02       		.byte	0x2
 2797 0bad 0B05     		.2byte	0x50b
 2798 0baf 100C0000 		.4byte	0xc10
 2799 0bb3 1C       		.byte	0x1c
 2800 0bb4 13       		.uleb128 0x13
 2801 0bb5 91130000 		.4byte	.LASF225
 2802 0bb9 02       		.byte	0x2
 2803 0bba 0C05     		.2byte	0x50c
 2804 0bbc D9000000 		.4byte	0xd9
 2805 0bc0 5C       		.byte	0x5c
 2806 0bc1 13       		.uleb128 0x13
 2807 0bc2 33030000 		.4byte	.LASF226
 2808 0bc6 02       		.byte	0x2
 2809 0bc7 0D05     		.2byte	0x50d
 2810 0bc9 D9000000 		.4byte	0xd9
 2811 0bcd 60       		.byte	0x60
 2812 0bce 13       		.uleb128 0x13
 2813 0bcf FB120000 		.4byte	.LASF227
 2814 0bd3 02       		.byte	0x2
 2815 0bd4 0E05     		.2byte	0x50e
 2816 0bd6 D9000000 		.4byte	0xd9
 2817 0bda 64       		.byte	0x64
 2818 0bdb 13       		.uleb128 0x13
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 111


 2819 0bdc 370B0000 		.4byte	.LASF228
 2820 0be0 02       		.byte	0x2
 2821 0be1 0F05     		.2byte	0x50f
 2822 0be3 D9000000 		.4byte	0xd9
 2823 0be7 68       		.byte	0x68
 2824 0be8 13       		.uleb128 0x13
 2825 0be9 21090000 		.4byte	.LASF229
 2826 0bed 02       		.byte	0x2
 2827 0bee 1005     		.2byte	0x510
 2828 0bf0 D9000000 		.4byte	0xd9
 2829 0bf4 6C       		.byte	0x6c
 2830 0bf5 13       		.uleb128 0x13
 2831 0bf6 9F120000 		.4byte	.LASF230
 2832 0bfa 02       		.byte	0x2
 2833 0bfb 1105     		.2byte	0x511
 2834 0bfd 200C0000 		.4byte	0xc20
 2835 0c01 70       		.byte	0x70
 2836 0c02 13       		.uleb128 0x13
 2837 0c03 4A070000 		.4byte	.LASF231
 2838 0c07 02       		.byte	0x2
 2839 0c08 1205     		.2byte	0x512
 2840 0c0a D9000000 		.4byte	0xd9
 2841 0c0e 74       		.byte	0x74
 2842 0c0f 00       		.byte	0
 2843 0c10 07       		.uleb128 0x7
 2844 0c11 D9000000 		.4byte	0xd9
 2845 0c15 200C0000 		.4byte	0xc20
 2846 0c19 08       		.uleb128 0x8
 2847 0c1a F6000000 		.4byte	0xf6
 2848 0c1e 0F       		.byte	0xf
 2849 0c1f 00       		.byte	0
 2850 0c20 02       		.uleb128 0x2
 2851 0c21 01       		.byte	0x1
 2852 0c22 02       		.byte	0x2
 2853 0c23 6D060000 		.4byte	.LASF232
 2854 0c27 0D       		.uleb128 0xd
 2855 0c28 92050000 		.4byte	.LASF233
 2856 0c2c 02       		.byte	0x2
 2857 0c2d 1305     		.2byte	0x513
 2858 0c2f 430B0000 		.4byte	0xb43
 2859 0c33 12       		.uleb128 0x12
 2860 0c34 08       		.byte	0x8
 2861 0c35 02       		.byte	0x2
 2862 0c36 1705     		.2byte	0x517
 2863 0c38 570C0000 		.4byte	0xc57
 2864 0c3c 13       		.uleb128 0x13
 2865 0c3d 23070000 		.4byte	.LASF234
 2866 0c41 02       		.byte	0x2
 2867 0c42 1905     		.2byte	0x519
 2868 0c44 D9000000 		.4byte	0xd9
 2869 0c48 00       		.byte	0
 2870 0c49 13       		.uleb128 0x13
 2871 0c4a B10E0000 		.4byte	.LASF235
 2872 0c4e 02       		.byte	0x2
 2873 0c4f 1A05     		.2byte	0x51a
 2874 0c51 D9000000 		.4byte	0xd9
 2875 0c55 04       		.byte	0x4
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 112


 2876 0c56 00       		.byte	0
 2877 0c57 0D       		.uleb128 0xd
 2878 0c58 BC0C0000 		.4byte	.LASF236
 2879 0c5c 02       		.byte	0x2
 2880 0c5d 1B05     		.2byte	0x51b
 2881 0c5f 330C0000 		.4byte	0xc33
 2882 0c63 17       		.uleb128 0x17
 2883 0c64 800F0000 		.4byte	.LASF237
 2884 0c68 01       		.byte	0x1
 2885 0c69 E8       		.byte	0xe8
 2886 0c6a 01       		.byte	0x1
 2887 0c6b 7B0C0000 		.4byte	0xc7b
 2888 0c6f 18       		.uleb128 0x18
 2889 0c70 AB040000 		.4byte	.LASF179
 2890 0c74 01       		.byte	0x1
 2891 0c75 E8       		.byte	0xe8
 2892 0c76 7B0C0000 		.4byte	0xc7b
 2893 0c7a 00       		.byte	0
 2894 0c7b 15       		.uleb128 0x15
 2895 0c7c 04       		.byte	0x4
 2896 0c7d A2040000 		.4byte	0x4a2
 2897 0c81 19       		.uleb128 0x19
 2898 0c82 F1090000 		.4byte	.LASF238
 2899 0c86 01       		.byte	0x1
 2900 0c87 6F01     		.2byte	0x16f
 2901 0c89 01       		.byte	0x1
 2902 0c8a A70C0000 		.4byte	0xca7
 2903 0c8e 1A       		.uleb128 0x1a
 2904 0c8f AB040000 		.4byte	.LASF179
 2905 0c93 01       		.byte	0x1
 2906 0c94 6F01     		.2byte	0x16f
 2907 0c96 7B0C0000 		.4byte	0xc7b
 2908 0c9a 1A       		.uleb128 0x1a
 2909 0c9b AB050000 		.4byte	.LASF239
 2910 0c9f 01       		.byte	0x1
 2911 0ca0 6F01     		.2byte	0x16f
 2912 0ca2 030A0000 		.4byte	0xa03
 2913 0ca6 00       		.byte	0
 2914 0ca7 19       		.uleb128 0x19
 2915 0ca8 25030000 		.4byte	.LASF240
 2916 0cac 01       		.byte	0x1
 2917 0cad 4901     		.2byte	0x149
 2918 0caf 01       		.byte	0x1
 2919 0cb0 C10C0000 		.4byte	0xcc1
 2920 0cb4 1A       		.uleb128 0x1a
 2921 0cb5 AB040000 		.4byte	.LASF179
 2922 0cb9 01       		.byte	0x1
 2923 0cba 4901     		.2byte	0x149
 2924 0cbc 7B0C0000 		.4byte	0xc7b
 2925 0cc0 00       		.byte	0
 2926 0cc1 1B       		.uleb128 0x1b
 2927 0cc2 71050000 		.4byte	.LASF242
 2928 0cc6 01       		.byte	0x1
 2929 0cc7 2002     		.2byte	0x220
 2930 0cc9 200C0000 		.4byte	0xc20
 2931 0ccd 01       		.byte	0x1
 2932 0cce F70C0000 		.4byte	0xcf7
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 113


 2933 0cd2 1A       		.uleb128 0x1a
 2934 0cd3 AB040000 		.4byte	.LASF179
 2935 0cd7 01       		.byte	0x1
 2936 0cd8 2002     		.2byte	0x220
 2937 0cda F70C0000 		.4byte	0xcf7
 2938 0cde 1A       		.uleb128 0x1a
 2939 0cdf 81000000 		.4byte	.LASF241
 2940 0ce3 01       		.byte	0x1
 2941 0ce4 2002     		.2byte	0x220
 2942 0ce6 D9000000 		.4byte	0xd9
 2943 0cea 1C       		.uleb128 0x1c
 2944 0ceb AF030000 		.4byte	.LASF245
 2945 0cef 01       		.byte	0x1
 2946 0cf0 2402     		.2byte	0x224
 2947 0cf2 200C0000 		.4byte	0xc20
 2948 0cf6 00       		.byte	0
 2949 0cf7 15       		.uleb128 0x15
 2950 0cf8 04       		.byte	0x4
 2951 0cf9 FD0C0000 		.4byte	0xcfd
 2952 0cfd 06       		.uleb128 0x6
 2953 0cfe A2040000 		.4byte	0x4a2
 2954 0d02 1B       		.uleb128 0x1b
 2955 0d03 EB080000 		.4byte	.LASF243
 2956 0d07 01       		.byte	0x1
 2957 0d08 7903     		.2byte	0x379
 2958 0d0a B8000000 		.4byte	0xb8
 2959 0d0e 01       		.byte	0x1
 2960 0d0f 500D0000 		.4byte	0xd50
 2961 0d13 1A       		.uleb128 0x1a
 2962 0d14 AB040000 		.4byte	.LASF179
 2963 0d18 01       		.byte	0x1
 2964 0d19 7903     		.2byte	0x379
 2965 0d1b F70C0000 		.4byte	0xcf7
 2966 0d1f 1A       		.uleb128 0x1a
 2967 0d20 81000000 		.4byte	.LASF241
 2968 0d24 01       		.byte	0x1
 2969 0d25 7903     		.2byte	0x379
 2970 0d27 D9000000 		.4byte	0xd9
 2971 0d2b 1A       		.uleb128 0x1a
 2972 0d2c 10010000 		.4byte	.LASF244
 2973 0d30 01       		.byte	0x1
 2974 0d31 7903     		.2byte	0x379
 2975 0d33 B8000000 		.4byte	0xb8
 2976 0d37 1C       		.uleb128 0x1c
 2977 0d38 490D0000 		.4byte	.LASF246
 2978 0d3c 01       		.byte	0x1
 2979 0d3d 7D03     		.2byte	0x37d
 2980 0d3f D9000000 		.4byte	0xd9
 2981 0d43 1C       		.uleb128 0x1c
 2982 0d44 360E0000 		.4byte	.LASF247
 2983 0d48 01       		.byte	0x1
 2984 0d49 7E03     		.2byte	0x37e
 2985 0d4b D9000000 		.4byte	0xd9
 2986 0d4f 00       		.byte	0
 2987 0d50 1D       		.uleb128 0x1d
 2988 0d51 8E110000 		.4byte	.LASF254
 2989 0d55 01       		.byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 114


 2990 0d56 38       		.byte	0x38
 2991 0d57 DD090000 		.4byte	0x9dd
 2992 0d5b 00000000 		.4byte	.LFB192
 2993 0d5f F4000000 		.4byte	.LFE192-.LFB192
 2994 0d63 01       		.uleb128 0x1
 2995 0d64 9C       		.byte	0x9c
 2996 0d65 E00D0000 		.4byte	0xde0
 2997 0d69 1E       		.uleb128 0x1e
 2998 0d6a AB040000 		.4byte	.LASF179
 2999 0d6e 01       		.byte	0x1
 3000 0d6f 38       		.byte	0x38
 3001 0d70 7B0C0000 		.4byte	0xc7b
 3002 0d74 00000000 		.4byte	.LLST0
 3003 0d78 1F       		.uleb128 0x1f
 3004 0d79 BD0B0000 		.4byte	.LASF248
 3005 0d7d 01       		.byte	0x1
 3006 0d7e 38       		.byte	0x38
 3007 0d7f E00D0000 		.4byte	0xde0
 3008 0d83 01       		.uleb128 0x1
 3009 0d84 51       		.byte	0x51
 3010 0d85 20       		.uleb128 0x20
 3011 0d86 D6040000 		.4byte	.LASF249
 3012 0d8a 01       		.byte	0x1
 3013 0d8b 3D       		.byte	0x3d
 3014 0d8c DD090000 		.4byte	0x9dd
 3015 0d90 3A000000 		.4byte	.LLST1
 3016 0d94 20       		.uleb128 0x20
 3017 0d95 81000000 		.4byte	.LASF241
 3018 0d99 01       		.byte	0x1
 3019 0d9a 3E       		.byte	0x3e
 3020 0d9b AD000000 		.4byte	0xad
 3021 0d9f 59000000 		.4byte	.LLST2
 3022 0da3 20       		.uleb128 0x20
 3023 0da4 FE0A0000 		.4byte	.LASF250
 3024 0da8 01       		.byte	0x1
 3025 0da9 3F       		.byte	0x3f
 3026 0daa CE000000 		.4byte	0xce
 3027 0dae 85000000 		.4byte	.LLST3
 3028 0db2 20       		.uleb128 0x20
 3029 0db3 5A100000 		.4byte	.LASF251
 3030 0db7 01       		.byte	0x1
 3031 0db8 40       		.byte	0x40
 3032 0db9 200C0000 		.4byte	0xc20
 3033 0dbd 9B000000 		.4byte	.LLST4
 3034 0dc1 20       		.uleb128 0x20
 3035 0dc2 1A010000 		.4byte	.LASF252
 3036 0dc6 01       		.byte	0x1
 3037 0dc7 41       		.byte	0x41
 3038 0dc8 200C0000 		.4byte	0xc20
 3039 0dcc B4000000 		.4byte	.LLST5
 3040 0dd0 20       		.uleb128 0x20
 3041 0dd1 F4040000 		.4byte	.LASF253
 3042 0dd5 01       		.byte	0x1
 3043 0dd6 42       		.byte	0x42
 3044 0dd7 200C0000 		.4byte	0xc20
 3045 0ddb CB000000 		.4byte	.LLST6
 3046 0ddf 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 115


 3047 0de0 15       		.uleb128 0x15
 3048 0de1 04       		.byte	0x4
 3049 0de2 E60D0000 		.4byte	0xde6
 3050 0de6 06       		.uleb128 0x6
 3051 0de7 270C0000 		.4byte	0xc27
 3052 0deb 1D       		.uleb128 0x1d
 3053 0dec 21060000 		.4byte	.LASF255
 3054 0df0 01       		.byte	0x1
 3055 0df1 B3       		.byte	0xb3
 3056 0df2 DD090000 		.4byte	0x9dd
 3057 0df6 00000000 		.4byte	.LFB193
 3058 0dfa 5C000000 		.4byte	.LFE193-.LFB193
 3059 0dfe 01       		.uleb128 0x1
 3060 0dff 9C       		.byte	0x9c
 3061 0e00 3D0E0000 		.4byte	0xe3d
 3062 0e04 1E       		.uleb128 0x1e
 3063 0e05 AB040000 		.4byte	.LASF179
 3064 0e09 01       		.byte	0x1
 3065 0e0a B3       		.byte	0xb3
 3066 0e0b 7B0C0000 		.4byte	0xc7b
 3067 0e0f E8000000 		.4byte	.LLST7
 3068 0e13 1F       		.uleb128 0x1f
 3069 0e14 91120000 		.4byte	.LASF256
 3070 0e18 01       		.byte	0x1
 3071 0e19 B3       		.byte	0xb3
 3072 0e1a 200C0000 		.4byte	0xc20
 3073 0e1e 01       		.uleb128 0x1
 3074 0e1f 51       		.byte	0x51
 3075 0e20 21       		.uleb128 0x21
 3076 0e21 D6040000 		.4byte	.LASF249
 3077 0e25 01       		.byte	0x1
 3078 0e26 B7       		.byte	0xb7
 3079 0e27 DD090000 		.4byte	0x9dd
 3080 0e2b 01       		.uleb128 0x1
 3081 0e2c 50       		.byte	0x50
 3082 0e2d 20       		.uleb128 0x20
 3083 0e2e 81000000 		.4byte	.LASF241
 3084 0e32 01       		.byte	0x1
 3085 0e33 B8       		.byte	0xb8
 3086 0e34 AD000000 		.4byte	0xad
 3087 0e38 3B010000 		.4byte	.LLST8
 3088 0e3c 00       		.byte	0
 3089 0e3d 22       		.uleb128 0x22
 3090 0e3e 630C0000 		.4byte	0xc63
 3091 0e42 00000000 		.4byte	.LFB194
 3092 0e46 1E000000 		.4byte	.LFE194-.LFB194
 3093 0e4a 01       		.uleb128 0x1
 3094 0e4b 9C       		.byte	0x9c
 3095 0e4c 780E0000 		.4byte	0xe78
 3096 0e50 23       		.uleb128 0x23
 3097 0e51 6F0C0000 		.4byte	0xc6f
 3098 0e55 4E010000 		.4byte	.LLST9
 3099 0e59 24       		.uleb128 0x24
 3100 0e5a 06000000 		.4byte	.LBB8
 3101 0e5e 18000000 		.4byte	.LBE8-.LBB8
 3102 0e62 25       		.uleb128 0x25
 3103 0e63 6F0C0000 		.4byte	0xc6f
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 116


 3104 0e67 26       		.uleb128 0x26
 3105 0e68 1C000000 		.4byte	.LVL20
 3106 0e6c C9160000 		.4byte	0x16c9
 3107 0e70 27       		.uleb128 0x27
 3108 0e71 01       		.uleb128 0x1
 3109 0e72 50       		.byte	0x50
 3110 0e73 01       		.uleb128 0x1
 3111 0e74 32       		.byte	0x32
 3112 0e75 00       		.byte	0
 3113 0e76 00       		.byte	0
 3114 0e77 00       		.byte	0
 3115 0e78 22       		.uleb128 0x22
 3116 0e79 A70C0000 		.4byte	0xca7
 3117 0e7d 00000000 		.4byte	.LFB196
 3118 0e81 30000000 		.4byte	.LFE196-.LFB196
 3119 0e85 01       		.uleb128 0x1
 3120 0e86 9C       		.byte	0x9c
 3121 0e87 DF0E0000 		.4byte	0xedf
 3122 0e8b 23       		.uleb128 0x23
 3123 0e8c B40C0000 		.4byte	0xcb4
 3124 0e90 7A010000 		.4byte	.LLST10
 3125 0e94 24       		.uleb128 0x24
 3126 0e95 16000000 		.4byte	.LBB14
 3127 0e99 1A000000 		.4byte	.LBE14-.LBB14
 3128 0e9d 23       		.uleb128 0x23
 3129 0e9e B40C0000 		.4byte	0xcb4
 3130 0ea2 A6010000 		.4byte	.LLST11
 3131 0ea6 28       		.uleb128 0x28
 3132 0ea7 810C0000 		.4byte	0xc81
 3133 0eab 20000000 		.4byte	.LBB16
 3134 0eaf 10000000 		.4byte	.LBE16-.LBB16
 3135 0eb3 01       		.byte	0x1
 3136 0eb4 5401     		.2byte	0x154
 3137 0eb6 CD0E0000 		.4byte	0xecd
 3138 0eba 23       		.uleb128 0x23
 3139 0ebb 9A0C0000 		.4byte	0xc9a
 3140 0ebf C4010000 		.4byte	.LLST12
 3141 0ec3 23       		.uleb128 0x23
 3142 0ec4 8E0C0000 		.4byte	0xc8e
 3143 0ec8 D8010000 		.4byte	.LLST13
 3144 0ecc 00       		.byte	0
 3145 0ecd 29       		.uleb128 0x29
 3146 0ece 1A000000 		.4byte	.LVL23
 3147 0ed2 630C0000 		.4byte	0xc63
 3148 0ed6 27       		.uleb128 0x27
 3149 0ed7 01       		.uleb128 0x1
 3150 0ed8 50       		.byte	0x50
 3151 0ed9 02       		.uleb128 0x2
 3152 0eda 74       		.byte	0x74
 3153 0edb 00       		.sleb128 0
 3154 0edc 00       		.byte	0
 3155 0edd 00       		.byte	0
 3156 0ede 00       		.byte	0
 3157 0edf 22       		.uleb128 0x22
 3158 0ee0 810C0000 		.4byte	0xc81
 3159 0ee4 00000000 		.4byte	.LFB197
 3160 0ee8 14000000 		.4byte	.LFE197-.LFB197
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 117


 3161 0eec 01       		.uleb128 0x1
 3162 0eed 9C       		.byte	0x9c
 3163 0eee 010F0000 		.4byte	0xf01
 3164 0ef2 2A       		.uleb128 0x2a
 3165 0ef3 8E0C0000 		.4byte	0xc8e
 3166 0ef7 01       		.uleb128 0x1
 3167 0ef8 50       		.byte	0x50
 3168 0ef9 2A       		.uleb128 0x2a
 3169 0efa 9A0C0000 		.4byte	0xc9a
 3170 0efe 01       		.uleb128 0x1
 3171 0eff 51       		.byte	0x51
 3172 0f00 00       		.byte	0
 3173 0f01 2B       		.uleb128 0x2b
 3174 0f02 40130000 		.4byte	.LASF257
 3175 0f06 01       		.byte	0x1
 3176 0f07 9301     		.2byte	0x193
 3177 0f09 00000000 		.4byte	.LFB198
 3178 0f0d 10000000 		.4byte	.LFE198-.LFB198
 3179 0f11 01       		.uleb128 0x1
 3180 0f12 9C       		.byte	0x9c
 3181 0f13 260F0000 		.4byte	0xf26
 3182 0f17 2C       		.uleb128 0x2c
 3183 0f18 AB040000 		.4byte	.LASF179
 3184 0f1c 01       		.byte	0x1
 3185 0f1d 9301     		.2byte	0x193
 3186 0f1f 7B0C0000 		.4byte	0xc7b
 3187 0f23 01       		.uleb128 0x1
 3188 0f24 50       		.byte	0x50
 3189 0f25 00       		.byte	0
 3190 0f26 2B       		.uleb128 0x2b
 3191 0f27 960E0000 		.4byte	.LASF258
 3192 0f2b 01       		.byte	0x1
 3193 0f2c 0F01     		.2byte	0x10f
 3194 0f2e 00000000 		.4byte	.LFB195
 3195 0f32 3C000000 		.4byte	.LFE195-.LFB195
 3196 0f36 01       		.uleb128 0x1
 3197 0f37 9C       		.byte	0x9c
 3198 0f38 6E0F0000 		.4byte	0xf6e
 3199 0f3c 2D       		.uleb128 0x2d
 3200 0f3d AB040000 		.4byte	.LASF179
 3201 0f41 01       		.byte	0x1
 3202 0f42 0F01     		.2byte	0x10f
 3203 0f44 7B0C0000 		.4byte	0xc7b
 3204 0f48 EB010000 		.4byte	.LLST14
 3205 0f4c 2E       		.uleb128 0x2e
 3206 0f4d F00C0000 		.4byte	.LASF259
 3207 0f51 01       		.byte	0x1
 3208 0f52 1101     		.2byte	0x111
 3209 0f54 D9000000 		.4byte	0xd9
 3210 0f58 0C020000 		.4byte	.LLST15
 3211 0f5c 29       		.uleb128 0x29
 3212 0f5d 20000000 		.4byte	.LVL32
 3213 0f61 010F0000 		.4byte	0xf01
 3214 0f65 27       		.uleb128 0x27
 3215 0f66 01       		.uleb128 0x1
 3216 0f67 50       		.byte	0x50
 3217 0f68 03       		.uleb128 0x3
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 118


 3218 0f69 F3       		.byte	0xf3
 3219 0f6a 01       		.uleb128 0x1
 3220 0f6b 50       		.byte	0x50
 3221 0f6c 00       		.byte	0
 3222 0f6d 00       		.byte	0
 3223 0f6e 2B       		.uleb128 0x2b
 3224 0f6f C1080000 		.4byte	.LASF260
 3225 0f73 01       		.byte	0x1
 3226 0f74 B701     		.2byte	0x1b7
 3227 0f76 00000000 		.4byte	.LFB199
 3228 0f7a 0C000000 		.4byte	.LFE199-.LFB199
 3229 0f7e 01       		.uleb128 0x1
 3230 0f7f 9C       		.byte	0x9c
 3231 0f80 B30F0000 		.4byte	0xfb3
 3232 0f84 2C       		.uleb128 0x2c
 3233 0f85 AB040000 		.4byte	.LASF179
 3234 0f89 01       		.byte	0x1
 3235 0f8a B701     		.2byte	0x1b7
 3236 0f8c 7B0C0000 		.4byte	0xc7b
 3237 0f90 01       		.uleb128 0x1
 3238 0f91 50       		.byte	0x50
 3239 0f92 2D       		.uleb128 0x2d
 3240 0f93 910E0000 		.4byte	.LASF261
 3241 0f97 01       		.byte	0x1
 3242 0f98 B701     		.2byte	0x1b7
 3243 0f9a 050B0000 		.4byte	0xb05
 3244 0f9e 36020000 		.4byte	.LLST16
 3245 0fa2 2E       		.uleb128 0x2e
 3246 0fa3 83120000 		.4byte	.LASF262
 3247 0fa7 01       		.byte	0x1
 3248 0fa8 BC01     		.2byte	0x1bc
 3249 0faa D9000000 		.4byte	0xd9
 3250 0fae 57020000 		.4byte	.LLST17
 3251 0fb2 00       		.byte	0
 3252 0fb3 2F       		.uleb128 0x2f
 3253 0fb4 AA130000 		.4byte	.LASF263
 3254 0fb8 01       		.byte	0x1
 3255 0fb9 DE01     		.2byte	0x1de
 3256 0fbb DD090000 		.4byte	0x9dd
 3257 0fbf 00000000 		.4byte	.LFB200
 3258 0fc3 44000000 		.4byte	.LFE200-.LFB200
 3259 0fc7 01       		.uleb128 0x1
 3260 0fc8 9C       		.byte	0x9c
 3261 0fc9 1C100000 		.4byte	0x101c
 3262 0fcd 2D       		.uleb128 0x2d
 3263 0fce AB040000 		.4byte	.LASF179
 3264 0fd2 01       		.byte	0x1
 3265 0fd3 DE01     		.2byte	0x1de
 3266 0fd5 7B0C0000 		.4byte	0xc7b
 3267 0fd9 7C020000 		.4byte	.LLST18
 3268 0fdd 2C       		.uleb128 0x2c
 3269 0fde FA100000 		.4byte	.LASF264
 3270 0fe2 01       		.byte	0x1
 3271 0fe3 DE01     		.2byte	0x1de
 3272 0fe5 290A0000 		.4byte	0xa29
 3273 0fe9 01       		.uleb128 0x1
 3274 0fea 51       		.byte	0x51
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 119


 3275 0feb 2E       		.uleb128 0x2e
 3276 0fec D6040000 		.4byte	.LASF249
 3277 0ff0 01       		.byte	0x1
 3278 0ff1 E201     		.2byte	0x1e2
 3279 0ff3 DD090000 		.4byte	0x9dd
 3280 0ff7 CF020000 		.4byte	.LLST19
 3281 0ffb 2E       		.uleb128 0x2e
 3282 0ffc 48110000 		.4byte	.LASF265
 3283 1000 01       		.byte	0x1
 3284 1001 E401     		.2byte	0x1e4
 3285 1003 D9000000 		.4byte	0xd9
 3286 1007 EE020000 		.4byte	.LLST20
 3287 100b 30       		.uleb128 0x30
 3288 100c 77647400 		.ascii	"wdt\000"
 3289 1010 01       		.byte	0x1
 3290 1011 E501     		.2byte	0x1e5
 3291 1013 D9000000 		.4byte	0xd9
 3292 1017 17030000 		.4byte	.LLST21
 3293 101b 00       		.byte	0
 3294 101c 2F       		.uleb128 0x2f
 3295 101d CD030000 		.4byte	.LASF266
 3296 1021 01       		.byte	0x1
 3297 1022 5202     		.2byte	0x252
 3298 1024 200C0000 		.4byte	0xc20
 3299 1028 00000000 		.4byte	.LFB202
 3300 102c 1A000000 		.4byte	.LFE202-.LFB202
 3301 1030 01       		.uleb128 0x1
 3302 1031 9C       		.byte	0x9c
 3303 1032 67100000 		.4byte	0x1067
 3304 1036 2D       		.uleb128 0x2d
 3305 1037 AB040000 		.4byte	.LASF179
 3306 103b 01       		.byte	0x1
 3307 103c 5202     		.2byte	0x252
 3308 103e F70C0000 		.4byte	0xcf7
 3309 1042 6F030000 		.4byte	.LLST22
 3310 1046 2D       		.uleb128 0x2d
 3311 1047 81000000 		.4byte	.LASF241
 3312 104b 01       		.byte	0x1
 3313 104c 5202     		.2byte	0x252
 3314 104e D9000000 		.4byte	0xd9
 3315 1052 A9030000 		.4byte	.LLST23
 3316 1056 2E       		.uleb128 0x2e
 3317 1057 B7050000 		.4byte	.LASF267
 3318 105b 01       		.byte	0x1
 3319 105c 5602     		.2byte	0x256
 3320 105e 200C0000 		.4byte	0xc20
 3321 1062 D4030000 		.4byte	.LLST24
 3322 1066 00       		.byte	0
 3323 1067 31       		.uleb128 0x31
 3324 1068 C40B0000 		.4byte	.LASF307
 3325 106c 02       		.byte	0x2
 3326 106d FD07     		.2byte	0x7fd
 3327 106f 200C0000 		.4byte	0xc20
 3328 1073 03       		.byte	0x3
 3329 1074 91100000 		.4byte	0x1091
 3330 1078 1A       		.uleb128 0x1a
 3331 1079 AB040000 		.4byte	.LASF179
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 120


 3332 107d 02       		.byte	0x2
 3333 107e FD07     		.2byte	0x7fd
 3334 1080 F70C0000 		.4byte	0xcf7
 3335 1084 1A       		.uleb128 0x1a
 3336 1085 81000000 		.4byte	.LASF241
 3337 1089 02       		.byte	0x2
 3338 108a FD07     		.2byte	0x7fd
 3339 108c D9000000 		.4byte	0xd9
 3340 1090 00       		.byte	0
 3341 1091 22       		.uleb128 0x22
 3342 1092 C10C0000 		.4byte	0xcc1
 3343 1096 00000000 		.4byte	.LFB201
 3344 109a 22000000 		.4byte	.LFE201-.LFB201
 3345 109e 01       		.uleb128 0x1
 3346 109f 9C       		.byte	0x9c
 3347 10a0 2A110000 		.4byte	0x112a
 3348 10a4 23       		.uleb128 0x23
 3349 10a5 D20C0000 		.4byte	0xcd2
 3350 10a9 F3030000 		.4byte	.LLST25
 3351 10ad 23       		.uleb128 0x23
 3352 10ae DE0C0000 		.4byte	0xcde
 3353 10b2 2A040000 		.4byte	.LLST26
 3354 10b6 32       		.uleb128 0x32
 3355 10b7 EA0C0000 		.4byte	0xcea
 3356 10bb 56040000 		.4byte	.LLST27
 3357 10bf 28       		.uleb128 0x28
 3358 10c0 67100000 		.4byte	0x1067
 3359 10c4 08000000 		.4byte	.LBB22
 3360 10c8 04000000 		.4byte	.LBE22-.LBB22
 3361 10cc 01       		.byte	0x1
 3362 10cd 2A02     		.2byte	0x22a
 3363 10cf FE100000 		.4byte	0x10fe
 3364 10d3 23       		.uleb128 0x23
 3365 10d4 84100000 		.4byte	0x1084
 3366 10d8 75040000 		.4byte	.LLST28
 3367 10dc 23       		.uleb128 0x23
 3368 10dd 78100000 		.4byte	0x1078
 3369 10e1 96040000 		.4byte	.LLST29
 3370 10e5 29       		.uleb128 0x29
 3371 10e6 0C000000 		.4byte	.LVL58
 3372 10ea 1C100000 		.4byte	0x101c
 3373 10ee 27       		.uleb128 0x27
 3374 10ef 01       		.uleb128 0x1
 3375 10f0 50       		.byte	0x50
 3376 10f1 03       		.uleb128 0x3
 3377 10f2 F3       		.byte	0xf3
 3378 10f3 01       		.uleb128 0x1
 3379 10f4 50       		.byte	0x50
 3380 10f5 27       		.uleb128 0x27
 3381 10f6 01       		.uleb128 0x1
 3382 10f7 51       		.byte	0x51
 3383 10f8 03       		.uleb128 0x3
 3384 10f9 F3       		.byte	0xf3
 3385 10fa 01       		.uleb128 0x1
 3386 10fb 51       		.byte	0x51
 3387 10fc 00       		.byte	0
 3388 10fd 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 121


 3389 10fe 24       		.uleb128 0x24
 3390 10ff 0E000000 		.4byte	.LBB24
 3391 1103 08000000 		.4byte	.LBE24-.LBB24
 3392 1107 23       		.uleb128 0x23
 3393 1108 DE0C0000 		.4byte	0xcde
 3394 110c B7040000 		.4byte	.LLST30
 3395 1110 23       		.uleb128 0x23
 3396 1111 D20C0000 		.4byte	0xcd2
 3397 1115 CD040000 		.4byte	.LLST31
 3398 1119 24       		.uleb128 0x24
 3399 111a 0E000000 		.4byte	.LBB25
 3400 111e 08000000 		.4byte	.LBE25-.LBB25
 3401 1122 33       		.uleb128 0x33
 3402 1123 EA0C0000 		.4byte	0xcea
 3403 1127 00       		.byte	0
 3404 1128 00       		.byte	0
 3405 1129 00       		.byte	0
 3406 112a 2F       		.uleb128 0x2f
 3407 112b B90F0000 		.4byte	.LASF268
 3408 112f 01       		.byte	0x1
 3409 1130 7902     		.2byte	0x279
 3410 1132 B8000000 		.4byte	0xb8
 3411 1136 00000000 		.4byte	.LFB203
 3412 113a 12000000 		.4byte	.LFE203-.LFB203
 3413 113e 01       		.uleb128 0x1
 3414 113f 9C       		.byte	0x9c
 3415 1140 75110000 		.4byte	0x1175
 3416 1144 2D       		.uleb128 0x2d
 3417 1145 AB040000 		.4byte	.LASF179
 3418 1149 01       		.byte	0x1
 3419 114a 7902     		.2byte	0x279
 3420 114c F70C0000 		.4byte	0xcf7
 3421 1150 E0040000 		.4byte	.LLST32
 3422 1154 2D       		.uleb128 0x2d
 3423 1155 81000000 		.4byte	.LASF241
 3424 1159 01       		.byte	0x1
 3425 115a 7902     		.2byte	0x279
 3426 115c D9000000 		.4byte	0xd9
 3427 1160 01050000 		.4byte	.LLST33
 3428 1164 2E       		.uleb128 0x2e
 3429 1165 0C100000 		.4byte	.LASF269
 3430 1169 01       		.byte	0x1
 3431 116a 7D02     		.2byte	0x27d
 3432 116c D9000000 		.4byte	0xd9
 3433 1170 22050000 		.4byte	.LLST34
 3434 1174 00       		.byte	0
 3435 1175 2F       		.uleb128 0x2f
 3436 1176 32120000 		.4byte	.LASF270
 3437 117a 01       		.byte	0x1
 3438 117b 9E02     		.2byte	0x29e
 3439 117d CE000000 		.4byte	0xce
 3440 1181 00000000 		.4byte	.LFB204
 3441 1185 22000000 		.4byte	.LFE204-.LFB204
 3442 1189 01       		.uleb128 0x1
 3443 118a 9C       		.byte	0x9c
 3444 118b F5110000 		.4byte	0x11f5
 3445 118f 2D       		.uleb128 0x2d
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 122


 3446 1190 AB040000 		.4byte	.LASF179
 3447 1194 01       		.byte	0x1
 3448 1195 9E02     		.2byte	0x29e
 3449 1197 F70C0000 		.4byte	0xcf7
 3450 119b 41050000 		.4byte	.LLST35
 3451 119f 2D       		.uleb128 0x2d
 3452 11a0 81000000 		.4byte	.LASF241
 3453 11a4 01       		.byte	0x1
 3454 11a5 9E02     		.2byte	0x29e
 3455 11a7 D9000000 		.4byte	0xd9
 3456 11ab 62050000 		.4byte	.LLST36
 3457 11af 34       		.uleb128 0x34
 3458 11b0 0C100000 		.4byte	.LASF269
 3459 11b4 01       		.byte	0x1
 3460 11b5 A202     		.2byte	0x2a2
 3461 11b7 D9000000 		.4byte	0xd9
 3462 11bb 00       		.byte	0
 3463 11bc 2E       		.uleb128 0x2e
 3464 11bd C1030000 		.4byte	.LASF271
 3465 11c1 01       		.byte	0x1
 3466 11c2 A302     		.2byte	0x2a3
 3467 11c4 B8000000 		.4byte	0xb8
 3468 11c8 83050000 		.4byte	.LLST37
 3469 11cc 2E       		.uleb128 0x2e
 3470 11cd 86000000 		.4byte	.LASF272
 3471 11d1 01       		.byte	0x1
 3472 11d2 A402     		.2byte	0x2a4
 3473 11d4 CE000000 		.4byte	0xce
 3474 11d8 97050000 		.4byte	.LLST38
 3475 11dc 29       		.uleb128 0x29
 3476 11dd 18000000 		.4byte	.LVL70
 3477 11e1 C10C0000 		.4byte	0xcc1
 3478 11e5 27       		.uleb128 0x27
 3479 11e6 01       		.uleb128 0x1
 3480 11e7 50       		.byte	0x50
 3481 11e8 03       		.uleb128 0x3
 3482 11e9 F3       		.byte	0xf3
 3483 11ea 01       		.uleb128 0x1
 3484 11eb 50       		.byte	0x50
 3485 11ec 27       		.uleb128 0x27
 3486 11ed 01       		.uleb128 0x1
 3487 11ee 51       		.byte	0x51
 3488 11ef 03       		.uleb128 0x3
 3489 11f0 F3       		.byte	0xf3
 3490 11f1 01       		.uleb128 0x1
 3491 11f2 51       		.byte	0x51
 3492 11f3 00       		.byte	0
 3493 11f4 00       		.byte	0
 3494 11f5 2B       		.uleb128 0x2b
 3495 11f6 78030000 		.4byte	.LASF273
 3496 11fa 01       		.byte	0x1
 3497 11fb CF02     		.2byte	0x2cf
 3498 11fd 00000000 		.4byte	.LFB205
 3499 1201 0E000000 		.4byte	.LFE205-.LFB205
 3500 1205 01       		.uleb128 0x1
 3501 1206 9C       		.byte	0x9c
 3502 1207 38120000 		.4byte	0x1238
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 123


 3503 120b 2C       		.uleb128 0x2c
 3504 120c AB040000 		.4byte	.LASF179
 3505 1210 01       		.byte	0x1
 3506 1211 CF02     		.2byte	0x2cf
 3507 1213 7B0C0000 		.4byte	0xc7b
 3508 1217 01       		.uleb128 0x1
 3509 1218 50       		.byte	0x50
 3510 1219 2D       		.uleb128 0x2d
 3511 121a 22000000 		.4byte	.LASF274
 3512 121e 01       		.byte	0x1
 3513 121f CF02     		.2byte	0x2cf
 3514 1221 D9000000 		.4byte	0xd9
 3515 1225 B5050000 		.4byte	.LLST39
 3516 1229 35       		.uleb128 0x35
 3517 122a 14000000 		.4byte	.LASF275
 3518 122e 01       		.byte	0x1
 3519 122f D302     		.2byte	0x2d3
 3520 1231 D9000000 		.4byte	0xd9
 3521 1235 01       		.uleb128 0x1
 3522 1236 53       		.byte	0x53
 3523 1237 00       		.byte	0
 3524 1238 2B       		.uleb128 0x2b
 3525 1239 DE070000 		.4byte	.LASF276
 3526 123d 01       		.byte	0x1
 3527 123e F202     		.2byte	0x2f2
 3528 1240 00000000 		.4byte	.LFB206
 3529 1244 0C000000 		.4byte	.LFE206-.LFB206
 3530 1248 01       		.uleb128 0x1
 3531 1249 9C       		.byte	0x9c
 3532 124a 7D120000 		.4byte	0x127d
 3533 124e 2C       		.uleb128 0x2c
 3534 124f AB040000 		.4byte	.LASF179
 3535 1253 01       		.byte	0x1
 3536 1254 F202     		.2byte	0x2f2
 3537 1256 7B0C0000 		.4byte	0xc7b
 3538 125a 01       		.uleb128 0x1
 3539 125b 50       		.byte	0x50
 3540 125c 2D       		.uleb128 0x2d
 3541 125d A70E0000 		.4byte	.LASF277
 3542 1261 01       		.byte	0x1
 3543 1262 F202     		.2byte	0x2f2
 3544 1264 D9000000 		.4byte	0xd9
 3545 1268 D6050000 		.4byte	.LLST40
 3546 126c 2E       		.uleb128 0x2e
 3547 126d 14000000 		.4byte	.LASF275
 3548 1271 01       		.byte	0x1
 3549 1272 F602     		.2byte	0x2f6
 3550 1274 D9000000 		.4byte	0xd9
 3551 1278 F7050000 		.4byte	.LLST41
 3552 127c 00       		.byte	0
 3553 127d 2F       		.uleb128 0x2f
 3554 127e D6120000 		.4byte	.LASF278
 3555 1282 01       		.byte	0x1
 3556 1283 1803     		.2byte	0x318
 3557 1285 DD090000 		.4byte	0x9dd
 3558 1289 00000000 		.4byte	.LFB207
 3559 128d 18000000 		.4byte	.LFE207-.LFB207
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 124


 3560 1291 01       		.uleb128 0x1
 3561 1292 9C       		.byte	0x9c
 3562 1293 C6120000 		.4byte	0x12c6
 3563 1297 2D       		.uleb128 0x2d
 3564 1298 81000000 		.4byte	.LASF241
 3565 129c 01       		.byte	0x1
 3566 129d 1803     		.2byte	0x318
 3567 129f D9000000 		.4byte	0xd9
 3568 12a3 15060000 		.4byte	.LLST42
 3569 12a7 2C       		.uleb128 0x2c
 3570 12a8 18050000 		.4byte	.LASF279
 3571 12ac 01       		.byte	0x1
 3572 12ad 1803     		.2byte	0x318
 3573 12af B8000000 		.4byte	0xb8
 3574 12b3 01       		.uleb128 0x1
 3575 12b4 51       		.byte	0x51
 3576 12b5 2E       		.uleb128 0x2e
 3577 12b6 D6040000 		.4byte	.LASF249
 3578 12ba 01       		.byte	0x1
 3579 12bb 1C03     		.2byte	0x31c
 3580 12bd DD090000 		.4byte	0x9dd
 3581 12c1 36060000 		.4byte	.LLST43
 3582 12c5 00       		.byte	0
 3583 12c6 2F       		.uleb128 0x2f
 3584 12c7 160F0000 		.4byte	.LASF280
 3585 12cb 01       		.byte	0x1
 3586 12cc 4203     		.2byte	0x342
 3587 12ce DD090000 		.4byte	0x9dd
 3588 12d2 00000000 		.4byte	.LFB208
 3589 12d6 18000000 		.4byte	.LFE208-.LFB208
 3590 12da 01       		.uleb128 0x1
 3591 12db 9C       		.byte	0x9c
 3592 12dc 0F130000 		.4byte	0x130f
 3593 12e0 2D       		.uleb128 0x2d
 3594 12e1 81000000 		.4byte	.LASF241
 3595 12e5 01       		.byte	0x1
 3596 12e6 4203     		.2byte	0x342
 3597 12e8 D9000000 		.4byte	0xd9
 3598 12ec 65060000 		.4byte	.LLST44
 3599 12f0 2C       		.uleb128 0x2c
 3600 12f1 6B010000 		.4byte	.LASF281
 3601 12f5 01       		.byte	0x1
 3602 12f6 4203     		.2byte	0x342
 3603 12f8 CE000000 		.4byte	0xce
 3604 12fc 01       		.uleb128 0x1
 3605 12fd 51       		.byte	0x51
 3606 12fe 2E       		.uleb128 0x2e
 3607 12ff D6040000 		.4byte	.LASF249
 3608 1303 01       		.byte	0x1
 3609 1304 4603     		.2byte	0x346
 3610 1306 DD090000 		.4byte	0x9dd
 3611 130a 86060000 		.4byte	.LLST45
 3612 130e 00       		.byte	0
 3613 130f 22       		.uleb128 0x22
 3614 1310 020D0000 		.4byte	0xd02
 3615 1314 00000000 		.4byte	.LFB209
 3616 1318 60000000 		.4byte	.LFE209-.LFB209
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 125


 3617 131c 01       		.uleb128 0x1
 3618 131d 9C       		.byte	0x9c
 3619 131e 99130000 		.4byte	0x1399
 3620 1322 23       		.uleb128 0x23
 3621 1323 130D0000 		.4byte	0xd13
 3622 1327 B5060000 		.4byte	.LLST46
 3623 132b 23       		.uleb128 0x23
 3624 132c 1F0D0000 		.4byte	0xd1f
 3625 1330 D6060000 		.4byte	.LLST47
 3626 1334 23       		.uleb128 0x23
 3627 1335 2B0D0000 		.4byte	0xd2b
 3628 1339 02070000 		.4byte	.LLST48
 3629 133d 33       		.uleb128 0x33
 3630 133e 370D0000 		.4byte	0xd37
 3631 1342 33       		.uleb128 0x33
 3632 1343 430D0000 		.4byte	0xd43
 3633 1347 24       		.uleb128 0x24
 3634 1348 0A000000 		.4byte	.LBB28
 3635 134c 4C000000 		.4byte	.LBE28-.LBB28
 3636 1350 23       		.uleb128 0x23
 3637 1351 2B0D0000 		.4byte	0xd2b
 3638 1355 2E070000 		.4byte	.LLST49
 3639 1359 23       		.uleb128 0x23
 3640 135a 1F0D0000 		.4byte	0xd1f
 3641 135e 57070000 		.4byte	.LLST50
 3642 1362 23       		.uleb128 0x23
 3643 1363 130D0000 		.4byte	0xd13
 3644 1367 75070000 		.4byte	.LLST51
 3645 136b 24       		.uleb128 0x24
 3646 136c 0A000000 		.4byte	.LBB29
 3647 1370 4C000000 		.4byte	.LBE29-.LBB29
 3648 1374 32       		.uleb128 0x32
 3649 1375 370D0000 		.4byte	0xd37
 3650 1379 96070000 		.4byte	.LLST52
 3651 137d 32       		.uleb128 0x32
 3652 137e 430D0000 		.4byte	0xd43
 3653 1382 A9070000 		.4byte	.LLST53
 3654 1386 29       		.uleb128 0x29
 3655 1387 3C000000 		.4byte	.LVL98
 3656 138b C10C0000 		.4byte	0xcc1
 3657 138f 27       		.uleb128 0x27
 3658 1390 01       		.uleb128 0x1
 3659 1391 51       		.byte	0x51
 3660 1392 02       		.uleb128 0x2
 3661 1393 76       		.byte	0x76
 3662 1394 00       		.sleb128 0
 3663 1395 00       		.byte	0
 3664 1396 00       		.byte	0
 3665 1397 00       		.byte	0
 3666 1398 00       		.byte	0
 3667 1399 2F       		.uleb128 0x2f
 3668 139a 95100000 		.4byte	.LASF282
 3669 139e 01       		.byte	0x1
 3670 139f DA03     		.2byte	0x3da
 3671 13a1 D1080000 		.4byte	0x8d1
 3672 13a5 00000000 		.4byte	.LFB210
 3673 13a9 48000000 		.4byte	.LFE210-.LFB210
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 126


 3674 13ad 01       		.uleb128 0x1
 3675 13ae 9C       		.byte	0x9c
 3676 13af 0B140000 		.4byte	0x140b
 3677 13b3 2D       		.uleb128 0x2d
 3678 13b4 AB040000 		.4byte	.LASF179
 3679 13b8 01       		.byte	0x1
 3680 13b9 DA03     		.2byte	0x3da
 3681 13bb F70C0000 		.4byte	0xcf7
 3682 13bf CD070000 		.4byte	.LLST54
 3683 13c3 2D       		.uleb128 0x2d
 3684 13c4 81000000 		.4byte	.LASF241
 3685 13c8 01       		.byte	0x1
 3686 13c9 DA03     		.2byte	0x3da
 3687 13cb D9000000 		.4byte	0xd9
 3688 13cf 07080000 		.4byte	.LLST55
 3689 13d3 2D       		.uleb128 0x2d
 3690 13d4 10010000 		.4byte	.LASF244
 3691 13d8 01       		.byte	0x1
 3692 13d9 DA03     		.2byte	0x3da
 3693 13db B8000000 		.4byte	0xb8
 3694 13df 49080000 		.4byte	.LLST56
 3695 13e3 2E       		.uleb128 0x2e
 3696 13e4 60060000 		.4byte	.LASF283
 3697 13e8 01       		.byte	0x1
 3698 13e9 DE03     		.2byte	0x3de
 3699 13eb D1080000 		.4byte	0x8d1
 3700 13ef 80080000 		.4byte	.LLST57
 3701 13f3 29       		.uleb128 0x29
 3702 13f4 12000000 		.4byte	.LVL107
 3703 13f8 020D0000 		.4byte	0xd02
 3704 13fc 27       		.uleb128 0x27
 3705 13fd 01       		.uleb128 0x1
 3706 13fe 50       		.byte	0x50
 3707 13ff 03       		.uleb128 0x3
 3708 1400 F3       		.byte	0xf3
 3709 1401 01       		.uleb128 0x1
 3710 1402 50       		.byte	0x50
 3711 1403 27       		.uleb128 0x27
 3712 1404 01       		.uleb128 0x1
 3713 1405 51       		.byte	0x51
 3714 1406 02       		.uleb128 0x2
 3715 1407 74       		.byte	0x74
 3716 1408 00       		.sleb128 0
 3717 1409 00       		.byte	0
 3718 140a 00       		.byte	0
 3719 140b 2F       		.uleb128 0x2f
 3720 140c BF060000 		.4byte	.LASF284
 3721 1410 01       		.byte	0x1
 3722 1411 1D04     		.2byte	0x41d
 3723 1413 B8000000 		.4byte	0xb8
 3724 1417 00000000 		.4byte	.LFB211
 3725 141b 44000000 		.4byte	.LFE211-.LFB211
 3726 141f 01       		.uleb128 0x1
 3727 1420 9C       		.byte	0x9c
 3728 1421 7D140000 		.4byte	0x147d
 3729 1425 2D       		.uleb128 0x2d
 3730 1426 AB040000 		.4byte	.LASF179
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 127


 3731 142a 01       		.byte	0x1
 3732 142b 1D04     		.2byte	0x41d
 3733 142d F70C0000 		.4byte	0xcf7
 3734 1431 CC080000 		.4byte	.LLST58
 3735 1435 2D       		.uleb128 0x2d
 3736 1436 81000000 		.4byte	.LASF241
 3737 143a 01       		.byte	0x1
 3738 143b 1D04     		.2byte	0x41d
 3739 143d D9000000 		.4byte	0xd9
 3740 1441 06090000 		.4byte	.LLST59
 3741 1445 2D       		.uleb128 0x2d
 3742 1446 10010000 		.4byte	.LASF244
 3743 144a 01       		.byte	0x1
 3744 144b 1D04     		.2byte	0x41d
 3745 144d B8000000 		.4byte	0xb8
 3746 1451 48090000 		.4byte	.LLST60
 3747 1455 2E       		.uleb128 0x2e
 3748 1456 FF0B0000 		.4byte	.LASF285
 3749 145a 01       		.byte	0x1
 3750 145b 2104     		.2byte	0x421
 3751 145d CE000000 		.4byte	0xce
 3752 1461 7F090000 		.4byte	.LLST61
 3753 1465 29       		.uleb128 0x29
 3754 1466 12000000 		.4byte	.LVL114
 3755 146a 020D0000 		.4byte	0xd02
 3756 146e 27       		.uleb128 0x27
 3757 146f 01       		.uleb128 0x1
 3758 1470 50       		.byte	0x50
 3759 1471 03       		.uleb128 0x3
 3760 1472 F3       		.byte	0xf3
 3761 1473 01       		.uleb128 0x1
 3762 1474 50       		.byte	0x50
 3763 1475 27       		.uleb128 0x27
 3764 1476 01       		.uleb128 0x1
 3765 1477 51       		.byte	0x51
 3766 1478 02       		.uleb128 0x2
 3767 1479 74       		.byte	0x74
 3768 147a 00       		.sleb128 0
 3769 147b 00       		.byte	0
 3770 147c 00       		.byte	0
 3771 147d 36       		.uleb128 0x36
 3772 147e 36050000 		.4byte	.LASF286
 3773 1482 01       		.byte	0x1
 3774 1483 6804     		.2byte	0x468
 3775 1485 CE000000 		.4byte	0xce
 3776 1489 00000000 		.4byte	.LFB212
 3777 148d 3C000000 		.4byte	.LFE212-.LFB212
 3778 1491 01       		.uleb128 0x1
 3779 1492 9C       		.byte	0x9c
 3780 1493 EF140000 		.4byte	0x14ef
 3781 1497 2D       		.uleb128 0x2d
 3782 1498 AB040000 		.4byte	.LASF179
 3783 149c 01       		.byte	0x1
 3784 149d 6804     		.2byte	0x468
 3785 149f F70C0000 		.4byte	0xcf7
 3786 14a3 C0090000 		.4byte	.LLST62
 3787 14a7 2D       		.uleb128 0x2d
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 128


 3788 14a8 81000000 		.4byte	.LASF241
 3789 14ac 01       		.byte	0x1
 3790 14ad 6804     		.2byte	0x468
 3791 14af D9000000 		.4byte	0xd9
 3792 14b3 FA090000 		.4byte	.LLST63
 3793 14b7 2D       		.uleb128 0x2d
 3794 14b8 10010000 		.4byte	.LASF244
 3795 14bc 01       		.byte	0x1
 3796 14bd 6804     		.2byte	0x468
 3797 14bf B8000000 		.4byte	0xb8
 3798 14c3 230A0000 		.4byte	.LLST64
 3799 14c7 2E       		.uleb128 0x2e
 3800 14c8 A0080000 		.4byte	.LASF287
 3801 14cc 01       		.byte	0x1
 3802 14cd 6C04     		.2byte	0x46c
 3803 14cf E4000000 		.4byte	0xe4
 3804 14d3 650A0000 		.4byte	.LLST65
 3805 14d7 29       		.uleb128 0x29
 3806 14d8 12000000 		.4byte	.LVL125
 3807 14dc 020D0000 		.4byte	0xd02
 3808 14e0 27       		.uleb128 0x27
 3809 14e1 01       		.uleb128 0x1
 3810 14e2 50       		.byte	0x50
 3811 14e3 03       		.uleb128 0x3
 3812 14e4 F3       		.byte	0xf3
 3813 14e5 01       		.uleb128 0x1
 3814 14e6 50       		.byte	0x50
 3815 14e7 27       		.uleb128 0x27
 3816 14e8 01       		.uleb128 0x1
 3817 14e9 51       		.byte	0x51
 3818 14ea 02       		.uleb128 0x2
 3819 14eb 74       		.byte	0x74
 3820 14ec 00       		.sleb128 0
 3821 14ed 00       		.byte	0
 3822 14ee 00       		.byte	0
 3823 14ef 2B       		.uleb128 0x2b
 3824 14f0 2B110000 		.4byte	.LASF288
 3825 14f4 01       		.byte	0x1
 3826 14f5 9C04     		.2byte	0x49c
 3827 14f7 00000000 		.4byte	.LFB213
 3828 14fb 14000000 		.4byte	.LFE213-.LFB213
 3829 14ff 01       		.uleb128 0x1
 3830 1500 9C       		.byte	0x9c
 3831 1501 64150000 		.4byte	0x1564
 3832 1505 2C       		.uleb128 0x2c
 3833 1506 AB040000 		.4byte	.LASF179
 3834 150a 01       		.byte	0x1
 3835 150b 9C04     		.2byte	0x49c
 3836 150d 7B0C0000 		.4byte	0xc7b
 3837 1511 01       		.uleb128 0x1
 3838 1512 50       		.byte	0x50
 3839 1513 2C       		.uleb128 0x2c
 3840 1514 E5000000 		.4byte	.LASF289
 3841 1518 01       		.byte	0x1
 3842 1519 9C04     		.2byte	0x49c
 3843 151b 950A0000 		.4byte	0xa95
 3844 151f 01       		.uleb128 0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 129


 3845 1520 51       		.byte	0x51
 3846 1521 2D       		.uleb128 0x2d
 3847 1522 5A0D0000 		.4byte	.LASF290
 3848 1526 01       		.byte	0x1
 3849 1527 9C04     		.2byte	0x49c
 3850 1529 D9000000 		.4byte	0xd9
 3851 152d A50A0000 		.4byte	.LLST66
 3852 1531 2D       		.uleb128 0x2d
 3853 1532 42110000 		.4byte	.LASF291
 3854 1536 01       		.byte	0x1
 3855 1537 9C04     		.2byte	0x49c
 3856 1539 4F0A0000 		.4byte	0xa4f
 3857 153d C60A0000 		.4byte	.LLST67
 3858 1541 35       		.uleb128 0x35
 3859 1542 5B0A0000 		.4byte	.LASF292
 3860 1546 01       		.byte	0x1
 3861 1547 A204     		.2byte	0x4a2
 3862 1549 64150000 		.4byte	0x1564
 3863 154d 04       		.uleb128 0x4
 3864 154e 70       		.byte	0x70
 3865 154f 8006     		.sleb128 768
 3866 1551 9F       		.byte	0x9f
 3867 1552 35       		.uleb128 0x35
 3868 1553 FF020000 		.4byte	.LASF293
 3869 1557 01       		.byte	0x1
 3870 1558 A304     		.2byte	0x4a3
 3871 155a 64150000 		.4byte	0x1564
 3872 155e 04       		.uleb128 0x4
 3873 155f 70       		.byte	0x70
 3874 1560 8406     		.sleb128 772
 3875 1562 9F       		.byte	0x9f
 3876 1563 00       		.byte	0
 3877 1564 15       		.uleb128 0x15
 3878 1565 04       		.byte	0x4
 3879 1566 FD000000 		.4byte	0xfd
 3880 156a 2F       		.uleb128 0x2f
 3881 156b 44080000 		.4byte	.LASF294
 3882 156f 01       		.byte	0x1
 3883 1570 CA04     		.2byte	0x4ca
 3884 1572 D9000000 		.4byte	0xd9
 3885 1576 00000000 		.4byte	.LFB214
 3886 157a 06000000 		.4byte	.LFE214-.LFB214
 3887 157e 01       		.uleb128 0x1
 3888 157f 9C       		.byte	0x9c
 3889 1580 A3150000 		.4byte	0x15a3
 3890 1584 2D       		.uleb128 0x2d
 3891 1585 AB040000 		.4byte	.LASF179
 3892 1589 01       		.byte	0x1
 3893 158a CA04     		.2byte	0x4ca
 3894 158c F70C0000 		.4byte	0xcf7
 3895 1590 E70A0000 		.4byte	.LLST68
 3896 1594 2C       		.uleb128 0x2c
 3897 1595 E5000000 		.4byte	.LASF289
 3898 1599 01       		.byte	0x1
 3899 159a CA04     		.2byte	0x4ca
 3900 159c 950A0000 		.4byte	0xa95
 3901 15a0 01       		.uleb128 0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 130


 3902 15a1 51       		.byte	0x51
 3903 15a2 00       		.byte	0
 3904 15a3 2B       		.uleb128 0x2b
 3905 15a4 F7060000 		.4byte	.LASF295
 3906 15a8 01       		.byte	0x1
 3907 15a9 EB04     		.2byte	0x4eb
 3908 15ab 00000000 		.4byte	.LFB215
 3909 15af 14000000 		.4byte	.LFE215-.LFB215
 3910 15b3 01       		.uleb128 0x1
 3911 15b4 9C       		.byte	0x9c
 3912 15b5 E6150000 		.4byte	0x15e6
 3913 15b9 2C       		.uleb128 0x2c
 3914 15ba AB040000 		.4byte	.LASF179
 3915 15be 01       		.byte	0x1
 3916 15bf EB04     		.2byte	0x4eb
 3917 15c1 7B0C0000 		.4byte	0xc7b
 3918 15c5 01       		.uleb128 0x1
 3919 15c6 50       		.byte	0x50
 3920 15c7 2D       		.uleb128 0x2d
 3921 15c8 5A0D0000 		.4byte	.LASF290
 3922 15cc 01       		.byte	0x1
 3923 15cd EB04     		.2byte	0x4eb
 3924 15cf D9000000 		.4byte	0xd9
 3925 15d3 080B0000 		.4byte	.LLST69
 3926 15d7 2C       		.uleb128 0x2c
 3927 15d8 A6050000 		.4byte	.LASF217
 3928 15dc 01       		.byte	0x1
 3929 15dd EB04     		.2byte	0x4eb
 3930 15df 750A0000 		.4byte	0xa75
 3931 15e3 01       		.uleb128 0x1
 3932 15e4 52       		.byte	0x52
 3933 15e5 00       		.byte	0
 3934 15e6 2F       		.uleb128 0x2f
 3935 15e7 26040000 		.4byte	.LASF296
 3936 15eb 01       		.byte	0x1
 3937 15ec 1205     		.2byte	0x512
 3938 15ee 38090000 		.4byte	0x938
 3939 15f2 00000000 		.4byte	.LFB216
 3940 15f6 1C000000 		.4byte	.LFE216-.LFB216
 3941 15fa 01       		.uleb128 0x1
 3942 15fb 9C       		.byte	0x9c
 3943 15fc 40160000 		.4byte	0x1640
 3944 1600 2D       		.uleb128 0x2d
 3945 1601 DB110000 		.4byte	.LASF297
 3946 1605 01       		.byte	0x1
 3947 1606 1205     		.2byte	0x512
 3948 1608 A8090000 		.4byte	0x9a8
 3949 160c 290B0000 		.4byte	.LLST70
 3950 1610 2D       		.uleb128 0x2d
 3951 1611 910E0000 		.4byte	.LASF261
 3952 1615 01       		.byte	0x1
 3953 1616 1205     		.2byte	0x512
 3954 1618 6A090000 		.4byte	0x96a
 3955 161c 630B0000 		.4byte	.LLST71
 3956 1620 34       		.uleb128 0x34
 3957 1621 D80A0000 		.4byte	.LASF298
 3958 1625 01       		.byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 131


 3959 1626 1405     		.2byte	0x514
 3960 1628 38090000 		.4byte	0x938
 3961 162c 00       		.byte	0
 3962 162d 37       		.uleb128 0x37
 3963 162e 0C000000 		.4byte	.LVL141
 3964 1632 260F0000 		.4byte	0xf26
 3965 1636 37       		.uleb128 0x37
 3966 1637 18000000 		.4byte	.LVL144
 3967 163b A70C0000 		.4byte	0xca7
 3968 163f 00       		.byte	0
 3969 1640 21       		.uleb128 0x21
 3970 1641 73130000 		.4byte	.LASF299
 3971 1645 01       		.byte	0x1
 3972 1646 16       		.byte	0x16
 3973 1647 570C0000 		.4byte	0xc57
 3974 164b 05       		.uleb128 0x5
 3975 164c 03       		.byte	0x3
 3976 164d 00000000 		.4byte	enabledBeforeSleep
 3977 1651 38       		.uleb128 0x38
 3978 1652 E30C0000 		.4byte	.LASF300
 3979 1656 0A       		.byte	0xa
 3980 1657 F907     		.2byte	0x7f9
 3981 1659 5D160000 		.4byte	0x165d
 3982 165d 05       		.uleb128 0x5
 3983 165e CE000000 		.4byte	0xce
 3984 1662 39       		.uleb128 0x39
 3985 1663 77000000 		.4byte	.LASF301
 3986 1667 07       		.byte	0x7
 3987 1668 A7       		.byte	0xa7
 3988 1669 6D160000 		.4byte	0x166d
 3989 166d 15       		.uleb128 0x15
 3990 166e 04       		.byte	0x4
 3991 166f 73160000 		.4byte	0x1673
 3992 1673 06       		.uleb128 0x6
 3993 1674 BF080000 		.4byte	0x8bf
 3994 1678 07       		.uleb128 0x7
 3995 1679 88160000 		.4byte	0x1688
 3996 167d 88160000 		.4byte	0x1688
 3997 1681 08       		.uleb128 0x8
 3998 1682 F6000000 		.4byte	0xf6
 3999 1686 0F       		.byte	0xf
 4000 1687 00       		.byte	0
 4001 1688 05       		.uleb128 0x5
 4002 1689 B8000000 		.4byte	0xb8
 4003 168d 3A       		.uleb128 0x3a
 4004 168e 79090000 		.4byte	.LASF302
 4005 1692 01       		.byte	0x1
 4006 1693 1C       		.byte	0x1c
 4007 1694 9E160000 		.4byte	0x169e
 4008 1698 05       		.uleb128 0x5
 4009 1699 03       		.byte	0x3
 4010 169a 00000000 		.4byte	Cy_SAR_offset
 4011 169e 05       		.uleb128 0x5
 4012 169f 78160000 		.4byte	0x1678
 4013 16a3 07       		.uleb128 0x7
 4014 16a4 5D160000 		.4byte	0x165d
 4015 16a8 B3160000 		.4byte	0x16b3
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 132


 4016 16ac 08       		.uleb128 0x8
 4017 16ad F6000000 		.4byte	0xf6
 4018 16b1 0F       		.byte	0xf
 4019 16b2 00       		.byte	0
 4020 16b3 3A       		.uleb128 0x3a
 4021 16b4 A00A0000 		.4byte	.LASF303
 4022 16b8 01       		.byte	0x1
 4023 16b9 1D       		.byte	0x1d
 4024 16ba C4160000 		.4byte	0x16c4
 4025 16be 05       		.uleb128 0x5
 4026 16bf 03       		.byte	0x3
 4027 16c0 00000000 		.4byte	Cy_SAR_countsPer10Volt
 4028 16c4 05       		.uleb128 0x5
 4029 16c5 A3160000 		.4byte	0x16a3
 4030 16c9 3B       		.uleb128 0x3b
 4031 16ca 3D100000 		.4byte	.LASF308
 4032 16ce 3D100000 		.4byte	.LASF308
 4033 16d2 08       		.byte	0x8
 4034 16d3 8A03     		.2byte	0x38a
 4035 16d5 00       		.byte	0
 4036              		.section	.debug_abbrev,"",%progbits
 4037              	.Ldebug_abbrev0:
 4038 0000 01       		.uleb128 0x1
 4039 0001 11       		.uleb128 0x11
 4040 0002 01       		.byte	0x1
 4041 0003 25       		.uleb128 0x25
 4042 0004 0E       		.uleb128 0xe
 4043 0005 13       		.uleb128 0x13
 4044 0006 0B       		.uleb128 0xb
 4045 0007 03       		.uleb128 0x3
 4046 0008 0E       		.uleb128 0xe
 4047 0009 1B       		.uleb128 0x1b
 4048 000a 0E       		.uleb128 0xe
 4049 000b 55       		.uleb128 0x55
 4050 000c 17       		.uleb128 0x17
 4051 000d 11       		.uleb128 0x11
 4052 000e 01       		.uleb128 0x1
 4053 000f 10       		.uleb128 0x10
 4054 0010 17       		.uleb128 0x17
 4055 0011 00       		.byte	0
 4056 0012 00       		.byte	0
 4057 0013 02       		.uleb128 0x2
 4058 0014 24       		.uleb128 0x24
 4059 0015 00       		.byte	0
 4060 0016 0B       		.uleb128 0xb
 4061 0017 0B       		.uleb128 0xb
 4062 0018 3E       		.uleb128 0x3e
 4063 0019 0B       		.uleb128 0xb
 4064 001a 03       		.uleb128 0x3
 4065 001b 0E       		.uleb128 0xe
 4066 001c 00       		.byte	0
 4067 001d 00       		.byte	0
 4068 001e 03       		.uleb128 0x3
 4069 001f 16       		.uleb128 0x16
 4070 0020 00       		.byte	0
 4071 0021 03       		.uleb128 0x3
 4072 0022 0E       		.uleb128 0xe
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 133


 4073 0023 3A       		.uleb128 0x3a
 4074 0024 0B       		.uleb128 0xb
 4075 0025 3B       		.uleb128 0x3b
 4076 0026 0B       		.uleb128 0xb
 4077 0027 49       		.uleb128 0x49
 4078 0028 13       		.uleb128 0x13
 4079 0029 00       		.byte	0
 4080 002a 00       		.byte	0
 4081 002b 04       		.uleb128 0x4
 4082 002c 24       		.uleb128 0x24
 4083 002d 00       		.byte	0
 4084 002e 0B       		.uleb128 0xb
 4085 002f 0B       		.uleb128 0xb
 4086 0030 3E       		.uleb128 0x3e
 4087 0031 0B       		.uleb128 0xb
 4088 0032 03       		.uleb128 0x3
 4089 0033 08       		.uleb128 0x8
 4090 0034 00       		.byte	0
 4091 0035 00       		.byte	0
 4092 0036 05       		.uleb128 0x5
 4093 0037 35       		.uleb128 0x35
 4094 0038 00       		.byte	0
 4095 0039 49       		.uleb128 0x49
 4096 003a 13       		.uleb128 0x13
 4097 003b 00       		.byte	0
 4098 003c 00       		.byte	0
 4099 003d 06       		.uleb128 0x6
 4100 003e 26       		.uleb128 0x26
 4101 003f 00       		.byte	0
 4102 0040 49       		.uleb128 0x49
 4103 0041 13       		.uleb128 0x13
 4104 0042 00       		.byte	0
 4105 0043 00       		.byte	0
 4106 0044 07       		.uleb128 0x7
 4107 0045 01       		.uleb128 0x1
 4108 0046 01       		.byte	0x1
 4109 0047 49       		.uleb128 0x49
 4110 0048 13       		.uleb128 0x13
 4111 0049 01       		.uleb128 0x1
 4112 004a 13       		.uleb128 0x13
 4113 004b 00       		.byte	0
 4114 004c 00       		.byte	0
 4115 004d 08       		.uleb128 0x8
 4116 004e 21       		.uleb128 0x21
 4117 004f 00       		.byte	0
 4118 0050 49       		.uleb128 0x49
 4119 0051 13       		.uleb128 0x13
 4120 0052 2F       		.uleb128 0x2f
 4121 0053 0B       		.uleb128 0xb
 4122 0054 00       		.byte	0
 4123 0055 00       		.byte	0
 4124 0056 09       		.uleb128 0x9
 4125 0057 13       		.uleb128 0x13
 4126 0058 01       		.byte	0x1
 4127 0059 0B       		.uleb128 0xb
 4128 005a 05       		.uleb128 0x5
 4129 005b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 134


 4130 005c 0B       		.uleb128 0xb
 4131 005d 3B       		.uleb128 0x3b
 4132 005e 0B       		.uleb128 0xb
 4133 005f 01       		.uleb128 0x1
 4134 0060 13       		.uleb128 0x13
 4135 0061 00       		.byte	0
 4136 0062 00       		.byte	0
 4137 0063 0A       		.uleb128 0xa
 4138 0064 0D       		.uleb128 0xd
 4139 0065 00       		.byte	0
 4140 0066 03       		.uleb128 0x3
 4141 0067 0E       		.uleb128 0xe
 4142 0068 3A       		.uleb128 0x3a
 4143 0069 0B       		.uleb128 0xb
 4144 006a 3B       		.uleb128 0x3b
 4145 006b 0B       		.uleb128 0xb
 4146 006c 49       		.uleb128 0x49
 4147 006d 13       		.uleb128 0x13
 4148 006e 38       		.uleb128 0x38
 4149 006f 0B       		.uleb128 0xb
 4150 0070 00       		.byte	0
 4151 0071 00       		.byte	0
 4152 0072 0B       		.uleb128 0xb
 4153 0073 0D       		.uleb128 0xd
 4154 0074 00       		.byte	0
 4155 0075 03       		.uleb128 0x3
 4156 0076 0E       		.uleb128 0xe
 4157 0077 3A       		.uleb128 0x3a
 4158 0078 0B       		.uleb128 0xb
 4159 0079 3B       		.uleb128 0x3b
 4160 007a 0B       		.uleb128 0xb
 4161 007b 49       		.uleb128 0x49
 4162 007c 13       		.uleb128 0x13
 4163 007d 38       		.uleb128 0x38
 4164 007e 05       		.uleb128 0x5
 4165 007f 00       		.byte	0
 4166 0080 00       		.byte	0
 4167 0081 0C       		.uleb128 0xc
 4168 0082 21       		.uleb128 0x21
 4169 0083 00       		.byte	0
 4170 0084 49       		.uleb128 0x49
 4171 0085 13       		.uleb128 0x13
 4172 0086 2F       		.uleb128 0x2f
 4173 0087 05       		.uleb128 0x5
 4174 0088 00       		.byte	0
 4175 0089 00       		.byte	0
 4176 008a 0D       		.uleb128 0xd
 4177 008b 16       		.uleb128 0x16
 4178 008c 00       		.byte	0
 4179 008d 03       		.uleb128 0x3
 4180 008e 0E       		.uleb128 0xe
 4181 008f 3A       		.uleb128 0x3a
 4182 0090 0B       		.uleb128 0xb
 4183 0091 3B       		.uleb128 0x3b
 4184 0092 05       		.uleb128 0x5
 4185 0093 49       		.uleb128 0x49
 4186 0094 13       		.uleb128 0x13
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 135


 4187 0095 00       		.byte	0
 4188 0096 00       		.byte	0
 4189 0097 0E       		.uleb128 0xe
 4190 0098 13       		.uleb128 0x13
 4191 0099 01       		.byte	0x1
 4192 009a 0B       		.uleb128 0xb
 4193 009b 0B       		.uleb128 0xb
 4194 009c 3A       		.uleb128 0x3a
 4195 009d 0B       		.uleb128 0xb
 4196 009e 3B       		.uleb128 0x3b
 4197 009f 0B       		.uleb128 0xb
 4198 00a0 01       		.uleb128 0x1
 4199 00a1 13       		.uleb128 0x13
 4200 00a2 00       		.byte	0
 4201 00a3 00       		.byte	0
 4202 00a4 0F       		.uleb128 0xf
 4203 00a5 04       		.uleb128 0x4
 4204 00a6 01       		.byte	0x1
 4205 00a7 0B       		.uleb128 0xb
 4206 00a8 0B       		.uleb128 0xb
 4207 00a9 49       		.uleb128 0x49
 4208 00aa 13       		.uleb128 0x13
 4209 00ab 3A       		.uleb128 0x3a
 4210 00ac 0B       		.uleb128 0xb
 4211 00ad 3B       		.uleb128 0x3b
 4212 00ae 05       		.uleb128 0x5
 4213 00af 01       		.uleb128 0x1
 4214 00b0 13       		.uleb128 0x13
 4215 00b1 00       		.byte	0
 4216 00b2 00       		.byte	0
 4217 00b3 10       		.uleb128 0x10
 4218 00b4 28       		.uleb128 0x28
 4219 00b5 00       		.byte	0
 4220 00b6 03       		.uleb128 0x3
 4221 00b7 0E       		.uleb128 0xe
 4222 00b8 1C       		.uleb128 0x1c
 4223 00b9 0B       		.uleb128 0xb
 4224 00ba 00       		.byte	0
 4225 00bb 00       		.byte	0
 4226 00bc 11       		.uleb128 0x11
 4227 00bd 28       		.uleb128 0x28
 4228 00be 00       		.byte	0
 4229 00bf 03       		.uleb128 0x3
 4230 00c0 0E       		.uleb128 0xe
 4231 00c1 1C       		.uleb128 0x1c
 4232 00c2 06       		.uleb128 0x6
 4233 00c3 00       		.byte	0
 4234 00c4 00       		.byte	0
 4235 00c5 12       		.uleb128 0x12
 4236 00c6 13       		.uleb128 0x13
 4237 00c7 01       		.byte	0x1
 4238 00c8 0B       		.uleb128 0xb
 4239 00c9 0B       		.uleb128 0xb
 4240 00ca 3A       		.uleb128 0x3a
 4241 00cb 0B       		.uleb128 0xb
 4242 00cc 3B       		.uleb128 0x3b
 4243 00cd 05       		.uleb128 0x5
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 136


 4244 00ce 01       		.uleb128 0x1
 4245 00cf 13       		.uleb128 0x13
 4246 00d0 00       		.byte	0
 4247 00d1 00       		.byte	0
 4248 00d2 13       		.uleb128 0x13
 4249 00d3 0D       		.uleb128 0xd
 4250 00d4 00       		.byte	0
 4251 00d5 03       		.uleb128 0x3
 4252 00d6 0E       		.uleb128 0xe
 4253 00d7 3A       		.uleb128 0x3a
 4254 00d8 0B       		.uleb128 0xb
 4255 00d9 3B       		.uleb128 0x3b
 4256 00da 05       		.uleb128 0x5
 4257 00db 49       		.uleb128 0x49
 4258 00dc 13       		.uleb128 0x13
 4259 00dd 38       		.uleb128 0x38
 4260 00de 0B       		.uleb128 0xb
 4261 00df 00       		.byte	0
 4262 00e0 00       		.byte	0
 4263 00e1 14       		.uleb128 0x14
 4264 00e2 0F       		.uleb128 0xf
 4265 00e3 00       		.byte	0
 4266 00e4 0B       		.uleb128 0xb
 4267 00e5 0B       		.uleb128 0xb
 4268 00e6 00       		.byte	0
 4269 00e7 00       		.byte	0
 4270 00e8 15       		.uleb128 0x15
 4271 00e9 0F       		.uleb128 0xf
 4272 00ea 00       		.byte	0
 4273 00eb 0B       		.uleb128 0xb
 4274 00ec 0B       		.uleb128 0xb
 4275 00ed 49       		.uleb128 0x49
 4276 00ee 13       		.uleb128 0x13
 4277 00ef 00       		.byte	0
 4278 00f0 00       		.byte	0
 4279 00f1 16       		.uleb128 0x16
 4280 00f2 28       		.uleb128 0x28
 4281 00f3 00       		.byte	0
 4282 00f4 03       		.uleb128 0x3
 4283 00f5 0E       		.uleb128 0xe
 4284 00f6 1C       		.uleb128 0x1c
 4285 00f7 05       		.uleb128 0x5
 4286 00f8 00       		.byte	0
 4287 00f9 00       		.byte	0
 4288 00fa 17       		.uleb128 0x17
 4289 00fb 2E       		.uleb128 0x2e
 4290 00fc 01       		.byte	0x1
 4291 00fd 3F       		.uleb128 0x3f
 4292 00fe 19       		.uleb128 0x19
 4293 00ff 03       		.uleb128 0x3
 4294 0100 0E       		.uleb128 0xe
 4295 0101 3A       		.uleb128 0x3a
 4296 0102 0B       		.uleb128 0xb
 4297 0103 3B       		.uleb128 0x3b
 4298 0104 0B       		.uleb128 0xb
 4299 0105 27       		.uleb128 0x27
 4300 0106 19       		.uleb128 0x19
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 137


 4301 0107 20       		.uleb128 0x20
 4302 0108 0B       		.uleb128 0xb
 4303 0109 01       		.uleb128 0x1
 4304 010a 13       		.uleb128 0x13
 4305 010b 00       		.byte	0
 4306 010c 00       		.byte	0
 4307 010d 18       		.uleb128 0x18
 4308 010e 05       		.uleb128 0x5
 4309 010f 00       		.byte	0
 4310 0110 03       		.uleb128 0x3
 4311 0111 0E       		.uleb128 0xe
 4312 0112 3A       		.uleb128 0x3a
 4313 0113 0B       		.uleb128 0xb
 4314 0114 3B       		.uleb128 0x3b
 4315 0115 0B       		.uleb128 0xb
 4316 0116 49       		.uleb128 0x49
 4317 0117 13       		.uleb128 0x13
 4318 0118 00       		.byte	0
 4319 0119 00       		.byte	0
 4320 011a 19       		.uleb128 0x19
 4321 011b 2E       		.uleb128 0x2e
 4322 011c 01       		.byte	0x1
 4323 011d 3F       		.uleb128 0x3f
 4324 011e 19       		.uleb128 0x19
 4325 011f 03       		.uleb128 0x3
 4326 0120 0E       		.uleb128 0xe
 4327 0121 3A       		.uleb128 0x3a
 4328 0122 0B       		.uleb128 0xb
 4329 0123 3B       		.uleb128 0x3b
 4330 0124 05       		.uleb128 0x5
 4331 0125 27       		.uleb128 0x27
 4332 0126 19       		.uleb128 0x19
 4333 0127 20       		.uleb128 0x20
 4334 0128 0B       		.uleb128 0xb
 4335 0129 01       		.uleb128 0x1
 4336 012a 13       		.uleb128 0x13
 4337 012b 00       		.byte	0
 4338 012c 00       		.byte	0
 4339 012d 1A       		.uleb128 0x1a
 4340 012e 05       		.uleb128 0x5
 4341 012f 00       		.byte	0
 4342 0130 03       		.uleb128 0x3
 4343 0131 0E       		.uleb128 0xe
 4344 0132 3A       		.uleb128 0x3a
 4345 0133 0B       		.uleb128 0xb
 4346 0134 3B       		.uleb128 0x3b
 4347 0135 05       		.uleb128 0x5
 4348 0136 49       		.uleb128 0x49
 4349 0137 13       		.uleb128 0x13
 4350 0138 00       		.byte	0
 4351 0139 00       		.byte	0
 4352 013a 1B       		.uleb128 0x1b
 4353 013b 2E       		.uleb128 0x2e
 4354 013c 01       		.byte	0x1
 4355 013d 3F       		.uleb128 0x3f
 4356 013e 19       		.uleb128 0x19
 4357 013f 03       		.uleb128 0x3
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 138


 4358 0140 0E       		.uleb128 0xe
 4359 0141 3A       		.uleb128 0x3a
 4360 0142 0B       		.uleb128 0xb
 4361 0143 3B       		.uleb128 0x3b
 4362 0144 05       		.uleb128 0x5
 4363 0145 27       		.uleb128 0x27
 4364 0146 19       		.uleb128 0x19
 4365 0147 49       		.uleb128 0x49
 4366 0148 13       		.uleb128 0x13
 4367 0149 20       		.uleb128 0x20
 4368 014a 0B       		.uleb128 0xb
 4369 014b 01       		.uleb128 0x1
 4370 014c 13       		.uleb128 0x13
 4371 014d 00       		.byte	0
 4372 014e 00       		.byte	0
 4373 014f 1C       		.uleb128 0x1c
 4374 0150 34       		.uleb128 0x34
 4375 0151 00       		.byte	0
 4376 0152 03       		.uleb128 0x3
 4377 0153 0E       		.uleb128 0xe
 4378 0154 3A       		.uleb128 0x3a
 4379 0155 0B       		.uleb128 0xb
 4380 0156 3B       		.uleb128 0x3b
 4381 0157 05       		.uleb128 0x5
 4382 0158 49       		.uleb128 0x49
 4383 0159 13       		.uleb128 0x13
 4384 015a 00       		.byte	0
 4385 015b 00       		.byte	0
 4386 015c 1D       		.uleb128 0x1d
 4387 015d 2E       		.uleb128 0x2e
 4388 015e 01       		.byte	0x1
 4389 015f 3F       		.uleb128 0x3f
 4390 0160 19       		.uleb128 0x19
 4391 0161 03       		.uleb128 0x3
 4392 0162 0E       		.uleb128 0xe
 4393 0163 3A       		.uleb128 0x3a
 4394 0164 0B       		.uleb128 0xb
 4395 0165 3B       		.uleb128 0x3b
 4396 0166 0B       		.uleb128 0xb
 4397 0167 27       		.uleb128 0x27
 4398 0168 19       		.uleb128 0x19
 4399 0169 49       		.uleb128 0x49
 4400 016a 13       		.uleb128 0x13
 4401 016b 11       		.uleb128 0x11
 4402 016c 01       		.uleb128 0x1
 4403 016d 12       		.uleb128 0x12
 4404 016e 06       		.uleb128 0x6
 4405 016f 40       		.uleb128 0x40
 4406 0170 18       		.uleb128 0x18
 4407 0171 9742     		.uleb128 0x2117
 4408 0173 19       		.uleb128 0x19
 4409 0174 01       		.uleb128 0x1
 4410 0175 13       		.uleb128 0x13
 4411 0176 00       		.byte	0
 4412 0177 00       		.byte	0
 4413 0178 1E       		.uleb128 0x1e
 4414 0179 05       		.uleb128 0x5
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 139


 4415 017a 00       		.byte	0
 4416 017b 03       		.uleb128 0x3
 4417 017c 0E       		.uleb128 0xe
 4418 017d 3A       		.uleb128 0x3a
 4419 017e 0B       		.uleb128 0xb
 4420 017f 3B       		.uleb128 0x3b
 4421 0180 0B       		.uleb128 0xb
 4422 0181 49       		.uleb128 0x49
 4423 0182 13       		.uleb128 0x13
 4424 0183 02       		.uleb128 0x2
 4425 0184 17       		.uleb128 0x17
 4426 0185 00       		.byte	0
 4427 0186 00       		.byte	0
 4428 0187 1F       		.uleb128 0x1f
 4429 0188 05       		.uleb128 0x5
 4430 0189 00       		.byte	0
 4431 018a 03       		.uleb128 0x3
 4432 018b 0E       		.uleb128 0xe
 4433 018c 3A       		.uleb128 0x3a
 4434 018d 0B       		.uleb128 0xb
 4435 018e 3B       		.uleb128 0x3b
 4436 018f 0B       		.uleb128 0xb
 4437 0190 49       		.uleb128 0x49
 4438 0191 13       		.uleb128 0x13
 4439 0192 02       		.uleb128 0x2
 4440 0193 18       		.uleb128 0x18
 4441 0194 00       		.byte	0
 4442 0195 00       		.byte	0
 4443 0196 20       		.uleb128 0x20
 4444 0197 34       		.uleb128 0x34
 4445 0198 00       		.byte	0
 4446 0199 03       		.uleb128 0x3
 4447 019a 0E       		.uleb128 0xe
 4448 019b 3A       		.uleb128 0x3a
 4449 019c 0B       		.uleb128 0xb
 4450 019d 3B       		.uleb128 0x3b
 4451 019e 0B       		.uleb128 0xb
 4452 019f 49       		.uleb128 0x49
 4453 01a0 13       		.uleb128 0x13
 4454 01a1 02       		.uleb128 0x2
 4455 01a2 17       		.uleb128 0x17
 4456 01a3 00       		.byte	0
 4457 01a4 00       		.byte	0
 4458 01a5 21       		.uleb128 0x21
 4459 01a6 34       		.uleb128 0x34
 4460 01a7 00       		.byte	0
 4461 01a8 03       		.uleb128 0x3
 4462 01a9 0E       		.uleb128 0xe
 4463 01aa 3A       		.uleb128 0x3a
 4464 01ab 0B       		.uleb128 0xb
 4465 01ac 3B       		.uleb128 0x3b
 4466 01ad 0B       		.uleb128 0xb
 4467 01ae 49       		.uleb128 0x49
 4468 01af 13       		.uleb128 0x13
 4469 01b0 02       		.uleb128 0x2
 4470 01b1 18       		.uleb128 0x18
 4471 01b2 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 140


 4472 01b3 00       		.byte	0
 4473 01b4 22       		.uleb128 0x22
 4474 01b5 2E       		.uleb128 0x2e
 4475 01b6 01       		.byte	0x1
 4476 01b7 31       		.uleb128 0x31
 4477 01b8 13       		.uleb128 0x13
 4478 01b9 11       		.uleb128 0x11
 4479 01ba 01       		.uleb128 0x1
 4480 01bb 12       		.uleb128 0x12
 4481 01bc 06       		.uleb128 0x6
 4482 01bd 40       		.uleb128 0x40
 4483 01be 18       		.uleb128 0x18
 4484 01bf 9742     		.uleb128 0x2117
 4485 01c1 19       		.uleb128 0x19
 4486 01c2 01       		.uleb128 0x1
 4487 01c3 13       		.uleb128 0x13
 4488 01c4 00       		.byte	0
 4489 01c5 00       		.byte	0
 4490 01c6 23       		.uleb128 0x23
 4491 01c7 05       		.uleb128 0x5
 4492 01c8 00       		.byte	0
 4493 01c9 31       		.uleb128 0x31
 4494 01ca 13       		.uleb128 0x13
 4495 01cb 02       		.uleb128 0x2
 4496 01cc 17       		.uleb128 0x17
 4497 01cd 00       		.byte	0
 4498 01ce 00       		.byte	0
 4499 01cf 24       		.uleb128 0x24
 4500 01d0 0B       		.uleb128 0xb
 4501 01d1 01       		.byte	0x1
 4502 01d2 11       		.uleb128 0x11
 4503 01d3 01       		.uleb128 0x1
 4504 01d4 12       		.uleb128 0x12
 4505 01d5 06       		.uleb128 0x6
 4506 01d6 00       		.byte	0
 4507 01d7 00       		.byte	0
 4508 01d8 25       		.uleb128 0x25
 4509 01d9 05       		.uleb128 0x5
 4510 01da 00       		.byte	0
 4511 01db 31       		.uleb128 0x31
 4512 01dc 13       		.uleb128 0x13
 4513 01dd 00       		.byte	0
 4514 01de 00       		.byte	0
 4515 01df 26       		.uleb128 0x26
 4516 01e0 898201   		.uleb128 0x4109
 4517 01e3 01       		.byte	0x1
 4518 01e4 11       		.uleb128 0x11
 4519 01e5 01       		.uleb128 0x1
 4520 01e6 9542     		.uleb128 0x2115
 4521 01e8 19       		.uleb128 0x19
 4522 01e9 31       		.uleb128 0x31
 4523 01ea 13       		.uleb128 0x13
 4524 01eb 00       		.byte	0
 4525 01ec 00       		.byte	0
 4526 01ed 27       		.uleb128 0x27
 4527 01ee 8A8201   		.uleb128 0x410a
 4528 01f1 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 141


 4529 01f2 02       		.uleb128 0x2
 4530 01f3 18       		.uleb128 0x18
 4531 01f4 9142     		.uleb128 0x2111
 4532 01f6 18       		.uleb128 0x18
 4533 01f7 00       		.byte	0
 4534 01f8 00       		.byte	0
 4535 01f9 28       		.uleb128 0x28
 4536 01fa 1D       		.uleb128 0x1d
 4537 01fb 01       		.byte	0x1
 4538 01fc 31       		.uleb128 0x31
 4539 01fd 13       		.uleb128 0x13
 4540 01fe 11       		.uleb128 0x11
 4541 01ff 01       		.uleb128 0x1
 4542 0200 12       		.uleb128 0x12
 4543 0201 06       		.uleb128 0x6
 4544 0202 58       		.uleb128 0x58
 4545 0203 0B       		.uleb128 0xb
 4546 0204 59       		.uleb128 0x59
 4547 0205 05       		.uleb128 0x5
 4548 0206 01       		.uleb128 0x1
 4549 0207 13       		.uleb128 0x13
 4550 0208 00       		.byte	0
 4551 0209 00       		.byte	0
 4552 020a 29       		.uleb128 0x29
 4553 020b 898201   		.uleb128 0x4109
 4554 020e 01       		.byte	0x1
 4555 020f 11       		.uleb128 0x11
 4556 0210 01       		.uleb128 0x1
 4557 0211 31       		.uleb128 0x31
 4558 0212 13       		.uleb128 0x13
 4559 0213 00       		.byte	0
 4560 0214 00       		.byte	0
 4561 0215 2A       		.uleb128 0x2a
 4562 0216 05       		.uleb128 0x5
 4563 0217 00       		.byte	0
 4564 0218 31       		.uleb128 0x31
 4565 0219 13       		.uleb128 0x13
 4566 021a 02       		.uleb128 0x2
 4567 021b 18       		.uleb128 0x18
 4568 021c 00       		.byte	0
 4569 021d 00       		.byte	0
 4570 021e 2B       		.uleb128 0x2b
 4571 021f 2E       		.uleb128 0x2e
 4572 0220 01       		.byte	0x1
 4573 0221 3F       		.uleb128 0x3f
 4574 0222 19       		.uleb128 0x19
 4575 0223 03       		.uleb128 0x3
 4576 0224 0E       		.uleb128 0xe
 4577 0225 3A       		.uleb128 0x3a
 4578 0226 0B       		.uleb128 0xb
 4579 0227 3B       		.uleb128 0x3b
 4580 0228 05       		.uleb128 0x5
 4581 0229 27       		.uleb128 0x27
 4582 022a 19       		.uleb128 0x19
 4583 022b 11       		.uleb128 0x11
 4584 022c 01       		.uleb128 0x1
 4585 022d 12       		.uleb128 0x12
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 142


 4586 022e 06       		.uleb128 0x6
 4587 022f 40       		.uleb128 0x40
 4588 0230 18       		.uleb128 0x18
 4589 0231 9742     		.uleb128 0x2117
 4590 0233 19       		.uleb128 0x19
 4591 0234 01       		.uleb128 0x1
 4592 0235 13       		.uleb128 0x13
 4593 0236 00       		.byte	0
 4594 0237 00       		.byte	0
 4595 0238 2C       		.uleb128 0x2c
 4596 0239 05       		.uleb128 0x5
 4597 023a 00       		.byte	0
 4598 023b 03       		.uleb128 0x3
 4599 023c 0E       		.uleb128 0xe
 4600 023d 3A       		.uleb128 0x3a
 4601 023e 0B       		.uleb128 0xb
 4602 023f 3B       		.uleb128 0x3b
 4603 0240 05       		.uleb128 0x5
 4604 0241 49       		.uleb128 0x49
 4605 0242 13       		.uleb128 0x13
 4606 0243 02       		.uleb128 0x2
 4607 0244 18       		.uleb128 0x18
 4608 0245 00       		.byte	0
 4609 0246 00       		.byte	0
 4610 0247 2D       		.uleb128 0x2d
 4611 0248 05       		.uleb128 0x5
 4612 0249 00       		.byte	0
 4613 024a 03       		.uleb128 0x3
 4614 024b 0E       		.uleb128 0xe
 4615 024c 3A       		.uleb128 0x3a
 4616 024d 0B       		.uleb128 0xb
 4617 024e 3B       		.uleb128 0x3b
 4618 024f 05       		.uleb128 0x5
 4619 0250 49       		.uleb128 0x49
 4620 0251 13       		.uleb128 0x13
 4621 0252 02       		.uleb128 0x2
 4622 0253 17       		.uleb128 0x17
 4623 0254 00       		.byte	0
 4624 0255 00       		.byte	0
 4625 0256 2E       		.uleb128 0x2e
 4626 0257 34       		.uleb128 0x34
 4627 0258 00       		.byte	0
 4628 0259 03       		.uleb128 0x3
 4629 025a 0E       		.uleb128 0xe
 4630 025b 3A       		.uleb128 0x3a
 4631 025c 0B       		.uleb128 0xb
 4632 025d 3B       		.uleb128 0x3b
 4633 025e 05       		.uleb128 0x5
 4634 025f 49       		.uleb128 0x49
 4635 0260 13       		.uleb128 0x13
 4636 0261 02       		.uleb128 0x2
 4637 0262 17       		.uleb128 0x17
 4638 0263 00       		.byte	0
 4639 0264 00       		.byte	0
 4640 0265 2F       		.uleb128 0x2f
 4641 0266 2E       		.uleb128 0x2e
 4642 0267 01       		.byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 143


 4643 0268 3F       		.uleb128 0x3f
 4644 0269 19       		.uleb128 0x19
 4645 026a 03       		.uleb128 0x3
 4646 026b 0E       		.uleb128 0xe
 4647 026c 3A       		.uleb128 0x3a
 4648 026d 0B       		.uleb128 0xb
 4649 026e 3B       		.uleb128 0x3b
 4650 026f 05       		.uleb128 0x5
 4651 0270 27       		.uleb128 0x27
 4652 0271 19       		.uleb128 0x19
 4653 0272 49       		.uleb128 0x49
 4654 0273 13       		.uleb128 0x13
 4655 0274 11       		.uleb128 0x11
 4656 0275 01       		.uleb128 0x1
 4657 0276 12       		.uleb128 0x12
 4658 0277 06       		.uleb128 0x6
 4659 0278 40       		.uleb128 0x40
 4660 0279 18       		.uleb128 0x18
 4661 027a 9742     		.uleb128 0x2117
 4662 027c 19       		.uleb128 0x19
 4663 027d 01       		.uleb128 0x1
 4664 027e 13       		.uleb128 0x13
 4665 027f 00       		.byte	0
 4666 0280 00       		.byte	0
 4667 0281 30       		.uleb128 0x30
 4668 0282 34       		.uleb128 0x34
 4669 0283 00       		.byte	0
 4670 0284 03       		.uleb128 0x3
 4671 0285 08       		.uleb128 0x8
 4672 0286 3A       		.uleb128 0x3a
 4673 0287 0B       		.uleb128 0xb
 4674 0288 3B       		.uleb128 0x3b
 4675 0289 05       		.uleb128 0x5
 4676 028a 49       		.uleb128 0x49
 4677 028b 13       		.uleb128 0x13
 4678 028c 02       		.uleb128 0x2
 4679 028d 17       		.uleb128 0x17
 4680 028e 00       		.byte	0
 4681 028f 00       		.byte	0
 4682 0290 31       		.uleb128 0x31
 4683 0291 2E       		.uleb128 0x2e
 4684 0292 01       		.byte	0x1
 4685 0293 03       		.uleb128 0x3
 4686 0294 0E       		.uleb128 0xe
 4687 0295 3A       		.uleb128 0x3a
 4688 0296 0B       		.uleb128 0xb
 4689 0297 3B       		.uleb128 0x3b
 4690 0298 05       		.uleb128 0x5
 4691 0299 27       		.uleb128 0x27
 4692 029a 19       		.uleb128 0x19
 4693 029b 49       		.uleb128 0x49
 4694 029c 13       		.uleb128 0x13
 4695 029d 20       		.uleb128 0x20
 4696 029e 0B       		.uleb128 0xb
 4697 029f 01       		.uleb128 0x1
 4698 02a0 13       		.uleb128 0x13
 4699 02a1 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 144


 4700 02a2 00       		.byte	0
 4701 02a3 32       		.uleb128 0x32
 4702 02a4 34       		.uleb128 0x34
 4703 02a5 00       		.byte	0
 4704 02a6 31       		.uleb128 0x31
 4705 02a7 13       		.uleb128 0x13
 4706 02a8 02       		.uleb128 0x2
 4707 02a9 17       		.uleb128 0x17
 4708 02aa 00       		.byte	0
 4709 02ab 00       		.byte	0
 4710 02ac 33       		.uleb128 0x33
 4711 02ad 34       		.uleb128 0x34
 4712 02ae 00       		.byte	0
 4713 02af 31       		.uleb128 0x31
 4714 02b0 13       		.uleb128 0x13
 4715 02b1 00       		.byte	0
 4716 02b2 00       		.byte	0
 4717 02b3 34       		.uleb128 0x34
 4718 02b4 34       		.uleb128 0x34
 4719 02b5 00       		.byte	0
 4720 02b6 03       		.uleb128 0x3
 4721 02b7 0E       		.uleb128 0xe
 4722 02b8 3A       		.uleb128 0x3a
 4723 02b9 0B       		.uleb128 0xb
 4724 02ba 3B       		.uleb128 0x3b
 4725 02bb 05       		.uleb128 0x5
 4726 02bc 49       		.uleb128 0x49
 4727 02bd 13       		.uleb128 0x13
 4728 02be 1C       		.uleb128 0x1c
 4729 02bf 0B       		.uleb128 0xb
 4730 02c0 00       		.byte	0
 4731 02c1 00       		.byte	0
 4732 02c2 35       		.uleb128 0x35
 4733 02c3 34       		.uleb128 0x34
 4734 02c4 00       		.byte	0
 4735 02c5 03       		.uleb128 0x3
 4736 02c6 0E       		.uleb128 0xe
 4737 02c7 3A       		.uleb128 0x3a
 4738 02c8 0B       		.uleb128 0xb
 4739 02c9 3B       		.uleb128 0x3b
 4740 02ca 05       		.uleb128 0x5
 4741 02cb 49       		.uleb128 0x49
 4742 02cc 13       		.uleb128 0x13
 4743 02cd 02       		.uleb128 0x2
 4744 02ce 18       		.uleb128 0x18
 4745 02cf 00       		.byte	0
 4746 02d0 00       		.byte	0
 4747 02d1 36       		.uleb128 0x36
 4748 02d2 2E       		.uleb128 0x2e
 4749 02d3 01       		.byte	0x1
 4750 02d4 3F       		.uleb128 0x3f
 4751 02d5 19       		.uleb128 0x19
 4752 02d6 03       		.uleb128 0x3
 4753 02d7 0E       		.uleb128 0xe
 4754 02d8 3A       		.uleb128 0x3a
 4755 02d9 0B       		.uleb128 0xb
 4756 02da 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 145


 4757 02db 05       		.uleb128 0x5
 4758 02dc 27       		.uleb128 0x27
 4759 02dd 19       		.uleb128 0x19
 4760 02de 49       		.uleb128 0x49
 4761 02df 13       		.uleb128 0x13
 4762 02e0 11       		.uleb128 0x11
 4763 02e1 01       		.uleb128 0x1
 4764 02e2 12       		.uleb128 0x12
 4765 02e3 06       		.uleb128 0x6
 4766 02e4 40       		.uleb128 0x40
 4767 02e5 18       		.uleb128 0x18
 4768 02e6 9642     		.uleb128 0x2116
 4769 02e8 19       		.uleb128 0x19
 4770 02e9 01       		.uleb128 0x1
 4771 02ea 13       		.uleb128 0x13
 4772 02eb 00       		.byte	0
 4773 02ec 00       		.byte	0
 4774 02ed 37       		.uleb128 0x37
 4775 02ee 898201   		.uleb128 0x4109
 4776 02f1 00       		.byte	0
 4777 02f2 11       		.uleb128 0x11
 4778 02f3 01       		.uleb128 0x1
 4779 02f4 31       		.uleb128 0x31
 4780 02f5 13       		.uleb128 0x13
 4781 02f6 00       		.byte	0
 4782 02f7 00       		.byte	0
 4783 02f8 38       		.uleb128 0x38
 4784 02f9 34       		.uleb128 0x34
 4785 02fa 00       		.byte	0
 4786 02fb 03       		.uleb128 0x3
 4787 02fc 0E       		.uleb128 0xe
 4788 02fd 3A       		.uleb128 0x3a
 4789 02fe 0B       		.uleb128 0xb
 4790 02ff 3B       		.uleb128 0x3b
 4791 0300 05       		.uleb128 0x5
 4792 0301 49       		.uleb128 0x49
 4793 0302 13       		.uleb128 0x13
 4794 0303 3F       		.uleb128 0x3f
 4795 0304 19       		.uleb128 0x19
 4796 0305 3C       		.uleb128 0x3c
 4797 0306 19       		.uleb128 0x19
 4798 0307 00       		.byte	0
 4799 0308 00       		.byte	0
 4800 0309 39       		.uleb128 0x39
 4801 030a 34       		.uleb128 0x34
 4802 030b 00       		.byte	0
 4803 030c 03       		.uleb128 0x3
 4804 030d 0E       		.uleb128 0xe
 4805 030e 3A       		.uleb128 0x3a
 4806 030f 0B       		.uleb128 0xb
 4807 0310 3B       		.uleb128 0x3b
 4808 0311 0B       		.uleb128 0xb
 4809 0312 49       		.uleb128 0x49
 4810 0313 13       		.uleb128 0x13
 4811 0314 3F       		.uleb128 0x3f
 4812 0315 19       		.uleb128 0x19
 4813 0316 3C       		.uleb128 0x3c
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 146


 4814 0317 19       		.uleb128 0x19
 4815 0318 00       		.byte	0
 4816 0319 00       		.byte	0
 4817 031a 3A       		.uleb128 0x3a
 4818 031b 34       		.uleb128 0x34
 4819 031c 00       		.byte	0
 4820 031d 03       		.uleb128 0x3
 4821 031e 0E       		.uleb128 0xe
 4822 031f 3A       		.uleb128 0x3a
 4823 0320 0B       		.uleb128 0xb
 4824 0321 3B       		.uleb128 0x3b
 4825 0322 0B       		.uleb128 0xb
 4826 0323 49       		.uleb128 0x49
 4827 0324 13       		.uleb128 0x13
 4828 0325 3F       		.uleb128 0x3f
 4829 0326 19       		.uleb128 0x19
 4830 0327 02       		.uleb128 0x2
 4831 0328 18       		.uleb128 0x18
 4832 0329 00       		.byte	0
 4833 032a 00       		.byte	0
 4834 032b 3B       		.uleb128 0x3b
 4835 032c 2E       		.uleb128 0x2e
 4836 032d 00       		.byte	0
 4837 032e 3F       		.uleb128 0x3f
 4838 032f 19       		.uleb128 0x19
 4839 0330 3C       		.uleb128 0x3c
 4840 0331 19       		.uleb128 0x19
 4841 0332 6E       		.uleb128 0x6e
 4842 0333 0E       		.uleb128 0xe
 4843 0334 03       		.uleb128 0x3
 4844 0335 0E       		.uleb128 0xe
 4845 0336 3A       		.uleb128 0x3a
 4846 0337 0B       		.uleb128 0xb
 4847 0338 3B       		.uleb128 0x3b
 4848 0339 05       		.uleb128 0x5
 4849 033a 00       		.byte	0
 4850 033b 00       		.byte	0
 4851 033c 00       		.byte	0
 4852              		.section	.debug_loc,"",%progbits
 4853              	.Ldebug_loc0:
 4854              	.LLST0:
 4855 0000 00000000 		.4byte	.LVL0
 4856 0004 DE000000 		.4byte	.LVL7
 4857 0008 0100     		.2byte	0x1
 4858 000a 50       		.byte	0x50
 4859 000b DE000000 		.4byte	.LVL7
 4860 000f E2000000 		.4byte	.LVL8
 4861 0013 0400     		.2byte	0x4
 4862 0015 F3       		.byte	0xf3
 4863 0016 01       		.uleb128 0x1
 4864 0017 50       		.byte	0x50
 4865 0018 9F       		.byte	0x9f
 4866 0019 E2000000 		.4byte	.LVL8
 4867 001d E4000000 		.4byte	.LVL9
 4868 0021 0100     		.2byte	0x1
 4869 0023 50       		.byte	0x50
 4870 0024 E4000000 		.4byte	.LVL9
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 147


 4871 0028 F4000000 		.4byte	.LFE192
 4872 002c 0400     		.2byte	0x4
 4873 002e F3       		.byte	0xf3
 4874 002f 01       		.uleb128 0x1
 4875 0030 50       		.byte	0x50
 4876 0031 9F       		.byte	0x9f
 4877 0032 00000000 		.4byte	0
 4878 0036 00000000 		.4byte	0
 4879              	.LLST1:
 4880 003a DC000000 		.4byte	.LVL6
 4881 003e E2000000 		.4byte	.LVL8
 4882 0042 0200     		.2byte	0x2
 4883 0044 30       		.byte	0x30
 4884 0045 9F       		.byte	0x9f
 4885 0046 E4000000 		.4byte	.LVL9
 4886 004a F4000000 		.4byte	.LFE192
 4887 004e 0100     		.2byte	0x1
 4888 0050 50       		.byte	0x50
 4889 0051 00000000 		.4byte	0
 4890 0055 00000000 		.4byte	0
 4891              	.LLST2:
 4892 0059 4E000000 		.4byte	.LVL1
 4893 005d 58000000 		.4byte	.LVL2
 4894 0061 0200     		.2byte	0x2
 4895 0063 30       		.byte	0x30
 4896 0064 9F       		.byte	0x9f
 4897 0065 58000000 		.4byte	.LVL2
 4898 0069 84000000 		.4byte	.LVL4
 4899 006d 0100     		.2byte	0x1
 4900 006f 53       		.byte	0x53
 4901 0070 84000000 		.4byte	.LVL4
 4902 0074 86000000 		.4byte	.LVL5
 4903 0078 0300     		.2byte	0x3
 4904 007a 73       		.byte	0x73
 4905 007b 01       		.sleb128 1
 4906 007c 9F       		.byte	0x9f
 4907 007d 00000000 		.4byte	0
 4908 0081 00000000 		.4byte	0
 4909              	.LLST3:
 4910 0085 68000000 		.4byte	.LVL3
 4911 0089 E2000000 		.4byte	.LVL8
 4912 008d 0400     		.2byte	0x4
 4913 008f 0A       		.byte	0xa
 4914 0090 0010     		.2byte	0x1000
 4915 0092 9F       		.byte	0x9f
 4916 0093 00000000 		.4byte	0
 4917 0097 00000000 		.4byte	0
 4918              	.LLST4:
 4919 009b 4E000000 		.4byte	.LVL1
 4920 009f E2000000 		.4byte	.LVL8
 4921 00a3 0700     		.2byte	0x7
 4922 00a5 7E       		.byte	0x7e
 4923 00a6 00       		.sleb128 0
 4924 00a7 0A       		.byte	0xa
 4925 00a8 000E     		.2byte	0xe00
 4926 00aa 29       		.byte	0x29
 4927 00ab 9F       		.byte	0x9f
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 148


 4928 00ac 00000000 		.4byte	0
 4929 00b0 00000000 		.4byte	0
 4930              	.LLST5:
 4931 00b4 4E000000 		.4byte	.LVL1
 4932 00b8 E2000000 		.4byte	.LVL8
 4933 00bc 0500     		.2byte	0x5
 4934 00be 7C       		.byte	0x7c
 4935 00bf 00       		.sleb128 0
 4936 00c0 30       		.byte	0x30
 4937 00c1 2E       		.byte	0x2e
 4938 00c2 9F       		.byte	0x9f
 4939 00c3 00000000 		.4byte	0
 4940 00c7 00000000 		.4byte	0
 4941              	.LLST6:
 4942 00cb 68000000 		.4byte	.LVL3
 4943 00cf E2000000 		.4byte	.LVL8
 4944 00d3 0B00     		.2byte	0xb
 4945 00d5 77       		.byte	0x77
 4946 00d6 00       		.sleb128 0
 4947 00d7 0C       		.byte	0xc
 4948 00d8 00010001 		.4byte	0x1000100
 4949 00dc 1A       		.byte	0x1a
 4950 00dd 30       		.byte	0x30
 4951 00de 29       		.byte	0x29
 4952 00df 9F       		.byte	0x9f
 4953 00e0 00000000 		.4byte	0
 4954 00e4 00000000 		.4byte	0
 4955              	.LLST7:
 4956 00e8 00000000 		.4byte	.LVL10
 4957 00ec 4C000000 		.4byte	.LVL13
 4958 00f0 0100     		.2byte	0x1
 4959 00f2 50       		.byte	0x50
 4960 00f3 4C000000 		.4byte	.LVL13
 4961 00f7 4E000000 		.4byte	.LVL14
 4962 00fb 0400     		.2byte	0x4
 4963 00fd F3       		.byte	0xf3
 4964 00fe 01       		.uleb128 0x1
 4965 00ff 50       		.byte	0x50
 4966 0100 9F       		.byte	0x9f
 4967 0101 4E000000 		.4byte	.LVL14
 4968 0105 50000000 		.4byte	.LVL15
 4969 0109 0100     		.2byte	0x1
 4970 010b 50       		.byte	0x50
 4971 010c 50000000 		.4byte	.LVL15
 4972 0110 52000000 		.4byte	.LVL16
 4973 0114 0400     		.2byte	0x4
 4974 0116 F3       		.byte	0xf3
 4975 0117 01       		.uleb128 0x1
 4976 0118 50       		.byte	0x50
 4977 0119 9F       		.byte	0x9f
 4978 011a 52000000 		.4byte	.LVL16
 4979 011e 54000000 		.4byte	.LVL17
 4980 0122 0100     		.2byte	0x1
 4981 0124 50       		.byte	0x50
 4982 0125 54000000 		.4byte	.LVL17
 4983 0129 5C000000 		.4byte	.LFE193
 4984 012d 0400     		.2byte	0x4
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 149


 4985 012f F3       		.byte	0xf3
 4986 0130 01       		.uleb128 0x1
 4987 0131 50       		.byte	0x50
 4988 0132 9F       		.byte	0x9f
 4989 0133 00000000 		.4byte	0
 4990 0137 00000000 		.4byte	0
 4991              	.LLST8:
 4992 013b 1A000000 		.4byte	.LVL11
 4993 013f 20000000 		.4byte	.LVL12
 4994 0143 0100     		.2byte	0x1
 4995 0145 53       		.byte	0x53
 4996 0146 00000000 		.4byte	0
 4997 014a 00000000 		.4byte	0
 4998              	.LLST9:
 4999 014e 00000000 		.4byte	.LVL18
 5000 0152 18000000 		.4byte	.LVL19
 5001 0156 0100     		.2byte	0x1
 5002 0158 50       		.byte	0x50
 5003 0159 18000000 		.4byte	.LVL19
 5004 015d 1C000000 		.4byte	.LVL20
 5005 0161 0400     		.2byte	0x4
 5006 0163 F3       		.byte	0xf3
 5007 0164 01       		.uleb128 0x1
 5008 0165 50       		.byte	0x50
 5009 0166 9F       		.byte	0x9f
 5010 0167 1C000000 		.4byte	.LVL20
 5011 016b 1E000000 		.4byte	.LFE194
 5012 016f 0100     		.2byte	0x1
 5013 0171 50       		.byte	0x50
 5014 0172 00000000 		.4byte	0
 5015 0176 00000000 		.4byte	0
 5016              	.LLST10:
 5017 017a 00000000 		.4byte	.LVL21
 5018 017e 19000000 		.4byte	.LVL23-1
 5019 0182 0100     		.2byte	0x1
 5020 0184 50       		.byte	0x50
 5021 0185 19000000 		.4byte	.LVL23-1
 5022 0189 2C000000 		.4byte	.LVL26
 5023 018d 0100     		.2byte	0x1
 5024 018f 54       		.byte	0x54
 5025 0190 2C000000 		.4byte	.LVL26
 5026 0194 30000000 		.4byte	.LFE196
 5027 0198 0400     		.2byte	0x4
 5028 019a F3       		.byte	0xf3
 5029 019b 01       		.uleb128 0x1
 5030 019c 50       		.byte	0x50
 5031 019d 9F       		.byte	0x9f
 5032 019e 00000000 		.4byte	0
 5033 01a2 00000000 		.4byte	0
 5034              	.LLST11:
 5035 01a6 16000000 		.4byte	.LVL22
 5036 01aa 19000000 		.4byte	.LVL23-1
 5037 01ae 0100     		.2byte	0x1
 5038 01b0 50       		.byte	0x50
 5039 01b1 19000000 		.4byte	.LVL23-1
 5040 01b5 2A000000 		.4byte	.LVL25
 5041 01b9 0100     		.2byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 150


 5042 01bb 54       		.byte	0x54
 5043 01bc 00000000 		.4byte	0
 5044 01c0 00000000 		.4byte	0
 5045              	.LLST12:
 5046 01c4 20000000 		.4byte	.LVL24
 5047 01c8 2A000000 		.4byte	.LVL25
 5048 01cc 0200     		.2byte	0x2
 5049 01ce 31       		.byte	0x31
 5050 01cf 9F       		.byte	0x9f
 5051 01d0 00000000 		.4byte	0
 5052 01d4 00000000 		.4byte	0
 5053              	.LLST13:
 5054 01d8 20000000 		.4byte	.LVL24
 5055 01dc 2A000000 		.4byte	.LVL25
 5056 01e0 0100     		.2byte	0x1
 5057 01e2 54       		.byte	0x54
 5058 01e3 00000000 		.4byte	0
 5059 01e7 00000000 		.4byte	0
 5060              	.LLST14:
 5061 01eb 00000000 		.4byte	.LVL29
 5062 01ef 1F000000 		.4byte	.LVL32-1
 5063 01f3 0100     		.2byte	0x1
 5064 01f5 50       		.byte	0x50
 5065 01f6 1F000000 		.4byte	.LVL32-1
 5066 01fa 3C000000 		.4byte	.LFE195
 5067 01fe 0400     		.2byte	0x4
 5068 0200 F3       		.byte	0xf3
 5069 0201 01       		.uleb128 0x1
 5070 0202 50       		.byte	0x50
 5071 0203 9F       		.byte	0x9f
 5072 0204 00000000 		.4byte	0
 5073 0208 00000000 		.4byte	0
 5074              	.LLST15:
 5075 020c 02000000 		.4byte	.LVL30
 5076 0210 12000000 		.4byte	.LVL31
 5077 0214 0100     		.2byte	0x1
 5078 0216 51       		.byte	0x51
 5079 0217 12000000 		.4byte	.LVL31
 5080 021b 38000000 		.4byte	.LVL33
 5081 021f 0100     		.2byte	0x1
 5082 0221 55       		.byte	0x55
 5083 0222 38000000 		.4byte	.LVL33
 5084 0226 3C000000 		.4byte	.LFE195
 5085 022a 0200     		.2byte	0x2
 5086 022c 72       		.byte	0x72
 5087 022d 00       		.sleb128 0
 5088 022e 00000000 		.4byte	0
 5089 0232 00000000 		.4byte	0
 5090              	.LLST16:
 5091 0236 00000000 		.4byte	.LVL34
 5092 023a 08000000 		.4byte	.LVL37
 5093 023e 0100     		.2byte	0x1
 5094 0240 51       		.byte	0x51
 5095 0241 08000000 		.4byte	.LVL37
 5096 0245 0C000000 		.4byte	.LFE199
 5097 0249 0400     		.2byte	0x4
 5098 024b F3       		.byte	0xf3
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 151


 5099 024c 01       		.uleb128 0x1
 5100 024d 51       		.byte	0x51
 5101 024e 9F       		.byte	0x9f
 5102 024f 00000000 		.4byte	0
 5103 0253 00000000 		.4byte	0
 5104              	.LLST17:
 5105 0257 02000000 		.4byte	.LVL35
 5106 025b 06000000 		.4byte	.LVL36
 5107 025f 0800     		.2byte	0x8
 5108 0261 73       		.byte	0x73
 5109 0262 00       		.sleb128 0
 5110 0263 11       		.byte	0x11
 5111 0264 FFFF67   		.sleb128 -393217
 5112 0267 1A       		.byte	0x1a
 5113 0268 9F       		.byte	0x9f
 5114 0269 06000000 		.4byte	.LVL36
 5115 026d 0C000000 		.4byte	.LFE199
 5116 0271 0100     		.2byte	0x1
 5117 0273 53       		.byte	0x53
 5118 0274 00000000 		.4byte	0
 5119 0278 00000000 		.4byte	0
 5120              	.LLST18:
 5121 027c 00000000 		.4byte	.LVL38
 5122 0280 20000000 		.4byte	.LVL45
 5123 0284 0100     		.2byte	0x1
 5124 0286 50       		.byte	0x50
 5125 0287 20000000 		.4byte	.LVL45
 5126 028b 22000000 		.4byte	.LVL46
 5127 028f 0400     		.2byte	0x4
 5128 0291 F3       		.byte	0xf3
 5129 0292 01       		.uleb128 0x1
 5130 0293 50       		.byte	0x50
 5131 0294 9F       		.byte	0x9f
 5132 0295 22000000 		.4byte	.LVL46
 5133 0299 2E000000 		.4byte	.LVL47
 5134 029d 0100     		.2byte	0x1
 5135 029f 50       		.byte	0x50
 5136 02a0 2E000000 		.4byte	.LVL47
 5137 02a4 30000000 		.4byte	.LVL48
 5138 02a8 0400     		.2byte	0x4
 5139 02aa F3       		.byte	0xf3
 5140 02ab 01       		.uleb128 0x1
 5141 02ac 50       		.byte	0x50
 5142 02ad 9F       		.byte	0x9f
 5143 02ae 30000000 		.4byte	.LVL48
 5144 02b2 36000000 		.4byte	.LVL49
 5145 02b6 0100     		.2byte	0x1
 5146 02b8 50       		.byte	0x50
 5147 02b9 36000000 		.4byte	.LVL49
 5148 02bd 44000000 		.4byte	.LFE200
 5149 02c1 0400     		.2byte	0x4
 5150 02c3 F3       		.byte	0xf3
 5151 02c4 01       		.uleb128 0x1
 5152 02c5 50       		.byte	0x50
 5153 02c6 9F       		.byte	0x9f
 5154 02c7 00000000 		.4byte	0
 5155 02cb 00000000 		.4byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 152


 5156              	.LLST19:
 5157 02cf 22000000 		.4byte	.LVL46
 5158 02d3 30000000 		.4byte	.LVL48
 5159 02d7 0200     		.2byte	0x2
 5160 02d9 30       		.byte	0x30
 5161 02da 9F       		.byte	0x9f
 5162 02db 36000000 		.4byte	.LVL49
 5163 02df 44000000 		.4byte	.LFE200
 5164 02e3 0100     		.2byte	0x1
 5165 02e5 50       		.byte	0x50
 5166 02e6 00000000 		.4byte	0
 5167 02ea 00000000 		.4byte	0
 5168              	.LLST20:
 5169 02ee 0A000000 		.4byte	.LVL39
 5170 02f2 18000000 		.4byte	.LVL42
 5171 02f6 0100     		.2byte	0x1
 5172 02f8 53       		.byte	0x53
 5173 02f9 1C000000 		.4byte	.LVL43
 5174 02fd 22000000 		.4byte	.LVL46
 5175 0301 0100     		.2byte	0x1
 5176 0303 53       		.byte	0x53
 5177 0304 30000000 		.4byte	.LVL48
 5178 0308 44000000 		.4byte	.LFE200
 5179 030c 0100     		.2byte	0x1
 5180 030e 53       		.byte	0x53
 5181 030f 00000000 		.4byte	0
 5182 0313 00000000 		.4byte	0
 5183              	.LLST21:
 5184 0317 0A000000 		.4byte	.LVL39
 5185 031b 0E000000 		.4byte	.LVL40
 5186 031f 0600     		.2byte	0x6
 5187 0321 0C       		.byte	0xc
 5188 0322 55555501 		.4byte	0x1555555
 5189 0326 9F       		.byte	0x9f
 5190 0327 0E000000 		.4byte	.LVL40
 5191 032b 12000000 		.4byte	.LVL41
 5192 032f 0300     		.2byte	0x3
 5193 0331 72       		.byte	0x72
 5194 0332 7F       		.sleb128 -1
 5195 0333 9F       		.byte	0x9f
 5196 0334 12000000 		.4byte	.LVL41
 5197 0338 1C000000 		.4byte	.LVL43
 5198 033c 0100     		.2byte	0x1
 5199 033e 52       		.byte	0x52
 5200 033f 1C000000 		.4byte	.LVL43
 5201 0343 1E000000 		.4byte	.LVL44
 5202 0347 0300     		.2byte	0x3
 5203 0349 72       		.byte	0x72
 5204 034a 7F       		.sleb128 -1
 5205 034b 9F       		.byte	0x9f
 5206 034c 1E000000 		.4byte	.LVL44
 5207 0350 22000000 		.4byte	.LVL46
 5208 0354 0100     		.2byte	0x1
 5209 0356 52       		.byte	0x52
 5210 0357 30000000 		.4byte	.LVL48
 5211 035b 44000000 		.4byte	.LFE200
 5212 035f 0600     		.2byte	0x6
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 153


 5213 0361 0C       		.byte	0xc
 5214 0362 55555501 		.4byte	0x1555555
 5215 0366 9F       		.byte	0x9f
 5216 0367 00000000 		.4byte	0
 5217 036b 00000000 		.4byte	0
 5218              	.LLST22:
 5219 036f 00000000 		.4byte	.LVL50
 5220 0373 12000000 		.4byte	.LVL52
 5221 0377 0100     		.2byte	0x1
 5222 0379 50       		.byte	0x50
 5223 037a 12000000 		.4byte	.LVL52
 5224 037e 16000000 		.4byte	.LVL53
 5225 0382 0400     		.2byte	0x4
 5226 0384 F3       		.byte	0xf3
 5227 0385 01       		.uleb128 0x1
 5228 0386 50       		.byte	0x50
 5229 0387 9F       		.byte	0x9f
 5230 0388 16000000 		.4byte	.LVL53
 5231 038c 18000000 		.4byte	.LVL54
 5232 0390 0100     		.2byte	0x1
 5233 0392 50       		.byte	0x50
 5234 0393 18000000 		.4byte	.LVL54
 5235 0397 1A000000 		.4byte	.LFE202
 5236 039b 0400     		.2byte	0x4
 5237 039d F3       		.byte	0xf3
 5238 039e 01       		.uleb128 0x1
 5239 039f 50       		.byte	0x50
 5240 03a0 9F       		.byte	0x9f
 5241 03a1 00000000 		.4byte	0
 5242 03a5 00000000 		.4byte	0
 5243              	.LLST23:
 5244 03a9 00000000 		.4byte	.LVL50
 5245 03ad 06000000 		.4byte	.LVL51
 5246 03b1 0100     		.2byte	0x1
 5247 03b3 51       		.byte	0x51
 5248 03b4 06000000 		.4byte	.LVL51
 5249 03b8 16000000 		.4byte	.LVL53
 5250 03bc 0300     		.2byte	0x3
 5251 03be 71       		.byte	0x71
 5252 03bf 60       		.sleb128 -32
 5253 03c0 9F       		.byte	0x9f
 5254 03c1 16000000 		.4byte	.LVL53
 5255 03c5 1A000000 		.4byte	.LFE202
 5256 03c9 0100     		.2byte	0x1
 5257 03cb 51       		.byte	0x51
 5258 03cc 00000000 		.4byte	0
 5259 03d0 00000000 		.4byte	0
 5260              	.LLST24:
 5261 03d4 00000000 		.4byte	.LVL50
 5262 03d8 18000000 		.4byte	.LVL54
 5263 03dc 0200     		.2byte	0x2
 5264 03de 30       		.byte	0x30
 5265 03df 9F       		.byte	0x9f
 5266 03e0 18000000 		.4byte	.LVL54
 5267 03e4 1A000000 		.4byte	.LFE202
 5268 03e8 0100     		.2byte	0x1
 5269 03ea 50       		.byte	0x50
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 154


 5270 03eb 00000000 		.4byte	0
 5271 03ef 00000000 		.4byte	0
 5272              	.LLST25:
 5273 03f3 00000000 		.4byte	.LVL55
 5274 03f7 0B000000 		.4byte	.LVL58-1
 5275 03fb 0100     		.2byte	0x1
 5276 03fd 50       		.byte	0x50
 5277 03fe 0B000000 		.4byte	.LVL58-1
 5278 0402 1E000000 		.4byte	.LVL61
 5279 0406 0400     		.2byte	0x4
 5280 0408 F3       		.byte	0xf3
 5281 0409 01       		.uleb128 0x1
 5282 040a 50       		.byte	0x50
 5283 040b 9F       		.byte	0x9f
 5284 040c 1E000000 		.4byte	.LVL61
 5285 0410 20000000 		.4byte	.LVL62
 5286 0414 0100     		.2byte	0x1
 5287 0416 50       		.byte	0x50
 5288 0417 20000000 		.4byte	.LVL62
 5289 041b 22000000 		.4byte	.LFE201
 5290 041f 0100     		.2byte	0x1
 5291 0421 52       		.byte	0x52
 5292 0422 00000000 		.4byte	0
 5293 0426 00000000 		.4byte	0
 5294              	.LLST26:
 5295 042a 00000000 		.4byte	.LVL55
 5296 042e 0B000000 		.4byte	.LVL58-1
 5297 0432 0100     		.2byte	0x1
 5298 0434 51       		.byte	0x51
 5299 0435 0B000000 		.4byte	.LVL58-1
 5300 0439 1E000000 		.4byte	.LVL61
 5301 043d 0400     		.2byte	0x4
 5302 043f F3       		.byte	0xf3
 5303 0440 01       		.uleb128 0x1
 5304 0441 51       		.byte	0x51
 5305 0442 9F       		.byte	0x9f
 5306 0443 1E000000 		.4byte	.LVL61
 5307 0447 22000000 		.4byte	.LFE201
 5308 044b 0100     		.2byte	0x1
 5309 044d 51       		.byte	0x51
 5310 044e 00000000 		.4byte	0
 5311 0452 00000000 		.4byte	0
 5312              	.LLST27:
 5313 0456 06000000 		.4byte	.LVL56
 5314 045a 20000000 		.4byte	.LVL62
 5315 045e 0200     		.2byte	0x2
 5316 0460 30       		.byte	0x30
 5317 0461 9F       		.byte	0x9f
 5318 0462 20000000 		.4byte	.LVL62
 5319 0466 22000000 		.4byte	.LFE201
 5320 046a 0100     		.2byte	0x1
 5321 046c 50       		.byte	0x50
 5322 046d 00000000 		.4byte	0
 5323 0471 00000000 		.4byte	0
 5324              	.LLST28:
 5325 0475 08000000 		.4byte	.LVL57
 5326 0479 0B000000 		.4byte	.LVL58-1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 155


 5327 047d 0100     		.2byte	0x1
 5328 047f 51       		.byte	0x51
 5329 0480 0B000000 		.4byte	.LVL58-1
 5330 0484 0C000000 		.4byte	.LVL58
 5331 0488 0400     		.2byte	0x4
 5332 048a F3       		.byte	0xf3
 5333 048b 01       		.uleb128 0x1
 5334 048c 51       		.byte	0x51
 5335 048d 9F       		.byte	0x9f
 5336 048e 00000000 		.4byte	0
 5337 0492 00000000 		.4byte	0
 5338              	.LLST29:
 5339 0496 08000000 		.4byte	.LVL57
 5340 049a 0B000000 		.4byte	.LVL58-1
 5341 049e 0100     		.2byte	0x1
 5342 04a0 50       		.byte	0x50
 5343 04a1 0B000000 		.4byte	.LVL58-1
 5344 04a5 0C000000 		.4byte	.LVL58
 5345 04a9 0400     		.2byte	0x4
 5346 04ab F3       		.byte	0xf3
 5347 04ac 01       		.uleb128 0x1
 5348 04ad 50       		.byte	0x50
 5349 04ae 9F       		.byte	0x9f
 5350 04af 00000000 		.4byte	0
 5351 04b3 00000000 		.4byte	0
 5352              	.LLST30:
 5353 04b7 0E000000 		.4byte	.LVL59
 5354 04bb 16000000 		.4byte	.LVL60
 5355 04bf 0400     		.2byte	0x4
 5356 04c1 F3       		.byte	0xf3
 5357 04c2 01       		.uleb128 0x1
 5358 04c3 51       		.byte	0x51
 5359 04c4 9F       		.byte	0x9f
 5360 04c5 00000000 		.4byte	0
 5361 04c9 00000000 		.4byte	0
 5362              	.LLST31:
 5363 04cd 0E000000 		.4byte	.LVL59
 5364 04d1 16000000 		.4byte	.LVL60
 5365 04d5 0100     		.2byte	0x1
 5366 04d7 52       		.byte	0x52
 5367 04d8 00000000 		.4byte	0
 5368 04dc 00000000 		.4byte	0
 5369              	.LLST32:
 5370 04e0 00000000 		.4byte	.LVL63
 5371 04e4 08000000 		.4byte	.LVL65
 5372 04e8 0100     		.2byte	0x1
 5373 04ea 50       		.byte	0x50
 5374 04eb 08000000 		.4byte	.LVL65
 5375 04ef 12000000 		.4byte	.LFE203
 5376 04f3 0400     		.2byte	0x4
 5377 04f5 F3       		.byte	0xf3
 5378 04f6 01       		.uleb128 0x1
 5379 04f7 50       		.byte	0x50
 5380 04f8 9F       		.byte	0x9f
 5381 04f9 00000000 		.4byte	0
 5382 04fd 00000000 		.4byte	0
 5383              	.LLST33:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 156


 5384 0501 00000000 		.4byte	.LVL63
 5385 0505 06000000 		.4byte	.LVL64
 5386 0509 0100     		.2byte	0x1
 5387 050b 51       		.byte	0x51
 5388 050c 06000000 		.4byte	.LVL64
 5389 0510 12000000 		.4byte	.LFE203
 5390 0514 0400     		.2byte	0x4
 5391 0516 F3       		.byte	0xf3
 5392 0517 01       		.uleb128 0x1
 5393 0518 51       		.byte	0x51
 5394 0519 9F       		.byte	0x9f
 5395 051a 00000000 		.4byte	0
 5396 051e 00000000 		.4byte	0
 5397              	.LLST34:
 5398 0522 00000000 		.4byte	.LVL63
 5399 0526 0E000000 		.4byte	.LVL66
 5400 052a 0200     		.2byte	0x2
 5401 052c 30       		.byte	0x30
 5402 052d 9F       		.byte	0x9f
 5403 052e 0E000000 		.4byte	.LVL66
 5404 0532 10000000 		.4byte	.LVL67
 5405 0536 0100     		.2byte	0x1
 5406 0538 50       		.byte	0x50
 5407 0539 00000000 		.4byte	0
 5408 053d 00000000 		.4byte	0
 5409              	.LLST35:
 5410 0541 00000000 		.4byte	.LVL68
 5411 0545 17000000 		.4byte	.LVL70-1
 5412 0549 0100     		.2byte	0x1
 5413 054b 50       		.byte	0x50
 5414 054c 17000000 		.4byte	.LVL70-1
 5415 0550 22000000 		.4byte	.LFE204
 5416 0554 0400     		.2byte	0x4
 5417 0556 F3       		.byte	0xf3
 5418 0557 01       		.uleb128 0x1
 5419 0558 50       		.byte	0x50
 5420 0559 9F       		.byte	0x9f
 5421 055a 00000000 		.4byte	0
 5422 055e 00000000 		.4byte	0
 5423              	.LLST36:
 5424 0562 00000000 		.4byte	.LVL68
 5425 0566 17000000 		.4byte	.LVL70-1
 5426 056a 0100     		.2byte	0x1
 5427 056c 51       		.byte	0x51
 5428 056d 17000000 		.4byte	.LVL70-1
 5429 0571 22000000 		.4byte	.LFE204
 5430 0575 0400     		.2byte	0x4
 5431 0577 F3       		.byte	0xf3
 5432 0578 01       		.uleb128 0x1
 5433 0579 51       		.byte	0x51
 5434 057a 9F       		.byte	0x9f
 5435 057b 00000000 		.4byte	0
 5436 057f 00000000 		.4byte	0
 5437              	.LLST37:
 5438 0583 1A000000 		.4byte	.LVL71
 5439 0587 1E000000 		.4byte	.LVL73
 5440 058b 0200     		.2byte	0x2
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 157


 5441 058d 30       		.byte	0x30
 5442 058e 9F       		.byte	0x9f
 5443 058f 00000000 		.4byte	0
 5444 0593 00000000 		.4byte	0
 5445              	.LLST38:
 5446 0597 1C000000 		.4byte	.LVL72
 5447 059b 1E000000 		.4byte	.LVL73
 5448 059f 0100     		.2byte	0x1
 5449 05a1 50       		.byte	0x50
 5450 05a2 20000000 		.4byte	.LVL74
 5451 05a6 22000000 		.4byte	.LFE204
 5452 05aa 0100     		.2byte	0x1
 5453 05ac 50       		.byte	0x50
 5454 05ad 00000000 		.4byte	0
 5455 05b1 00000000 		.4byte	0
 5456              	.LLST39:
 5457 05b5 00000000 		.4byte	.LVL75
 5458 05b9 08000000 		.4byte	.LVL77
 5459 05bd 0100     		.2byte	0x1
 5460 05bf 51       		.byte	0x51
 5461 05c0 08000000 		.4byte	.LVL77
 5462 05c4 0E000000 		.4byte	.LFE205
 5463 05c8 0400     		.2byte	0x4
 5464 05ca F3       		.byte	0xf3
 5465 05cb 01       		.uleb128 0x1
 5466 05cc 51       		.byte	0x51
 5467 05cd 9F       		.byte	0x9f
 5468 05ce 00000000 		.4byte	0
 5469 05d2 00000000 		.4byte	0
 5470              	.LLST40:
 5471 05d6 00000000 		.4byte	.LVL79
 5472 05da 08000000 		.4byte	.LVL81
 5473 05de 0100     		.2byte	0x1
 5474 05e0 51       		.byte	0x51
 5475 05e1 08000000 		.4byte	.LVL81
 5476 05e5 0C000000 		.4byte	.LFE206
 5477 05e9 0400     		.2byte	0x4
 5478 05eb F3       		.byte	0xf3
 5479 05ec 01       		.uleb128 0x1
 5480 05ed 51       		.byte	0x51
 5481 05ee 9F       		.byte	0x9f
 5482 05ef 00000000 		.4byte	0
 5483 05f3 00000000 		.4byte	0
 5484              	.LLST41:
 5485 05f7 04000000 		.4byte	.LVL80
 5486 05fb 08000000 		.4byte	.LVL81
 5487 05ff 0100     		.2byte	0x1
 5488 0601 53       		.byte	0x53
 5489 0602 08000000 		.4byte	.LVL81
 5490 0606 0C000000 		.4byte	.LFE206
 5491 060a 0100     		.2byte	0x1
 5492 060c 51       		.byte	0x51
 5493 060d 00000000 		.4byte	0
 5494 0611 00000000 		.4byte	0
 5495              	.LLST42:
 5496 0615 00000000 		.4byte	.LVL82
 5497 0619 0C000000 		.4byte	.LVL84
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 158


 5498 061d 0100     		.2byte	0x1
 5499 061f 50       		.byte	0x50
 5500 0620 0C000000 		.4byte	.LVL84
 5501 0624 18000000 		.4byte	.LFE207
 5502 0628 0400     		.2byte	0x4
 5503 062a F3       		.byte	0xf3
 5504 062b 01       		.uleb128 0x1
 5505 062c 50       		.byte	0x50
 5506 062d 9F       		.byte	0x9f
 5507 062e 00000000 		.4byte	0
 5508 0632 00000000 		.4byte	0
 5509              	.LLST43:
 5510 0636 00000000 		.4byte	.LVL82
 5511 063a 0A000000 		.4byte	.LVL83
 5512 063e 0600     		.2byte	0x6
 5513 0640 0C       		.byte	0xc
 5514 0641 01000600 		.4byte	0x60001
 5515 0645 9F       		.byte	0x9f
 5516 0646 0A000000 		.4byte	.LVL83
 5517 064a 0E000000 		.4byte	.LVL85
 5518 064e 0200     		.2byte	0x2
 5519 0650 30       		.byte	0x30
 5520 0651 9F       		.byte	0x9f
 5521 0652 0E000000 		.4byte	.LVL85
 5522 0656 18000000 		.4byte	.LFE207
 5523 065a 0100     		.2byte	0x1
 5524 065c 50       		.byte	0x50
 5525 065d 00000000 		.4byte	0
 5526 0661 00000000 		.4byte	0
 5527              	.LLST44:
 5528 0665 00000000 		.4byte	.LVL86
 5529 0669 0C000000 		.4byte	.LVL88
 5530 066d 0100     		.2byte	0x1
 5531 066f 50       		.byte	0x50
 5532 0670 0C000000 		.4byte	.LVL88
 5533 0674 18000000 		.4byte	.LFE208
 5534 0678 0400     		.2byte	0x4
 5535 067a F3       		.byte	0xf3
 5536 067b 01       		.uleb128 0x1
 5537 067c 50       		.byte	0x50
 5538 067d 9F       		.byte	0x9f
 5539 067e 00000000 		.4byte	0
 5540 0682 00000000 		.4byte	0
 5541              	.LLST45:
 5542 0686 00000000 		.4byte	.LVL86
 5543 068a 0A000000 		.4byte	.LVL87
 5544 068e 0600     		.2byte	0x6
 5545 0690 0C       		.byte	0xc
 5546 0691 01000600 		.4byte	0x60001
 5547 0695 9F       		.byte	0x9f
 5548 0696 0A000000 		.4byte	.LVL87
 5549 069a 0E000000 		.4byte	.LVL89
 5550 069e 0200     		.2byte	0x2
 5551 06a0 30       		.byte	0x30
 5552 06a1 9F       		.byte	0x9f
 5553 06a2 0E000000 		.4byte	.LVL89
 5554 06a6 18000000 		.4byte	.LFE208
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 159


 5555 06aa 0100     		.2byte	0x1
 5556 06ac 50       		.byte	0x50
 5557 06ad 00000000 		.4byte	0
 5558 06b1 00000000 		.4byte	0
 5559              	.LLST46:
 5560 06b5 00000000 		.4byte	.LVL90
 5561 06b9 3B000000 		.4byte	.LVL98-1
 5562 06bd 0100     		.2byte	0x1
 5563 06bf 50       		.byte	0x50
 5564 06c0 3B000000 		.4byte	.LVL98-1
 5565 06c4 60000000 		.4byte	.LFE209
 5566 06c8 0400     		.2byte	0x4
 5567 06ca F3       		.byte	0xf3
 5568 06cb 01       		.uleb128 0x1
 5569 06cc 50       		.byte	0x50
 5570 06cd 9F       		.byte	0x9f
 5571 06ce 00000000 		.4byte	0
 5572 06d2 00000000 		.4byte	0
 5573              	.LLST47:
 5574 06d6 00000000 		.4byte	.LVL90
 5575 06da 0E000000 		.4byte	.LVL92
 5576 06de 0100     		.2byte	0x1
 5577 06e0 51       		.byte	0x51
 5578 06e1 0E000000 		.4byte	.LVL92
 5579 06e5 5A000000 		.4byte	.LVL105
 5580 06e9 0100     		.2byte	0x1
 5581 06eb 56       		.byte	0x56
 5582 06ec 5A000000 		.4byte	.LVL105
 5583 06f0 60000000 		.4byte	.LFE209
 5584 06f4 0400     		.2byte	0x4
 5585 06f6 F3       		.byte	0xf3
 5586 06f7 01       		.uleb128 0x1
 5587 06f8 51       		.byte	0x51
 5588 06f9 9F       		.byte	0x9f
 5589 06fa 00000000 		.4byte	0
 5590 06fe 00000000 		.4byte	0
 5591              	.LLST48:
 5592 0702 00000000 		.4byte	.LVL90
 5593 0706 1A000000 		.4byte	.LVL93
 5594 070a 0100     		.2byte	0x1
 5595 070c 52       		.byte	0x52
 5596 070d 1A000000 		.4byte	.LVL93
 5597 0711 56000000 		.4byte	.LVL104
 5598 0715 0400     		.2byte	0x4
 5599 0717 F3       		.byte	0xf3
 5600 0718 01       		.uleb128 0x1
 5601 0719 52       		.byte	0x52
 5602 071a 9F       		.byte	0x9f
 5603 071b 56000000 		.4byte	.LVL104
 5604 071f 5A000000 		.4byte	.LVL105
 5605 0723 0100     		.2byte	0x1
 5606 0725 54       		.byte	0x54
 5607 0726 00000000 		.4byte	0
 5608 072a 00000000 		.4byte	0
 5609              	.LLST49:
 5610 072e 0A000000 		.4byte	.LVL91
 5611 0732 44000000 		.4byte	.LVL99
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 160


 5612 0736 0100     		.2byte	0x1
 5613 0738 54       		.byte	0x54
 5614 0739 46000000 		.4byte	.LVL100
 5615 073d 4A000000 		.4byte	.LVL101
 5616 0741 0100     		.2byte	0x1
 5617 0743 54       		.byte	0x54
 5618 0744 4C000000 		.4byte	.LVL102
 5619 0748 54000000 		.4byte	.LVL103
 5620 074c 0100     		.2byte	0x1
 5621 074e 54       		.byte	0x54
 5622 074f 00000000 		.4byte	0
 5623 0753 00000000 		.4byte	0
 5624              	.LLST50:
 5625 0757 0A000000 		.4byte	.LVL91
 5626 075b 0E000000 		.4byte	.LVL92
 5627 075f 0100     		.2byte	0x1
 5628 0761 51       		.byte	0x51
 5629 0762 0E000000 		.4byte	.LVL92
 5630 0766 56000000 		.4byte	.LVL104
 5631 076a 0100     		.2byte	0x1
 5632 076c 56       		.byte	0x56
 5633 076d 00000000 		.4byte	0
 5634 0771 00000000 		.4byte	0
 5635              	.LLST51:
 5636 0775 0A000000 		.4byte	.LVL91
 5637 0779 3B000000 		.4byte	.LVL98-1
 5638 077d 0100     		.2byte	0x1
 5639 077f 50       		.byte	0x50
 5640 0780 3B000000 		.4byte	.LVL98-1
 5641 0784 56000000 		.4byte	.LVL104
 5642 0788 0400     		.2byte	0x4
 5643 078a F3       		.byte	0xf3
 5644 078b 01       		.uleb128 0x1
 5645 078c 50       		.byte	0x50
 5646 078d 9F       		.byte	0x9f
 5647 078e 00000000 		.4byte	0
 5648 0792 00000000 		.4byte	0
 5649              	.LLST52:
 5650 0796 44000000 		.4byte	.LVL99
 5651 079a 46000000 		.4byte	.LVL100
 5652 079e 0100     		.2byte	0x1
 5653 07a0 54       		.byte	0x54
 5654 07a1 00000000 		.4byte	0
 5655 07a5 00000000 		.4byte	0
 5656              	.LLST53:
 5657 07a9 1E000000 		.4byte	.LVL94
 5658 07ad 22000000 		.4byte	.LVL95
 5659 07b1 0700     		.2byte	0x7
 5660 07b3 75       		.byte	0x75
 5661 07b4 00       		.sleb128 0
 5662 07b5 34       		.byte	0x34
 5663 07b6 25       		.byte	0x25
 5664 07b7 37       		.byte	0x37
 5665 07b8 1A       		.byte	0x1a
 5666 07b9 9F       		.byte	0x9f
 5667 07ba 2A000000 		.4byte	.LVL96
 5668 07be 4C000000 		.4byte	.LVL102
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 161


 5669 07c2 0100     		.2byte	0x1
 5670 07c4 55       		.byte	0x55
 5671 07c5 00000000 		.4byte	0
 5672 07c9 00000000 		.4byte	0
 5673              	.LLST54:
 5674 07cd 00000000 		.4byte	.LVL106
 5675 07d1 11000000 		.4byte	.LVL107-1
 5676 07d5 0100     		.2byte	0x1
 5677 07d7 50       		.byte	0x50
 5678 07d8 11000000 		.4byte	.LVL107-1
 5679 07dc 36000000 		.4byte	.LVL110
 5680 07e0 0400     		.2byte	0x4
 5681 07e2 F3       		.byte	0xf3
 5682 07e3 01       		.uleb128 0x1
 5683 07e4 50       		.byte	0x50
 5684 07e5 9F       		.byte	0x9f
 5685 07e6 36000000 		.4byte	.LVL110
 5686 07ea 3A000000 		.4byte	.LVL111
 5687 07ee 0100     		.2byte	0x1
 5688 07f0 50       		.byte	0x50
 5689 07f1 3A000000 		.4byte	.LVL111
 5690 07f5 48000000 		.4byte	.LFE210
 5691 07f9 0400     		.2byte	0x4
 5692 07fb F3       		.byte	0xf3
 5693 07fc 01       		.uleb128 0x1
 5694 07fd 50       		.byte	0x50
 5695 07fe 9F       		.byte	0x9f
 5696 07ff 00000000 		.4byte	0
 5697 0803 00000000 		.4byte	0
 5698              	.LLST55:
 5699 0807 00000000 		.4byte	.LVL106
 5700 080b 11000000 		.4byte	.LVL107-1
 5701 080f 0100     		.2byte	0x1
 5702 0811 51       		.byte	0x51
 5703 0812 11000000 		.4byte	.LVL107-1
 5704 0816 36000000 		.4byte	.LVL110
 5705 081a 0100     		.2byte	0x1
 5706 081c 54       		.byte	0x54
 5707 081d 36000000 		.4byte	.LVL110
 5708 0821 3A000000 		.4byte	.LVL111
 5709 0825 0100     		.2byte	0x1
 5710 0827 51       		.byte	0x51
 5711 0828 3A000000 		.4byte	.LVL111
 5712 082c 40000000 		.4byte	.LVL112
 5713 0830 0100     		.2byte	0x1
 5714 0832 54       		.byte	0x54
 5715 0833 40000000 		.4byte	.LVL112
 5716 0837 48000000 		.4byte	.LFE210
 5717 083b 0400     		.2byte	0x4
 5718 083d F3       		.byte	0xf3
 5719 083e 01       		.uleb128 0x1
 5720 083f 51       		.byte	0x51
 5721 0840 9F       		.byte	0x9f
 5722 0841 00000000 		.4byte	0
 5723 0845 00000000 		.4byte	0
 5724              	.LLST56:
 5725 0849 00000000 		.4byte	.LVL106
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 162


 5726 084d 11000000 		.4byte	.LVL107-1
 5727 0851 0100     		.2byte	0x1
 5728 0853 52       		.byte	0x52
 5729 0854 11000000 		.4byte	.LVL107-1
 5730 0858 12000000 		.4byte	.LVL107
 5731 085c 0400     		.2byte	0x4
 5732 085e F3       		.byte	0xf3
 5733 085f 01       		.uleb128 0x1
 5734 0860 52       		.byte	0x52
 5735 0861 9F       		.byte	0x9f
 5736 0862 12000000 		.4byte	.LVL107
 5737 0866 36000000 		.4byte	.LVL110
 5738 086a 0100     		.2byte	0x1
 5739 086c 50       		.byte	0x50
 5740 086d 36000000 		.4byte	.LVL110
 5741 0871 3A000000 		.4byte	.LVL111
 5742 0875 0100     		.2byte	0x1
 5743 0877 52       		.byte	0x52
 5744 0878 00000000 		.4byte	0
 5745 087c 00000000 		.4byte	0
 5746              	.LLST57:
 5747 0880 00000000 		.4byte	.LVL106
 5748 0884 2C000000 		.4byte	.LVL108
 5749 0888 0600     		.2byte	0x6
 5750 088a 9E       		.byte	0x9e
 5751 088b 04       		.uleb128 0x4
 5752 088c 00000000 		.4byte	0
 5753 0890 2C000000 		.4byte	.LVL108
 5754 0894 34000000 		.4byte	.LVL109
 5755 0898 0200     		.2byte	0x2
 5756 089a 90       		.byte	0x90
 5757 089b 4D       		.uleb128 0x4d
 5758 089c 34000000 		.4byte	.LVL109
 5759 08a0 36000000 		.4byte	.LVL110
 5760 08a4 0200     		.2byte	0x2
 5761 08a6 90       		.byte	0x90
 5762 08a7 4F       		.uleb128 0x4f
 5763 08a8 36000000 		.4byte	.LVL110
 5764 08ac 3A000000 		.4byte	.LVL111
 5765 08b0 0600     		.2byte	0x6
 5766 08b2 9E       		.byte	0x9e
 5767 08b3 04       		.uleb128 0x4
 5768 08b4 00000000 		.4byte	0
 5769 08b8 3A000000 		.4byte	.LVL111
 5770 08bc 48000000 		.4byte	.LFE210
 5771 08c0 0200     		.2byte	0x2
 5772 08c2 90       		.byte	0x90
 5773 08c3 4F       		.uleb128 0x4f
 5774 08c4 00000000 		.4byte	0
 5775 08c8 00000000 		.4byte	0
 5776              	.LLST58:
 5777 08cc 00000000 		.4byte	.LVL113
 5778 08d0 11000000 		.4byte	.LVL114-1
 5779 08d4 0100     		.2byte	0x1
 5780 08d6 50       		.byte	0x50
 5781 08d7 11000000 		.4byte	.LVL114-1
 5782 08db 3A000000 		.4byte	.LVL120
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 163


 5783 08df 0400     		.2byte	0x4
 5784 08e1 F3       		.byte	0xf3
 5785 08e2 01       		.uleb128 0x1
 5786 08e3 50       		.byte	0x50
 5787 08e4 9F       		.byte	0x9f
 5788 08e5 3A000000 		.4byte	.LVL120
 5789 08e9 3C000000 		.4byte	.LVL121
 5790 08ed 0100     		.2byte	0x1
 5791 08ef 50       		.byte	0x50
 5792 08f0 3C000000 		.4byte	.LVL121
 5793 08f4 44000000 		.4byte	.LFE211
 5794 08f8 0400     		.2byte	0x4
 5795 08fa F3       		.byte	0xf3
 5796 08fb 01       		.uleb128 0x1
 5797 08fc 50       		.byte	0x50
 5798 08fd 9F       		.byte	0x9f
 5799 08fe 00000000 		.4byte	0
 5800 0902 00000000 		.4byte	0
 5801              	.LLST59:
 5802 0906 00000000 		.4byte	.LVL113
 5803 090a 11000000 		.4byte	.LVL114-1
 5804 090e 0100     		.2byte	0x1
 5805 0910 51       		.byte	0x51
 5806 0911 11000000 		.4byte	.LVL114-1
 5807 0915 3A000000 		.4byte	.LVL120
 5808 0919 0100     		.2byte	0x1
 5809 091b 54       		.byte	0x54
 5810 091c 3A000000 		.4byte	.LVL120
 5811 0920 3C000000 		.4byte	.LVL121
 5812 0924 0100     		.2byte	0x1
 5813 0926 51       		.byte	0x51
 5814 0927 3C000000 		.4byte	.LVL121
 5815 092b 40000000 		.4byte	.LVL123
 5816 092f 0100     		.2byte	0x1
 5817 0931 54       		.byte	0x54
 5818 0932 40000000 		.4byte	.LVL123
 5819 0936 44000000 		.4byte	.LFE211
 5820 093a 0400     		.2byte	0x4
 5821 093c F3       		.byte	0xf3
 5822 093d 01       		.uleb128 0x1
 5823 093e 51       		.byte	0x51
 5824 093f 9F       		.byte	0x9f
 5825 0940 00000000 		.4byte	0
 5826 0944 00000000 		.4byte	0
 5827              	.LLST60:
 5828 0948 00000000 		.4byte	.LVL113
 5829 094c 11000000 		.4byte	.LVL114-1
 5830 0950 0100     		.2byte	0x1
 5831 0952 52       		.byte	0x52
 5832 0953 11000000 		.4byte	.LVL114-1
 5833 0957 12000000 		.4byte	.LVL114
 5834 095b 0400     		.2byte	0x4
 5835 095d F3       		.byte	0xf3
 5836 095e 01       		.uleb128 0x1
 5837 095f 52       		.byte	0x52
 5838 0960 9F       		.byte	0x9f
 5839 0961 12000000 		.4byte	.LVL114
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 164


 5840 0965 26000000 		.4byte	.LVL116
 5841 0969 0100     		.2byte	0x1
 5842 096b 50       		.byte	0x50
 5843 096c 3A000000 		.4byte	.LVL120
 5844 0970 3C000000 		.4byte	.LVL121
 5845 0974 0100     		.2byte	0x1
 5846 0976 52       		.byte	0x52
 5847 0977 00000000 		.4byte	0
 5848 097b 00000000 		.4byte	0
 5849              	.LLST61:
 5850 097f 00000000 		.4byte	.LVL113
 5851 0983 1C000000 		.4byte	.LVL115
 5852 0987 0200     		.2byte	0x2
 5853 0989 30       		.byte	0x30
 5854 098a 9F       		.byte	0x9f
 5855 098b 1C000000 		.4byte	.LVL115
 5856 098f 2E000000 		.4byte	.LVL117
 5857 0993 0100     		.2byte	0x1
 5858 0995 53       		.byte	0x53
 5859 0996 2E000000 		.4byte	.LVL117
 5860 099a 3A000000 		.4byte	.LVL120
 5861 099e 0100     		.2byte	0x1
 5862 09a0 50       		.byte	0x50
 5863 09a1 3A000000 		.4byte	.LVL120
 5864 09a5 3C000000 		.4byte	.LVL121
 5865 09a9 0200     		.2byte	0x2
 5866 09ab 30       		.byte	0x30
 5867 09ac 9F       		.byte	0x9f
 5868 09ad 3C000000 		.4byte	.LVL121
 5869 09b1 3E000000 		.4byte	.LVL122
 5870 09b5 0100     		.2byte	0x1
 5871 09b7 50       		.byte	0x50
 5872 09b8 00000000 		.4byte	0
 5873 09bc 00000000 		.4byte	0
 5874              	.LLST62:
 5875 09c0 00000000 		.4byte	.LVL124
 5876 09c4 11000000 		.4byte	.LVL125-1
 5877 09c8 0100     		.2byte	0x1
 5878 09ca 50       		.byte	0x50
 5879 09cb 11000000 		.4byte	.LVL125-1
 5880 09cf 2E000000 		.4byte	.LVL130
 5881 09d3 0400     		.2byte	0x4
 5882 09d5 F3       		.byte	0xf3
 5883 09d6 01       		.uleb128 0x1
 5884 09d7 50       		.byte	0x50
 5885 09d8 9F       		.byte	0x9f
 5886 09d9 2E000000 		.4byte	.LVL130
 5887 09dd 30000000 		.4byte	.LVL131
 5888 09e1 0100     		.2byte	0x1
 5889 09e3 50       		.byte	0x50
 5890 09e4 30000000 		.4byte	.LVL131
 5891 09e8 3C000000 		.4byte	.LFE212
 5892 09ec 0400     		.2byte	0x4
 5893 09ee F3       		.byte	0xf3
 5894 09ef 01       		.uleb128 0x1
 5895 09f0 50       		.byte	0x50
 5896 09f1 9F       		.byte	0x9f
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 165


 5897 09f2 00000000 		.4byte	0
 5898 09f6 00000000 		.4byte	0
 5899              	.LLST63:
 5900 09fa 00000000 		.4byte	.LVL124
 5901 09fe 11000000 		.4byte	.LVL125-1
 5902 0a02 0100     		.2byte	0x1
 5903 0a04 51       		.byte	0x51
 5904 0a05 11000000 		.4byte	.LVL125-1
 5905 0a09 2E000000 		.4byte	.LVL130
 5906 0a0d 0100     		.2byte	0x1
 5907 0a0f 54       		.byte	0x54
 5908 0a10 2E000000 		.4byte	.LVL130
 5909 0a14 3C000000 		.4byte	.LFE212
 5910 0a18 0100     		.2byte	0x1
 5911 0a1a 51       		.byte	0x51
 5912 0a1b 00000000 		.4byte	0
 5913 0a1f 00000000 		.4byte	0
 5914              	.LLST64:
 5915 0a23 00000000 		.4byte	.LVL124
 5916 0a27 11000000 		.4byte	.LVL125-1
 5917 0a2b 0100     		.2byte	0x1
 5918 0a2d 52       		.byte	0x52
 5919 0a2e 11000000 		.4byte	.LVL125-1
 5920 0a32 12000000 		.4byte	.LVL125
 5921 0a36 0400     		.2byte	0x4
 5922 0a38 F3       		.byte	0xf3
 5923 0a39 01       		.uleb128 0x1
 5924 0a3a 52       		.byte	0x52
 5925 0a3b 9F       		.byte	0x9f
 5926 0a3c 12000000 		.4byte	.LVL125
 5927 0a40 1C000000 		.4byte	.LVL126
 5928 0a44 0100     		.2byte	0x1
 5929 0a46 50       		.byte	0x50
 5930 0a47 1C000000 		.4byte	.LVL126
 5931 0a4b 26000000 		.4byte	.LVL128
 5932 0a4f 0100     		.2byte	0x1
 5933 0a51 52       		.byte	0x52
 5934 0a52 2E000000 		.4byte	.LVL130
 5935 0a56 3C000000 		.4byte	.LFE212
 5936 0a5a 0100     		.2byte	0x1
 5937 0a5c 52       		.byte	0x52
 5938 0a5d 00000000 		.4byte	0
 5939 0a61 00000000 		.4byte	0
 5940              	.LLST65:
 5941 0a65 00000000 		.4byte	.LVL124
 5942 0a69 20000000 		.4byte	.LVL127
 5943 0a6d 0A00     		.2byte	0xa
 5944 0a6f 9E       		.byte	0x9e
 5945 0a70 08       		.uleb128 0x8
 5946 0a71 00000000 		.8byte	0
 5946      00000000 
 5947 0a79 20000000 		.4byte	.LVL127
 5948 0a7d 2B000000 		.4byte	.LVL129-1
 5949 0a81 0600     		.2byte	0x6
 5950 0a83 50       		.byte	0x50
 5951 0a84 93       		.byte	0x93
 5952 0a85 04       		.uleb128 0x4
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 166


 5953 0a86 51       		.byte	0x51
 5954 0a87 93       		.byte	0x93
 5955 0a88 04       		.uleb128 0x4
 5956 0a89 2E000000 		.4byte	.LVL130
 5957 0a8d 30000000 		.4byte	.LVL131
 5958 0a91 0A00     		.2byte	0xa
 5959 0a93 9E       		.byte	0x9e
 5960 0a94 08       		.uleb128 0x8
 5961 0a95 00000000 		.8byte	0
 5961      00000000 
 5962 0a9d 00000000 		.4byte	0
 5963 0aa1 00000000 		.4byte	0
 5964              	.LLST66:
 5965 0aa5 00000000 		.4byte	.LVL132
 5966 0aa9 0E000000 		.4byte	.LVL134
 5967 0aad 0100     		.2byte	0x1
 5968 0aaf 52       		.byte	0x52
 5969 0ab0 0E000000 		.4byte	.LVL134
 5970 0ab4 14000000 		.4byte	.LFE213
 5971 0ab8 0400     		.2byte	0x4
 5972 0aba F3       		.byte	0xf3
 5973 0abb 01       		.uleb128 0x1
 5974 0abc 52       		.byte	0x52
 5975 0abd 9F       		.byte	0x9f
 5976 0abe 00000000 		.4byte	0
 5977 0ac2 00000000 		.4byte	0
 5978              	.LLST67:
 5979 0ac6 00000000 		.4byte	.LVL132
 5980 0aca 08000000 		.4byte	.LVL133
 5981 0ace 0100     		.2byte	0x1
 5982 0ad0 53       		.byte	0x53
 5983 0ad1 08000000 		.4byte	.LVL133
 5984 0ad5 14000000 		.4byte	.LFE213
 5985 0ad9 0400     		.2byte	0x4
 5986 0adb F3       		.byte	0xf3
 5987 0adc 01       		.uleb128 0x1
 5988 0add 53       		.byte	0x53
 5989 0ade 9F       		.byte	0x9f
 5990 0adf 00000000 		.4byte	0
 5991 0ae3 00000000 		.4byte	0
 5992              	.LLST68:
 5993 0ae7 00000000 		.4byte	.LVL135
 5994 0aeb 04000000 		.4byte	.LVL136
 5995 0aef 0100     		.2byte	0x1
 5996 0af1 50       		.byte	0x50
 5997 0af2 04000000 		.4byte	.LVL136
 5998 0af6 06000000 		.4byte	.LFE214
 5999 0afa 0400     		.2byte	0x4
 6000 0afc F3       		.byte	0xf3
 6001 0afd 01       		.uleb128 0x1
 6002 0afe 50       		.byte	0x50
 6003 0aff 9F       		.byte	0x9f
 6004 0b00 00000000 		.4byte	0
 6005 0b04 00000000 		.4byte	0
 6006              	.LLST69:
 6007 0b08 00000000 		.4byte	.LVL137
 6008 0b0c 0A000000 		.4byte	.LVL138
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 167


 6009 0b10 0100     		.2byte	0x1
 6010 0b12 51       		.byte	0x51
 6011 0b13 0A000000 		.4byte	.LVL138
 6012 0b17 14000000 		.4byte	.LFE215
 6013 0b1b 0400     		.2byte	0x4
 6014 0b1d F3       		.byte	0xf3
 6015 0b1e 01       		.uleb128 0x1
 6016 0b1f 51       		.byte	0x51
 6017 0b20 9F       		.byte	0x9f
 6018 0b21 00000000 		.4byte	0
 6019 0b25 00000000 		.4byte	0
 6020              	.LLST70:
 6021 0b29 00000000 		.4byte	.LVL139
 6022 0b2d 08000000 		.4byte	.LVL140
 6023 0b31 0100     		.2byte	0x1
 6024 0b33 50       		.byte	0x50
 6025 0b34 08000000 		.4byte	.LVL140
 6026 0b38 0E000000 		.4byte	.LVL142
 6027 0b3c 0400     		.2byte	0x4
 6028 0b3e F3       		.byte	0xf3
 6029 0b3f 01       		.uleb128 0x1
 6030 0b40 50       		.byte	0x50
 6031 0b41 9F       		.byte	0x9f
 6032 0b42 0E000000 		.4byte	.LVL142
 6033 0b46 14000000 		.4byte	.LVL143
 6034 0b4a 0100     		.2byte	0x1
 6035 0b4c 50       		.byte	0x50
 6036 0b4d 14000000 		.4byte	.LVL143
 6037 0b51 1C000000 		.4byte	.LFE216
 6038 0b55 0400     		.2byte	0x4
 6039 0b57 F3       		.byte	0xf3
 6040 0b58 01       		.uleb128 0x1
 6041 0b59 50       		.byte	0x50
 6042 0b5a 9F       		.byte	0x9f
 6043 0b5b 00000000 		.4byte	0
 6044 0b5f 00000000 		.4byte	0
 6045              	.LLST71:
 6046 0b63 00000000 		.4byte	.LVL139
 6047 0b67 0B000000 		.4byte	.LVL141-1
 6048 0b6b 0100     		.2byte	0x1
 6049 0b6d 51       		.byte	0x51
 6050 0b6e 0B000000 		.4byte	.LVL141-1
 6051 0b72 0E000000 		.4byte	.LVL142
 6052 0b76 0400     		.2byte	0x4
 6053 0b78 F3       		.byte	0xf3
 6054 0b79 01       		.uleb128 0x1
 6055 0b7a 51       		.byte	0x51
 6056 0b7b 9F       		.byte	0x9f
 6057 0b7c 0E000000 		.4byte	.LVL142
 6058 0b80 17000000 		.4byte	.LVL144-1
 6059 0b84 0100     		.2byte	0x1
 6060 0b86 51       		.byte	0x51
 6061 0b87 17000000 		.4byte	.LVL144-1
 6062 0b8b 1C000000 		.4byte	.LFE216
 6063 0b8f 0400     		.2byte	0x4
 6064 0b91 F3       		.byte	0xf3
 6065 0b92 01       		.uleb128 0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 168


 6066 0b93 51       		.byte	0x51
 6067 0b94 9F       		.byte	0x9f
 6068 0b95 00000000 		.4byte	0
 6069 0b99 00000000 		.4byte	0
 6070              		.section	.debug_aranges,"",%progbits
 6071 0000 DC000000 		.4byte	0xdc
 6072 0004 0200     		.2byte	0x2
 6073 0006 00000000 		.4byte	.Ldebug_info0
 6074 000a 04       		.byte	0x4
 6075 000b 00       		.byte	0
 6076 000c 0000     		.2byte	0
 6077 000e 0000     		.2byte	0
 6078 0010 00000000 		.4byte	.LFB192
 6079 0014 F4000000 		.4byte	.LFE192-.LFB192
 6080 0018 00000000 		.4byte	.LFB193
 6081 001c 5C000000 		.4byte	.LFE193-.LFB193
 6082 0020 00000000 		.4byte	.LFB194
 6083 0024 1E000000 		.4byte	.LFE194-.LFB194
 6084 0028 00000000 		.4byte	.LFB196
 6085 002c 30000000 		.4byte	.LFE196-.LFB196
 6086 0030 00000000 		.4byte	.LFB197
 6087 0034 14000000 		.4byte	.LFE197-.LFB197
 6088 0038 00000000 		.4byte	.LFB198
 6089 003c 10000000 		.4byte	.LFE198-.LFB198
 6090 0040 00000000 		.4byte	.LFB195
 6091 0044 3C000000 		.4byte	.LFE195-.LFB195
 6092 0048 00000000 		.4byte	.LFB199
 6093 004c 0C000000 		.4byte	.LFE199-.LFB199
 6094 0050 00000000 		.4byte	.LFB200
 6095 0054 44000000 		.4byte	.LFE200-.LFB200
 6096 0058 00000000 		.4byte	.LFB202
 6097 005c 1A000000 		.4byte	.LFE202-.LFB202
 6098 0060 00000000 		.4byte	.LFB201
 6099 0064 22000000 		.4byte	.LFE201-.LFB201
 6100 0068 00000000 		.4byte	.LFB203
 6101 006c 12000000 		.4byte	.LFE203-.LFB203
 6102 0070 00000000 		.4byte	.LFB204
 6103 0074 22000000 		.4byte	.LFE204-.LFB204
 6104 0078 00000000 		.4byte	.LFB205
 6105 007c 0E000000 		.4byte	.LFE205-.LFB205
 6106 0080 00000000 		.4byte	.LFB206
 6107 0084 0C000000 		.4byte	.LFE206-.LFB206
 6108 0088 00000000 		.4byte	.LFB207
 6109 008c 18000000 		.4byte	.LFE207-.LFB207
 6110 0090 00000000 		.4byte	.LFB208
 6111 0094 18000000 		.4byte	.LFE208-.LFB208
 6112 0098 00000000 		.4byte	.LFB209
 6113 009c 60000000 		.4byte	.LFE209-.LFB209
 6114 00a0 00000000 		.4byte	.LFB210
 6115 00a4 48000000 		.4byte	.LFE210-.LFB210
 6116 00a8 00000000 		.4byte	.LFB211
 6117 00ac 44000000 		.4byte	.LFE211-.LFB211
 6118 00b0 00000000 		.4byte	.LFB212
 6119 00b4 3C000000 		.4byte	.LFE212-.LFB212
 6120 00b8 00000000 		.4byte	.LFB213
 6121 00bc 14000000 		.4byte	.LFE213-.LFB213
 6122 00c0 00000000 		.4byte	.LFB214
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 169


 6123 00c4 06000000 		.4byte	.LFE214-.LFB214
 6124 00c8 00000000 		.4byte	.LFB215
 6125 00cc 14000000 		.4byte	.LFE215-.LFB215
 6126 00d0 00000000 		.4byte	.LFB216
 6127 00d4 1C000000 		.4byte	.LFE216-.LFB216
 6128 00d8 00000000 		.4byte	0
 6129 00dc 00000000 		.4byte	0
 6130              		.section	.debug_ranges,"",%progbits
 6131              	.Ldebug_ranges0:
 6132 0000 00000000 		.4byte	.LFB192
 6133 0004 F4000000 		.4byte	.LFE192
 6134 0008 00000000 		.4byte	.LFB193
 6135 000c 5C000000 		.4byte	.LFE193
 6136 0010 00000000 		.4byte	.LFB194
 6137 0014 1E000000 		.4byte	.LFE194
 6138 0018 00000000 		.4byte	.LFB196
 6139 001c 30000000 		.4byte	.LFE196
 6140 0020 00000000 		.4byte	.LFB197
 6141 0024 14000000 		.4byte	.LFE197
 6142 0028 00000000 		.4byte	.LFB198
 6143 002c 10000000 		.4byte	.LFE198
 6144 0030 00000000 		.4byte	.LFB195
 6145 0034 3C000000 		.4byte	.LFE195
 6146 0038 00000000 		.4byte	.LFB199
 6147 003c 0C000000 		.4byte	.LFE199
 6148 0040 00000000 		.4byte	.LFB200
 6149 0044 44000000 		.4byte	.LFE200
 6150 0048 00000000 		.4byte	.LFB202
 6151 004c 1A000000 		.4byte	.LFE202
 6152 0050 00000000 		.4byte	.LFB201
 6153 0054 22000000 		.4byte	.LFE201
 6154 0058 00000000 		.4byte	.LFB203
 6155 005c 12000000 		.4byte	.LFE203
 6156 0060 00000000 		.4byte	.LFB204
 6157 0064 22000000 		.4byte	.LFE204
 6158 0068 00000000 		.4byte	.LFB205
 6159 006c 0E000000 		.4byte	.LFE205
 6160 0070 00000000 		.4byte	.LFB206
 6161 0074 0C000000 		.4byte	.LFE206
 6162 0078 00000000 		.4byte	.LFB207
 6163 007c 18000000 		.4byte	.LFE207
 6164 0080 00000000 		.4byte	.LFB208
 6165 0084 18000000 		.4byte	.LFE208
 6166 0088 00000000 		.4byte	.LFB209
 6167 008c 60000000 		.4byte	.LFE209
 6168 0090 00000000 		.4byte	.LFB210
 6169 0094 48000000 		.4byte	.LFE210
 6170 0098 00000000 		.4byte	.LFB211
 6171 009c 44000000 		.4byte	.LFE211
 6172 00a0 00000000 		.4byte	.LFB212
 6173 00a4 3C000000 		.4byte	.LFE212
 6174 00a8 00000000 		.4byte	.LFB213
 6175 00ac 14000000 		.4byte	.LFE213
 6176 00b0 00000000 		.4byte	.LFB214
 6177 00b4 06000000 		.4byte	.LFE214
 6178 00b8 00000000 		.4byte	.LFB215
 6179 00bc 14000000 		.4byte	.LFE215
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 170


 6180 00c0 00000000 		.4byte	.LFB216
 6181 00c4 1C000000 		.4byte	.LFE216
 6182 00c8 00000000 		.4byte	0
 6183 00cc 00000000 		.4byte	0
 6184              		.section	.debug_line,"",%progbits
 6185              	.Ldebug_line0:
 6186 0000 FB050000 		.section	.debug_str,"MS",%progbits,1
 6186      0200E302 
 6186      00000201 
 6186      FB0E0D00 
 6186      01010101 
 6187              	.LASF118:
 6188 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 6188      6843746C 
 6188      4D61696E 
 6188      57733146 
 6188      72657100 
 6189              	.LASF275:
 6190 0014 72616E67 		.ascii	"rangeThresReg\000"
 6190      65546872 
 6190      65735265 
 6190      6700
 6191              	.LASF274:
 6192 0022 6C6F774C 		.ascii	"lowLimit\000"
 6192      696D6974 
 6192      00
 6193              	.LASF25:
 6194 002b 52455345 		.ascii	"RESERVED\000"
 6194      52564544 
 6194      00
 6195              	.LASF54:
 6196 0034 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 6196      455F494E 
 6196      54525F4D 
 6196      41534B45 
 6196      4400
 6197              	.LASF39:
 6198 0046 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 6198      5F574F52 
 6198      4B5F5550 
 6198      44415445 
 6198      4400
 6199              	.LASF181:
 6200 0058 63795F73 		.ascii	"cy_stc_syspm_callback_params_t\000"
 6200      74635F73 
 6200      7973706D 
 6200      5F63616C 
 6200      6C626163 
 6201              	.LASF301:
 6202 0077 63795F64 		.ascii	"cy_device\000"
 6202      65766963 
 6202      6500
 6203              	.LASF241:
 6204 0081 6368616E 		.ascii	"chan\000"
 6204      00
 6205              	.LASF272:
 6206 0086 66696E61 		.ascii	"finalResult\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 171


 6206      6C526573 
 6206      756C7400 
 6207              	.LASF207:
 6208 0092 43595F53 		.ascii	"CY_SAR_NEG_SEL_VREF\000"
 6208      41525F4E 
 6208      45475F53 
 6208      454C5F56 
 6208      52454600 
 6209              	.LASF104:
 6210 00a6 70657269 		.ascii	"periClockNr\000"
 6210      436C6F63 
 6210      6B4E7200 
 6211              	.LASF162:
 6212 00b2 63686172 		.ascii	"char\000"
 6212      00
 6213              	.LASF78:
 6214 00b7 75646242 		.ascii	"udbBase\000"
 6214      61736500 
 6215              	.LASF30:
 6216 00bf 4348414E 		.ascii	"CHAN_EN\000"
 6216      5F454E00 
 6217              	.LASF173:
 6218 00c7 63795F65 		.ascii	"cy_en_syspm_status_t\000"
 6218      6E5F7379 
 6218      73706D5F 
 6218      73746174 
 6218      75735F74 
 6219              	.LASF77:
 6220 00dc 70657269 		.ascii	"periBase\000"
 6220      42617365 
 6220      00
 6221              	.LASF289:
 6222 00e5 73776974 		.ascii	"switchSelect\000"
 6222      63685365 
 6222      6C656374 
 6222      00
 6223              	.LASF153:
 6224 00f2 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 6224      73436D30 
 6224      4E6D6943 
 6224      746C4F66 
 6224      66736574 
 6225              	.LASF123:
 6226 0107 64774368 		.ascii	"dwChSize\000"
 6226      53697A65 
 6226      00
 6227              	.LASF244:
 6228 0110 61646343 		.ascii	"adcCounts\000"
 6228      6F756E74 
 6228      7300
 6229              	.LASF252:
 6230 011a 73696E67 		.ascii	"singleEndedSigned\000"
 6230      6C65456E 
 6230      64656453 
 6230      69676E65 
 6230      6400
 6231              	.LASF14:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 172


 6232 012c 756E7369 		.ascii	"unsigned int\000"
 6232      676E6564 
 6232      20696E74 
 6232      00
 6233              	.LASF55:
 6234 0139 494E5452 		.ascii	"INTR_CAUSE\000"
 6234      5F434155 
 6234      534500
 6235              	.LASF105:
 6236 0144 736D6966 		.ascii	"smifDeviceNr\000"
 6236      44657669 
 6236      63654E72 
 6236      00
 6237              	.LASF215:
 6238 0151 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 6238      41525F52 
 6238      414E4745 
 6238      5F434F4E 
 6238      445F4F55 
 6239              	.LASF281:
 6240 016b 61646347 		.ascii	"adcGain\000"
 6240      61696E00 
 6241              	.LASF97:
 6242 0173 63707573 		.ascii	"cpussFlashPaSize\000"
 6242      73466C61 
 6242      73685061 
 6242      53697A65 
 6242      00
 6243              	.LASF195:
 6244 0184 63795F65 		.ascii	"cy_en_sar_switch_state_t\000"
 6244      6E5F7361 
 6244      725F7377 
 6244      69746368 
 6244      5F737461 
 6245              	.LASF7:
 6246 019d 5F5F696E 		.ascii	"__int32_t\000"
 6246      7433325F 
 6246      7400
 6247              	.LASF41:
 6248 01a7 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 6248      5F574F52 
 6248      4B5F4E45 
 6248      5756414C 
 6248      554500
 6249              	.LASF202:
 6250 01ba 43595F53 		.ascii	"CY_SAR_NEG_SEL_P1\000"
 6250      41525F4E 
 6250      45475F53 
 6250      454C5F50 
 6250      3100
 6251              	.LASF75:
 6252 01cc 63707573 		.ascii	"cpussBase\000"
 6252      73426173 
 6252      6500
 6253              	.LASF204:
 6254 01d6 43595F53 		.ascii	"CY_SAR_NEG_SEL_P5\000"
 6254      41525F4E 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 173


 6254      45475F53 
 6254      454C5F50 
 6254      3500
 6255              	.LASF205:
 6256 01e8 43595F53 		.ascii	"CY_SAR_NEG_SEL_P7\000"
 6256      41525F4E 
 6256      45475F53 
 6256      454C5F50 
 6256      3700
 6257              	.LASF99:
 6258 01fa 63707573 		.ascii	"cpussFmIrq\000"
 6258      73466D49 
 6258      727100
 6259              	.LASF185:
 6260 0205 43595F53 		.ascii	"CY_SAR_CONVERSION_NOT_COMPLETE\000"
 6260      41525F43 
 6260      4F4E5645 
 6260      5253494F 
 6260      4E5F4E4F 
 6261              	.LASF100:
 6262 0224 63707573 		.ascii	"cpussNotConnectedIrq\000"
 6262      734E6F74 
 6262      436F6E6E 
 6262      65637465 
 6262      64497271 
 6263              	.LASF4:
 6264 0239 73686F72 		.ascii	"short int\000"
 6264      7420696E 
 6264      7400
 6265              	.LASF47:
 6266 0243 53415455 		.ascii	"SATURATE_INTR\000"
 6266      52415445 
 6266      5F494E54 
 6266      5200
 6267              	.LASF306:
 6268 0251 433A5C55 		.ascii	"C:\\Users\\mcfdo\\OneDrive\\Documents\\PSoC Creator"
 6268      73657273 
 6268      5C6D6366 
 6268      646F5C4F 
 6268      6E654472 
 6269 027f 5C576F72 		.ascii	"\\Workspace_prog1\\Mario_mobile_robot_Copy_01_Copy_"
 6269      6B737061 
 6269      63655F70 
 6269      726F6731 
 6269      5C4D6172 
 6270 02b0 30312E63 		.ascii	"01.cydsn\000"
 6270      7964736E 
 6270      00
 6271              	.LASF26:
 6272 02b9 53414D50 		.ascii	"SAMPLE_TIME01\000"
 6272      4C455F54 
 6272      494D4530 
 6272      3100
 6273              	.LASF191:
 6274 02c7 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 6274      41525F57 
 6274      4149545F 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 174


 6274      464F525F 
 6274      52455355 
 6275              	.LASF59:
 6276 02de 494E4A5F 		.ascii	"INJ_RESULT\000"
 6276      52455355 
 6276      4C5400
 6277              	.LASF134:
 6278 02e9 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 6278      44697643 
 6278      6D645061 
 6278      44697653 
 6278      656C506F 
 6279              	.LASF293:
 6280 02ff 73776974 		.ascii	"switchClearReg\000"
 6280      6368436C 
 6280      65617252 
 6280      656700
 6281              	.LASF44:
 6282 030e 494E5452 		.ascii	"INTR_SET\000"
 6282      5F534554 
 6282      00
 6283              	.LASF111:
 6284 0317 63727970 		.ascii	"cryptoMemSize\000"
 6284      746F4D65 
 6284      6D53697A 
 6284      6500
 6285              	.LASF240:
 6286 0325 43795F53 		.ascii	"Cy_SAR_Wakeup\000"
 6286      41525F57 
 6286      616B6575 
 6286      7000
 6287              	.LASF226:
 6288 0333 73617449 		.ascii	"satIntrMask\000"
 6288      6E74724D 
 6288      61736B00 
 6289              	.LASF189:
 6290 033f 63795F65 		.ascii	"cy_en_sar_start_convert_sel_t\000"
 6290      6E5F7361 
 6290      725F7374 
 6290      6172745F 
 6290      636F6E76 
 6291              	.LASF131:
 6292 035d 70657269 		.ascii	"periTrGrSize\000"
 6292      54724772 
 6292      53697A65 
 6292      00
 6293              	.LASF159:
 6294 036a 69706353 		.ascii	"ipcStructSize\000"
 6294      74727563 
 6294      7453697A 
 6294      6500
 6295              	.LASF273:
 6296 0378 43795F53 		.ascii	"Cy_SAR_SetLowLimit\000"
 6296      41525F53 
 6296      65744C6F 
 6296      774C696D 
 6296      697400
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 175


 6297              	.LASF93:
 6298 038b 70726F74 		.ascii	"protVersion\000"
 6298      56657273 
 6298      696F6E00 
 6299              	.LASF212:
 6300 0397 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 6300      41525F52 
 6300      414E4745 
 6300      5F434F4E 
 6300      445F4245 
 6301              	.LASF245:
 6302 03af 69735369 		.ascii	"isSigned\000"
 6302      676E6564 
 6302      00
 6303              	.LASF74:
 6304 03b8 5341525F 		.ascii	"SAR_Type\000"
 6304      54797065 
 6304      00
 6305              	.LASF271:
 6306 03c1 61646352 		.ascii	"adcResult16\000"
 6306      6573756C 
 6306      74313600 
 6307              	.LASF266:
 6308 03cd 43795F53 		.ascii	"Cy_SAR_IsChannelSingleEnded\000"
 6308      41525F49 
 6308      73436861 
 6308      6E6E656C 
 6308      53696E67 
 6309              	.LASF133:
 6310 03e9 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 6310      44697643 
 6310      6D645479 
 6310      70655365 
 6310      6C506F73 
 6311              	.LASF203:
 6312 03fe 43595F53 		.ascii	"CY_SAR_NEG_SEL_P3\000"
 6312      41525F4E 
 6312      45475F53 
 6312      454C5F50 
 6312      3300
 6313              	.LASF150:
 6314 0410 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 6314      73547269 
 6314      6D52616D 
 6314      43746C4F 
 6314      66667365 
 6315              	.LASF296:
 6316 0426 43795F53 		.ascii	"Cy_SAR_DeepSleepCallback\000"
 6316      41525F44 
 6316      65657053 
 6316      6C656570 
 6316      43616C6C 
 6317              	.LASF175:
 6318 043f 43595F53 		.ascii	"CY_SYSPM_CHECK_FAIL\000"
 6318      5953504D 
 6318      5F434845 
 6318      434B5F46 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 176


 6318      41494C00 
 6319              	.LASF161:
 6320 0453 63795F73 		.ascii	"cy_stc_device_t\000"
 6320      74635F64 
 6320      65766963 
 6320      655F7400 
 6321              	.LASF19:
 6322 0463 75696E74 		.ascii	"uint32_t\000"
 6322      33325F74 
 6322      00
 6323              	.LASF143:
 6324 046c 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 6324      50727443 
 6324      66674F75 
 6324      744F6666 
 6324      73657400 
 6325              	.LASF43:
 6326 0480 494E5452 		.ascii	"INTR\000"
 6326      00
 6327              	.LASF164:
 6328 0485 666C6F61 		.ascii	"float\000"
 6328      7400
 6329              	.LASF86:
 6330 048b 63727970 		.ascii	"cryptoVersion\000"
 6330      746F5665 
 6330      7273696F 
 6330      6E00
 6331              	.LASF115:
 6332 0499 666C6173 		.ascii	"flashProgramDelay\000"
 6332      6850726F 
 6332      6772616D 
 6332      44656C61 
 6332      7900
 6333              	.LASF179:
 6334 04ab 62617365 		.ascii	"base\000"
 6334      00
 6335              	.LASF76:
 6336 04b0 666C6173 		.ascii	"flashcBase\000"
 6336      68634261 
 6336      736500
 6337              	.LASF16:
 6338 04bb 696E7431 		.ascii	"int16_t\000"
 6338      365F7400 
 6339              	.LASF142:
 6340 04c3 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 6340      50727443 
 6340      6667496E 
 6340      4F666673 
 6340      657400
 6341              	.LASF249:
 6342 04d6 72657375 		.ascii	"result\000"
 6342      6C7400
 6343              	.LASF13:
 6344 04dd 6C6F6E67 		.ascii	"long long unsigned int\000"
 6344      206C6F6E 
 6344      6720756E 
 6344      7369676E 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 177


 6344      65642069 
 6345              	.LASF253:
 6346 04f4 6368616E 		.ascii	"chanSingleEnded\000"
 6346      53696E67 
 6346      6C65456E 
 6346      64656400 
 6347              	.LASF144:
 6348 0504 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 6348      50727443 
 6348      66675369 
 6348      6F4F6666 
 6348      73657400 
 6349              	.LASF279:
 6350 0518 6F666673 		.ascii	"offset\000"
 6350      657400
 6351              	.LASF135:
 6352 051f 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 6352      44697643 
 6352      6D645061 
 6352      54797065 
 6352      53656C50 
 6353              	.LASF286:
 6354 0536 43795F53 		.ascii	"Cy_SAR_CountsTo_uVolts\000"
 6354      41525F43 
 6354      6F756E74 
 6354      73546F5F 
 6354      75566F6C 
 6355              	.LASF27:
 6356 054d 53414D50 		.ascii	"SAMPLE_TIME23\000"
 6356      4C455F54 
 6356      494D4532 
 6356      3300
 6357              	.LASF221:
 6358 055b 72616E67 		.ascii	"rangeThres\000"
 6358      65546872 
 6358      657300
 6359              	.LASF5:
 6360 0566 5F5F7569 		.ascii	"__uint16_t\000"
 6360      6E743136 
 6360      5F7400
 6361              	.LASF242:
 6362 0571 43795F53 		.ascii	"Cy_SAR_IsChannelSigned\000"
 6362      41525F49 
 6362      73436861 
 6362      6E6E656C 
 6362      5369676E 
 6363              	.LASF163:
 6364 0588 666C6F61 		.ascii	"float32_t\000"
 6364      7433325F 
 6364      7400
 6365              	.LASF233:
 6366 0592 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 6366      74635F73 
 6366      61725F63 
 6366      6F6E6669 
 6366      675F7400 
 6367              	.LASF217:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 178


 6368 05a6 6374726C 		.ascii	"ctrl\000"
 6368      00
 6369              	.LASF239:
 6370 05ab 73746172 		.ascii	"startSelect\000"
 6370      7453656C 
 6370      65637400 
 6371              	.LASF267:
 6372 05b7 69735369 		.ascii	"isSingleEnded\000"
 6372      6E676C65 
 6372      456E6465 
 6372      6400
 6373              	.LASF213:
 6374 05c5 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 6374      41525F52 
 6374      414E4745 
 6374      5F434F4E 
 6374      445F494E 
 6375              	.LASF167:
 6376 05de 43595F53 		.ascii	"CY_SYSPM_SUCCESS\000"
 6376      5953504D 
 6376      5F535543 
 6376      43455353 
 6376      00
 6377              	.LASF120:
 6378 05ef 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 6378      6843746C 
 6378      4D61696E 
 6378      57733346 
 6378      72657100 
 6379              	.LASF102:
 6380 0603 73727373 		.ascii	"srssNumPll\000"
 6380      4E756D50 
 6380      6C6C00
 6381              	.LASF199:
 6382 060e 43595F53 		.ascii	"CY_SAR_MUX_SWITCH0\000"
 6382      41525F4D 
 6382      55585F53 
 6382      57495443 
 6382      483000
 6383              	.LASF255:
 6384 0621 43795F53 		.ascii	"Cy_SAR_DeInit\000"
 6384      41525F44 
 6384      65496E69 
 6384      7400
 6385              	.LASF20:
 6386 062f 696E7436 		.ascii	"int64_t\000"
 6386      345F7400 
 6387              	.LASF113:
 6388 0637 666C6173 		.ascii	"flashPipeRequired\000"
 6388      68506970 
 6388      65526571 
 6388      75697265 
 6388      6400
 6389              	.LASF53:
 6390 0649 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 6390      455F494E 
 6390      54525F4D 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 179


 6390      41534B00 
 6391              	.LASF165:
 6392 0659 646F7562 		.ascii	"double\000"
 6392      6C6500
 6393              	.LASF283:
 6394 0660 72657375 		.ascii	"result_Volts\000"
 6394      6C745F56 
 6394      6F6C7473 
 6394      00
 6395              	.LASF232:
 6396 066d 5F426F6F 		.ascii	"_Bool\000"
 6396      6C00
 6397              	.LASF29:
 6398 0673 52414E47 		.ascii	"RANGE_COND\000"
 6398      455F434F 
 6398      4E4400
 6399              	.LASF117:
 6400 067e 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 6400      6843746C 
 6400      4D61696E 
 6400      57733046 
 6400      72657100 
 6401              	.LASF67:
 6402 0692 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 6402      53574954 
 6402      43485F44 
 6402      535F4354 
 6402      524C00
 6403              	.LASF81:
 6404 06a5 6770696F 		.ascii	"gpioBase\000"
 6404      42617365 
 6404      00
 6405              	.LASF183:
 6406 06ae 43595F53 		.ascii	"CY_SAR_BAD_PARAM\000"
 6406      41525F42 
 6406      41445F50 
 6406      4152414D 
 6406      00
 6407              	.LASF284:
 6408 06bf 43795F53 		.ascii	"Cy_SAR_CountsTo_mVolts\000"
 6408      41525F43 
 6408      6F756E74 
 6408      73546F5F 
 6408      6D566F6C 
 6409              	.LASF152:
 6410 06d6 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 6410      73537973 
 6410      5469636B 
 6410      43746C4F 
 6410      66667365 
 6411              	.LASF108:
 6412 06ec 75646250 		.ascii	"udbPresent\000"
 6412      72657365 
 6412      6E7400
 6413              	.LASF295:
 6414 06f7 43795F53 		.ascii	"Cy_SAR_SetSwitchSarSeqCtrl\000"
 6414      41525F53 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 180


 6414      65745377 
 6414      69746368 
 6414      53617253 
 6415              	.LASF126:
 6416 0712 64775374 		.ascii	"dwStatusChIdxPos\000"
 6416      61747573 
 6416      43684964 
 6416      78506F73 
 6416      00
 6417              	.LASF234:
 6418 0723 6877456E 		.ascii	"hwEnabled\000"
 6418      61626C65 
 6418      6400
 6419              	.LASF73:
 6420 072d 5341525F 		.ascii	"SAR_V1_Type\000"
 6420      56315F54 
 6420      79706500 
 6421              	.LASF169:
 6422 0739 43595F53 		.ascii	"CY_SYSPM_TIMEOUT\000"
 6422      5953504D 
 6422      5F54494D 
 6422      454F5554 
 6422      00
 6423              	.LASF231:
 6424 074a 76726566 		.ascii	"vrefMvValue\000"
 6424      4D765661 
 6424      6C756500 
 6425              	.LASF170:
 6426 0756 43595F53 		.ascii	"CY_SYSPM_INVALID_STATE\000"
 6426      5953504D 
 6426      5F494E56 
 6426      414C4944 
 6426      5F535441 
 6427              	.LASF50:
 6428 076d 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 6428      52415445 
 6428      5F494E54 
 6428      525F4D41 
 6428      534B4544 
 6429              	.LASF171:
 6430 0782 43595F53 		.ascii	"CY_SYSPM_CANCELED\000"
 6430      5953504D 
 6430      5F43414E 
 6430      43454C45 
 6430      4400
 6431              	.LASF48:
 6432 0794 53415455 		.ascii	"SATURATE_INTR_SET\000"
 6432      52415445 
 6432      5F494E54 
 6432      525F5345 
 6432      5400
 6433              	.LASF214:
 6434 07a6 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 6434      41525F52 
 6434      414E4745 
 6434      5F434F4E 
 6434      445F4142 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 181


 6435              	.LASF198:
 6436 07be 63795F65 		.ascii	"cy_en_sar_switch_sar_seq_ctrl_t\000"
 6436      6E5F7361 
 6436      725F7377 
 6436      69746368 
 6436      5F736172 
 6437              	.LASF276:
 6438 07de 43795F53 		.ascii	"Cy_SAR_SetHighLimit\000"
 6438      41525F53 
 6438      65744869 
 6438      67684C69 
 6438      6D697400 
 6439              	.LASF223:
 6440 07f2 6368616E 		.ascii	"chanEn\000"
 6440      456E00
 6441              	.LASF138:
 6442 07f9 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 6442      44697631 
 6442      365F3543 
 6442      746C4F66 
 6442      66736574 
 6443              	.LASF109:
 6444 080e 73797350 		.ascii	"sysPmSimoPresent\000"
 6444      6D53696D 
 6444      6F507265 
 6444      73656E74 
 6444      00
 6445              	.LASF42:
 6446 081f 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 6446      5F524553 
 6446      554C545F 
 6446      4E455756 
 6446      414C5545 
 6447              	.LASF57:
 6448 0834 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 6448      4348414E 
 6448      5F434F4E 
 6448      46494700 
 6449              	.LASF294:
 6450 0844 43795F53 		.ascii	"Cy_SAR_GetAnalogSwitch\000"
 6450      41525F47 
 6450      6574416E 
 6450      616C6F67 
 6450      53776974 
 6451              	.LASF62:
 6452 085b 4156475F 		.ascii	"AVG_STAT\000"
 6452      53544154 
 6452      00
 6453              	.LASF127:
 6454 0864 64775374 		.ascii	"dwStatusChIdxMsk\000"
 6454      61747573 
 6454      43684964 
 6454      784D736B 
 6454      00
 6455              	.LASF15:
 6456 0875 75696E74 		.ascii	"uint8_t\000"
 6456      385F7400 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 182


 6457              	.LASF210:
 6458 087d 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL\000"
 6458      41525F54 
 6458      52494747 
 6458      45525F4D 
 6458      4F44455F 
 6459              	.LASF287:
 6460 08a0 72657375 		.ascii	"result_uVolts\000"
 6460      6C745F75 
 6460      566F6C74 
 6460      7300
 6461              	.LASF186:
 6462 08ae 63795F65 		.ascii	"cy_en_sar_status_t\000"
 6462      6E5F7361 
 6462      725F7374 
 6462      61747573 
 6462      5F7400
 6463              	.LASF260:
 6464 08c1 43795F53 		.ascii	"Cy_SAR_SetConvertMode\000"
 6464      41525F53 
 6464      6574436F 
 6464      6E766572 
 6464      744D6F64 
 6465              	.LASF132:
 6466 08d7 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 6466      44697643 
 6466      6D644469 
 6466      7653656C 
 6466      4D736B00 
 6467              	.LASF243:
 6468 08eb 43795F53 		.ascii	"Cy_SAR_RawCounts2Counts\000"
 6468      41525F52 
 6468      6177436F 
 6468      756E7473 
 6468      32436F75 
 6469              	.LASF182:
 6470 0903 43595F53 		.ascii	"CY_SAR_SUCCESS\000"
 6470      41525F53 
 6470      55434345 
 6470      535300
 6471              	.LASF52:
 6472 0912 52414E47 		.ascii	"RANGE_INTR_SET\000"
 6472      455F494E 
 6472      54525F53 
 6472      455400
 6473              	.LASF229:
 6474 0921 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 6474      77697463 
 6474      68537143 
 6474      74726C00 
 6475              	.LASF222:
 6476 0931 72616E67 		.ascii	"rangeCond\000"
 6476      65436F6E 
 6476      6400
 6477              	.LASF156:
 6478 093b 63707573 		.ascii	"cpussRam0Ctl0\000"
 6478      7352616D 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 183


 6478      3043746C 
 6478      3000
 6479              	.LASF12:
 6480 0949 6C6F6E67 		.ascii	"long long int\000"
 6480      206C6F6E 
 6480      6720696E 
 6480      7400
 6481              	.LASF83:
 6482 0957 69706342 		.ascii	"ipcBase\000"
 6482      61736500 
 6483              	.LASF124:
 6484 095f 64774368 		.ascii	"dwChCtlPrioPos\000"
 6484      43746C50 
 6484      72696F50 
 6484      6F7300
 6485              	.LASF84:
 6486 096e 63727970 		.ascii	"cryptoBase\000"
 6486      746F4261 
 6486      736500
 6487              	.LASF302:
 6488 0979 43795F53 		.ascii	"Cy_SAR_offset\000"
 6488      41525F6F 
 6488      66667365 
 6488      7400
 6489              	.LASF139:
 6490 0987 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 6490      44697632 
 6490      345F3543 
 6490      746C4F66 
 6490      66736574 
 6491              	.LASF166:
 6492 099c 75696E74 		.ascii	"uint16\000"
 6492      313600
 6493              	.LASF114:
 6494 09a3 666C6173 		.ascii	"flashWriteDelay\000"
 6494      68577269 
 6494      74654465 
 6494      6C617900 
 6495              	.LASF209:
 6496 09b3 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE\000"
 6496      41525F54 
 6496      52494747 
 6496      45525F4D 
 6496      4F44455F 
 6497              	.LASF180:
 6498 09d5 636F6E74 		.ascii	"context\000"
 6498      65787400 
 6499              	.LASF3:
 6500 09dd 5F5F696E 		.ascii	"__int16_t\000"
 6500      7431365F 
 6500      7400
 6501              	.LASF80:
 6502 09e7 6873696F 		.ascii	"hsiomBase\000"
 6502      6D426173 
 6502      6500
 6503              	.LASF238:
 6504 09f1 43795F53 		.ascii	"Cy_SAR_StartConvert\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 184


 6504      41525F53 
 6504      74617274 
 6504      436F6E76 
 6504      65727400 
 6505              	.LASF37:
 6506 0a05 4348414E 		.ascii	"CHAN_RESULT\000"
 6506      5F524553 
 6506      554C5400 
 6507              	.LASF157:
 6508 0a11 63707573 		.ascii	"cpussRam1Ctl0\000"
 6508      7352616D 
 6508      3143746C 
 6508      3000
 6509              	.LASF130:
 6510 0a1f 70657269 		.ascii	"periTrGrOffset\000"
 6510      54724772 
 6510      4F666673 
 6510      657400
 6511              	.LASF51:
 6512 0a2e 52414E47 		.ascii	"RANGE_INTR\000"
 6512      455F494E 
 6512      545200
 6513              	.LASF96:
 6514 0a39 63707573 		.ascii	"cpussDwChNr\000"
 6514      73447743 
 6514      684E7200 
 6515              	.LASF45:
 6516 0a45 494E5452 		.ascii	"INTR_MASK\000"
 6516      5F4D4153 
 6516      4B00
 6517              	.LASF24:
 6518 0a4f 53414D50 		.ascii	"SAMPLE_CTRL\000"
 6518      4C455F43 
 6518      54524C00 
 6519              	.LASF292:
 6520 0a5b 73776974 		.ascii	"switchReg\000"
 6520      63685265 
 6520      6700
 6521              	.LASF94:
 6522 0a65 63707573 		.ascii	"cpussIpcNr\000"
 6522      73497063 
 6522      4E7200
 6523              	.LASF65:
 6524 0a70 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 6524      53574954 
 6524      43485F43 
 6524      4C454152 
 6524      3000
 6525              	.LASF106:
 6526 0a82 70617373 		.ascii	"passSarChannels\000"
 6526      53617243 
 6526      68616E6E 
 6526      656C7300 
 6527              	.LASF158:
 6528 0a92 63707573 		.ascii	"cpussRam2Ctl0\000"
 6528      7352616D 
 6528      3243746C 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 185


 6528      3000
 6529              	.LASF303:
 6530 0aa0 43795F53 		.ascii	"Cy_SAR_countsPer10Volt\000"
 6530      41525F63 
 6530      6F756E74 
 6530      73506572 
 6530      3130566F 
 6531              	.LASF187:
 6532 0ab7 43595F53 		.ascii	"CY_SAR_START_CONVERT_SINGLE_SHOT\000"
 6532      41525F53 
 6532      54415254 
 6532      5F434F4E 
 6532      56455254 
 6533              	.LASF298:
 6534 0ad8 72657475 		.ascii	"returnValue\000"
 6534      726E5661 
 6534      6C756500 
 6535              	.LASF31:
 6536 0ae4 53544152 		.ascii	"START_CTRL\000"
 6536      545F4354 
 6536      524C00
 6537              	.LASF184:
 6538 0aef 43595F53 		.ascii	"CY_SAR_TIMEOUT\000"
 6538      41525F54 
 6538      494D454F 
 6538      555400
 6539              	.LASF250:
 6540 0afe 636F756E 		.ascii	"counts\000"
 6540      747300
 6541              	.LASF137:
 6542 0b05 70657269 		.ascii	"periDiv16CtlOffset\000"
 6542      44697631 
 6542      3643746C 
 6542      4F666673 
 6542      657400
 6543              	.LASF206:
 6544 0b18 43595F53 		.ascii	"CY_SAR_NEG_SEL_ACORE\000"
 6544      41525F4E 
 6544      45475F53 
 6544      454C5F41 
 6544      434F5245 
 6545              	.LASF11:
 6546 0b2d 5F5F696E 		.ascii	"__int64_t\000"
 6546      7436345F 
 6546      7400
 6547              	.LASF228:
 6548 0b37 6D757853 		.ascii	"muxSwitch\000"
 6548      77697463 
 6548      6800
 6549              	.LASF6:
 6550 0b41 73686F72 		.ascii	"short unsigned int\000"
 6550      7420756E 
 6550      7369676E 
 6550      65642069 
 6550      6E7400
 6551              	.LASF21:
 6552 0b54 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 186


 6552      20646F75 
 6552      626C6500 
 6553              	.LASF17:
 6554 0b60 75696E74 		.ascii	"uint16_t\000"
 6554      31365F74 
 6554      00
 6555              	.LASF79:
 6556 0b69 70726F74 		.ascii	"protBase\000"
 6556      42617365 
 6556      00
 6557              	.LASF129:
 6558 0b72 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 6558      5472436D 
 6558      64477253 
 6558      656C4D73 
 6558      6B00
 6559              	.LASF219:
 6560 0b84 73616D70 		.ascii	"sampleTime01\000"
 6560      6C655469 
 6560      6D653031 
 6560      00
 6561              	.LASF103:
 6562 0b91 73727373 		.ascii	"srssNumHfroot\000"
 6562      4E756D48 
 6562      66726F6F 
 6562      7400
 6563              	.LASF87:
 6564 0b9f 64775665 		.ascii	"dwVersion\000"
 6564      7273696F 
 6564      6E00
 6565              	.LASF119:
 6566 0ba9 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 6566      6843746C 
 6566      4D61696E 
 6566      57733246 
 6566      72657100 
 6567              	.LASF248:
 6568 0bbd 636F6E66 		.ascii	"config\000"
 6568      696700
 6569              	.LASF307:
 6570 0bc4 43795F53 		.ascii	"Cy_SAR_IsChannelDifferential\000"
 6570      41525F49 
 6570      73436861 
 6570      6E6E656C 
 6570      44696666 
 6571              	.LASF22:
 6572 0be1 73697A65 		.ascii	"sizetype\000"
 6572      74797065 
 6572      00
 6573              	.LASF190:
 6574 0bea 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 6574      41525F52 
 6574      45545552 
 6574      4E5F5354 
 6574      41545553 
 6575              	.LASF285:
 6576 0bff 72657375 		.ascii	"result_mVolts\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 187


 6576      6C745F6D 
 6576      566F6C74 
 6576      7300
 6577              	.LASF148:
 6578 0c0d 63707573 		.ascii	"cpussCm0StatusOffset\000"
 6578      73436D30 
 6578      53746174 
 6578      75734F66 
 6578      66736574 
 6579              	.LASF136:
 6580 0c22 70657269 		.ascii	"periDiv8CtlOffset\000"
 6580      44697638 
 6580      43746C4F 
 6580      66667365 
 6580      7400
 6581              	.LASF34:
 6582 0c34 52455345 		.ascii	"RESERVED2\000"
 6582      52564544 
 6582      3200
 6583              	.LASF36:
 6584 0c3e 52455345 		.ascii	"RESERVED3\000"
 6584      52564544 
 6584      3300
 6585              	.LASF38:
 6586 0c48 52455345 		.ascii	"RESERVED4\000"
 6586      52564544 
 6586      3400
 6587              	.LASF56:
 6588 0c52 52455345 		.ascii	"RESERVED5\000"
 6588      52564544 
 6588      3500
 6589              	.LASF58:
 6590 0c5c 52455345 		.ascii	"RESERVED6\000"
 6590      52564544 
 6590      3600
 6591              	.LASF60:
 6592 0c66 52455345 		.ascii	"RESERVED7\000"
 6592      52564544 
 6592      3700
 6593              	.LASF63:
 6594 0c70 52455345 		.ascii	"RESERVED8\000"
 6594      52564544 
 6594      3800
 6595              	.LASF66:
 6596 0c7a 52455345 		.ascii	"RESERVED9\000"
 6596      52564544 
 6596      3900
 6597              	.LASF178:
 6598 0c84 63795F65 		.ascii	"cy_en_syspm_callback_mode_t\000"
 6598      6E5F7379 
 6598      73706D5F 
 6598      63616C6C 
 6598      6261636B 
 6599              	.LASF68:
 6600 0ca0 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 6600      53574954 
 6600      43485F53 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 188


 6600      515F4354 
 6600      524C00
 6601              	.LASF8:
 6602 0cb3 6C6F6E67 		.ascii	"long int\000"
 6602      20696E74 
 6602      00
 6603              	.LASF236:
 6604 0cbc 63795F73 		.ascii	"cy_stc_sar_state_backup_t\000"
 6604      74635F73 
 6604      61725F73 
 6604      74617465 
 6604      5F626163 
 6605              	.LASF85:
 6606 0cd6 63707573 		.ascii	"cpussVersion\000"
 6606      73566572 
 6606      73696F6E 
 6606      00
 6607              	.LASF300:
 6608 0ce3 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6608      52784275 
 6608      66666572 
 6608      00
 6609              	.LASF259:
 6610 0cf0 6374726C 		.ascii	"ctrlReg\000"
 6610      52656700 
 6611              	.LASF89:
 6612 0cf8 6770696F 		.ascii	"gpioVersion\000"
 6612      56657273 
 6612      696F6E00 
 6613              	.LASF88:
 6614 0d04 666C6173 		.ascii	"flashcVersion\000"
 6614      68635665 
 6614      7273696F 
 6614      6E00
 6615              	.LASF110:
 6616 0d12 70726F74 		.ascii	"protBusMasterMask\000"
 6616      4275734D 
 6616      61737465 
 6616      724D6173 
 6616      6B00
 6617              	.LASF211:
 6618 0d24 63795F65 		.ascii	"cy_en_sar_sample_ctrl_trigger_mode_t\000"
 6618      6E5F7361 
 6618      725F7361 
 6618      6D706C65 
 6618      5F637472 
 6619              	.LASF246:
 6620 0d49 74656D70 		.ascii	"temp\000"
 6620      00
 6621              	.LASF28:
 6622 0d4e 52414E47 		.ascii	"RANGE_THRES\000"
 6622      455F5448 
 6622      52455300 
 6623              	.LASF290:
 6624 0d5a 73776974 		.ascii	"switchMask\000"
 6624      63684D61 
 6624      736B00
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 189


 6625              	.LASF304:
 6626 0d65 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6626      43313120 
 6626      352E342E 
 6626      31203230 
 6626      31363036 
 6627 0d98 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 6627      20726576 
 6627      6973696F 
 6627      6E203233 
 6627      37373135 
 6628 0dcb 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Os -ffunction-s"
 6628      70202D6D 
 6628      6670753D 
 6628      66707634 
 6628      2D73702D 
 6629 0dfe 65637469 		.ascii	"ections -ffat-lto-objects\000"
 6629      6F6E7320 
 6629      2D666661 
 6629      742D6C74 
 6629      6F2D6F62 
 6630              	.LASF197:
 6631 0e18 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_ENABLE\000"
 6631      41525F53 
 6631      57495443 
 6631      485F5345 
 6631      515F4354 
 6632              	.LASF247:
 6633 0e36 61766572 		.ascii	"averageAdcSamplesDiv\000"
 6633      61676541 
 6633      64635361 
 6633      6D706C65 
 6633      73446976 
 6634              	.LASF208:
 6635 0e4b 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_ONLY\000"
 6635      41525F54 
 6635      52494747 
 6635      45525F4D 
 6635      4F44455F 
 6636              	.LASF35:
 6637 0e67 4348414E 		.ascii	"CHAN_WORK\000"
 6637      5F574F52 
 6637      4B00
 6638              	.LASF200:
 6639 0e71 63795F65 		.ascii	"cy_en_sar_switch_register_sel_t\000"
 6639      6E5F7361 
 6639      725F7377 
 6639      69746368 
 6639      5F726567 
 6640              	.LASF261:
 6641 0e91 6D6F6465 		.ascii	"mode\000"
 6641      00
 6642              	.LASF258:
 6643 0e96 43795F53 		.ascii	"Cy_SAR_DeepSleep\000"
 6643      41525F44 
 6643      65657053 
 6643      6C656570 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 190


 6643      00
 6644              	.LASF277:
 6645 0ea7 68696768 		.ascii	"highLimit\000"
 6645      4C696D69 
 6645      7400
 6646              	.LASF235:
 6647 0eb1 636F6E74 		.ascii	"continuous\000"
 6647      696E756F 
 6647      757300
 6648              	.LASF149:
 6649 0ebc 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 6649      73436D34 
 6649      50777243 
 6649      746C4F66 
 6649      66736574 
 6650              	.LASF2:
 6651 0ed1 5F5F7569 		.ascii	"__uint8_t\000"
 6651      6E74385F 
 6651      7400
 6652              	.LASF305:
 6653 0edb 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 6653      72617465 
 6653      645F536F 
 6653      75726365 
 6653      5C50536F 
 6654 0f09 7361725C 		.ascii	"sar\\cy_sar.c\000"
 6654      63795F73 
 6654      61722E63 
 6654      00
 6655              	.LASF280:
 6656 0f16 43795F53 		.ascii	"Cy_SAR_SetGain\000"
 6656      41525F53 
 6656      65744761 
 6656      696E00
 6657              	.LASF140:
 6658 0f25 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 6658      50727449 
 6658      6E747243 
 6658      66674F66 
 6658      66736574 
 6659              	.LASF146:
 6660 0f3a 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 6660      73436D34 
 6660      436C6F63 
 6660      6B43746C 
 6660      4F666673 
 6661              	.LASF46:
 6662 0f51 494E5452 		.ascii	"INTR_MASKED\000"
 6662      5F4D4153 
 6662      4B454400 
 6663              	.LASF151:
 6664 0f5d 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 6664      73547269 
 6664      6D526F6D 
 6664      43746C4F 
 6664      66667365 
 6665              	.LASF220:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 191


 6666 0f73 73616D70 		.ascii	"sampleTime23\000"
 6666      6C655469 
 6666      6D653233 
 6666      00
 6667              	.LASF237:
 6668 0f80 43795F53 		.ascii	"Cy_SAR_Enable\000"
 6668      41525F45 
 6668      6E61626C 
 6668      6500
 6669              	.LASF90:
 6670 0f8e 6873696F 		.ascii	"hsiomVersion\000"
 6670      6D566572 
 6670      73696F6E 
 6670      00
 6671              	.LASF10:
 6672 0f9b 6C6F6E67 		.ascii	"long unsigned int\000"
 6672      20756E73 
 6672      69676E65 
 6672      6420696E 
 6672      7400
 6673              	.LASF155:
 6674 0fad 63707573 		.ascii	"cpussRomCtl\000"
 6674      73526F6D 
 6674      43746C00 
 6675              	.LASF268:
 6676 0fb9 43795F53 		.ascii	"Cy_SAR_GetResult16\000"
 6676      41525F47 
 6676      65745265 
 6676      73756C74 
 6676      313600
 6677              	.LASF18:
 6678 0fcc 696E7433 		.ascii	"int32_t\000"
 6678      325F7400 
 6679              	.LASF64:
 6680 0fd4 4D55585F 		.ascii	"MUX_SWITCH0\000"
 6680      53574954 
 6680      43483000 
 6681              	.LASF40:
 6682 0fe0 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 6682      5F524553 
 6682      554C545F 
 6682      55504441 
 6682      54454400 
 6683              	.LASF192:
 6684 0ff4 63795F65 		.ascii	"cy_en_sar_return_mode_t\000"
 6684      6E5F7361 
 6684      725F7265 
 6684      7475726E 
 6684      5F6D6F64 
 6685              	.LASF269:
 6686 100c 61646352 		.ascii	"adcResult\000"
 6686      6573756C 
 6686      7400
 6687              	.LASF201:
 6688 1016 43595F53 		.ascii	"CY_SAR_NEG_SEL_VSSA_KELVIN\000"
 6688      41525F4E 
 6688      45475F53 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 192


 6688      454C5F56 
 6688      5353415F 
 6689              	.LASF33:
 6690 1031 4348414E 		.ascii	"CHAN_CONFIG\000"
 6690      5F434F4E 
 6690      46494700 
 6691              	.LASF308:
 6692 103d 43795F53 		.ascii	"Cy_SysLib_DelayUs\000"
 6692      79734C69 
 6692      625F4465 
 6692      6C617955 
 6692      7300
 6693              	.LASF218:
 6694 104f 73616D70 		.ascii	"sampleCtrl\000"
 6694      6C654374 
 6694      726C00
 6695              	.LASF251:
 6696 105a 76726566 		.ascii	"vrefNegSelect\000"
 6696      4E656753 
 6696      656C6563 
 6696      7400
 6697              	.LASF1:
 6698 1068 756E7369 		.ascii	"unsigned char\000"
 6698      676E6564 
 6698      20636861 
 6698      7200
 6699              	.LASF71:
 6700 1076 414E415F 		.ascii	"ANA_TRIM0\000"
 6700      5452494D 
 6700      3000
 6701              	.LASF72:
 6702 1080 414E415F 		.ascii	"ANA_TRIM1\000"
 6702      5452494D 
 6702      3100
 6703              	.LASF9:
 6704 108a 5F5F7569 		.ascii	"__uint32_t\000"
 6704      6E743332 
 6704      5F7400
 6705              	.LASF282:
 6706 1095 43795F53 		.ascii	"Cy_SAR_CountsTo_Volts\000"
 6706      41525F43 
 6706      6F756E74 
 6706      73546F5F 
 6706      566F6C74 
 6707              	.LASF160:
 6708 10ab 6970634C 		.ascii	"ipcLockStatusOffset\000"
 6708      6F636B53 
 6708      74617475 
 6708      734F6666 
 6708      73657400 
 6709              	.LASF193:
 6710 10bf 43595F53 		.ascii	"CY_SAR_SWITCH_OPEN\000"
 6710      41525F53 
 6710      57495443 
 6710      485F4F50 
 6710      454E00
 6711              	.LASF154:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 193


 6712 10d2 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 6712      73436D34 
 6712      4E6D6943 
 6712      746C4F66 
 6712      66736574 
 6713              	.LASF49:
 6714 10e7 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 6714      52415445 
 6714      5F494E54 
 6714      525F4D41 
 6714      534B00
 6715              	.LASF264:
 6716 10fa 7265744D 		.ascii	"retMode\000"
 6716      6F646500 
 6717              	.LASF70:
 6718 1102 52455345 		.ascii	"RESERVED10\000"
 6718      52564544 
 6718      313000
 6719              	.LASF172:
 6720 110d 43595F53 		.ascii	"CY_SYSPM_FAIL\000"
 6720      5953504D 
 6720      5F464149 
 6720      4C00
 6721              	.LASF116:
 6722 111b 666C6173 		.ascii	"flashEraseDelay\000"
 6722      68457261 
 6722      73654465 
 6722      6C617900 
 6723              	.LASF288:
 6724 112b 43795F53 		.ascii	"Cy_SAR_SetAnalogSwitch\000"
 6724      41525F53 
 6724      6574416E 
 6724      616C6F67 
 6724      53776974 
 6725              	.LASF291:
 6726 1142 73746174 		.ascii	"state\000"
 6726      6500
 6727              	.LASF265:
 6728 1148 656E644F 		.ascii	"endOfConversion\000"
 6728      66436F6E 
 6728      76657273 
 6728      696F6E00 
 6729              	.LASF196:
 6730 1158 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_DISABLE\000"
 6730      41525F53 
 6730      57495443 
 6730      485F5345 
 6730      515F4354 
 6731              	.LASF145:
 6732 1177 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 6732      73436D30 
 6732      436C6F63 
 6732      6B43746C 
 6732      4F666673 
 6733              	.LASF254:
 6734 118e 43795F53 		.ascii	"Cy_SAR_Init\000"
 6734      41525F49 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 194


 6734      6E697400 
 6735              	.LASF112:
 6736 119a 666C6173 		.ascii	"flashRwwRequired\000"
 6736      68527777 
 6736      52657175 
 6736      69726564 
 6736      00
 6737              	.LASF141:
 6738 11ab 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 6738      50727443 
 6738      66674F66 
 6738      66736574 
 6738      00
 6739              	.LASF107:
 6740 11bc 65704D6F 		.ascii	"epMonitorNr\000"
 6740      6E69746F 
 6740      724E7200 
 6741              	.LASF168:
 6742 11c8 43595F53 		.ascii	"CY_SYSPM_BAD_PARAM\000"
 6742      5953504D 
 6742      5F424144 
 6742      5F504152 
 6742      414D00
 6743              	.LASF297:
 6744 11db 63616C6C 		.ascii	"callbackParams\000"
 6744      6261636B 
 6744      50617261 
 6744      6D7300
 6745              	.LASF98:
 6746 11ea 63707573 		.ascii	"cpussIpc0Irq\000"
 6746      73497063 
 6746      30497271 
 6746      00
 6747              	.LASF0:
 6748 11f7 7369676E 		.ascii	"signed char\000"
 6748      65642063 
 6748      68617200 
 6749              	.LASF122:
 6750 1203 64774368 		.ascii	"dwChOffset\000"
 6750      4F666673 
 6750      657400
 6751              	.LASF95:
 6752 120e 63707573 		.ascii	"cpussIpcIrqNr\000"
 6752      73497063 
 6752      4972714E 
 6752      7200
 6753              	.LASF125:
 6754 121c 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 6754      43746C50 
 6754      7265656D 
 6754      70746162 
 6754      6C65506F 
 6755              	.LASF270:
 6756 1232 43795F53 		.ascii	"Cy_SAR_GetResult32\000"
 6756      41525F47 
 6756      65745265 
 6756      73756C74 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 195


 6756      333200
 6757              	.LASF147:
 6758 1245 63707573 		.ascii	"cpussCm4StatusOffset\000"
 6758      73436D34 
 6758      53746174 
 6758      75734F66 
 6758      66736574 
 6759              	.LASF224:
 6760 125a 6368616E 		.ascii	"chanConfig\000"
 6760      436F6E66 
 6760      696700
 6761              	.LASF69:
 6762 1265 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 6762      53574954 
 6762      43485F53 
 6762      54415455 
 6762      5300
 6763              	.LASF92:
 6764 1277 70657269 		.ascii	"periVersion\000"
 6764      56657273 
 6764      696F6E00 
 6765              	.LASF262:
 6766 1283 73616D70 		.ascii	"sampleCtrlReg\000"
 6766      6C654374 
 6766      726C5265 
 6766      6700
 6767              	.LASF256:
 6768 1291 6465496E 		.ascii	"deInitRouting\000"
 6768      6974526F 
 6768      7574696E 
 6768      6700
 6769              	.LASF230:
 6770 129f 636F6E66 		.ascii	"configRouting\000"
 6770      6967526F 
 6770      7574696E 
 6770      6700
 6771              	.LASF82:
 6772 12ad 70617373 		.ascii	"passBase\000"
 6772      42617365 
 6772      00
 6773              	.LASF32:
 6774 12b6 52455345 		.ascii	"RESERVED1\000"
 6774      52564544 
 6774      3100
 6775              	.LASF101:
 6776 12c0 73727373 		.ascii	"srssNumClkpath\000"
 6776      4E756D43 
 6776      6C6B7061 
 6776      746800
 6777              	.LASF61:
 6778 12cf 53544154 		.ascii	"STATUS\000"
 6778      555300
 6779              	.LASF278:
 6780 12d6 43795F53 		.ascii	"Cy_SAR_SetOffset\000"
 6780      41525F53 
 6780      65744F66 
 6780      66736574 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 196


 6780      00
 6781              	.LASF121:
 6782 12e7 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 6782      6843746C 
 6782      4D61696E 
 6782      57733446 
 6782      72657100 
 6783              	.LASF227:
 6784 12fb 72616E67 		.ascii	"rangeIntrMask\000"
 6784      65496E74 
 6784      724D6173 
 6784      6B00
 6785              	.LASF194:
 6786 1309 43595F53 		.ascii	"CY_SAR_SWITCH_CLOSE\000"
 6786      41525F53 
 6786      57495443 
 6786      485F434C 
 6786      4F534500 
 6787              	.LASF216:
 6788 131d 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 6788      6E5F7361 
 6788      725F7261 
 6788      6E67655F 
 6788      64657465 
 6789              	.LASF257:
 6790 1340 43795F53 		.ascii	"Cy_SAR_StopConvert\000"
 6790      41525F53 
 6790      746F7043 
 6790      6F6E7665 
 6790      727400
 6791              	.LASF188:
 6792 1353 43595F53 		.ascii	"CY_SAR_START_CONVERT_CONTINUOUS\000"
 6792      41525F53 
 6792      54415254 
 6792      5F434F4E 
 6792      56455254 
 6793              	.LASF299:
 6794 1373 656E6162 		.ascii	"enabledBeforeSleep\000"
 6794      6C656442 
 6794      65666F72 
 6794      65536C65 
 6794      657000
 6795              	.LASF91:
 6796 1386 69706356 		.ascii	"ipcVersion\000"
 6796      65727369 
 6796      6F6E00
 6797              	.LASF225:
 6798 1391 696E7472 		.ascii	"intrMask\000"
 6798      4D61736B 
 6798      00
 6799              	.LASF128:
 6800 139a 70657269 		.ascii	"periTrCmdOffset\000"
 6800      5472436D 
 6800      644F6666 
 6800      73657400 
 6801              	.LASF263:
 6802 13aa 43795F53 		.ascii	"Cy_SAR_IsEndConversion\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccvhXS2k.s 			page 197


 6802      41525F49 
 6802      73456E64 
 6802      436F6E76 
 6802      65727369 
 6803              	.LASF23:
 6804 13c1 4354524C 		.ascii	"CTRL\000"
 6804      00
 6805              	.LASF176:
 6806 13c6 43595F53 		.ascii	"CY_SYSPM_BEFORE_TRANSITION\000"
 6806      5953504D 
 6806      5F424546 
 6806      4F52455F 
 6806      5452414E 
 6807              	.LASF177:
 6808 13e1 43595F53 		.ascii	"CY_SYSPM_AFTER_TRANSITION\000"
 6808      5953504D 
 6808      5F414654 
 6808      45525F54 
 6808      52414E53 
 6809              	.LASF174:
 6810 13fb 43595F53 		.ascii	"CY_SYSPM_CHECK_READY\000"
 6810      5953504D 
 6810      5F434845 
 6810      434B5F52 
 6810      45414459 
 6811              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
