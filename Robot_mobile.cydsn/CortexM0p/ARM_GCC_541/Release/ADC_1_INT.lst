ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_1_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_1_ISR,"ax",%progbits
  20              		.align	1
  21              		.global	ADC_1_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_1_ISR, %function
  25              	ADC_1_ISR:
  26              	.LFB184:
  27              		.file 1 "Generated_Source\\PSoC6\\ADC_1_INT.c"
   1:Generated_Source\PSoC6/ADC_1_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1_INT.c **** * \file     ADC_1_INT.c
   3:Generated_Source\PSoC6/ADC_1_INT.c **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1_INT.c **** *
   5:Generated_Source\PSoC6/ADC_1_INT.c **** * \brief
   6:Generated_Source\PSoC6/ADC_1_INT.c **** * Provides the initialization data structure for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1_INT.c **** *
   8:Generated_Source\PSoC6/ADC_1_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1_INT.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_1_INT.c **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1_INT.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1_INT.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1_INT.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1_INT.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1_INT.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1_INT.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1_INT.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1_INT.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_1_INT.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1_INT.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1_INT.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1_INT.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_1_INT.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1_INT.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1_INT.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1_INT.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1_INT.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1_INT.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_1_INT.c **** * liability arising out of the application or use of the Software or any
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 2


  31:Generated_Source\PSoC6/ADC_1_INT.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1_INT.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1_INT.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1_INT.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1_INT.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1_INT.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1_INT.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1_INT.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC6/ADC_1_INT.c **** #include "cyapicallbacks.h"
  41:Generated_Source\PSoC6/ADC_1_INT.c **** 
  42:Generated_Source\PSoC6/ADC_1_INT.c **** /******************************************************************************
  43:Generated_Source\PSoC6/ADC_1_INT.c **** * Custom Declarations and Variables
  44:Generated_Source\PSoC6/ADC_1_INT.c **** * - add user include files, prototypes and variables between the following
  45:Generated_Source\PSoC6/ADC_1_INT.c **** *   #START and #END tags
  46:Generated_Source\PSoC6/ADC_1_INT.c **** ******************************************************************************/
  47:Generated_Source\PSoC6/ADC_1_INT.c **** /* `#START ADC_1_SYS_VAR`  */
  48:Generated_Source\PSoC6/ADC_1_INT.c **** 
  49:Generated_Source\PSoC6/ADC_1_INT.c **** /* `#END`  */
  50:Generated_Source\PSoC6/ADC_1_INT.c **** 
  51:Generated_Source\PSoC6/ADC_1_INT.c **** /******************************************************************************
  52:Generated_Source\PSoC6/ADC_1_INT.c **** * Function Name: ADC_1_ISR
  53:Generated_Source\PSoC6/ADC_1_INT.c **** *******************************************************************************
  54:Generated_Source\PSoC6/ADC_1_INT.c **** *
  55:Generated_Source\PSoC6/ADC_1_INT.c **** * \brief Handle Interrupt Service Routine.
  56:Generated_Source\PSoC6/ADC_1_INT.c **** *
  57:Generated_Source\PSoC6/ADC_1_INT.c **** * \param None
  58:Generated_Source\PSoC6/ADC_1_INT.c **** *
  59:Generated_Source\PSoC6/ADC_1_INT.c **** * \return None
  60:Generated_Source\PSoC6/ADC_1_INT.c **** *
  61:Generated_Source\PSoC6/ADC_1_INT.c **** * \sideeffect None
  62:Generated_Source\PSoC6/ADC_1_INT.c **** *
  63:Generated_Source\PSoC6/ADC_1_INT.c **** ******************************************************************************/
  64:Generated_Source\PSoC6/ADC_1_INT.c **** void ADC_1_ISR(void)
  65:Generated_Source\PSoC6/ADC_1_INT.c **** {
  28              		.loc 1 65 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.LBB8:
  35              	.LBB9:
  36              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 3


  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 4


  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 5


 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 6


 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 7


 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 8


 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 9


 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 10


 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 11


 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 12


 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 13


 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 14


 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 15


 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 16


 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 17


 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 18


 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 19


 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 20


 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 21


1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 22


1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 23


1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 24


1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 25


1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 26


1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 27


1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 28


1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 29


1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 30


1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR(base);
  37              		.loc 2 1556 0
  38 0000 8423     		movs	r3, #132
  39 0002 034A     		ldr	r2, .L2
  40 0004 9B00     		lsls	r3, r3, #2
  41 0006 D158     		ldr	r1, [r2, r3]
  42              	.LVL1:
  43              	.LBE9:
  44              	.LBE8:
  66:Generated_Source\PSoC6/ADC_1_INT.c ****     uint32_t intr_status;
  67:Generated_Source\PSoC6/ADC_1_INT.c **** 
  68:Generated_Source\PSoC6/ADC_1_INT.c ****     /* Read interrupt status register */
  69:Generated_Source\PSoC6/ADC_1_INT.c ****     intr_status = Cy_SAR_GetInterruptStatus(ADC_1_SAR__HW);
  70:Generated_Source\PSoC6/ADC_1_INT.c **** 
  71:Generated_Source\PSoC6/ADC_1_INT.c ****     /* ISR Macro Callback */
  72:Generated_Source\PSoC6/ADC_1_INT.c ****     #ifdef ADC_1_ISR_CALLBACK
  73:Generated_Source\PSoC6/ADC_1_INT.c ****         ADC_1_ISR_Callback();
  74:Generated_Source\PSoC6/ADC_1_INT.c ****     #endif
  75:Generated_Source\PSoC6/ADC_1_INT.c **** 
  76:Generated_Source\PSoC6/ADC_1_INT.c ****     /************************************************************************
  77:Generated_Source\PSoC6/ADC_1_INT.c ****     *  Custom Code
  78:Generated_Source\PSoC6/ADC_1_INT.c ****     *  - add user ISR code between the following #START and #END tags
  79:Generated_Source\PSoC6/ADC_1_INT.c ****     *************************************************************************/
  80:Generated_Source\PSoC6/ADC_1_INT.c ****     /* `#START MAIN_ADC_1_ISR`  */
  81:Generated_Source\PSoC6/ADC_1_INT.c **** 
  82:Generated_Source\PSoC6/ADC_1_INT.c ****     /* `#END`  */
  83:Generated_Source\PSoC6/ADC_1_INT.c **** 
  84:Generated_Source\PSoC6/ADC_1_INT.c ****     /* Clear handled interrupt */
  85:Generated_Source\PSoC6/ADC_1_INT.c ****     Cy_SAR_ClearInterrupt(ADC_1_SAR__HW, intr_status);
  86:Generated_Source\PSoC6/ADC_1_INT.c ****     /* Read interrupt status register to ensure write completed due to buffered writes */
  87:Generated_Source\PSoC6/ADC_1_INT.c ****     (void)Cy_SAR_GetInterruptStatus(ADC_1_SAR__HW);
  88:Generated_Source\PSoC6/ADC_1_INT.c **** }
  45              		.loc 1 88 0
  46              		@ sp needed
  47              	.LBB10:
  48              	.LBB11:
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 31


1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
  49              		.loc 2 1587 0
  50 0008 D150     		str	r1, [r2, r3]
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_INTR(base);
  51              		.loc 2 1590 0
  52 000a D158     		ldr	r1, [r2, r3]
  53              	.LVL2:
  54              	.LBE11:
  55              	.LBE10:
  56              	.LBB12:
  57              	.LBB13:
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
  58              		.loc 2 1556 0
  59 000c D358     		ldr	r3, [r2, r3]
  60              	.LVL3:
  61              	.LBE13:
  62              	.LBE12:
  63              		.loc 1 88 0
  64 000e 7047     		bx	lr
  65              	.L3:
  66              		.align	2
  67              	.L2:
  68 0010 00001D41 		.word	1092419584
  69              		.cfi_endproc
  70              	.LFE184:
  71              		.size	ADC_1_ISR, .-ADC_1_ISR
  72              		.text
  73              	.Letext0:
  74              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
  75              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
  76              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
  77              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
  78              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
  79              		.section	.debug_info,"",%progbits
  80              	.Ldebug_info0:
  81 0000 9B090000 		.4byte	0x99b
  82 0004 0400     		.2byte	0x4
  83 0006 00000000 		.4byte	.Ldebug_abbrev0
  84 000a 04       		.byte	0x4
  85 000b 01       		.uleb128 0x1
  86 000c 6F020000 		.4byte	.LASF164
  87 0010 0C       		.byte	0xc
  88 0011 D0070000 		.4byte	.LASF165
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 32


  89 0015 22010000 		.4byte	.LASF166
  90 0019 00000000 		.4byte	.Ldebug_ranges0+0
  91 001d 00000000 		.4byte	0
  92 0021 00000000 		.4byte	.Ldebug_line0
  93 0025 02       		.uleb128 0x2
  94 0026 02       		.byte	0x2
  95 0027 05       		.byte	0x5
  96 0028 A8070000 		.4byte	.LASF0
  97 002c 02       		.uleb128 0x2
  98 002d 01       		.byte	0x1
  99 002e 08       		.byte	0x8
 100 002f 86070000 		.4byte	.LASF1
 101 0033 02       		.uleb128 0x2
 102 0034 01       		.byte	0x1
 103 0035 06       		.byte	0x6
 104 0036 FC010000 		.4byte	.LASF2
 105 003a 03       		.uleb128 0x3
 106 003b B1000000 		.4byte	.LASF3
 107 003f 03       		.byte	0x3
 108 0040 1D       		.byte	0x1d
 109 0041 2C000000 		.4byte	0x2c
 110 0045 03       		.uleb128 0x3
 111 0046 06040000 		.4byte	.LASF4
 112 004a 03       		.byte	0x3
 113 004b 29       		.byte	0x29
 114 004c 25000000 		.4byte	0x25
 115 0050 03       		.uleb128 0x3
 116 0051 94080000 		.4byte	.LASF5
 117 0055 03       		.byte	0x3
 118 0056 2B       		.byte	0x2b
 119 0057 5B000000 		.4byte	0x5b
 120 005b 02       		.uleb128 0x2
 121 005c 02       		.byte	0x2
 122 005d 07       		.byte	0x7
 123 005e EB080000 		.4byte	.LASF6
 124 0062 02       		.uleb128 0x2
 125 0063 04       		.byte	0x4
 126 0064 05       		.byte	0x5
 127 0065 66020000 		.4byte	.LASF7
 128 0069 03       		.uleb128 0x3
 129 006a DD030000 		.4byte	.LASF8
 130 006e 03       		.byte	0x3
 131 006f 41       		.byte	0x41
 132 0070 74000000 		.4byte	0x74
 133 0074 02       		.uleb128 0x2
 134 0075 04       		.byte	0x4
 135 0076 07       		.byte	0x7
 136 0077 87040000 		.4byte	.LASF9
 137 007b 02       		.uleb128 0x2
 138 007c 08       		.byte	0x8
 139 007d 05       		.byte	0x5
 140 007e EE010000 		.4byte	.LASF10
 141 0082 02       		.uleb128 0x2
 142 0083 08       		.byte	0x8
 143 0084 07       		.byte	0x7
 144 0085 0B010000 		.4byte	.LASF11
 145 0089 04       		.uleb128 0x4
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 33


 146 008a 04       		.byte	0x4
 147 008b 05       		.byte	0x5
 148 008c 696E7400 		.ascii	"int\000"
 149 0090 02       		.uleb128 0x2
 150 0091 04       		.byte	0x4
 151 0092 07       		.byte	0x7
 152 0093 5F040000 		.4byte	.LASF12
 153 0097 03       		.uleb128 0x3
 154 0098 A9090000 		.4byte	.LASF13
 155 009c 04       		.byte	0x4
 156 009d 18       		.byte	0x18
 157 009e 3A000000 		.4byte	0x3a
 158 00a2 03       		.uleb128 0x3
 159 00a3 E6010000 		.4byte	.LASF14
 160 00a7 04       		.byte	0x4
 161 00a8 20       		.byte	0x20
 162 00a9 45000000 		.4byte	0x45
 163 00ad 03       		.uleb128 0x3
 164 00ae 6C040000 		.4byte	.LASF15
 165 00b2 04       		.byte	0x4
 166 00b3 24       		.byte	0x24
 167 00b4 50000000 		.4byte	0x50
 168 00b8 03       		.uleb128 0x3
 169 00b9 4E080000 		.4byte	.LASF16
 170 00bd 04       		.byte	0x4
 171 00be 30       		.byte	0x30
 172 00bf 69000000 		.4byte	0x69
 173 00c3 02       		.uleb128 0x2
 174 00c4 04       		.byte	0x4
 175 00c5 07       		.byte	0x7
 176 00c6 07060000 		.4byte	.LASF17
 177 00ca 05       		.uleb128 0x5
 178 00cb B8000000 		.4byte	0xb8
 179 00cf 06       		.uleb128 0x6
 180 00d0 CA000000 		.4byte	0xca
 181 00d4 07       		.uleb128 0x7
 182 00d5 CF000000 		.4byte	0xcf
 183 00d9 E4000000 		.4byte	0xe4
 184 00dd 08       		.uleb128 0x8
 185 00de C3000000 		.4byte	0xc3
 186 00e2 01       		.byte	0x1
 187 00e3 00       		.byte	0
 188 00e4 07       		.uleb128 0x7
 189 00e5 CA000000 		.4byte	0xca
 190 00e9 F4000000 		.4byte	0xf4
 191 00ed 08       		.uleb128 0x8
 192 00ee C3000000 		.4byte	0xc3
 193 00f2 0F       		.byte	0xf
 194 00f3 00       		.byte	0
 195 00f4 07       		.uleb128 0x7
 196 00f5 CF000000 		.4byte	0xcf
 197 00f9 04010000 		.4byte	0x104
 198 00fd 08       		.uleb128 0x8
 199 00fe C3000000 		.4byte	0xc3
 200 0102 0F       		.byte	0xf
 201 0103 00       		.byte	0
 202 0104 07       		.uleb128 0x7
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 34


 203 0105 CF000000 		.4byte	0xcf
 204 0109 14010000 		.4byte	0x114
 205 010d 08       		.uleb128 0x8
 206 010e C3000000 		.4byte	0xc3
 207 0112 02       		.byte	0x2
 208 0113 00       		.byte	0
 209 0114 07       		.uleb128 0x7
 210 0115 CF000000 		.4byte	0xcf
 211 0119 24010000 		.4byte	0x124
 212 011d 08       		.uleb128 0x8
 213 011e C3000000 		.4byte	0xc3
 214 0122 0E       		.byte	0xe
 215 0123 00       		.byte	0
 216 0124 09       		.uleb128 0x9
 217 0125 080F     		.2byte	0xf08
 218 0127 05       		.byte	0x5
 219 0128 21       		.byte	0x21
 220 0129 AC030000 		.4byte	0x3ac
 221 012d 0A       		.uleb128 0xa
 222 012e 3F090000 		.4byte	.LASF18
 223 0132 05       		.byte	0x5
 224 0133 22       		.byte	0x22
 225 0134 CA000000 		.4byte	0xca
 226 0138 00       		.byte	0
 227 0139 0A       		.uleb128 0xa
 228 013a 5D060000 		.4byte	.LASF19
 229 013e 05       		.byte	0x5
 230 013f 23       		.byte	0x23
 231 0140 CA000000 		.4byte	0xca
 232 0144 04       		.byte	0x4
 233 0145 0A       		.uleb128 0xa
 234 0146 BB070000 		.4byte	.LASF20
 235 014a 05       		.byte	0x5
 236 014b 24       		.byte	0x24
 237 014c B1030000 		.4byte	0x3b1
 238 0150 08       		.byte	0x8
 239 0151 0A       		.uleb128 0xa
 240 0152 F8030000 		.4byte	.LASF21
 241 0156 05       		.byte	0x5
 242 0157 25       		.byte	0x25
 243 0158 CA000000 		.4byte	0xca
 244 015c 10       		.byte	0x10
 245 015d 0A       		.uleb128 0xa
 246 015e 8E060000 		.4byte	.LASF22
 247 0162 05       		.byte	0x5
 248 0163 26       		.byte	0x26
 249 0164 CA000000 		.4byte	0xca
 250 0168 14       		.byte	0x14
 251 0169 0A       		.uleb128 0xa
 252 016a 69060000 		.4byte	.LASF23
 253 016e 05       		.byte	0x5
 254 016f 27       		.byte	0x27
 255 0170 CA000000 		.4byte	0xca
 256 0174 18       		.byte	0x18
 257 0175 0A       		.uleb128 0xa
 258 0176 E7000000 		.4byte	.LASF24
 259 017a 05       		.byte	0x5
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 35


 260 017b 28       		.byte	0x28
 261 017c CA000000 		.4byte	0xca
 262 0180 1C       		.byte	0x1c
 263 0181 0A       		.uleb128 0xa
 264 0182 86060000 		.4byte	.LASF25
 265 0186 05       		.byte	0x5
 266 0187 29       		.byte	0x29
 267 0188 CA000000 		.4byte	0xca
 268 018c 20       		.byte	0x20
 269 018d 0A       		.uleb128 0xa
 270 018e C0050000 		.4byte	.LASF26
 271 0192 05       		.byte	0x5
 272 0193 2A       		.byte	0x2a
 273 0194 CA000000 		.4byte	0xca
 274 0198 24       		.byte	0x24
 275 0199 0A       		.uleb128 0xa
 276 019a 1C070000 		.4byte	.LASF27
 277 019e 05       		.byte	0x5
 278 019f 2B       		.byte	0x2b
 279 01a0 CB030000 		.4byte	0x3cb
 280 01a4 28       		.byte	0x28
 281 01a5 0A       		.uleb128 0xa
 282 01a6 1E040000 		.4byte	.LASF28
 283 01aa 05       		.byte	0x5
 284 01ab 2C       		.byte	0x2c
 285 01ac D0030000 		.4byte	0x3d0
 286 01b0 80       		.byte	0x80
 287 01b1 0A       		.uleb128 0xa
 288 01b2 1C080000 		.4byte	.LASF29
 289 01b6 05       		.byte	0x5
 290 01b7 2D       		.byte	0x2d
 291 01b8 DA030000 		.4byte	0x3da
 292 01bc C0       		.byte	0xc0
 293 01bd 0B       		.uleb128 0xb
 294 01be 15090000 		.4byte	.LASF30
 295 01c2 05       		.byte	0x5
 296 01c3 2E       		.byte	0x2e
 297 01c4 E4030000 		.4byte	0x3e4
 298 01c8 0001     		.2byte	0x100
 299 01ca 0B       		.uleb128 0xb
 300 01cb 30070000 		.4byte	.LASF31
 301 01cf 05       		.byte	0x5
 302 01d0 2F       		.byte	0x2f
 303 01d1 EE030000 		.4byte	0x3ee
 304 01d5 4001     		.2byte	0x140
 305 01d7 0B       		.uleb128 0xb
 306 01d8 1B060000 		.4byte	.LASF32
 307 01dc 05       		.byte	0x5
 308 01dd 30       		.byte	0x30
 309 01de F8030000 		.4byte	0x3f8
 310 01e2 8001     		.2byte	0x180
 311 01e4 0B       		.uleb128 0xb
 312 01e5 34080000 		.4byte	.LASF33
 313 01e9 05       		.byte	0x5
 314 01ea 31       		.byte	0x31
 315 01eb 02040000 		.4byte	0x402
 316 01ef C001     		.2byte	0x1c0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 36


 317 01f1 0B       		.uleb128 0xb
 318 01f2 22050000 		.4byte	.LASF34
 319 01f6 05       		.byte	0x5
 320 01f7 32       		.byte	0x32
 321 01f8 CF000000 		.4byte	0xcf
 322 01fc 0002     		.2byte	0x200
 323 01fe 0B       		.uleb128 0xb
 324 01ff 95090000 		.4byte	.LASF35
 325 0203 05       		.byte	0x5
 326 0204 33       		.byte	0x33
 327 0205 CF000000 		.4byte	0xcf
 328 0209 0402     		.2byte	0x204
 329 020b 0B       		.uleb128 0xb
 330 020c 99040000 		.4byte	.LASF36
 331 0210 05       		.byte	0x5
 332 0211 34       		.byte	0x34
 333 0212 CF000000 		.4byte	0xcf
 334 0216 0802     		.2byte	0x208
 335 0218 0B       		.uleb128 0xb
 336 0219 07080000 		.4byte	.LASF37
 337 021d 05       		.byte	0x5
 338 021e 35       		.byte	0x35
 339 021f CF000000 		.4byte	0xcf
 340 0223 0C02     		.2byte	0x20c
 341 0225 0B       		.uleb128 0xb
 342 0226 D2080000 		.4byte	.LASF38
 343 022a 05       		.byte	0x5
 344 022b 36       		.byte	0x36
 345 022c CA000000 		.4byte	0xca
 346 0230 1002     		.2byte	0x210
 347 0232 0B       		.uleb128 0xb
 348 0233 CB050000 		.4byte	.LASF39
 349 0237 05       		.byte	0x5
 350 0238 37       		.byte	0x37
 351 0239 CA000000 		.4byte	0xca
 352 023d 1402     		.2byte	0x214
 353 023f 0B       		.uleb128 0xb
 354 0240 CA040000 		.4byte	.LASF40
 355 0244 05       		.byte	0x5
 356 0245 38       		.byte	0x38
 357 0246 CA000000 		.4byte	0xca
 358 024a 1802     		.2byte	0x218
 359 024c 0B       		.uleb128 0xb
 360 024d DF060000 		.4byte	.LASF41
 361 0251 05       		.byte	0x5
 362 0252 39       		.byte	0x39
 363 0253 CF000000 		.4byte	0xcf
 364 0257 1C02     		.2byte	0x21c
 365 0259 0B       		.uleb128 0xb
 366 025a 10040000 		.4byte	.LASF42
 367 025e 05       		.byte	0x5
 368 025f 3A       		.byte	0x3a
 369 0260 CA000000 		.4byte	0xca
 370 0264 2002     		.2byte	0x220
 371 0266 0B       		.uleb128 0xb
 372 0267 CD060000 		.4byte	.LASF43
 373 026b 05       		.byte	0x5
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 37


 374 026c 3B       		.byte	0x3b
 375 026d CA000000 		.4byte	0xca
 376 0271 2402     		.2byte	0x224
 377 0273 0B       		.uleb128 0xb
 378 0274 BF080000 		.4byte	.LASF44
 379 0278 05       		.byte	0x5
 380 0279 3C       		.byte	0x3c
 381 027a CA000000 		.4byte	0xca
 382 027e 2802     		.2byte	0x228
 383 0280 0B       		.uleb128 0xb
 384 0281 5D050000 		.4byte	.LASF45
 385 0285 05       		.byte	0x5
 386 0286 3D       		.byte	0x3d
 387 0287 CF000000 		.4byte	0xcf
 388 028b 2C02     		.2byte	0x22c
 389 028d 0B       		.uleb128 0xb
 390 028e 17050000 		.4byte	.LASF46
 391 0292 05       		.byte	0x5
 392 0293 3E       		.byte	0x3e
 393 0294 CA000000 		.4byte	0xca
 394 0298 3002     		.2byte	0x230
 395 029a 0B       		.uleb128 0xb
 396 029b F1090000 		.4byte	.LASF47
 397 029f 05       		.byte	0x5
 398 02a0 3F       		.byte	0x3f
 399 02a1 CA000000 		.4byte	0xca
 400 02a5 3402     		.2byte	0x234
 401 02a7 0B       		.uleb128 0xb
 402 02a8 D6010000 		.4byte	.LASF48
 403 02ac 05       		.byte	0x5
 404 02ad 40       		.byte	0x40
 405 02ae CA000000 		.4byte	0xca
 406 02b2 3802     		.2byte	0x238
 407 02b4 0B       		.uleb128 0xb
 408 02b5 210A0000 		.4byte	.LASF49
 409 02b9 05       		.byte	0x5
 410 02ba 41       		.byte	0x41
 411 02bb CF000000 		.4byte	0xcf
 412 02bf 3C02     		.2byte	0x23c
 413 02c1 0B       		.uleb128 0xb
 414 02c2 13030000 		.4byte	.LASF50
 415 02c6 05       		.byte	0x5
 416 02c7 42       		.byte	0x42
 417 02c8 CF000000 		.4byte	0xcf
 418 02cc 4002     		.2byte	0x240
 419 02ce 0B       		.uleb128 0xb
 420 02cf 46070000 		.4byte	.LASF51
 421 02d3 05       		.byte	0x5
 422 02d4 43       		.byte	0x43
 423 02d5 0C040000 		.4byte	0x40c
 424 02d9 4402     		.2byte	0x244
 425 02db 0B       		.uleb128 0xb
 426 02dc 1F000000 		.4byte	.LASF52
 427 02e0 05       		.byte	0x5
 428 02e1 44       		.byte	0x44
 429 02e2 CA000000 		.4byte	0xca
 430 02e6 8002     		.2byte	0x280
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 38


 431 02e8 0B       		.uleb128 0xb
 432 02e9 50070000 		.4byte	.LASF53
 433 02ed 05       		.byte	0x5
 434 02ee 45       		.byte	0x45
 435 02ef 16040000 		.4byte	0x416
 436 02f3 8402     		.2byte	0x284
 437 02f5 0B       		.uleb128 0xb
 438 02f6 2C030000 		.4byte	.LASF54
 439 02fa 05       		.byte	0x5
 440 02fb 46       		.byte	0x46
 441 02fc CF000000 		.4byte	0xcf
 442 0300 9002     		.2byte	0x290
 443 0302 0B       		.uleb128 0xb
 444 0303 5A070000 		.4byte	.LASF55
 445 0307 05       		.byte	0x5
 446 0308 47       		.byte	0x47
 447 0309 20040000 		.4byte	0x420
 448 030d 9402     		.2byte	0x294
 449 030f 0B       		.uleb128 0xb
 450 0310 69090000 		.4byte	.LASF56
 451 0314 05       		.byte	0x5
 452 0315 48       		.byte	0x48
 453 0316 CF000000 		.4byte	0xcf
 454 031a A002     		.2byte	0x2a0
 455 031c 0B       		.uleb128 0xb
 456 031d 16000000 		.4byte	.LASF57
 457 0321 05       		.byte	0x5
 458 0322 49       		.byte	0x49
 459 0323 CF000000 		.4byte	0xcf
 460 0327 A402     		.2byte	0x2a4
 461 0329 0B       		.uleb128 0xb
 462 032a 64070000 		.4byte	.LASF58
 463 032e 05       		.byte	0x5
 464 032f 4A       		.byte	0x4a
 465 0330 2A040000 		.4byte	0x42a
 466 0334 A802     		.2byte	0x2a8
 467 0336 0B       		.uleb128 0xb
 468 0337 97000000 		.4byte	.LASF59
 469 033b 05       		.byte	0x5
 470 033c 4B       		.byte	0x4b
 471 033d CA000000 		.4byte	0xca
 472 0341 0003     		.2byte	0x300
 473 0343 0B       		.uleb128 0xb
 474 0344 78030000 		.4byte	.LASF60
 475 0348 05       		.byte	0x5
 476 0349 4C       		.byte	0x4c
 477 034a CA000000 		.4byte	0xca
 478 034e 0403     		.2byte	0x304
 479 0350 0B       		.uleb128 0xb
 480 0351 6E070000 		.4byte	.LASF61
 481 0355 05       		.byte	0x5
 482 0356 4D       		.byte	0x4d
 483 0357 44040000 		.4byte	0x444
 484 035b 0803     		.2byte	0x308
 485 035d 0B       		.uleb128 0xb
 486 035e B7040000 		.4byte	.LASF62
 487 0362 05       		.byte	0x5
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 39


 488 0363 4E       		.byte	0x4e
 489 0364 CA000000 		.4byte	0xca
 490 0368 4003     		.2byte	0x340
 491 036a 0B       		.uleb128 0xb
 492 036b 2C090000 		.4byte	.LASF63
 493 036f 05       		.byte	0x5
 494 0370 4F       		.byte	0x4f
 495 0371 CA000000 		.4byte	0xca
 496 0375 4403     		.2byte	0x344
 497 0377 0B       		.uleb128 0xb
 498 0378 01030000 		.4byte	.LASF64
 499 037c 05       		.byte	0x5
 500 037d 50       		.byte	0x50
 501 037e CF000000 		.4byte	0xcf
 502 0382 4803     		.2byte	0x348
 503 0384 0B       		.uleb128 0xb
 504 0385 51020000 		.4byte	.LASF65
 505 0389 05       		.byte	0x5
 506 038a 51       		.byte	0x51
 507 038b 5F040000 		.4byte	0x45f
 508 038f 4C03     		.2byte	0x34c
 509 0391 0B       		.uleb128 0xb
 510 0392 C2010000 		.4byte	.LASF66
 511 0396 05       		.byte	0x5
 512 0397 52       		.byte	0x52
 513 0398 CA000000 		.4byte	0xca
 514 039c 000F     		.2byte	0xf00
 515 039e 0B       		.uleb128 0xb
 516 039f CC010000 		.4byte	.LASF67
 517 03a3 05       		.byte	0x5
 518 03a4 53       		.byte	0x53
 519 03a5 CA000000 		.4byte	0xca
 520 03a9 040F     		.2byte	0xf04
 521 03ab 00       		.byte	0
 522 03ac 05       		.uleb128 0x5
 523 03ad D4000000 		.4byte	0xd4
 524 03b1 06       		.uleb128 0x6
 525 03b2 AC030000 		.4byte	0x3ac
 526 03b6 07       		.uleb128 0x7
 527 03b7 CF000000 		.4byte	0xcf
 528 03bb C6030000 		.4byte	0x3c6
 529 03bf 08       		.uleb128 0x8
 530 03c0 C3000000 		.4byte	0xc3
 531 03c4 15       		.byte	0x15
 532 03c5 00       		.byte	0
 533 03c6 05       		.uleb128 0x5
 534 03c7 B6030000 		.4byte	0x3b6
 535 03cb 06       		.uleb128 0x6
 536 03cc C6030000 		.4byte	0x3c6
 537 03d0 05       		.uleb128 0x5
 538 03d1 E4000000 		.4byte	0xe4
 539 03d5 05       		.uleb128 0x5
 540 03d6 F4000000 		.4byte	0xf4
 541 03da 06       		.uleb128 0x6
 542 03db D5030000 		.4byte	0x3d5
 543 03df 05       		.uleb128 0x5
 544 03e0 F4000000 		.4byte	0xf4
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 40


 545 03e4 06       		.uleb128 0x6
 546 03e5 DF030000 		.4byte	0x3df
 547 03e9 05       		.uleb128 0x5
 548 03ea F4000000 		.4byte	0xf4
 549 03ee 06       		.uleb128 0x6
 550 03ef E9030000 		.4byte	0x3e9
 551 03f3 05       		.uleb128 0x5
 552 03f4 F4000000 		.4byte	0xf4
 553 03f8 06       		.uleb128 0x6
 554 03f9 F3030000 		.4byte	0x3f3
 555 03fd 05       		.uleb128 0x5
 556 03fe F4000000 		.4byte	0xf4
 557 0402 06       		.uleb128 0x6
 558 0403 FD030000 		.4byte	0x3fd
 559 0407 05       		.uleb128 0x5
 560 0408 14010000 		.4byte	0x114
 561 040c 06       		.uleb128 0x6
 562 040d 07040000 		.4byte	0x407
 563 0411 05       		.uleb128 0x5
 564 0412 04010000 		.4byte	0x104
 565 0416 06       		.uleb128 0x6
 566 0417 11040000 		.4byte	0x411
 567 041b 05       		.uleb128 0x5
 568 041c 04010000 		.4byte	0x104
 569 0420 06       		.uleb128 0x6
 570 0421 1B040000 		.4byte	0x41b
 571 0425 05       		.uleb128 0x5
 572 0426 B6030000 		.4byte	0x3b6
 573 042a 06       		.uleb128 0x6
 574 042b 25040000 		.4byte	0x425
 575 042f 07       		.uleb128 0x7
 576 0430 CF000000 		.4byte	0xcf
 577 0434 3F040000 		.4byte	0x43f
 578 0438 08       		.uleb128 0x8
 579 0439 C3000000 		.4byte	0xc3
 580 043d 0D       		.byte	0xd
 581 043e 00       		.byte	0
 582 043f 05       		.uleb128 0x5
 583 0440 2F040000 		.4byte	0x42f
 584 0444 06       		.uleb128 0x6
 585 0445 3F040000 		.4byte	0x43f
 586 0449 07       		.uleb128 0x7
 587 044a CF000000 		.4byte	0xcf
 588 044e 5A040000 		.4byte	0x45a
 589 0452 0C       		.uleb128 0xc
 590 0453 C3000000 		.4byte	0xc3
 591 0457 EC02     		.2byte	0x2ec
 592 0459 00       		.byte	0
 593 045a 05       		.uleb128 0x5
 594 045b 49040000 		.4byte	0x449
 595 045f 06       		.uleb128 0x6
 596 0460 5A040000 		.4byte	0x45a
 597 0464 03       		.uleb128 0x3
 598 0465 C4070000 		.4byte	.LASF68
 599 0469 05       		.byte	0x5
 600 046a 54       		.byte	0x54
 601 046b 24010000 		.4byte	0x124
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 41


 602 046f 0D       		.uleb128 0xd
 603 0470 DD040000 		.4byte	.LASF69
 604 0474 06       		.byte	0x6
 605 0475 5206     		.2byte	0x652
 606 0477 64040000 		.4byte	0x464
 607 047b 02       		.uleb128 0x2
 608 047c 08       		.byte	0x8
 609 047d 04       		.byte	0x4
 610 047e 69080000 		.4byte	.LASF70
 611 0482 0E       		.uleb128 0xe
 612 0483 B8       		.byte	0xb8
 613 0484 07       		.byte	0x7
 614 0485 34       		.byte	0x34
 615 0486 93080000 		.4byte	0x893
 616 048a 0A       		.uleb128 0xa
 617 048b F2000000 		.4byte	.LASF71
 618 048f 07       		.byte	0x7
 619 0490 37       		.byte	0x37
 620 0491 B8000000 		.4byte	0xb8
 621 0495 00       		.byte	0
 622 0496 0A       		.uleb128 0xa
 623 0497 1D020000 		.4byte	.LASF72
 624 049b 07       		.byte	0x7
 625 049c 38       		.byte	0x38
 626 049d B8000000 		.4byte	0xb8
 627 04a1 04       		.byte	0x4
 628 04a2 0A       		.uleb128 0xa
 629 04a3 37030000 		.4byte	.LASF73
 630 04a7 07       		.byte	0x7
 631 04a8 39       		.byte	0x39
 632 04a9 B8000000 		.4byte	0xb8
 633 04ad 08       		.byte	0x8
 634 04ae 0A       		.uleb128 0xa
 635 04af 78070000 		.4byte	.LASF74
 636 04b3 07       		.byte	0x7
 637 04b4 3A       		.byte	0x3a
 638 04b5 B8000000 		.4byte	0xb8
 639 04b9 0C       		.byte	0xc
 640 04ba 0A       		.uleb128 0xa
 641 04bb 28020000 		.4byte	.LASF75
 642 04bf 07       		.byte	0x7
 643 04c0 3B       		.byte	0x3b
 644 04c1 B8000000 		.4byte	0xb8
 645 04c5 10       		.byte	0x10
 646 04c6 0A       		.uleb128 0xa
 647 04c7 5C020000 		.4byte	.LASF76
 648 04cb 07       		.byte	0x7
 649 04cc 3C       		.byte	0x3c
 650 04cd B8000000 		.4byte	0xb8
 651 04d1 14       		.byte	0x14
 652 04d2 0A       		.uleb128 0xa
 653 04d3 D4040000 		.4byte	.LASF77
 654 04d7 07       		.byte	0x7
 655 04d8 3D       		.byte	0x3d
 656 04d9 B8000000 		.4byte	0xb8
 657 04dd 18       		.byte	0x18
 658 04de 0A       		.uleb128 0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 42


 659 04df 8E000000 		.4byte	.LASF78
 660 04e3 07       		.byte	0x7
 661 04e4 3E       		.byte	0x3e
 662 04e5 B8000000 		.4byte	0xb8
 663 04e9 1C       		.byte	0x1c
 664 04ea 0A       		.uleb128 0xa
 665 04eb 190A0000 		.4byte	.LASF79
 666 04ef 07       		.byte	0x7
 667 04f0 3F       		.byte	0x3f
 668 04f1 B8000000 		.4byte	0xb8
 669 04f5 20       		.byte	0x20
 670 04f6 0A       		.uleb128 0xa
 671 04f7 B5060000 		.4byte	.LASF80
 672 04fb 07       		.byte	0x7
 673 04fc 40       		.byte	0x40
 674 04fd B8000000 		.4byte	0xb8
 675 0501 24       		.byte	0x24
 676 0502 0A       		.uleb128 0xa
 677 0503 D4050000 		.4byte	.LASF81
 678 0507 07       		.byte	0x7
 679 0508 43       		.byte	0x43
 680 0509 97000000 		.4byte	0x97
 681 050d 28       		.byte	0x28
 682 050e 0A       		.uleb128 0xa
 683 050f 74000000 		.4byte	.LASF82
 684 0513 07       		.byte	0x7
 685 0514 44       		.byte	0x44
 686 0515 97000000 		.4byte	0x97
 687 0519 29       		.byte	0x29
 688 051a 0A       		.uleb128 0xa
 689 051b 0F0A0000 		.4byte	.LASF83
 690 051f 07       		.byte	0x7
 691 0520 45       		.byte	0x45
 692 0521 97000000 		.4byte	0x97
 693 0525 2A       		.byte	0x2a
 694 0526 0A       		.uleb128 0xa
 695 0527 A7060000 		.4byte	.LASF84
 696 052b 07       		.byte	0x7
 697 052c 46       		.byte	0x46
 698 052d 97000000 		.4byte	0x97
 699 0531 2B       		.byte	0x2b
 700 0532 0A       		.uleb128 0xa
 701 0533 41050000 		.4byte	.LASF85
 702 0537 07       		.byte	0x7
 703 0538 47       		.byte	0x47
 704 0539 97000000 		.4byte	0x97
 705 053d 2C       		.byte	0x2c
 706 053e 0A       		.uleb128 0xa
 707 053f B2080000 		.4byte	.LASF86
 708 0543 07       		.byte	0x7
 709 0544 48       		.byte	0x48
 710 0545 97000000 		.4byte	0x97
 711 0549 2D       		.byte	0x2d
 712 054a 0A       		.uleb128 0xa
 713 054b 31020000 		.4byte	.LASF87
 714 054f 07       		.byte	0x7
 715 0550 49       		.byte	0x49
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 43


 716 0551 97000000 		.4byte	0x97
 717 0555 2E       		.byte	0x2e
 718 0556 0A       		.uleb128 0xa
 719 0557 E6050000 		.4byte	.LASF88
 720 055b 07       		.byte	0x7
 721 055c 4A       		.byte	0x4a
 722 055d 97000000 		.4byte	0x97
 723 0561 2F       		.byte	0x2f
 724 0562 0A       		.uleb128 0xa
 725 0563 7A080000 		.4byte	.LASF89
 726 0567 07       		.byte	0x7
 727 0568 4B       		.byte	0x4b
 728 0569 97000000 		.4byte	0x97
 729 056d 30       		.byte	0x30
 730 056e 0A       		.uleb128 0xa
 731 056f AC040000 		.4byte	.LASF90
 732 0573 07       		.byte	0x7
 733 0574 4E       		.byte	0x4e
 734 0575 97000000 		.4byte	0x97
 735 0579 31       		.byte	0x31
 736 057a 0A       		.uleb128 0xa
 737 057b A3000000 		.4byte	.LASF91
 738 057f 07       		.byte	0x7
 739 0580 4F       		.byte	0x4f
 740 0581 97000000 		.4byte	0x97
 741 0585 32       		.byte	0x32
 742 0586 0A       		.uleb128 0xa
 743 0587 53040000 		.4byte	.LASF92
 744 058b 07       		.byte	0x7
 745 058c 50       		.byte	0x50
 746 058d 97000000 		.4byte	0x97
 747 0591 33       		.byte	0x33
 748 0592 0A       		.uleb128 0xa
 749 0593 27060000 		.4byte	.LASF93
 750 0597 07       		.byte	0x7
 751 0598 51       		.byte	0x51
 752 0599 97000000 		.4byte	0x97
 753 059d 34       		.byte	0x34
 754 059e 0A       		.uleb128 0xa
 755 059f 1F090000 		.4byte	.LASF94
 756 05a3 07       		.byte	0x7
 757 05a4 52       		.byte	0x52
 758 05a5 A2000000 		.4byte	0xa2
 759 05a9 36       		.byte	0x36
 760 05aa 0A       		.uleb128 0xa
 761 05ab 51030000 		.4byte	.LASF95
 762 05af 07       		.byte	0x7
 763 05b0 53       		.byte	0x53
 764 05b1 A2000000 		.4byte	0xa2
 765 05b5 38       		.byte	0x38
 766 05b6 0A       		.uleb128 0xa
 767 05b7 70090000 		.4byte	.LASF96
 768 05bb 07       		.byte	0x7
 769 05bc 54       		.byte	0x54
 770 05bd A2000000 		.4byte	0xa2
 771 05c1 3A       		.byte	0x3a
 772 05c2 0A       		.uleb128 0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 44


 773 05c3 000A0000 		.4byte	.LASF97
 774 05c7 07       		.byte	0x7
 775 05c8 55       		.byte	0x55
 776 05c9 97000000 		.4byte	0x97
 777 05cd 3C       		.byte	0x3c
 778 05ce 0A       		.uleb128 0xa
 779 05cf 8A030000 		.4byte	.LASF98
 780 05d3 07       		.byte	0x7
 781 05d4 56       		.byte	0x56
 782 05d5 97000000 		.4byte	0x97
 783 05d9 3D       		.byte	0x3d
 784 05da 0A       		.uleb128 0xa
 785 05db 26080000 		.4byte	.LASF99
 786 05df 07       		.byte	0x7
 787 05e0 57       		.byte	0x57
 788 05e1 97000000 		.4byte	0x97
 789 05e5 3E       		.byte	0x3e
 790 05e6 0A       		.uleb128 0xa
 791 05e7 82000000 		.4byte	.LASF100
 792 05eb 07       		.byte	0x7
 793 05ec 58       		.byte	0x58
 794 05ed 97000000 		.4byte	0x97
 795 05f1 3F       		.byte	0x3f
 796 05f2 0A       		.uleb128 0xa
 797 05f3 C0060000 		.4byte	.LASF101
 798 05f7 07       		.byte	0x7
 799 05f8 59       		.byte	0x59
 800 05f9 97000000 		.4byte	0x97
 801 05fd 40       		.byte	0x40
 802 05fe 0A       		.uleb128 0xa
 803 05ff E8030000 		.4byte	.LASF102
 804 0603 07       		.byte	0x7
 805 0604 5A       		.byte	0x5a
 806 0605 97000000 		.4byte	0x97
 807 0609 41       		.byte	0x41
 808 060a 0A       		.uleb128 0xa
 809 060b 72050000 		.4byte	.LASF103
 810 060f 07       		.byte	0x7
 811 0610 5B       		.byte	0x5b
 812 0611 97000000 		.4byte	0x97
 813 0615 42       		.byte	0x42
 814 0616 0A       		.uleb128 0xa
 815 0617 9C060000 		.4byte	.LASF104
 816 061b 07       		.byte	0x7
 817 061c 5C       		.byte	0x5c
 818 061d 97000000 		.4byte	0x97
 819 0621 43       		.byte	0x43
 820 0622 0A       		.uleb128 0xa
 821 0623 40030000 		.4byte	.LASF105
 822 0627 07       		.byte	0x7
 823 0628 5D       		.byte	0x5d
 824 0629 97000000 		.4byte	0x97
 825 062d 44       		.byte	0x44
 826 062e 0A       		.uleb128 0xa
 827 062f 57080000 		.4byte	.LASF106
 828 0633 07       		.byte	0x7
 829 0634 5E       		.byte	0x5e
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 45


 830 0635 B8000000 		.4byte	0xb8
 831 0639 48       		.byte	0x48
 832 063a 0A       		.uleb128 0xa
 833 063b 1E030000 		.4byte	.LASF107
 834 063f 07       		.byte	0x7
 835 0640 5F       		.byte	0x5f
 836 0641 B8000000 		.4byte	0xb8
 837 0645 4C       		.byte	0x4c
 838 0646 0A       		.uleb128 0xa
 839 0647 5B0A0000 		.4byte	.LASF108
 840 064b 07       		.byte	0x7
 841 064c 60       		.byte	0x60
 842 064d 97000000 		.4byte	0x97
 843 0651 50       		.byte	0x50
 844 0652 0A       		.uleb128 0xa
 845 0653 B0010000 		.4byte	.LASF109
 846 0657 07       		.byte	0x7
 847 0658 61       		.byte	0x61
 848 0659 97000000 		.4byte	0x97
 849 065d 51       		.byte	0x51
 850 065e 0A       		.uleb128 0xa
 851 065f 85090000 		.4byte	.LASF110
 852 0663 07       		.byte	0x7
 853 0664 62       		.byte	0x62
 854 0665 97000000 		.4byte	0x97
 855 0669 52       		.byte	0x52
 856 066a 0A       		.uleb128 0xa
 857 066b 490A0000 		.4byte	.LASF111
 858 066f 07       		.byte	0x7
 859 0670 63       		.byte	0x63
 860 0671 97000000 		.4byte	0x97
 861 0675 53       		.byte	0x53
 862 0676 0A       		.uleb128 0xa
 863 0677 3E080000 		.4byte	.LASF112
 864 067b 07       		.byte	0x7
 865 067c 64       		.byte	0x64
 866 067d 97000000 		.4byte	0x97
 867 0681 54       		.byte	0x54
 868 0682 0A       		.uleb128 0xa
 869 0683 55090000 		.4byte	.LASF113
 870 0687 07       		.byte	0x7
 871 0688 65       		.byte	0x65
 872 0689 97000000 		.4byte	0x97
 873 068d 55       		.byte	0x55
 874 068e 0A       		.uleb128 0xa
 875 068f D7080000 		.4byte	.LASF114
 876 0693 07       		.byte	0x7
 877 0694 66       		.byte	0x66
 878 0695 97000000 		.4byte	0x97
 879 0699 56       		.byte	0x56
 880 069a 0A       		.uleb128 0xa
 881 069b E6040000 		.4byte	.LASF115
 882 069f 07       		.byte	0x7
 883 06a0 67       		.byte	0x67
 884 06a1 97000000 		.4byte	0x97
 885 06a5 57       		.byte	0x57
 886 06a6 0A       		.uleb128 0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 46


 887 06a7 2F000000 		.4byte	.LASF116
 888 06ab 07       		.byte	0x7
 889 06ac 68       		.byte	0x68
 890 06ad 97000000 		.4byte	0x97
 891 06b1 58       		.byte	0x58
 892 06b2 0A       		.uleb128 0xa
 893 06b3 94070000 		.4byte	.LASF117
 894 06b7 07       		.byte	0x7
 895 06b8 69       		.byte	0x69
 896 06b9 97000000 		.4byte	0x97
 897 06bd 59       		.byte	0x59
 898 06be 0A       		.uleb128 0xa
 899 06bf 10060000 		.4byte	.LASF118
 900 06c3 07       		.byte	0x7
 901 06c4 6E       		.byte	0x6e
 902 06c5 AD000000 		.4byte	0xad
 903 06c9 5A       		.byte	0x5a
 904 06ca 0A       		.uleb128 0xa
 905 06cb FE080000 		.4byte	.LASF119
 906 06cf 07       		.byte	0x7
 907 06d0 6F       		.byte	0x6f
 908 06d1 AD000000 		.4byte	0xad
 909 06d5 5C       		.byte	0x5c
 910 06d6 0A       		.uleb128 0xa
 911 06d7 FC000000 		.4byte	.LASF120
 912 06db 07       		.byte	0x7
 913 06dc 70       		.byte	0x70
 914 06dd 97000000 		.4byte	0x97
 915 06e1 5E       		.byte	0x5e
 916 06e2 0A       		.uleb128 0xa
 917 06e3 C7030000 		.4byte	.LASF121
 918 06e7 07       		.byte	0x7
 919 06e8 71       		.byte	0x71
 920 06e9 97000000 		.4byte	0x97
 921 06ed 5F       		.byte	0x5f
 922 06ee 0A       		.uleb128 0xa
 923 06ef 75060000 		.4byte	.LASF122
 924 06f3 07       		.byte	0x7
 925 06f4 72       		.byte	0x72
 926 06f5 97000000 		.4byte	0x97
 927 06f9 60       		.byte	0x60
 928 06fa 0A       		.uleb128 0xa
 929 06fb F1060000 		.4byte	.LASF123
 930 06ff 07       		.byte	0x7
 931 0700 73       		.byte	0x73
 932 0701 B8000000 		.4byte	0xb8
 933 0705 64       		.byte	0x64
 934 0706 0A       		.uleb128 0xa
 935 0707 8A010000 		.4byte	.LASF124
 936 070b 07       		.byte	0x7
 937 070c 76       		.byte	0x76
 938 070d AD000000 		.4byte	0xad
 939 0711 68       		.byte	0x68
 940 0712 0A       		.uleb128 0xa
 941 0713 75040000 		.4byte	.LASF125
 942 0717 07       		.byte	0x7
 943 0718 77       		.byte	0x77
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 47


 944 0719 AD000000 		.4byte	0xad
 945 071d 6A       		.byte	0x6a
 946 071e 0A       		.uleb128 0xa
 947 071f FA040000 		.4byte	.LASF126
 948 0723 07       		.byte	0x7
 949 0724 78       		.byte	0x78
 950 0725 AD000000 		.4byte	0xad
 951 0729 6C       		.byte	0x6c
 952 072a 0A       		.uleb128 0xa
 953 072b 34050000 		.4byte	.LASF127
 954 072f 07       		.byte	0x7
 955 0730 79       		.byte	0x79
 956 0731 AD000000 		.4byte	0xad
 957 0735 6E       		.byte	0x6e
 958 0736 0A       		.uleb128 0xa
 959 0737 F3070000 		.4byte	.LASF128
 960 073b 07       		.byte	0x7
 961 073c 7B       		.byte	0x7b
 962 073d 97000000 		.4byte	0x97
 963 0741 70       		.byte	0x70
 964 0742 0A       		.uleb128 0xa
 965 0743 08020000 		.4byte	.LASF129
 966 0747 07       		.byte	0x7
 967 0748 7C       		.byte	0x7c
 968 0749 97000000 		.4byte	0x97
 969 074d 71       		.byte	0x71
 970 074e 0A       		.uleb128 0xa
 971 074f 330A0000 		.4byte	.LASF130
 972 0753 07       		.byte	0x7
 973 0754 7D       		.byte	0x7d
 974 0755 97000000 		.4byte	0x97
 975 0759 72       		.byte	0x72
 976 075a 0A       		.uleb128 0xa
 977 075b 38060000 		.4byte	.LASF131
 978 075f 07       		.byte	0x7
 979 0760 7E       		.byte	0x7e
 980 0761 97000000 		.4byte	0x97
 981 0765 73       		.byte	0x73
 982 0766 0A       		.uleb128 0xa
 983 0767 A1030000 		.4byte	.LASF132
 984 076b 07       		.byte	0x7
 985 076c 80       		.byte	0x80
 986 076d AD000000 		.4byte	0xad
 987 0771 74       		.byte	0x74
 988 0772 0A       		.uleb128 0xa
 989 0773 9F080000 		.4byte	.LASF133
 990 0777 07       		.byte	0x7
 991 0778 81       		.byte	0x81
 992 0779 AD000000 		.4byte	0xad
 993 077d 76       		.byte	0x76
 994 077e 0A       		.uleb128 0xa
 995 077f 63030000 		.4byte	.LASF134
 996 0783 07       		.byte	0x7
 997 0784 82       		.byte	0x82
 998 0785 AD000000 		.4byte	0xad
 999 0789 78       		.byte	0x78
 1000 078a 0A       		.uleb128 0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 48


 1001 078b BB000000 		.4byte	.LASF135
 1002 078f 07       		.byte	0x7
 1003 0790 83       		.byte	0x83
 1004 0791 AD000000 		.4byte	0xad
 1005 0795 7A       		.byte	0x7a
 1006 0796 0A       		.uleb128 0xa
 1007 0797 C6090000 		.4byte	.LASF136
 1008 079b 07       		.byte	0x7
 1009 079c 86       		.byte	0x86
 1010 079d 97000000 		.4byte	0x97
 1011 07a1 7C       		.byte	0x7c
 1012 07a2 0A       		.uleb128 0xa
 1013 07a3 44090000 		.4byte	.LASF137
 1014 07a7 07       		.byte	0x7
 1015 07a8 87       		.byte	0x87
 1016 07a9 97000000 		.4byte	0x97
 1017 07ad 7D       		.byte	0x7d
 1018 07ae 0A       		.uleb128 0xa
 1019 07af 43000000 		.4byte	.LASF138
 1020 07b3 07       		.byte	0x7
 1021 07b4 88       		.byte	0x88
 1022 07b5 97000000 		.4byte	0x97
 1023 07b9 7E       		.byte	0x7e
 1024 07ba 0A       		.uleb128 0xa
 1025 07bb B3030000 		.4byte	.LASF139
 1026 07bf 07       		.byte	0x7
 1027 07c0 89       		.byte	0x89
 1028 07c1 97000000 		.4byte	0x97
 1029 07c5 7F       		.byte	0x7f
 1030 07c6 0A       		.uleb128 0xa
 1031 07c7 3F040000 		.4byte	.LASF140
 1032 07cb 07       		.byte	0x7
 1033 07cc 8A       		.byte	0x8a
 1034 07cd 97000000 		.4byte	0x97
 1035 07d1 80       		.byte	0x80
 1036 07d2 0A       		.uleb128 0xa
 1037 07d3 A9050000 		.4byte	.LASF141
 1038 07d7 07       		.byte	0x7
 1039 07d8 8D       		.byte	0x8d
 1040 07d9 B8000000 		.4byte	0xb8
 1041 07dd 84       		.byte	0x84
 1042 07de 0A       		.uleb128 0xa
 1043 07df D0000000 		.4byte	.LASF142
 1044 07e3 07       		.byte	0x7
 1045 07e4 8E       		.byte	0x8e
 1046 07e5 B8000000 		.4byte	0xb8
 1047 07e9 88       		.byte	0x88
 1048 07ea 0A       		.uleb128 0xa
 1049 07eb B1090000 		.4byte	.LASF143
 1050 07ef 07       		.byte	0x7
 1051 07f0 8F       		.byte	0x8f
 1052 07f1 B8000000 		.4byte	0xb8
 1053 07f5 8C       		.byte	0x8c
 1054 07f6 0A       		.uleb128 0xa
 1055 07f7 F2050000 		.4byte	.LASF144
 1056 07fb 07       		.byte	0x7
 1057 07fc 90       		.byte	0x90
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 49


 1058 07fd B8000000 		.4byte	0xb8
 1059 0801 90       		.byte	0x90
 1060 0802 0A       		.uleb128 0xa
 1061 0803 2A040000 		.4byte	.LASF145
 1062 0807 07       		.byte	0x7
 1063 0808 91       		.byte	0x91
 1064 0809 B8000000 		.4byte	0xb8
 1065 080d 94       		.byte	0x94
 1066 080e 0A       		.uleb128 0xa
 1067 080f 93050000 		.4byte	.LASF146
 1068 0813 07       		.byte	0x7
 1069 0814 92       		.byte	0x92
 1070 0815 B8000000 		.4byte	0xb8
 1071 0819 98       		.byte	0x98
 1072 081a 0A       		.uleb128 0xa
 1073 081b DB090000 		.4byte	.LASF147
 1074 081f 07       		.byte	0x7
 1075 0820 93       		.byte	0x93
 1076 0821 B8000000 		.4byte	0xb8
 1077 0825 9C       		.byte	0x9c
 1078 0826 0A       		.uleb128 0xa
 1079 0827 9A010000 		.4byte	.LASF148
 1080 082b 07       		.byte	0x7
 1081 082c 94       		.byte	0x94
 1082 082d B8000000 		.4byte	0xb8
 1083 0831 A0       		.byte	0xa0
 1084 0832 0A       		.uleb128 0xa
 1085 0833 3C020000 		.4byte	.LASF149
 1086 0837 07       		.byte	0x7
 1087 0838 95       		.byte	0x95
 1088 0839 AD000000 		.4byte	0xad
 1089 083d A4       		.byte	0xa4
 1090 083e 0A       		.uleb128 0xa
 1091 083f 7E050000 		.4byte	.LASF150
 1092 0843 07       		.byte	0x7
 1093 0844 96       		.byte	0x96
 1094 0845 AD000000 		.4byte	0xad
 1095 0849 A6       		.byte	0xa6
 1096 084a 0A       		.uleb128 0xa
 1097 084b 3A070000 		.4byte	.LASF151
 1098 084f 07       		.byte	0x7
 1099 0850 97       		.byte	0x97
 1100 0851 AD000000 		.4byte	0xad
 1101 0855 A8       		.byte	0xa8
 1102 0856 0A       		.uleb128 0xa
 1103 0857 86080000 		.4byte	.LASF152
 1104 085b 07       		.byte	0x7
 1105 085c 98       		.byte	0x98
 1106 085d AD000000 		.4byte	0xad
 1107 0861 AA       		.byte	0xaa
 1108 0862 0A       		.uleb128 0xa
 1109 0863 09050000 		.4byte	.LASF153
 1110 0867 07       		.byte	0x7
 1111 0868 99       		.byte	0x99
 1112 0869 AD000000 		.4byte	0xad
 1113 086d AC       		.byte	0xac
 1114 086e 0A       		.uleb128 0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 50


 1115 086f 4F060000 		.4byte	.LASF154
 1116 0873 07       		.byte	0x7
 1117 0874 9A       		.byte	0x9a
 1118 0875 AD000000 		.4byte	0xad
 1119 0879 AE       		.byte	0xae
 1120 087a 0A       		.uleb128 0xa
 1121 087b 07090000 		.4byte	.LASF155
 1122 087f 07       		.byte	0x7
 1123 0880 9D       		.byte	0x9d
 1124 0881 AD000000 		.4byte	0xad
 1125 0885 B0       		.byte	0xb0
 1126 0886 0A       		.uleb128 0xa
 1127 0887 56000000 		.4byte	.LASF156
 1128 088b 07       		.byte	0x7
 1129 088c 9E       		.byte	0x9e
 1130 088d B8000000 		.4byte	0xb8
 1131 0891 B4       		.byte	0xb4
 1132 0892 00       		.byte	0
 1133 0893 03       		.uleb128 0x3
 1134 0894 4D050000 		.4byte	.LASF157
 1135 0898 07       		.byte	0x7
 1136 0899 9F       		.byte	0x9f
 1137 089a 82040000 		.4byte	0x482
 1138 089e 02       		.uleb128 0x2
 1139 089f 01       		.byte	0x1
 1140 08a0 08       		.byte	0x8
 1141 08a1 75080000 		.4byte	.LASF158
 1142 08a5 02       		.uleb128 0x2
 1143 08a6 04       		.byte	0x4
 1144 08a7 04       		.byte	0x4
 1145 08a8 EB060000 		.4byte	.LASF159
 1146 08ac 02       		.uleb128 0x2
 1147 08ad 08       		.byte	0x8
 1148 08ae 04       		.byte	0x4
 1149 08af 5C030000 		.4byte	.LASF160
 1150 08b3 02       		.uleb128 0x2
 1151 08b4 01       		.byte	0x1
 1152 08b5 02       		.byte	0x2
 1153 08b6 80070000 		.4byte	.LASF161
 1154 08ba 0F       		.uleb128 0xf
 1155 08bb 02070000 		.4byte	.LASF167
 1156 08bf 02       		.byte	0x2
 1157 08c0 1206     		.2byte	0x612
 1158 08c2 B8000000 		.4byte	0xb8
 1159 08c6 03       		.byte	0x3
 1160 08c7 D8080000 		.4byte	0x8d8
 1161 08cb 10       		.uleb128 0x10
 1162 08cc E1050000 		.4byte	.LASF162
 1163 08d0 02       		.byte	0x2
 1164 08d1 1206     		.2byte	0x612
 1165 08d3 D8080000 		.4byte	0x8d8
 1166 08d7 00       		.byte	0
 1167 08d8 11       		.uleb128 0x11
 1168 08d9 04       		.byte	0x4
 1169 08da DE080000 		.4byte	0x8de
 1170 08de 06       		.uleb128 0x6
 1171 08df 6F040000 		.4byte	0x46f
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 51


 1172 08e3 12       		.uleb128 0x12
 1173 08e4 00000000 		.4byte	.LASF168
 1174 08e8 02       		.byte	0x2
 1175 08e9 2F06     		.2byte	0x62f
 1176 08eb 03       		.byte	0x3
 1177 08ec 09090000 		.4byte	0x909
 1178 08f0 10       		.uleb128 0x10
 1179 08f1 E1050000 		.4byte	.LASF162
 1180 08f5 02       		.byte	0x2
 1181 08f6 2F06     		.2byte	0x62f
 1182 08f8 09090000 		.4byte	0x909
 1183 08fc 10       		.uleb128 0x10
 1184 08fd B2070000 		.4byte	.LASF163
 1185 0901 02       		.byte	0x2
 1186 0902 2F06     		.2byte	0x62f
 1187 0904 B8000000 		.4byte	0xb8
 1188 0908 00       		.byte	0
 1189 0909 11       		.uleb128 0x11
 1190 090a 04       		.byte	0x4
 1191 090b 6F040000 		.4byte	0x46f
 1192 090f 13       		.uleb128 0x13
 1193 0910 6A000000 		.4byte	.LASF169
 1194 0914 01       		.byte	0x1
 1195 0915 40       		.byte	0x40
 1196 0916 00000000 		.4byte	.LFB184
 1197 091a 14000000 		.4byte	.LFE184-.LFB184
 1198 091e 01       		.uleb128 0x1
 1199 091f 9C       		.byte	0x9c
 1200 0920 88090000 		.4byte	0x988
 1201 0924 14       		.uleb128 0x14
 1202 0925 95030000 		.4byte	.LASF170
 1203 0929 01       		.byte	0x1
 1204 092a 42       		.byte	0x42
 1205 092b B8000000 		.4byte	0xb8
 1206 092f 15       		.uleb128 0x15
 1207 0930 BA080000 		.4byte	0x8ba
 1208 0934 00000000 		.4byte	.LBB8
 1209 0938 08000000 		.4byte	.LBE8-.LBB8
 1210 093c 01       		.byte	0x1
 1211 093d 45       		.byte	0x45
 1212 093e 4C090000 		.4byte	0x94c
 1213 0942 16       		.uleb128 0x16
 1214 0943 CB080000 		.4byte	0x8cb
 1215 0947 00000000 		.4byte	.LLST0
 1216 094b 00       		.byte	0
 1217 094c 15       		.uleb128 0x15
 1218 094d E3080000 		.4byte	0x8e3
 1219 0951 08000000 		.4byte	.LBB10
 1220 0955 04000000 		.4byte	.LBE10-.LBB10
 1221 0959 01       		.byte	0x1
 1222 095a 55       		.byte	0x55
 1223 095b 6E090000 		.4byte	0x96e
 1224 095f 17       		.uleb128 0x17
 1225 0960 FC080000 		.4byte	0x8fc
 1226 0964 16       		.uleb128 0x16
 1227 0965 F0080000 		.4byte	0x8f0
 1228 0969 18000000 		.4byte	.LLST1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 52


 1229 096d 00       		.byte	0
 1230 096e 18       		.uleb128 0x18
 1231 096f BA080000 		.4byte	0x8ba
 1232 0973 0C000000 		.4byte	.LBB12
 1233 0977 02000000 		.4byte	.LBE12-.LBB12
 1234 097b 01       		.byte	0x1
 1235 097c 57       		.byte	0x57
 1236 097d 16       		.uleb128 0x16
 1237 097e CB080000 		.4byte	0x8cb
 1238 0982 30000000 		.4byte	.LLST2
 1239 0986 00       		.byte	0
 1240 0987 00       		.byte	0
 1241 0988 19       		.uleb128 0x19
 1242 0989 26070000 		.4byte	.LASF171
 1243 098d 07       		.byte	0x7
 1244 098e A7       		.byte	0xa7
 1245 098f 93090000 		.4byte	0x993
 1246 0993 11       		.uleb128 0x11
 1247 0994 04       		.byte	0x4
 1248 0995 99090000 		.4byte	0x999
 1249 0999 06       		.uleb128 0x6
 1250 099a 93080000 		.4byte	0x893
 1251 099e 00       		.byte	0
 1252              		.section	.debug_abbrev,"",%progbits
 1253              	.Ldebug_abbrev0:
 1254 0000 01       		.uleb128 0x1
 1255 0001 11       		.uleb128 0x11
 1256 0002 01       		.byte	0x1
 1257 0003 25       		.uleb128 0x25
 1258 0004 0E       		.uleb128 0xe
 1259 0005 13       		.uleb128 0x13
 1260 0006 0B       		.uleb128 0xb
 1261 0007 03       		.uleb128 0x3
 1262 0008 0E       		.uleb128 0xe
 1263 0009 1B       		.uleb128 0x1b
 1264 000a 0E       		.uleb128 0xe
 1265 000b 55       		.uleb128 0x55
 1266 000c 17       		.uleb128 0x17
 1267 000d 11       		.uleb128 0x11
 1268 000e 01       		.uleb128 0x1
 1269 000f 10       		.uleb128 0x10
 1270 0010 17       		.uleb128 0x17
 1271 0011 00       		.byte	0
 1272 0012 00       		.byte	0
 1273 0013 02       		.uleb128 0x2
 1274 0014 24       		.uleb128 0x24
 1275 0015 00       		.byte	0
 1276 0016 0B       		.uleb128 0xb
 1277 0017 0B       		.uleb128 0xb
 1278 0018 3E       		.uleb128 0x3e
 1279 0019 0B       		.uleb128 0xb
 1280 001a 03       		.uleb128 0x3
 1281 001b 0E       		.uleb128 0xe
 1282 001c 00       		.byte	0
 1283 001d 00       		.byte	0
 1284 001e 03       		.uleb128 0x3
 1285 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 53


 1286 0020 00       		.byte	0
 1287 0021 03       		.uleb128 0x3
 1288 0022 0E       		.uleb128 0xe
 1289 0023 3A       		.uleb128 0x3a
 1290 0024 0B       		.uleb128 0xb
 1291 0025 3B       		.uleb128 0x3b
 1292 0026 0B       		.uleb128 0xb
 1293 0027 49       		.uleb128 0x49
 1294 0028 13       		.uleb128 0x13
 1295 0029 00       		.byte	0
 1296 002a 00       		.byte	0
 1297 002b 04       		.uleb128 0x4
 1298 002c 24       		.uleb128 0x24
 1299 002d 00       		.byte	0
 1300 002e 0B       		.uleb128 0xb
 1301 002f 0B       		.uleb128 0xb
 1302 0030 3E       		.uleb128 0x3e
 1303 0031 0B       		.uleb128 0xb
 1304 0032 03       		.uleb128 0x3
 1305 0033 08       		.uleb128 0x8
 1306 0034 00       		.byte	0
 1307 0035 00       		.byte	0
 1308 0036 05       		.uleb128 0x5
 1309 0037 35       		.uleb128 0x35
 1310 0038 00       		.byte	0
 1311 0039 49       		.uleb128 0x49
 1312 003a 13       		.uleb128 0x13
 1313 003b 00       		.byte	0
 1314 003c 00       		.byte	0
 1315 003d 06       		.uleb128 0x6
 1316 003e 26       		.uleb128 0x26
 1317 003f 00       		.byte	0
 1318 0040 49       		.uleb128 0x49
 1319 0041 13       		.uleb128 0x13
 1320 0042 00       		.byte	0
 1321 0043 00       		.byte	0
 1322 0044 07       		.uleb128 0x7
 1323 0045 01       		.uleb128 0x1
 1324 0046 01       		.byte	0x1
 1325 0047 49       		.uleb128 0x49
 1326 0048 13       		.uleb128 0x13
 1327 0049 01       		.uleb128 0x1
 1328 004a 13       		.uleb128 0x13
 1329 004b 00       		.byte	0
 1330 004c 00       		.byte	0
 1331 004d 08       		.uleb128 0x8
 1332 004e 21       		.uleb128 0x21
 1333 004f 00       		.byte	0
 1334 0050 49       		.uleb128 0x49
 1335 0051 13       		.uleb128 0x13
 1336 0052 2F       		.uleb128 0x2f
 1337 0053 0B       		.uleb128 0xb
 1338 0054 00       		.byte	0
 1339 0055 00       		.byte	0
 1340 0056 09       		.uleb128 0x9
 1341 0057 13       		.uleb128 0x13
 1342 0058 01       		.byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 54


 1343 0059 0B       		.uleb128 0xb
 1344 005a 05       		.uleb128 0x5
 1345 005b 3A       		.uleb128 0x3a
 1346 005c 0B       		.uleb128 0xb
 1347 005d 3B       		.uleb128 0x3b
 1348 005e 0B       		.uleb128 0xb
 1349 005f 01       		.uleb128 0x1
 1350 0060 13       		.uleb128 0x13
 1351 0061 00       		.byte	0
 1352 0062 00       		.byte	0
 1353 0063 0A       		.uleb128 0xa
 1354 0064 0D       		.uleb128 0xd
 1355 0065 00       		.byte	0
 1356 0066 03       		.uleb128 0x3
 1357 0067 0E       		.uleb128 0xe
 1358 0068 3A       		.uleb128 0x3a
 1359 0069 0B       		.uleb128 0xb
 1360 006a 3B       		.uleb128 0x3b
 1361 006b 0B       		.uleb128 0xb
 1362 006c 49       		.uleb128 0x49
 1363 006d 13       		.uleb128 0x13
 1364 006e 38       		.uleb128 0x38
 1365 006f 0B       		.uleb128 0xb
 1366 0070 00       		.byte	0
 1367 0071 00       		.byte	0
 1368 0072 0B       		.uleb128 0xb
 1369 0073 0D       		.uleb128 0xd
 1370 0074 00       		.byte	0
 1371 0075 03       		.uleb128 0x3
 1372 0076 0E       		.uleb128 0xe
 1373 0077 3A       		.uleb128 0x3a
 1374 0078 0B       		.uleb128 0xb
 1375 0079 3B       		.uleb128 0x3b
 1376 007a 0B       		.uleb128 0xb
 1377 007b 49       		.uleb128 0x49
 1378 007c 13       		.uleb128 0x13
 1379 007d 38       		.uleb128 0x38
 1380 007e 05       		.uleb128 0x5
 1381 007f 00       		.byte	0
 1382 0080 00       		.byte	0
 1383 0081 0C       		.uleb128 0xc
 1384 0082 21       		.uleb128 0x21
 1385 0083 00       		.byte	0
 1386 0084 49       		.uleb128 0x49
 1387 0085 13       		.uleb128 0x13
 1388 0086 2F       		.uleb128 0x2f
 1389 0087 05       		.uleb128 0x5
 1390 0088 00       		.byte	0
 1391 0089 00       		.byte	0
 1392 008a 0D       		.uleb128 0xd
 1393 008b 16       		.uleb128 0x16
 1394 008c 00       		.byte	0
 1395 008d 03       		.uleb128 0x3
 1396 008e 0E       		.uleb128 0xe
 1397 008f 3A       		.uleb128 0x3a
 1398 0090 0B       		.uleb128 0xb
 1399 0091 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 55


 1400 0092 05       		.uleb128 0x5
 1401 0093 49       		.uleb128 0x49
 1402 0094 13       		.uleb128 0x13
 1403 0095 00       		.byte	0
 1404 0096 00       		.byte	0
 1405 0097 0E       		.uleb128 0xe
 1406 0098 13       		.uleb128 0x13
 1407 0099 01       		.byte	0x1
 1408 009a 0B       		.uleb128 0xb
 1409 009b 0B       		.uleb128 0xb
 1410 009c 3A       		.uleb128 0x3a
 1411 009d 0B       		.uleb128 0xb
 1412 009e 3B       		.uleb128 0x3b
 1413 009f 0B       		.uleb128 0xb
 1414 00a0 01       		.uleb128 0x1
 1415 00a1 13       		.uleb128 0x13
 1416 00a2 00       		.byte	0
 1417 00a3 00       		.byte	0
 1418 00a4 0F       		.uleb128 0xf
 1419 00a5 2E       		.uleb128 0x2e
 1420 00a6 01       		.byte	0x1
 1421 00a7 03       		.uleb128 0x3
 1422 00a8 0E       		.uleb128 0xe
 1423 00a9 3A       		.uleb128 0x3a
 1424 00aa 0B       		.uleb128 0xb
 1425 00ab 3B       		.uleb128 0x3b
 1426 00ac 05       		.uleb128 0x5
 1427 00ad 27       		.uleb128 0x27
 1428 00ae 19       		.uleb128 0x19
 1429 00af 49       		.uleb128 0x49
 1430 00b0 13       		.uleb128 0x13
 1431 00b1 20       		.uleb128 0x20
 1432 00b2 0B       		.uleb128 0xb
 1433 00b3 01       		.uleb128 0x1
 1434 00b4 13       		.uleb128 0x13
 1435 00b5 00       		.byte	0
 1436 00b6 00       		.byte	0
 1437 00b7 10       		.uleb128 0x10
 1438 00b8 05       		.uleb128 0x5
 1439 00b9 00       		.byte	0
 1440 00ba 03       		.uleb128 0x3
 1441 00bb 0E       		.uleb128 0xe
 1442 00bc 3A       		.uleb128 0x3a
 1443 00bd 0B       		.uleb128 0xb
 1444 00be 3B       		.uleb128 0x3b
 1445 00bf 05       		.uleb128 0x5
 1446 00c0 49       		.uleb128 0x49
 1447 00c1 13       		.uleb128 0x13
 1448 00c2 00       		.byte	0
 1449 00c3 00       		.byte	0
 1450 00c4 11       		.uleb128 0x11
 1451 00c5 0F       		.uleb128 0xf
 1452 00c6 00       		.byte	0
 1453 00c7 0B       		.uleb128 0xb
 1454 00c8 0B       		.uleb128 0xb
 1455 00c9 49       		.uleb128 0x49
 1456 00ca 13       		.uleb128 0x13
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 56


 1457 00cb 00       		.byte	0
 1458 00cc 00       		.byte	0
 1459 00cd 12       		.uleb128 0x12
 1460 00ce 2E       		.uleb128 0x2e
 1461 00cf 01       		.byte	0x1
 1462 00d0 03       		.uleb128 0x3
 1463 00d1 0E       		.uleb128 0xe
 1464 00d2 3A       		.uleb128 0x3a
 1465 00d3 0B       		.uleb128 0xb
 1466 00d4 3B       		.uleb128 0x3b
 1467 00d5 05       		.uleb128 0x5
 1468 00d6 27       		.uleb128 0x27
 1469 00d7 19       		.uleb128 0x19
 1470 00d8 20       		.uleb128 0x20
 1471 00d9 0B       		.uleb128 0xb
 1472 00da 01       		.uleb128 0x1
 1473 00db 13       		.uleb128 0x13
 1474 00dc 00       		.byte	0
 1475 00dd 00       		.byte	0
 1476 00de 13       		.uleb128 0x13
 1477 00df 2E       		.uleb128 0x2e
 1478 00e0 01       		.byte	0x1
 1479 00e1 3F       		.uleb128 0x3f
 1480 00e2 19       		.uleb128 0x19
 1481 00e3 03       		.uleb128 0x3
 1482 00e4 0E       		.uleb128 0xe
 1483 00e5 3A       		.uleb128 0x3a
 1484 00e6 0B       		.uleb128 0xb
 1485 00e7 3B       		.uleb128 0x3b
 1486 00e8 0B       		.uleb128 0xb
 1487 00e9 27       		.uleb128 0x27
 1488 00ea 19       		.uleb128 0x19
 1489 00eb 11       		.uleb128 0x11
 1490 00ec 01       		.uleb128 0x1
 1491 00ed 12       		.uleb128 0x12
 1492 00ee 06       		.uleb128 0x6
 1493 00ef 40       		.uleb128 0x40
 1494 00f0 18       		.uleb128 0x18
 1495 00f1 9742     		.uleb128 0x2117
 1496 00f3 19       		.uleb128 0x19
 1497 00f4 01       		.uleb128 0x1
 1498 00f5 13       		.uleb128 0x13
 1499 00f6 00       		.byte	0
 1500 00f7 00       		.byte	0
 1501 00f8 14       		.uleb128 0x14
 1502 00f9 34       		.uleb128 0x34
 1503 00fa 00       		.byte	0
 1504 00fb 03       		.uleb128 0x3
 1505 00fc 0E       		.uleb128 0xe
 1506 00fd 3A       		.uleb128 0x3a
 1507 00fe 0B       		.uleb128 0xb
 1508 00ff 3B       		.uleb128 0x3b
 1509 0100 0B       		.uleb128 0xb
 1510 0101 49       		.uleb128 0x49
 1511 0102 13       		.uleb128 0x13
 1512 0103 00       		.byte	0
 1513 0104 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 57


 1514 0105 15       		.uleb128 0x15
 1515 0106 1D       		.uleb128 0x1d
 1516 0107 01       		.byte	0x1
 1517 0108 31       		.uleb128 0x31
 1518 0109 13       		.uleb128 0x13
 1519 010a 11       		.uleb128 0x11
 1520 010b 01       		.uleb128 0x1
 1521 010c 12       		.uleb128 0x12
 1522 010d 06       		.uleb128 0x6
 1523 010e 58       		.uleb128 0x58
 1524 010f 0B       		.uleb128 0xb
 1525 0110 59       		.uleb128 0x59
 1526 0111 0B       		.uleb128 0xb
 1527 0112 01       		.uleb128 0x1
 1528 0113 13       		.uleb128 0x13
 1529 0114 00       		.byte	0
 1530 0115 00       		.byte	0
 1531 0116 16       		.uleb128 0x16
 1532 0117 05       		.uleb128 0x5
 1533 0118 00       		.byte	0
 1534 0119 31       		.uleb128 0x31
 1535 011a 13       		.uleb128 0x13
 1536 011b 02       		.uleb128 0x2
 1537 011c 17       		.uleb128 0x17
 1538 011d 00       		.byte	0
 1539 011e 00       		.byte	0
 1540 011f 17       		.uleb128 0x17
 1541 0120 05       		.uleb128 0x5
 1542 0121 00       		.byte	0
 1543 0122 31       		.uleb128 0x31
 1544 0123 13       		.uleb128 0x13
 1545 0124 00       		.byte	0
 1546 0125 00       		.byte	0
 1547 0126 18       		.uleb128 0x18
 1548 0127 1D       		.uleb128 0x1d
 1549 0128 01       		.byte	0x1
 1550 0129 31       		.uleb128 0x31
 1551 012a 13       		.uleb128 0x13
 1552 012b 11       		.uleb128 0x11
 1553 012c 01       		.uleb128 0x1
 1554 012d 12       		.uleb128 0x12
 1555 012e 06       		.uleb128 0x6
 1556 012f 58       		.uleb128 0x58
 1557 0130 0B       		.uleb128 0xb
 1558 0131 59       		.uleb128 0x59
 1559 0132 0B       		.uleb128 0xb
 1560 0133 00       		.byte	0
 1561 0134 00       		.byte	0
 1562 0135 19       		.uleb128 0x19
 1563 0136 34       		.uleb128 0x34
 1564 0137 00       		.byte	0
 1565 0138 03       		.uleb128 0x3
 1566 0139 0E       		.uleb128 0xe
 1567 013a 3A       		.uleb128 0x3a
 1568 013b 0B       		.uleb128 0xb
 1569 013c 3B       		.uleb128 0x3b
 1570 013d 0B       		.uleb128 0xb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 58


 1571 013e 49       		.uleb128 0x49
 1572 013f 13       		.uleb128 0x13
 1573 0140 3F       		.uleb128 0x3f
 1574 0141 19       		.uleb128 0x19
 1575 0142 3C       		.uleb128 0x3c
 1576 0143 19       		.uleb128 0x19
 1577 0144 00       		.byte	0
 1578 0145 00       		.byte	0
 1579 0146 00       		.byte	0
 1580              		.section	.debug_loc,"",%progbits
 1581              	.Ldebug_loc0:
 1582              	.LLST0:
 1583 0000 00000000 		.4byte	.LVL0
 1584 0004 08000000 		.4byte	.LVL1
 1585 0008 0600     		.2byte	0x6
 1586 000a 0C       		.byte	0xc
 1587 000b 00001D41 		.4byte	0x411d0000
 1588 000f 9F       		.byte	0x9f
 1589 0010 00000000 		.4byte	0
 1590 0014 00000000 		.4byte	0
 1591              	.LLST1:
 1592 0018 08000000 		.4byte	.LVL1
 1593 001c 0C000000 		.4byte	.LVL2
 1594 0020 0600     		.2byte	0x6
 1595 0022 0C       		.byte	0xc
 1596 0023 00001D41 		.4byte	0x411d0000
 1597 0027 9F       		.byte	0x9f
 1598 0028 00000000 		.4byte	0
 1599 002c 00000000 		.4byte	0
 1600              	.LLST2:
 1601 0030 0C000000 		.4byte	.LVL2
 1602 0034 0E000000 		.4byte	.LVL3
 1603 0038 0600     		.2byte	0x6
 1604 003a 0C       		.byte	0xc
 1605 003b 00001D41 		.4byte	0x411d0000
 1606 003f 9F       		.byte	0x9f
 1607 0040 00000000 		.4byte	0
 1608 0044 00000000 		.4byte	0
 1609              		.section	.debug_aranges,"",%progbits
 1610 0000 1C000000 		.4byte	0x1c
 1611 0004 0200     		.2byte	0x2
 1612 0006 00000000 		.4byte	.Ldebug_info0
 1613 000a 04       		.byte	0x4
 1614 000b 00       		.byte	0
 1615 000c 0000     		.2byte	0
 1616 000e 0000     		.2byte	0
 1617 0010 00000000 		.4byte	.LFB184
 1618 0014 14000000 		.4byte	.LFE184-.LFB184
 1619 0018 00000000 		.4byte	0
 1620 001c 00000000 		.4byte	0
 1621              		.section	.debug_ranges,"",%progbits
 1622              	.Ldebug_ranges0:
 1623 0000 00000000 		.4byte	.LFB184
 1624 0004 14000000 		.4byte	.LFE184
 1625 0008 00000000 		.4byte	0
 1626 000c 00000000 		.4byte	0
 1627              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 59


 1628              	.Ldebug_line0:
 1629 0000 72020000 		.section	.debug_str,"MS",%progbits,1
 1629      02004002 
 1629      00000201 
 1629      FB0E0D00 
 1629      01010101 
 1630              	.LASF168:
 1631 0000 43795F53 		.ascii	"Cy_SAR_ClearInterrupt\000"
 1631      41525F43 
 1631      6C656172 
 1631      496E7465 
 1631      72727570 
 1632              	.LASF57:
 1633 0016 4156475F 		.ascii	"AVG_STAT\000"
 1633      53544154 
 1633      00
 1634              	.LASF52:
 1635 001f 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 1635      4348414E 
 1635      5F434F4E 
 1635      46494700 
 1636              	.LASF116:
 1637 002f 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 1637      6843746C 
 1637      4D61696E 
 1637      57733346 
 1637      72657100 
 1638              	.LASF138:
 1639 0043 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 1639      50727443 
 1639      6667496E 
 1639      4F666673 
 1639      657400
 1640              	.LASF156:
 1641 0056 6970634C 		.ascii	"ipcLockStatusOffset\000"
 1641      6F636B53 
 1641      74617475 
 1641      734F6666 
 1641      73657400 
 1642              	.LASF169:
 1643 006a 4144435F 		.ascii	"ADC_1_ISR\000"
 1643      315F4953 
 1643      5200
 1644              	.LASF82:
 1645 0074 63727970 		.ascii	"cryptoVersion\000"
 1645      746F5665 
 1645      7273696F 
 1645      6E00
 1646              	.LASF100:
 1647 0082 70657269 		.ascii	"periClockNr\000"
 1647      436C6F63 
 1647      6B4E7200 
 1648              	.LASF78:
 1649 008e 70617373 		.ascii	"passBase\000"
 1649      42617365 
 1649      00
 1650              	.LASF59:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 60


 1651 0097 4D55585F 		.ascii	"MUX_SWITCH0\000"
 1651      53574954 
 1651      43483000 
 1652              	.LASF91:
 1653 00a3 63707573 		.ascii	"cpussIpcIrqNr\000"
 1653      73497063 
 1653      4972714E 
 1653      7200
 1654              	.LASF3:
 1655 00b1 5F5F7569 		.ascii	"__uint8_t\000"
 1655      6E74385F 
 1655      7400
 1656              	.LASF135:
 1657 00bb 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 1657      44697632 
 1657      345F3543 
 1657      746C4F66 
 1657      66736574 
 1658              	.LASF142:
 1659 00d0 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 1659      73436D34 
 1659      436C6F63 
 1659      6B43746C 
 1659      4F666673 
 1660              	.LASF24:
 1661 00e7 52414E47 		.ascii	"RANGE_COND\000"
 1661      455F434F 
 1661      4E4400
 1662              	.LASF71:
 1663 00f2 63707573 		.ascii	"cpussBase\000"
 1663      73426173 
 1663      6500
 1664              	.LASF120:
 1665 00fc 64774368 		.ascii	"dwChCtlPrioPos\000"
 1665      43746C50 
 1665      72696F50 
 1665      6F7300
 1666              	.LASF11:
 1667 010b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1667      206C6F6E 
 1667      6720756E 
 1667      7369676E 
 1667      65642069 
 1668              	.LASF166:
 1669 0122 433A5C55 		.ascii	"C:\\Users\\mcfdo\\OneDrive\\Documents\\PSoC Creator"
 1669      73657273 
 1669      5C6D6366 
 1669      646F5C4F 
 1669      6E654472 
 1670 0150 5C576F72 		.ascii	"\\Workspace_prog1\\Mario_mobile_robot_Copy_01_Copy_"
 1670      6B737061 
 1670      63655F70 
 1670      726F6731 
 1670      5C4D6172 
 1671 0181 30312E63 		.ascii	"01.cydsn\000"
 1671      7964736E 
 1671      00
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 61


 1672              	.LASF124:
 1673 018a 70657269 		.ascii	"periTrCmdOffset\000"
 1673      5472436D 
 1673      644F6666 
 1673      73657400 
 1674              	.LASF148:
 1675 019a 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 1675      73537973 
 1675      5469636B 
 1675      43746C4F 
 1675      66667365 
 1676              	.LASF109:
 1677 01b0 666C6173 		.ascii	"flashPipeRequired\000"
 1677      68506970 
 1677      65526571 
 1677      75697265 
 1677      6400
 1678              	.LASF66:
 1679 01c2 414E415F 		.ascii	"ANA_TRIM0\000"
 1679      5452494D 
 1679      3000
 1680              	.LASF67:
 1681 01cc 414E415F 		.ascii	"ANA_TRIM1\000"
 1681      5452494D 
 1681      3100
 1682              	.LASF48:
 1683 01d6 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 1683      455F494E 
 1683      54525F4D 
 1683      41534B00 
 1684              	.LASF14:
 1685 01e6 696E7431 		.ascii	"int16_t\000"
 1685      365F7400 
 1686              	.LASF10:
 1687 01ee 6C6F6E67 		.ascii	"long long int\000"
 1687      206C6F6E 
 1687      6720696E 
 1687      7400
 1688              	.LASF2:
 1689 01fc 7369676E 		.ascii	"signed char\000"
 1689      65642063 
 1689      68617200 
 1690              	.LASF129:
 1691 0208 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 1691      44697643 
 1691      6D645479 
 1691      70655365 
 1691      6C506F73 
 1692              	.LASF72:
 1693 021d 666C6173 		.ascii	"flashcBase\000"
 1693      68634261 
 1693      736500
 1694              	.LASF75:
 1695 0228 70726F74 		.ascii	"protBase\000"
 1695      42617365 
 1695      00
 1696              	.LASF87:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 62


 1697 0231 69706356 		.ascii	"ipcVersion\000"
 1697      65727369 
 1697      6F6E00
 1698              	.LASF149:
 1699 023c 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 1699      73436D30 
 1699      4E6D6943 
 1699      746C4F66 
 1699      66736574 
 1700              	.LASF65:
 1701 0251 52455345 		.ascii	"RESERVED10\000"
 1701      52564544 
 1701      313000
 1702              	.LASF76:
 1703 025c 6873696F 		.ascii	"hsiomBase\000"
 1703      6D426173 
 1703      6500
 1704              	.LASF7:
 1705 0266 6C6F6E67 		.ascii	"long int\000"
 1705      20696E74 
 1705      00
 1706              	.LASF164:
 1707 026f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1707      43313120 
 1707      352E342E 
 1707      31203230 
 1707      31363036 
 1708 02a2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 1708      20726576 
 1708      6973696F 
 1708      6E203233 
 1708      37373135 
 1709 02d5 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 1709      73202D66 
 1709      66756E63 
 1709      74696F6E 
 1709      2D736563 
 1710              	.LASF64:
 1711 0301 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 1711      53574954 
 1711      43485F53 
 1711      54415455 
 1711      5300
 1712              	.LASF50:
 1713 0313 494E5452 		.ascii	"INTR_CAUSE\000"
 1713      5F434155 
 1713      534500
 1714              	.LASF107:
 1715 031e 63727970 		.ascii	"cryptoMemSize\000"
 1715      746F4D65 
 1715      6D53697A 
 1715      6500
 1716              	.LASF54:
 1717 032c 494E4A5F 		.ascii	"INJ_RESULT\000"
 1717      52455355 
 1717      4C5400
 1718              	.LASF73:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 63


 1719 0337 70657269 		.ascii	"periBase\000"
 1719      42617365 
 1719      00
 1720              	.LASF105:
 1721 0340 73797350 		.ascii	"sysPmSimoPresent\000"
 1721      6D53696D 
 1721      6F507265 
 1721      73656E74 
 1721      00
 1722              	.LASF95:
 1723 0351 63707573 		.ascii	"cpussFmIrq\000"
 1723      73466D49 
 1723      727100
 1724              	.LASF160:
 1725 035c 646F7562 		.ascii	"double\000"
 1725      6C6500
 1726              	.LASF134:
 1727 0363 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 1727      44697631 
 1727      365F3543 
 1727      746C4F66 
 1727      66736574 
 1728              	.LASF60:
 1729 0378 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 1729      53574954 
 1729      43485F43 
 1729      4C454152 
 1729      3000
 1730              	.LASF98:
 1731 038a 73727373 		.ascii	"srssNumPll\000"
 1731      4E756D50 
 1731      6C6C00
 1732              	.LASF170:
 1733 0395 696E7472 		.ascii	"intr_status\000"
 1733      5F737461 
 1733      74757300 
 1734              	.LASF132:
 1735 03a1 70657269 		.ascii	"periDiv8CtlOffset\000"
 1735      44697638 
 1735      43746C4F 
 1735      66667365 
 1735      7400
 1736              	.LASF139:
 1737 03b3 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 1737      50727443 
 1737      66674F75 
 1737      744F6666 
 1737      73657400 
 1738              	.LASF121:
 1739 03c7 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 1739      43746C50 
 1739      7265656D 
 1739      70746162 
 1739      6C65506F 
 1740              	.LASF8:
 1741 03dd 5F5F7569 		.ascii	"__uint32_t\000"
 1741      6E743332 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 64


 1741      5F7400
 1742              	.LASF102:
 1743 03e8 70617373 		.ascii	"passSarChannels\000"
 1743      53617243 
 1743      68616E6E 
 1743      656C7300 
 1744              	.LASF21:
 1745 03f8 53414D50 		.ascii	"SAMPLE_TIME01\000"
 1745      4C455F54 
 1745      494D4530 
 1745      3100
 1746              	.LASF4:
 1747 0406 5F5F696E 		.ascii	"__int16_t\000"
 1747      7431365F 
 1747      7400
 1748              	.LASF42:
 1749 0410 53415455 		.ascii	"SATURATE_INTR\000"
 1749      52415445 
 1749      5F494E54 
 1749      5200
 1750              	.LASF28:
 1751 041e 4348414E 		.ascii	"CHAN_CONFIG\000"
 1751      5F434F4E 
 1751      46494700 
 1752              	.LASF145:
 1753 042a 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 1753      73436D34 
 1753      50777243 
 1753      746C4F66 
 1753      66736574 
 1754              	.LASF140:
 1755 043f 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 1755      50727443 
 1755      66675369 
 1755      6F4F6666 
 1755      73657400 
 1756              	.LASF92:
 1757 0453 63707573 		.ascii	"cpussDwChNr\000"
 1757      73447743 
 1757      684E7200 
 1758              	.LASF12:
 1759 045f 756E7369 		.ascii	"unsigned int\000"
 1759      676E6564 
 1759      20696E74 
 1759      00
 1760              	.LASF15:
 1761 046c 75696E74 		.ascii	"uint16_t\000"
 1761      31365F74 
 1761      00
 1762              	.LASF125:
 1763 0475 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 1763      5472436D 
 1763      64477253 
 1763      656C4D73 
 1763      6B00
 1764              	.LASF9:
 1765 0487 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 65


 1765      20756E73 
 1765      69676E65 
 1765      6420696E 
 1765      7400
 1766              	.LASF36:
 1767 0499 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 1767      5F574F52 
 1767      4B5F4E45 
 1767      5756414C 
 1767      554500
 1768              	.LASF90:
 1769 04ac 63707573 		.ascii	"cpussIpcNr\000"
 1769      73497063 
 1769      4E7200
 1770              	.LASF62:
 1771 04b7 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 1771      53574954 
 1771      43485F44 
 1771      535F4354 
 1771      524C00
 1772              	.LASF40:
 1773 04ca 494E5452 		.ascii	"INTR_MASK\000"
 1773      5F4D4153 
 1773      4B00
 1774              	.LASF77:
 1775 04d4 6770696F 		.ascii	"gpioBase\000"
 1775      42617365 
 1775      00
 1776              	.LASF69:
 1777 04dd 5341525F 		.ascii	"SAR_Type\000"
 1777      54797065 
 1777      00
 1778              	.LASF115:
 1779 04e6 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 1779      6843746C 
 1779      4D61696E 
 1779      57733246 
 1779      72657100 
 1780              	.LASF126:
 1781 04fa 70657269 		.ascii	"periTrGrOffset\000"
 1781      54724772 
 1781      4F666673 
 1781      657400
 1782              	.LASF153:
 1783 0509 63707573 		.ascii	"cpussRam1Ctl0\000"
 1783      7352616D 
 1783      3143746C 
 1783      3000
 1784              	.LASF46:
 1785 0517 52414E47 		.ascii	"RANGE_INTR\000"
 1785      455F494E 
 1785      545200
 1786              	.LASF34:
 1787 0522 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 1787      5F574F52 
 1787      4B5F5550 
 1787      44415445 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 66


 1787      4400
 1788              	.LASF127:
 1789 0534 70657269 		.ascii	"periTrGrSize\000"
 1789      54724772 
 1789      53697A65 
 1789      00
 1790              	.LASF85:
 1791 0541 6770696F 		.ascii	"gpioVersion\000"
 1791      56657273 
 1791      696F6E00 
 1792              	.LASF157:
 1793 054d 63795F73 		.ascii	"cy_stc_device_t\000"
 1793      74635F64 
 1793      65766963 
 1793      655F7400 
 1794              	.LASF45:
 1795 055d 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 1795      52415445 
 1795      5F494E54 
 1795      525F4D41 
 1795      534B4544 
 1796              	.LASF103:
 1797 0572 65704D6F 		.ascii	"epMonitorNr\000"
 1797      6E69746F 
 1797      724E7200 
 1798              	.LASF150:
 1799 057e 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 1799      73436D34 
 1799      4E6D6943 
 1799      746C4F66 
 1799      66736574 
 1800              	.LASF146:
 1801 0593 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 1801      73547269 
 1801      6D52616D 
 1801      43746C4F 
 1801      66667365 
 1802              	.LASF141:
 1803 05a9 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 1803      73436D30 
 1803      436C6F63 
 1803      6B43746C 
 1803      4F666673 
 1804              	.LASF26:
 1805 05c0 53544152 		.ascii	"START_CTRL\000"
 1805      545F4354 
 1805      524C00
 1806              	.LASF39:
 1807 05cb 494E5452 		.ascii	"INTR_SET\000"
 1807      5F534554 
 1807      00
 1808              	.LASF81:
 1809 05d4 63707573 		.ascii	"cpussVersion\000"
 1809      73566572 
 1809      73696F6E 
 1809      00
 1810              	.LASF162:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 67


 1811 05e1 62617365 		.ascii	"base\000"
 1811      00
 1812              	.LASF88:
 1813 05e6 70657269 		.ascii	"periVersion\000"
 1813      56657273 
 1813      696F6E00 
 1814              	.LASF144:
 1815 05f2 63707573 		.ascii	"cpussCm0StatusOffset\000"
 1815      73436D30 
 1815      53746174 
 1815      75734F66 
 1815      66736574 
 1816              	.LASF17:
 1817 0607 73697A65 		.ascii	"sizetype\000"
 1817      74797065 
 1817      00
 1818              	.LASF118:
 1819 0610 64774368 		.ascii	"dwChOffset\000"
 1819      4F666673 
 1819      657400
 1820              	.LASF32:
 1821 061b 4348414E 		.ascii	"CHAN_RESULT\000"
 1821      5F524553 
 1821      554C5400 
 1822              	.LASF93:
 1823 0627 63707573 		.ascii	"cpussFlashPaSize\000"
 1823      73466C61 
 1823      73685061 
 1823      53697A65 
 1823      00
 1824              	.LASF131:
 1825 0638 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 1825      44697643 
 1825      6D645061 
 1825      54797065 
 1825      53656C50 
 1826              	.LASF154:
 1827 064f 63707573 		.ascii	"cpussRam2Ctl0\000"
 1827      7352616D 
 1827      3243746C 
 1827      3000
 1828              	.LASF19:
 1829 065d 53414D50 		.ascii	"SAMPLE_CTRL\000"
 1829      4C455F43 
 1829      54524C00 
 1830              	.LASF23:
 1831 0669 52414E47 		.ascii	"RANGE_THRES\000"
 1831      455F5448 
 1831      52455300 
 1832              	.LASF122:
 1833 0675 64775374 		.ascii	"dwStatusChIdxPos\000"
 1833      61747573 
 1833      43684964 
 1833      78506F73 
 1833      00
 1834              	.LASF25:
 1835 0686 4348414E 		.ascii	"CHAN_EN\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 68


 1835      5F454E00 
 1836              	.LASF22:
 1837 068e 53414D50 		.ascii	"SAMPLE_TIME23\000"
 1837      4C455F54 
 1837      494D4532 
 1837      3300
 1838              	.LASF104:
 1839 069c 75646250 		.ascii	"udbPresent\000"
 1839      72657365 
 1839      6E7400
 1840              	.LASF84:
 1841 06a7 666C6173 		.ascii	"flashcVersion\000"
 1841      68635665 
 1841      7273696F 
 1841      6E00
 1842              	.LASF80:
 1843 06b5 63727970 		.ascii	"cryptoBase\000"
 1843      746F4261 
 1843      736500
 1844              	.LASF101:
 1845 06c0 736D6966 		.ascii	"smifDeviceNr\000"
 1845      44657669 
 1845      63654E72 
 1845      00
 1846              	.LASF43:
 1847 06cd 53415455 		.ascii	"SATURATE_INTR_SET\000"
 1847      52415445 
 1847      5F494E54 
 1847      525F5345 
 1847      5400
 1848              	.LASF41:
 1849 06df 494E5452 		.ascii	"INTR_MASKED\000"
 1849      5F4D4153 
 1849      4B454400 
 1850              	.LASF159:
 1851 06eb 666C6F61 		.ascii	"float\000"
 1851      7400
 1852              	.LASF123:
 1853 06f1 64775374 		.ascii	"dwStatusChIdxMsk\000"
 1853      61747573 
 1853      43684964 
 1853      784D736B 
 1853      00
 1854              	.LASF167:
 1855 0702 43795F53 		.ascii	"Cy_SAR_GetInterruptStatus\000"
 1855      41525F47 
 1855      6574496E 
 1855      74657272 
 1855      75707453 
 1856              	.LASF27:
 1857 071c 52455345 		.ascii	"RESERVED1\000"
 1857      52564544 
 1857      3100
 1858              	.LASF171:
 1859 0726 63795F64 		.ascii	"cy_device\000"
 1859      65766963 
 1859      6500
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 69


 1860              	.LASF31:
 1861 0730 52455345 		.ascii	"RESERVED3\000"
 1861      52564544 
 1861      3300
 1862              	.LASF151:
 1863 073a 63707573 		.ascii	"cpussRomCtl\000"
 1863      73526F6D 
 1863      43746C00 
 1864              	.LASF51:
 1865 0746 52455345 		.ascii	"RESERVED5\000"
 1865      52564544 
 1865      3500
 1866              	.LASF53:
 1867 0750 52455345 		.ascii	"RESERVED6\000"
 1867      52564544 
 1867      3600
 1868              	.LASF55:
 1869 075a 52455345 		.ascii	"RESERVED7\000"
 1869      52564544 
 1869      3700
 1870              	.LASF58:
 1871 0764 52455345 		.ascii	"RESERVED8\000"
 1871      52564544 
 1871      3800
 1872              	.LASF61:
 1873 076e 52455345 		.ascii	"RESERVED9\000"
 1873      52564544 
 1873      3900
 1874              	.LASF74:
 1875 0778 75646242 		.ascii	"udbBase\000"
 1875      61736500 
 1876              	.LASF161:
 1877 0780 5F426F6F 		.ascii	"_Bool\000"
 1877      6C00
 1878              	.LASF1:
 1879 0786 756E7369 		.ascii	"unsigned char\000"
 1879      676E6564 
 1879      20636861 
 1879      7200
 1880              	.LASF117:
 1881 0794 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 1881      6843746C 
 1881      4D61696E 
 1881      57733446 
 1881      72657100 
 1882              	.LASF0:
 1883 07a8 73686F72 		.ascii	"short int\000"
 1883      7420696E 
 1883      7400
 1884              	.LASF163:
 1885 07b2 696E7472 		.ascii	"intrMask\000"
 1885      4D61736B 
 1885      00
 1886              	.LASF20:
 1887 07bb 52455345 		.ascii	"RESERVED\000"
 1887      52564544 
 1887      00
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 70


 1888              	.LASF68:
 1889 07c4 5341525F 		.ascii	"SAR_V1_Type\000"
 1889      56315F54 
 1889      79706500 
 1890              	.LASF165:
 1891 07d0 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_1_INT.c\000"
 1891      72617465 
 1891      645F536F 
 1891      75726365 
 1891      5C50536F 
 1892              	.LASF128:
 1893 07f3 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 1893      44697643 
 1893      6D644469 
 1893      7653656C 
 1893      4D736B00 
 1894              	.LASF37:
 1895 0807 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 1895      5F524553 
 1895      554C545F 
 1895      4E455756 
 1895      414C5545 
 1896              	.LASF29:
 1897 081c 52455345 		.ascii	"RESERVED2\000"
 1897      52564544 
 1897      3200
 1898              	.LASF99:
 1899 0826 73727373 		.ascii	"srssNumHfroot\000"
 1899      4E756D48 
 1899      66726F6F 
 1899      7400
 1900              	.LASF33:
 1901 0834 52455345 		.ascii	"RESERVED4\000"
 1901      52564544 
 1901      3400
 1902              	.LASF112:
 1903 083e 666C6173 		.ascii	"flashEraseDelay\000"
 1903      68457261 
 1903      73654465 
 1903      6C617900 
 1904              	.LASF16:
 1905 084e 75696E74 		.ascii	"uint32_t\000"
 1905      33325F74 
 1905      00
 1906              	.LASF106:
 1907 0857 70726F74 		.ascii	"protBusMasterMask\000"
 1907      4275734D 
 1907      61737465 
 1907      724D6173 
 1907      6B00
 1908              	.LASF70:
 1909 0869 6C6F6E67 		.ascii	"long double\000"
 1909      20646F75 
 1909      626C6500 
 1910              	.LASF158:
 1911 0875 63686172 		.ascii	"char\000"
 1911      00
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 71


 1912              	.LASF89:
 1913 087a 70726F74 		.ascii	"protVersion\000"
 1913      56657273 
 1913      696F6E00 
 1914              	.LASF152:
 1915 0886 63707573 		.ascii	"cpussRam0Ctl0\000"
 1915      7352616D 
 1915      3043746C 
 1915      3000
 1916              	.LASF5:
 1917 0894 5F5F7569 		.ascii	"__uint16_t\000"
 1917      6E743136 
 1917      5F7400
 1918              	.LASF133:
 1919 089f 70657269 		.ascii	"periDiv16CtlOffset\000"
 1919      44697631 
 1919      3643746C 
 1919      4F666673 
 1919      657400
 1920              	.LASF86:
 1921 08b2 6873696F 		.ascii	"hsiomVersion\000"
 1921      6D566572 
 1921      73696F6E 
 1921      00
 1922              	.LASF44:
 1923 08bf 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 1923      52415445 
 1923      5F494E54 
 1923      525F4D41 
 1923      534B00
 1924              	.LASF38:
 1925 08d2 494E5452 		.ascii	"INTR\000"
 1925      00
 1926              	.LASF114:
 1927 08d7 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 1927      6843746C 
 1927      4D61696E 
 1927      57733146 
 1927      72657100 
 1928              	.LASF6:
 1929 08eb 73686F72 		.ascii	"short unsigned int\000"
 1929      7420756E 
 1929      7369676E 
 1929      65642069 
 1929      6E7400
 1930              	.LASF119:
 1931 08fe 64774368 		.ascii	"dwChSize\000"
 1931      53697A65 
 1931      00
 1932              	.LASF155:
 1933 0907 69706353 		.ascii	"ipcStructSize\000"
 1933      74727563 
 1933      7453697A 
 1933      6500
 1934              	.LASF30:
 1935 0915 4348414E 		.ascii	"CHAN_WORK\000"
 1935      5F574F52 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 72


 1935      4B00
 1936              	.LASF94:
 1937 091f 63707573 		.ascii	"cpussIpc0Irq\000"
 1937      73497063 
 1937      30497271 
 1937      00
 1938              	.LASF63:
 1939 092c 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 1939      53574954 
 1939      43485F53 
 1939      515F4354 
 1939      524C00
 1940              	.LASF18:
 1941 093f 4354524C 		.ascii	"CTRL\000"
 1941      00
 1942              	.LASF137:
 1943 0944 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 1943      50727443 
 1943      66674F66 
 1943      66736574 
 1943      00
 1944              	.LASF113:
 1945 0955 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 1945      6843746C 
 1945      4D61696E 
 1945      57733046 
 1945      72657100 
 1946              	.LASF56:
 1947 0969 53544154 		.ascii	"STATUS\000"
 1947      555300
 1948              	.LASF96:
 1949 0970 63707573 		.ascii	"cpussNotConnectedIrq\000"
 1949      734E6F74 
 1949      436F6E6E 
 1949      65637465 
 1949      64497271 
 1950              	.LASF110:
 1951 0985 666C6173 		.ascii	"flashWriteDelay\000"
 1951      68577269 
 1951      74654465 
 1951      6C617900 
 1952              	.LASF35:
 1953 0995 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 1953      5F524553 
 1953      554C545F 
 1953      55504441 
 1953      54454400 
 1954              	.LASF13:
 1955 09a9 75696E74 		.ascii	"uint8_t\000"
 1955      385F7400 
 1956              	.LASF143:
 1957 09b1 63707573 		.ascii	"cpussCm4StatusOffset\000"
 1957      73436D34 
 1957      53746174 
 1957      75734F66 
 1957      66736574 
 1958              	.LASF136:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccOU3UmX.s 			page 73


 1959 09c6 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 1959      50727449 
 1959      6E747243 
 1959      66674F66 
 1959      66736574 
 1960              	.LASF147:
 1961 09db 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 1961      73547269 
 1961      6D526F6D 
 1961      43746C4F 
 1961      66667365 
 1962              	.LASF47:
 1963 09f1 52414E47 		.ascii	"RANGE_INTR_SET\000"
 1963      455F494E 
 1963      54525F53 
 1963      455400
 1964              	.LASF97:
 1965 0a00 73727373 		.ascii	"srssNumClkpath\000"
 1965      4E756D43 
 1965      6C6B7061 
 1965      746800
 1966              	.LASF83:
 1967 0a0f 64775665 		.ascii	"dwVersion\000"
 1967      7273696F 
 1967      6E00
 1968              	.LASF79:
 1969 0a19 69706342 		.ascii	"ipcBase\000"
 1969      61736500 
 1970              	.LASF49:
 1971 0a21 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 1971      455F494E 
 1971      54525F4D 
 1971      41534B45 
 1971      4400
 1972              	.LASF130:
 1973 0a33 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 1973      44697643 
 1973      6D645061 
 1973      44697653 
 1973      656C506F 
 1974              	.LASF111:
 1975 0a49 666C6173 		.ascii	"flashProgramDelay\000"
 1975      6850726F 
 1975      6772616D 
 1975      44656C61 
 1975      7900
 1976              	.LASF108:
 1977 0a5b 666C6173 		.ascii	"flashRwwRequired\000"
 1977      68527777 
 1977      52657175 
 1977      69726564 
 1977      00
 1978              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
