ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_1_InitConfig,"ax",%progbits
  20              		.align	1
  21              		.global	ADC_1_InitConfig
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_1_InitConfig, %function
  25              	ADC_1_InitConfig:
  26              	.LFB188:
  27              		.file 1 "Generated_Source\\PSoC6\\ADC_1.c"
   1:Generated_Source\PSoC6/ADC_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1.c **** * \file     ADC_1.c
   3:Generated_Source\PSoC6/ADC_1.c **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1.c **** *
   5:Generated_Source\PSoC6/ADC_1.c **** * \brief
   6:Generated_Source\PSoC6/ADC_1.c **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1.c **** *
   8:Generated_Source\PSoC6/ADC_1.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_1.c **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_1.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_1.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_1.c **** * liability arising out of the application or use of the Software or any
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 2


  31:Generated_Source\PSoC6/ADC_1.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC6/ADC_1.c **** #include <sysint/cy_sysint.h>
  41:Generated_Source\PSoC6/ADC_1.c **** #include <cyfitter_sysint_cfg.h>
  42:Generated_Source\PSoC6/ADC_1.c **** 
  43:Generated_Source\PSoC6/ADC_1.c **** uint8_t ADC_1_initVar = 0u;
  44:Generated_Source\PSoC6/ADC_1.c **** uint8_t ADC_1_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  45:Generated_Source\PSoC6/ADC_1.c **** uint32_t ADC_1_currentConfig = 0u; /* Currently active configuration */
  46:Generated_Source\PSoC6/ADC_1.c **** 
  47:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
  48:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_Start
  49:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
  50:Generated_Source\PSoC6/ADC_1.c **** *
  51:Generated_Source\PSoC6/ADC_1.c **** * \brief Performs all required initialization for this component and enables the
  52:Generated_Source\PSoC6/ADC_1.c **** *  power. The power will be set to the appropriate power based on the clock
  53:Generated_Source\PSoC6/ADC_1.c **** *  frequency.
  54:Generated_Source\PSoC6/ADC_1.c **** *
  55:Generated_Source\PSoC6/ADC_1.c **** * \param None
  56:Generated_Source\PSoC6/ADC_1.c **** *
  57:Generated_Source\PSoC6/ADC_1.c **** * \return None
  58:Generated_Source\PSoC6/ADC_1.c **** *
  59:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
  60:Generated_Source\PSoC6/ADC_1.c **** *
  61:Generated_Source\PSoC6/ADC_1.c **** * \globalvars
  62:Generated_Source\PSoC6/ADC_1.c **** *  \ref ADC_1_initVar (RW)
  63:Generated_Source\PSoC6/ADC_1.c **** *
  64:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  65:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_Start(void)
  66:Generated_Source\PSoC6/ADC_1.c **** {
  67:Generated_Source\PSoC6/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
  68:Generated_Source\PSoC6/ADC_1.c ****     {
  69:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_Init();
  70:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
  71:Generated_Source\PSoC6/ADC_1.c ****     }
  72:Generated_Source\PSoC6/ADC_1.c **** 
  73:Generated_Source\PSoC6/ADC_1.c ****     ADC_1_Enable();
  74:Generated_Source\PSoC6/ADC_1.c **** 
  75:Generated_Source\PSoC6/ADC_1.c ****     return;
  76:Generated_Source\PSoC6/ADC_1.c **** }
  77:Generated_Source\PSoC6/ADC_1.c **** 
  78:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
  79:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_StartEx
  80:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
  81:Generated_Source\PSoC6/ADC_1.c **** *
  82:Generated_Source\PSoC6/ADC_1.c **** * \brief This function starts the ADC_1 and sets the Interrupt
  83:Generated_Source\PSoC6/ADC_1.c **** * Service Routine to the provided address using the
  84:Generated_Source\PSoC6/ADC_1.c **** * Cy_SysInt_Init() function. Refer to the Interrupt component
  85:Generated_Source\PSoC6/ADC_1.c **** * datasheet for more information on the Cy_SysInt_Init() function.
  86:Generated_Source\PSoC6/ADC_1.c **** *
  87:Generated_Source\PSoC6/ADC_1.c **** * \param address This is the address of a user defined function for the ISR.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 3


  88:Generated_Source\PSoC6/ADC_1.c **** *
  89:Generated_Source\PSoC6/ADC_1.c **** * \return None
  90:Generated_Source\PSoC6/ADC_1.c **** *
  91:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
  92:Generated_Source\PSoC6/ADC_1.c **** *
  93:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_StartEx(cy_israddress userIsr)
  95:Generated_Source\PSoC6/ADC_1.c **** {
  96:Generated_Source\PSoC6/ADC_1.c ****     ADC_1_Start();
  97:Generated_Source\PSoC6/ADC_1.c **** 
  98:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. Initialize and enable the interrupt*/
  99:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 100:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 101:Generated_Source\PSoC6/ADC_1.c ****         (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, userIsr);
 102:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 103:Generated_Source\PSoC6/ADC_1.c ****     #endif
 104:Generated_Source\PSoC6/ADC_1.c ****     #endif
 105:Generated_Source\PSoC6/ADC_1.c **** 
 106:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 107:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 108:Generated_Source\PSoC6/ADC_1.c ****         (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, userIsr);
 109:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 110:Generated_Source\PSoC6/ADC_1.c ****     #endif
 111:Generated_Source\PSoC6/ADC_1.c ****     #endif
 112:Generated_Source\PSoC6/ADC_1.c **** 
 113:Generated_Source\PSoC6/ADC_1.c **** }
 114:Generated_Source\PSoC6/ADC_1.c **** 
 115:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 116:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_InitConfig
 117:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 118:Generated_Source\PSoC6/ADC_1.c **** *
 119:Generated_Source\PSoC6/ADC_1.c **** * \brief Configures all of the registers for a given configuration for scanning.
 120:Generated_Source\PSoC6/ADC_1.c **** *
 121:Generated_Source\PSoC6/ADC_1.c **** * \param scan Number of scan defined in the ADC_1.
 122:Generated_Source\PSoC6/ADC_1.c **** *
 123:Generated_Source\PSoC6/ADC_1.c **** * \return None
 124:Generated_Source\PSoC6/ADC_1.c **** *
 125:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 126:Generated_Source\PSoC6/ADC_1.c **** *
 127:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 128:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config)
 129:Generated_Source\PSoC6/ADC_1.c **** {
  28              		.loc 1 129 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33              	.LBB20:
  34              	.LBB21:
  35              	.LBB22:
  36              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysclk/cy_sysclk.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \file cy_sysclk.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Provides an API declaration of the sysclk driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 4


   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The System Clock (SysClk) driver contains the API for configuring system and
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clocks. 
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The functions and other declarations used in this driver are in cy_sysclk.h. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and declarations in the PDL. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Firmware uses the API to configure , enable, or disable a clock.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * 
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The clock system includes a variety of resources that can vary per device, including:
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Internal clock sources such as internal oscillators
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - External clock sources such as crystal oscillators or a signal on an I/O pin
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Generated clocks such as an FLL, a PLL, and peripheral clocks
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details of the 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock system.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The PDL defines clock system capabilities in:\n
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices\<family\>/<series\>/include\<series\>_config.h. (E.g.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices/psoc6/include/psoc6_01_config.h).
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * User-configurable clock speeds are defined in the file system_<series>.h.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * As an illustration of the clocking system, the following diagram shows the
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * PSoC 63 series clock tree. The actual tree may vary depending on the device series.
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details.
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * ![](sysclk_tree.png)
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The sysclk driver supports multiple peripheral clocks, as well as the fast 
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock, slow clock, backup domain clock, timer clock, and pump clock. The API
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for any given clock contains the functions to manage that clock. Functions
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for clock measurement and trimming are also provided.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_configuration Configuration Considerations
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The availability of clock functions depend on the availability of the chip
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * resources that support those functions. Consult the device TRM before
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * attempting to use these functions.
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * LPActive and LPSleep power modes limit the maximum clock frequency allowed
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * on the device. Refer to the SysPm driver and the TRM for details.
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_MISRA MISRA-C Compliance
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 5


  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>MISRA Rule</th>
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Class (Required/Advisory)</th>
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Description</th>
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Description of Deviation(s)</th>
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.3</td>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite expression of the "essentially unsigned" type is being
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         cast to a different type category.</td>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value got from the bitfield physically cannot exceed the enumeration
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         that describes this bitfield. So, the code is safe by design.</td>
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.4</td>
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite floating point expression is being cast to double, or unsigned.</td>
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Casting a floating-point calculation result to an integer.</td>
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>13.4</td>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The controlling expression of a for statement shall not contain any objects of floating t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Scanning through a list of floating point values: only greater_than/less_then checks are 
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         with floating point numbers, the loop counter is integer. </td>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>16.7</td>
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The object addressed by the pointer parameter is not modified and so the pointer could be
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         type 'pointer to const'.</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The callback function for system power management (SysPm) must be of generic callback typ
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         contains non-const pointer parameter.</td>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_changelog Changelog
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="4">1.20</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Flattened the organization of the driver source code into the single 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         source directory and the single include directory.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Driver library directory-structure simplification.</td>
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated \ref Cy_SysClk_FllLocked function description</td>
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The SRSS_ver1 HW details clarification</td>
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Removed the following functions:
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_FllLostLock
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_WcoConfigureCsv
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_ClkHfConfigureCsv
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No hardware support for the removed functions.</td>
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 6


 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added register access layer. Use register access macros instead
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         of direct register access using dereferenced pointers.</td>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Makes register access device-independent, so that the PDL does 
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         not need to be recompiled for each supported part number.</td>
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.11</td>
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the following functions. Now they use a semaphore when 
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         try to read the status or configure the SysClk measurement counters:
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_StartClkMeasurementCounters()
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_ClkMeasurementCountersGetFreq()
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Now Cy_SysClk_ClkMeasurementCountersGetFreq() returns zero value,
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         if during measurement device was in the Deep Sleep or partially
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         blocking flash operation occurred </td>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added arbiter mechanism for correct usage of the SysClk measurement 
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         counters</td>
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.10.1</td>
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Renamed Power Management section to Low Power Callback section</td>
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Documentation update and clarification</td>
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="5">1.10</td>
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated FLL parameter calculation</td>
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support low frequency sources</td>
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added Cy_SysClk_PiloSetTrim() and Cy_SysclkPiloGetTrim() functions</td>
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support PILO manual trims</td>
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Made Cy_SysClk_FllLostLock() function dependent on SRSS v1</td>
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Feature is not supported in SRSS v1</td>
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated Cy_SysClk_DeepSleepCallback() to save/restore both FLL and PLL settings</td>
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The function should return when the lock is established or a timeout has occurred</td>
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>General documentation updates</td>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.0</td>
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Initial version</td>
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_macros           Macros
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_enums           General Enumerated Types
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 7


 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_returns         Function return values
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_eco             External Crystal Oscillator (ECO)
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The External Crystal Oscillator (ECO) is a clock source that consists
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of an oscillator circuit that drives an external crystal through its
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   dedicated ECO pins. The ECO is a source clock that can be used to
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source one or more clock paths (Refer to \ref group_sysclk_path_src).
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These clock paths can then source the processors and peripherals in
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the device.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ECO relies on the presence of an external crystal. The pins
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connected to this crystal must be configured to operate in analog
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   drive mode with HSIOM connection set to GPIO control (HSIOM_SEL_GPIO).
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_eco_funcs       Functions
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_path_src           Clock Path Source
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Clock paths are a series of multiplexers that allow a source clock
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to drive multiple clocking resources down the chain. These paths are
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   used for active domain clocks that are not operational during chip 
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep, hibernate and off modes. Illustrated below is a diagram
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of the clock paths for the PSoC 63 series, showing the first three
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   clock paths. The source clocks for these paths are highlighted in
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the red box.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - IMO: 8 MHz Internal Main Oscillator (Default)
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - EXTCLK: External clock (signal brought in through dedicated pins)
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ECO: External Crystal Oscillator (requires external crystal on dedicated pins)
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ALTHF: Select on-chip signals (e.g. BLE ECO)
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - Digital Signal (DSI): Digital signal from a UDB source
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some clock paths such as path 0 and path 1 have additional resources
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   that can be utilized to provide a higher frequency clock. For example, 
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 0 source clock can be used as the reference clock for the FLL and 
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 1 source clock can be used as the reference clock for the PLL.
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_path_source.png)
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The PDL driver cannot configure a clock path to use Digital Signal
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Interconnect (DSI) outputs as sources. This must be done through DSI
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   configuration tool such as PSoC Creator.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_funcs     Functions
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_enums     Enumerated Types
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_fll             Frequency Locked Loop (FLL)
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is a clock generation circuit that can be used to produce a
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   some characteristics of the reference clock such as the accuracy of the
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source. However other attributes such as the clock phase are not preserved.
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is similar in purpose to a (Phase locked loop) PLL but they are
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   not equivalent.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 8


 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL starts up (locks) faster and consumes less current than the PLL.
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL accepts a source clock with lower frequency than PLL, such as the WCO (32 KHz). 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL does not lock phase. The hardware consist of a counter with a
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     current-controlled oscillator (CCO). The counter counts the number of output
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     clock edges in a reference clock period and adjusts the CCO until the
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     expected ratio is achieved (locked). After initial lock, the CCO is
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     adjusted dynamically to keep the ratio within tolerance. The lock tolerance
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     is user-adjustable.
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fll.png)
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the FLL. The first
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_FllConfigure() function, which calculates the 
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the FLL at run-time. This may be necessary for dynamic
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the FLL. However this method is slow as it needs to perform 
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the FLL. The other model is to call 
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_FllManualConfigure() function with pre-calculated parameter values. 
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the FLL calculation equations.
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_funcs       Functions
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_structs     Data Structures
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_enums       Enumerated Types
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pll             Phase Locked Loop (PLL)
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PLL is a clock generation circuit that can be used to produce a
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   characteristics of the reference clock such as the accuracy of the source
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and its phase. The PLL is similar in purpose to a (Frequency locked loop) FLL
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   but they are not equivalent.
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL starts up more slowly and consumes more current than the FLL.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL requires a higher frequency source clock than PLL. 
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_pll.png)
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the PLL. The first
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_PllConfigure() function, which calculates the 
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the PLL at run-time. This may be necessary for dynamic
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the PLL. However this method is slow as it needs to perform 
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the PLL. The other model is to call 
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PllManualConfigure() function with pre-calculated parameter values. 
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the PLL calculation equations.
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_funcs       Functions
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_structs     Data Structures
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ilo             Internal Low-Speed Oscillator (ILO)
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ILO operates with no external components and outputs a stable clock at
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   32.768 kHz nominal. The ILO is relatively low power and low accuracy. It is 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   available in all power modes and can be used as a source for the Backup domain clock.
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To ensure the ILO remains active in Hibernate mode, and across power-on-reset
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 9


 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (POR) or brown out detect (BOD), firmware must call Cy_SysClk_IloHibernateOn(). 
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Additionally, the ILO clock can be trimmed to +/- 1.5% of nominal frequency using
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a higher precision clock source. Use the \ref group_sysclk_calclk API to measure 
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the current ILO frequency before trimming.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The ILO is always the source clock for the \ref group_wdt. Therefore:
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The WDT must be unlocked when making an ILO function call in the PDL
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - It is recommended to always have the ILO enabled
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_ilo_funcs       Functions
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pilo            Precision Internal Low-Speed Oscillator (PILO)
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PILO provides a higher accuracy 32.768 kHz clock than the \ref group_sysclk_ilo "ILO".
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   When periodically calibrated using a high-accuracy clock such as the
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_eco "ECO", the PILO can achieve 250 ppm accuracy of nominal frequency.
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO is capable of operating in device Active, Sleep and Deep-Sleep power modes. 
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is not available in Hibernate mode.
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO can be used as a source for the \ref group_sysclk_clk_lf. However,
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because PILO is disabled in Hibernate mode, RTC timers cannot operate in this mode
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   when clocked using the PILO. Instead, either the \ref group_sysclk_ilo "ILO" or
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO" should be used when hibernate operation is required. 
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Periodic calibration to a high-accuracy clock (such as ECO) is required to
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   maintain accuracy. The application should use the functions described in the 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_calclk API to measure the current PILO frequency before trimming.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pilo_funcs      Functions
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_calclk          Clock Measurement
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions measure the frequency of a specified clock relative to a
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   reference clock. They are typically called in the following order:
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Specify the measured clock, the count, and the reference clock
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Start the counters
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Wait for the measurement counter to finish counting
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4. Retrieve the measured frequency
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note These functions may also be used as part of a clock trimming
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   process. Refer to the \ref group_sysclk_trim "Clock Trim" API.
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_funcs    Functions
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_enums    Enumerated Types
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_trim            Clock Trim (ILO, PILO)
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions perform a single trim operation on the ILO or PILO. Each
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   function's parameter is the actual frequency of the clock. To measure the
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   frequency, use the functions described in the \ref group_sysclk_calclk API.
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To trim the clock as close as possible to the target frequency, multiple
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   calls to the trim function may be needed. A typical usage example is to:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 10


 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Call the clock measurement functions to get the actual frequency of the clock
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Call the trim function, passing in the measured frequency
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Repeat the above until the trim function reports that the clock is trimmed to within limits.
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_trim_funcs      Functions
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pm              Low Power Callback
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Entering and exiting low power modes require compatible clock configurations
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to be set before entering low power and restored upon wake-up and exit. The
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SysClk driver provides a Cy_SysClk_DeepSleepCallback() function to support
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep mode entry. 
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This function can be called either by itself before initiating low-power mode
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   entry or it can be used in conjunction with the SysPm driver as a registered 
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   callback. To do so, register this function as a callback before calling 
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysPm_DeepSleep(). Specify \ref CY_SYSPM_DEEPSLEEP as the callback type, 
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and call Cy_SysPm_RegisterCallback().
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note If the FLL or PLL source is the ECO, this function must be called.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pm_funcs        Functions
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_wco             Watch Crystal Oscillator (WCO)
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO is a highly accurate 32.768 kHz clock source capable of operating
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   in all power modes (excluding the Off mode). It is the primary clock source for
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the backup domain clock, which is used by the real-time clock (RTC). The 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   WCO can also be used as a source for the low-frequency clock to support other
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   low power mode peripherals.
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO requires the configuration of the dedicated WCO pins (SRSS_WCO_IN_PIN,
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN). These must be configured as Analog Hi-Z drive modes and the
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   HSIOM selection set to GPIO. The WCO can also be used in bypass mode, where
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   an external 32.768 kHz square wave is brought in directly through the 
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN pin.
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a built-in clock supervisor (CSV) in the WCO. The clock
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   supervisor detects if the WCO has been lost; that is, the WCO is no longer 
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   producing clock pulses. The CSV does this by checking to ensure there is at 
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   least one WCO clock pulse within a certain time window. The ILO or PILO can be
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the supervising clock. Firmware can configure the CSV to trigger a fault,
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a reset, or both after specified cycles of the supervising clock.
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_funcs       Functions
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_structs     Data Structures
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_enums       Enumerated Types
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_hf          High-Frequency Clocks
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Multiple high frequency clocks (CLK_HF) are available in the device. For example,
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PSoC 63 series has five high-frequency root clocks. Each CLK_HF has a particular
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connection and chip-specific destination on the device.
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |Name     |Description                                             |
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 11


 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |:--------|:-------------------------------------------------------|
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[0]| Root clock for CPUs, PERI, and AHB infrastructure      |
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[1]| Root clock for the PDM/PCM and I2S audio subsystem     |
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[2]| Root clock for the Serial Memory Interface subsystem   |
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[3]| Root clock for USB communications                      |
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[4]| Clock output on clk_ext pin (when used as an output)   |
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf.png)
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Note this is a particular example. The actual tree may vary depending on the device series.
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the Technical Reference Manual for your device for details.
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   High frequency clocks are sourced by path clocks, which should be configured
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   first. An exception to this rule is CLK_HF[0], which cannot be disabled. 
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This divided clock drives the core processors and the peripherals in the system.
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   In order to update its clock source, CLK_HF[0] source must be selected without
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   disabling the clock.
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf_dist.png)
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a clock supervisor (CSV) for each root clock. These
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can detect frequency loss, or monitor that the clock frequency stays within
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a specified range. The possible supervising clocks are IMO, ECO, or ALTHF. 
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Loss detection and frequency monitoring can be enabled or disabled independently.
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each has its own programmable action that occurs on detection of an error.
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_funcs    Functions
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_structs  Data Structures
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_enums    Enumerated Types
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_fast        Fast Clock
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The fast clock drives the "fast" processor (e.g. Cortex-M4 processor in PSoC 6).
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is sourced by CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks").
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   A divider value of 1~256 can be used to further divide the CLK_HF[0] to a
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   desired clock speed for the processor.
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fast.png)
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_fast_funcs  Functions
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peri        Peripheral Clock
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The peripheral clock is a divided clock of CLK_HF0 (\ref group_sysclk_clk_hf "HF Clocks").
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is the source clock for the \ref group_sysclk_clk_slow, and most active domain
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   peripheral clocks (\ref group_sysclk_clk_peripheral). A divider value of 1~256 
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can be used to further divide the CLK_HF[0] to a desired clock speed for the peripherals.
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri.png)
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peri_funcs  Functions
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peripheral  Peripherals Clock Dividers
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   There are multiple peripheral clock dividers that, in effect, create 
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   multiple separate peripheral clocks. The available dividers vary per device 
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   series. As an example, for the PSoC 63 series there are 29 dividers:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 12


 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - eight 8-bit dividers
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - sixteen 16-bit dividers
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - four fractional 16.5-bit dividers (16 integer bits, 5 fractional bits)
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - one fractional 24.5-bit divider (24 integer bits, 5 fractional bits)
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The 8-bit and 16-bit dividers are integer dividers. A divider value of 1 
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   means the output frequency matches the input frequency (that is, there is
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   no change). Otherwise the frequency is divided by the value of the divider.
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   For example, if the input frequency is 50 MHz, and the divider is value 10,
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the output frequency is 5 MHz.
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The five fractional bits supports further precision in 1/32nd increments. For
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   example, a divider with an integer value of 3 and a fractional value of
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4 (4/32) results in a divider of 3.125. Fractional dividers are useful when
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a high-precision clock is required, for example, for a UART/SPI serial
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   interface.
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri_divs.png)
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each peripheral can connect to any one of the programmable dividers. A
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   particular peripheral clock divider can drive multiple peripherals.
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver also supports phase aligning two peripheral clock dividers using
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PeriphEnablePhaseAlignDivider(). Alignment works for both integer
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and fractional dividers. The divider to which a second divider is aligned
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   must already be enabled.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_funcs Functions
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_enums Enumerated Types
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_slow        Slow Clock
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The slow clock is the source clock for the "slow" processor (e.g. Cortex-M0+ in PSoC 6).
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is a divided version of the \ref group_sysclk_clk_peri, which in turn is 
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a divided version of CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks"). A divider 
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   value of 1~256 can be used to further divide the Peri clock to a desired clock speed
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for the processor.
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_slow.png)
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_slow_funcs  Functions
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_lf          Low-Frequency Clock
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock is the source clock for the \ref group_mcwdt
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and can be the source clock for \ref group_sysclk_clk_bak, which drives the
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_rtc.
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock has three possible source clocks:
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", and
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO".
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_lf.png)
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_funcs    Functions
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 13


 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_enums    Enumerated Types
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_timer       Timer Clock
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock can be a source for the alternative clock driving 
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the \ref group_arm_system_timer. It can also be used as a reference clock 
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for a counter in the \ref group_energy_profiler "Energy Profiler".
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock is a divided clock of either the IMO or CLK_HF[0]
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_clk_hf "HF Clocks").
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_funcs Functions
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_enums Enumerated Types
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_pump        Pump Clock
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The pump clock is a clock source used to provide analog precision in low voltage
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   applications. Depending on the usage scenario, it may be required to drive the
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   internal voltage pump for the Continuous Time Block mini (CTBm) in the analog 
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   subsystem. The pump clock is a divided clock of one of the clock paths 
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_path_src).
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_funcs  Functions
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_enums  Enumerated Types
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_bak         Backup Domain Clock
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The backup domain clock drives the \ref group_rtc.
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock has two possible source clocks: \ref group_sysclk_wco "WCO"
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   or the \ref group_sysclk_clk_lf. In turn the low frequency clock is sourced by
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", or
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO". Typically the ILO is not suitable as an RTC source,
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because of its low accuracy. However the ILO does operate in hibernate mode and
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   may be used as an alternative to the WCO with a tradeoff in precision.
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_funcs   Functions
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_enums   Enumerated Types
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if !defined(CY_SYSCLK_H)
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_H
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include <stdbool.h>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device.h"
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device_headers.h"
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syslib.h"
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syspm.h"
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if defined(__cplusplus)
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** extern "C" {
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* __cplusplus */
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 14


 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver major version */
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MAJOR   1
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver minor version */
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MINOR   20
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Sysclk driver identifier */
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ID   CY_PDL_DRV_ID(0x12U)
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_returns
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines general-purpose function return values. */
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_SUCCESS       = 0u, /**< Command completed with no errors */
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAD_PARAM     = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 1U), /**< Invalid function inpu
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_TIMEOUT       = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 2U), /**< Timeout occurred */
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_INVALID_STATE = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 3U)  /**< Clock is in an invali
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_sysclk_status_t;
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_returns */
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond INTERNAL */
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding to the nearest integer. a and b must have the same sign. */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUND(a, b) (((a) + ((b) / 2u)) / (b))
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding up if remainder != 0. a and b must both be positive. */
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUNDUP(a, b) ((((a) - 1U) / (b)) + 1U)
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ECO SECTION    ============================ */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ecostatus ECO status
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Constants used for expressing ECO status.
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_AMPLITUDE  0UL /**< \brief ECO does not have sufficient amplitude */
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_INACCURATE 1UL /**< \brief ECO may not be meeting accuracy and duty cycle
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_STABLE     2UL /**< \brief ECO has fully stabilized */
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} */
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_eco_funcs
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 15


 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoConfigure(uint32_t freq, uint32_t cLoad, uint32_t esr, uint32_t 
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoEnable(uint32_t timeoutus);
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void);
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void);
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoDisable
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the external crystal oscillator (ECO). This function should not be
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * called if the ECO is sourcing clkHf[0].
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_EcoDisable
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void)
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ECO_CONFIG &= (uint32_t)~_VAL2FLD(SRSS_CLK_ECO_CONFIG_ECO_EN, 1U); /* 0 = disable */
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoGetStatus
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current status of the external crystal oscillator (ECO).
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_AMPLITUDE = ECO does not have sufficient amplitude<br>
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_INACCURATE = ECO has sufficient amplitude but may not be meeting accuracy and d
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_STABLE = ECO has fully stabilized
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_EcoGetStatus
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void)
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal = (SRSS_CLK_ECO_STATUS & (SRSS_CLK_ECO_STATUS_ECO_OK_Msk | SRSS_CLK_ECO_STATUS_
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* if ECO is not ready, just report the ECO_OK bit. Otherwise report 2 = ECO ready */
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((0UL == (retVal & SRSS_CLK_ECO_STATUS_ECO_READY_Msk)) ? retVal : CY_SYSCLK_ECOSTAT_STAB
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_eco_funcs */
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    INPUT MULTIPLEXER SECTION    ===================== */
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_enums
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Input multiplexer clock sources
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 16


 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_IMO    =     0U, /**< Select the IMO as the output of the path mux */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_EXT    =     1U, /**< Select the EXT as the output of the path mux */
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ECO    =     2U, /**< Select the ECO as the output of the path mux */
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTHF  =     3U, /**< Select the ALTHF as the output of the path mux.
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTHF clock source is available on use
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSIMUX =     4U, /**< Select the DSI MUX output as the output of the path 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSI    = 0x100U, /**< Select a DSI signal (0 - 15) as the output of the DS
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the DSI clock sources are available on use
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ILO    = 0x110U, /**< Select the ILO (16) as the output of the DSI mux and
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_WCO    = 0x111U, /**< Select the WCO (17) as the output of the DSI mux and
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTLF  = 0x112U, /**< Select the ALTLF (18) as the output of the DSI mux a
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTLF clock sources in available on us
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_PILO   = 0x113U  /**< Select the PILO (19) as the output of the DSI mux an
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the PILO clock sources in available on use
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpath_in_sources_t;
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_enums */
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_funcs
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_ClkPathSetSource(uint32_t clkPath, cy_en_clkpath_in_sources_t sourc
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_clkpath_in_sources_t Cy_SysClk_ClkPathGetSource(uint32_t clkPath);
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_funcs */
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    FLL SECTION    ============================ */
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_enums
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL and PLL output mode.
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_FLL_CONFIG3 and CLK_PLL_CONFIG0, bits BYPASS_SEL.
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO   = 0U, /**< Output FLL/PLL input source when not locked, and FLL/
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO1  = 1U, /**< Same as AUTO */
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_INPUT  = 2U, /**< Output FLL/PLL input source regardless of lock status
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT = 3U  /**< Output FLL/PLL output regardless of lock status. This
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_pll_output_mode_t;
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL current-controlled oscillator (CCO) frequency ranges.
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See register CLK_FLL_CONFIG4, bits CCO_RANGE.
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE0, /**< Target frequency is in range  48 -  64 MHz. */
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE1, /**< Target frequency is in range  64 -  85 MHz. */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE2, /**< Target frequency is in range  85 - 113 MHz. */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 17


 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE3, /**< Target frequency is in range 113 - 150 MHz. */
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE4  /**< Target frequency is in range 150 - 200 MHz. */
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_cco_ranges_t;
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_enums */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_structs
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of FLL.
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    fllMult;         /**< CLK_FLL_CONFIG  register, FLL_MULT bits */
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    refDiv;          /**< CLK_FLL_CONFIG2 register, FLL_REF_DIV bits */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_cco_ranges_t      ccoRange;        /**< CLK_FLL_CONFIG4 register, CCO_RANGE bits */
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        enableOutputDiv; /**< CLK_FLL_CONFIG  register, FLL_OUTPUT_DIV bit 
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    lockTolerance;   /**< CLK_FLL_CONFIG2 register, LOCK_TOL bits */
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     igain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_IGAIN bits *
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     pgain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_PGAIN bits *
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    settlingCount;   /**< CLK_FLL_CONFIG3 register, SETTLING_COUNT bits
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;      /**< CLK_FLL_CONFIG3 register, BYPASS_SEL bits */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    cco_Freq;        /**< CLK_FLL_CONFIG4 register, CCO_FREQ bits */
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_fll_manual_config_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_structs */
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_funcs
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllConfigure(uint32_t inputFreq, uint32_t outputFreq, cy_en_fll_pll
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllManualConfigure(const cy_stc_fll_manual_config_t *config);
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** void Cy_SysClk_FllGetConfiguration(cy_stc_fll_manual_config_t *config);
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllEnable(uint32_t timeoutus);
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void);
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void);
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllLocked
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether the FLL is locked first time during FLL starting.
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Intended to be used with \ref Cy_SysClk_FllEnable with zero timeout.
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The unlock occurrence may appear during FLL normal operation, so this function 
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * is not recommended to check the FLL normal operation stability.
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_FllLocked
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void)
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 18


 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_FLL_STATUS_LOCKED, SRSS_CLK_FLL_STATUS));
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllDisable
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the FLL and the CCO.
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the FLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_FllDisable
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void)
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_FLL_CONFIG3, SRSS_CLK_FLL_CONFIG3_BYPASS_SEL, CY_SYSCLK_FLLPLL_OUTPUT
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG  &= ~SRSS_CLK_FLL_CONFIG_FLL_ENABLE_Msk;
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG4 &= ~SRSS_CLK_FLL_CONFIG4_CCO_ENABLE_Msk;
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return CY_SYSCLK_SUCCESS;
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_funcs */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PLL SECTION    ============================ */
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_structs
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for configuration of a PLL.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    inputFreq;  /**< frequency of PLL source, in Hz */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    outputFreq; /**< frequency of PLL output, in Hz */
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;     /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode; /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_config_t;
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of a PLL.
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     feedbackDiv;  /**< CLK_PLL_CONFIG register, FEEDBACK_DIV (P) bits *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 19


 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     referenceDiv; /**< CLK_PLL_CONFIG register, REFERENCE_DIV (Q) bits 
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     outputDiv;    /**< CLK_PLL_CONFIG register, OUTPUT_DIV bits */
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;       /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;   /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_manual_config_t;
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_structs */
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_funcs
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllConfigure(uint32_t clkPath, const cy_stc_pll_config_t *config);
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllManualConfigure(uint32_t clkPath, const cy_stc_pll_manual_config
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllGetConfiguration(uint32_t clkPath, cy_stc_pll_manual_config_t *c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllEnable(uint32_t clkPath, uint32_t timeoutus);
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath);
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath);
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath);
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLocked
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL is locked.
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PllLocked
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath)
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_PLL_STATUS_LOCKED, SRSS_CLK_PLL_STATUS[clkPath]));
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLostLock
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL lost its lock since the last time this
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * function was called. Clears the lost lock indicator.
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = did not lose lock<br>
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = lost lock
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PllLostLock
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 20


 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath)
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = _FLD2BOOL(SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED, SRSS_CLK_PLL_STATUS[clkPath]);
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* write a 1 to clear the unlock occurred bit */
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PLL_STATUS[clkPath] = SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED_Msk;
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllDisable
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected PLL.
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to disable. 1 is the first PLL; 0 is invalid.
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - PLL successfully disabled<br>
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_BAD_PARAM - invalid clock path number
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is increasing.
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PllDisable
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath)
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkPath < CY_SRSS_NUM_PLL)
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* First bypass PLL */
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_PLL_CONFIG[clkPath], SRSS_CLK_PLL_CONFIG_BYPASS_SEL, CY_SYSCLK_FL
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* Wait at least 6 PLL clock cycles */
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* And now disable the PLL itself */
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_PLL_CONFIG[clkPath] &= ~SRSS_CLK_PLL_CONFIG_ENABLE_Msk;
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_funcs */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 21


 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ILO SECTION    ============================ */
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_ilo_funcs
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void);
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void);
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on);
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloEnable
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the ILO.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_IloEnable
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void)
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ILO_CONFIG |= SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloDisable
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the ILO. ILO can't be disabled if WDT is enabled.
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - ILO successfully disabled<br>
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_INVALID_STATE - Cannot disable the ILO if the WDT is enabled.
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not call this function if the WDT is enabled, because the WDT is clocked by
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the ILO.
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_IloDisable
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void)
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_INVALID_STATE;
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (!_FLD2BOOL(SRSS_WDT_CTL_WDT_EN, SRSS_WDT_CTL)) /* if disabled */
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ILO_CONFIG &= ~SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return retVal;
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 22


1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloHibernateOn
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Controls whether the ILO stays on during a hibernate, or through an XRES or
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * brown-out detect (BOD) event.
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param on
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = ILO stays on during hibernate or across XRES/BOD.<br> 
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = ILO turns off for hibernate or XRES/BOD.
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Writes to the register/bit are ignored if the watchdog (WDT) is locked.
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_IloHibernateOn
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on)
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_ILO_CONFIG, SRSS_CLK_ILO_CONFIG_ILO_BACKUP, (uint32_t)on);
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_ilo_funcs */
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PILO SECTION    =========================== */
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pilo_funcs
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void);
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void);
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal);
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void);
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloEnable
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the PILO. 
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function blocks for 1 millisecond between enabling the PILO and 
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * releasing the PILO reset.
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PiloEnable
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void)
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_EN, 1U); /* 1 = enable */
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     Cy_SysLib_Delay(1U/*msec*/);
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* release the reset and enable clock output */
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 23


1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk;
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloDisable
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the PILO.
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PiloDisable
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void)
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* Clear PILO_EN, PILO_RESET_N, and PILO_CLK_EN bitfields. This disables the
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****        PILO and holds the PILO in a reset state. */
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG &= (uint32_t)~(SRSS_CLK_PILO_CONFIG_PILO_EN_Msk      |
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk);
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloSetTrim
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the PILO trim bits, which adjusts the PILO frequency. This is typically
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * done after measuring the PILO frequency; see \ref Cy_SysClk_StartClkMeasurementCounters().
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PiloSetTrim
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal)
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_PILO_CONFIG, SRSS_CLK_PILO_CONFIG_PILO_FFREQ, trimVal);
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloGetTrim
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current PILO trim bits value.
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_PiloSetTrim() function usage.
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void)
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2VAL(SRSS_CLK_PILO_CONFIG_PILO_FFREQ, SRSS_CLK_PILO_CONFIG));
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pilo_funcs */
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    CLOCK MEASUREMENT SECTION    ===================== */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 24


1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_enums
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines all possible clock sources. */
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_NC =            0U,
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ILO =           1U,
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_WCO =           2U,
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_BAK =           3U,
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTLF =         4U,
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LFCLK =         5U,
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_IMO =           6U,
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PILO =          8U,
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_FAST_CLKS =     0x100U,
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ECO =           0x101U,
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_EXT =           0x102U,
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTHF =         0x103U,
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_TIMERCLK =      0x104U,
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH_CLKS =     0x500U,
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH0 =         0x500U,
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH1 =         0x501U,
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH2 =         0x502U,
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH3 =         0x503U,
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH4 =         0x504U,
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH5 =         0x505U,
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH6 =         0x506U,
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH7 =         0x507U,
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH8 =         0x508U,
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH9 =         0x509U,
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH10 =        0x50AU,
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH11 =        0x50BU,
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH12 =        0x50CU,
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH13 =        0x50DU,
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH14 =        0x50EU,
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH15 =        0x50FU,
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHFS =        0x600U,
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF0 =        0x600U,
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF1 =        0x601U,
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF2 =        0x602U,
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF3 =        0x603U,
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF4 =        0x604U,
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF5 =        0x605U,
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF6 =        0x606U,
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF7 =        0x607U,
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF8 =        0x608U,
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF9 =        0x609U,
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF10 =       0x60AU,
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF11 =       0x60BU,
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF12 =       0x60CU,
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF13 =       0x60DU,
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF14 =       0x60EU,
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF15 =       0x60FU,
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LAST_CLK =      0x610U
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_meas_clks_t;
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 25


1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_enums */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_funcs
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_StartClkMeasurementCounters(cy_en_meas_clks_t clock1, uint32_t coun
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void);
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_ClkMeasurementCountersGetFreq(bool measuredClock, uint32_t refClkFreq);
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkMeasurementCountersDone
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Checks if clock measurement counting is done, that is, counter1 has counted down
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to zero. Call \ref Cy_SysClk_StartClkMeasurementCounters() before calling this function.
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Status of calibration counters:<br>
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = done<br>
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not done
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_StartClkMeasurementCounters() function usage.
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void)
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_CAL_CNT1_CAL_COUNTER_DONE, SRSS_CLK_CAL_CNT1));
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_funcs */
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    TRIM SECTION    ============================ */
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_trim_funcs
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_IloTrim(uint32_t iloFreq);
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_PiloTrim(uint32_t piloFreq);
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_trim_funcs */
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ======================    POWER MANAGEMENT SECTION    ==================== */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pm_funcs
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_syspm_status_t Cy_SysClk_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pm_funcs */
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    WCO SECTION    ============================ */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 26


1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_enums
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO bypass modes */
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_NOT_BYPASSED = 0u, /**< WCO is not bypassed crystal is used */
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_BYPASSED = 1U      /**< WCO is bypassed external clock must be supplied  on XTAL 
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_bypass_modes_t;
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO CSV supervisor clock selections */
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ILO,   /**< WCO CSV supervisor clock source is the ILO */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ALTLF, /**< WCO CSV supervisor clock source is the alternate low-f
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_PILO   /**< WCO CSV supervisor clock source is the PILO */
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_csv_supervisor_clock_t;
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor clock loss window. There must be one clock of the supervised
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock within this many clocks of the supervising clock.
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_CSV_HF_CTL and CLK_CSV_WCO_CTL, bitfield CSV_LOSS_WINDOW.
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_4_CYCLES =   0u, /**< 1 clock must be seen within 4 cycles of the supervisin
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_8_CYCLES =   1U, /**< 1 clock must be seen within 8 cycles of the supervisin
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_16_CYCLES =  2u, /**< 1 clock must be seen within 16 cycles of the supervisi
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_32_CYCLES =  3u, /**< 1 clock must be seen within 32 cycles of the supervisi
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_64_CYCLES =  4u, /**< 1 clock must be seen within 64 cycles of the supervisi
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_128_CYCLES = 5u, /**< 1 clock must be seen within 128 cycles of the supervis
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_256_CYCLES = 6u, /**< 1 clock must be seen within 256 cycles of the supervis
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_512_CYCLES = 7u  /**< 1 clock must be seen within 512 cycles of the supervis
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_loss_window_t;
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor error actions. See register CLK_CSV_HF_CTL[CSV_FREQ_ACTION and CSV_LOSS_ACTION].
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_IGNORE = 0u,     /**< Ignore the error reported by the clock supervisor. */
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT = 1U,      /**< Trigger a fault when an error is reported by the cloc
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_RESET = 2u,      /**< Trigger a reset when an error is reported by the cloc
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT_RESET = 3u /**< Trigger a fault then reset when an error is reported 
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_error_actions_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_enums */
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_structs
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for the WCO.
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 27


1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_wco_csv_supervisor_clock_t supervisorClock; /**< supervisor clock selection */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                         /**< 1= enabled, 0= disabled. Note that if lo
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;               /**< \ref cy_en_csv_loss_window_t */
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;             /**< \ref cy_en_csv_error_actions_t */
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_wco_csv_config_t;
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_structs */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_funcs
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoEnable
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the WCO.
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param timeoutus amount of time in microseconds to wait for the WCO to be ready.
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * If WCO is not ready, WCO is stopped. To avoid waiting for WCO ready set this to 0,
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and manually check if WCO is okay using \ref Cy_SysClk_WcoOkay.
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - WCO successfully enabled<br>
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_TIMEOUT - Timeout waiting for WCO to stabilize
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoEnable
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus)
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t rtnval = CY_SYSCLK_TIMEOUT;
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* first set the WCO enable bit */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL |= BACKUP_CTL_WCO_EN_Msk;
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* now do the timeout wait for STATUS, bit WCO_OK */
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     for (; (Cy_SysClk_WcoOkay() == false) && (0UL != timeoutus); timeoutus--)
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (0UL != timeoutus)
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         rtnval = CY_SYSCLK_SUCCESS;
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (rtnval);
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 28


1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoOkay
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the status of the WCO_OK bit.
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = okay<br>
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not okay
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoOkay
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void)
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(BACKUP_STATUS_WCO_OK, BACKUP_STATUS));
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoDisable
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the WCO.
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoDisable
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void)
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL &= (uint32_t)~BACKUP_CTL_WCO_EN_Msk;
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoBypass
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets whether the WCO is bypassed or not. If it is bypassed, then a 32-kHz clock
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * must be provided on the wco_out pin.
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param bypass \ref cy_en_wco_bypass_modes_t
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoBypass
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass)
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_WCO_BYPASS, bypass);
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_funcs */
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clkHf[n] SECTION    ========================= */
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 29


1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_enums
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects which clkHf input, or root mux, to configure.
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See CLK_ROOT_SELECT registers, bits ROOT_MUX.
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetSource and \ref Cy_SysClk_ClkHfGetSource.
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH0  = 0U,  /**< clkHf input is Clock Path 0 */
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH1  = 1U,  /**< clkHf input is Clock Path 1 */
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH2  = 2U,  /**< clkHf input is Clock Path 2 */
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH3  = 3U,  /**< clkHf input is Clock Path 3 */
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH4  = 4U,  /**< clkHf input is Clock Path 4 */
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH5  = 5U,  /**< clkHf input is Clock Path 5 */
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH6  = 6U,  /**< clkHf input is Clock Path 6 */
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH7  = 7U,  /**< clkHf input is Clock Path 7 */
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH8  = 8U,  /**< clkHf input is Clock Path 8 */
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH9  = 9U,  /**< clkHf input is Clock Path 9 */
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH10 = 10U, /**< clkHf input is Clock Path 10 */
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH11 = 11U, /**< clkHf input is Clock Path 11 */
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH12 = 12U, /**< clkHf input is Clock Path 12 */
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH13 = 13U, /**< clkHf input is Clock Path 13 */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH14 = 14U, /**< clkHf input is Clock Path 14 */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH15 = 15U, /**< clkHf input is Clock Path 15 */
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_in_sources_t;
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf divider values. See CLK_ROOT_SELECT registers, bits ROOT_DIV.
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetDivider and \ref Cy_SysClk_ClkHfGetDivider.
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_NO_DIVIDE   = 0U,    /**< don't divide clkHf. */
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_2 = 1U,    /**< divide clkHf by 2 */
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_4 = 2U,    /**< divide clkHf by 4 */
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_8 = 3U     /**< divide clkHf by 8 */
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_dividers_t;
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf clock supervisor input sources. See register CLK_CSV_HF_CTL[CSV_MUX].
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_IMO   = 0U,  /**< Supervising clock is the IMO. */
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_EXT   = 1U,  /**< Supervising clock is the external clock */
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_ALTHF = 2U   /**< Supervising clock is clk_althf */
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_csv_supervisor_clock_t;
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_enums */
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_structs
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{SupervisingWindow
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 30


1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for clkHf.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_clkhf_csv_supervisor_clock_t supervisorClock; /**< \ref cy_en_clkhf_csv_supervisor_clock_
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t supervisingWindow;                         /**< Number of supervising clock cycles */
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableFrequencyFaultDetection;                 /**< 1= enabled, 0= disabled */
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyLowerLimit;                       /**< Lowest frequency in kHz that supervise
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyUpperLimit;                       /**< Highest frequency in kHz that supervis
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t frequencyAction;          /**< \ref cy_en_csv_error_actions_t */
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                           /**< 1= enabled, 0= disabled */
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;                 /**< \ref cy_en_csv_loss_window_t */
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;               /**< \ref cy_en_csv_error_actions_t */
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_clkhf_csv_config_t;
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_structs */
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_funcs
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf);
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf);
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf);
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf);
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfEnable
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected clkHf.
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfEnable
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf)
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkHf < CY_SRSS_NUM_HFROOT)
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] |= SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfDisable
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 31


1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected clkHf.
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note clkHf[0] cannot be disabled.
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfDisable
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf)
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((0UL < clkHf) /* prevent CLK_HF0 disabling */
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****            && (clkHf < CY_SRSS_NUM_HFROOT))
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] &= ~SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetSource
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects the source of the selected clkHf.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf mux to configure.
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkhf_in_sources_t
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (source <= CY_SYSCLK_CLKHF_IN_CLKPATH15))
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 32


1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_MUX, source);
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetSource
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source of the selected clkHf.
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to get the source of.
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_in_sources_t
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf)
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_in_sources_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_MUX, SRSS_CLK_ROOT_SELECT[
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetDivider
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the pre-divider for a clkHf.
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf divider to configure.
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkhf_dividers_t
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Also call \ref Cy_SysClk_ClkHfSetSource to set the clkHf source.
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 33


1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (divider <= CY_SYSCLK_CLKHF_DIVIDE_BY_8))
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_DIV, divider);
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetDivider
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the pre-divider value for a clkHf.
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to check divider of.
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_dividers_t
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf)
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_dividers_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_DIV, SRSS_CLK_ROOT_SELECT[cl
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_funcs */
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_fast SECTION    ========================= */
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_fast_funcs
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider);
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void);
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastSetDivider
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the fast clock, which sources the main processor.
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of this divider is clkHf[0].
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255.
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 34


1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is increasing.
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is decreasing.
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider)
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM4_CLOCK_CTL, CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, divider);
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastGetDivider
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider for the fast clock.
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value for the fast clock.
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void)
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, CPUSS_CM4_CLOCK_CTL));
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_fast_funcs */
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_peri SECTION    ========================== */
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peri_funcs
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider);
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void);
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriSetDivider
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the peripheral clock tree. All peripheral clock
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers are sourced from this clock. Also the Cortex M0+ clock divider is
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * sourced from this clock. The source of this divider is clkHf[0]
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 35


1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider)
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, divider);
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriGetDivider
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider of the peripheral (peri) clock.
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void)
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, CPUSS_CM0_CLOCK_CTL));
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peri_funcs */
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =====================    clk_peripherals SECTION    ====================== */
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_enums
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Programmable clock divider types */
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_8_BIT    = 0U, /**< Divider Type is an 8 bit divider */
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_BIT   = 1U, /**< Divider Type is a 16 bit divider */
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_5_BIT = 2U, /**< Divider Type is a 16.5 bit fractional divider */
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_24_5_BIT = 3U  /**< Divider Type is a 24.5 bit fractional divider */
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_divider_types_t;
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_enums */
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_funcs
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerT
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock, cy_en_div
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 36


1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock);
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerTy
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerT
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_PeriphGetFrequency(cy_en_divider_types_t dividerType, uint32_t dividerNum);
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetDivider
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This is only used for integer
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers. Use \ref Cy_SysClk_PeriphSetFracDivider for setting factional dividers.
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum the divider number.
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerValue divider value
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            uint32_t dividerNum, uint32_t dividerValue)
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_8_NR) &&
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_8_CTL[dividerNum], PERI_DIV_8_CTL_INT8_DIV, dividerValue);
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_16_BIT)
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_NR) &&
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_16_CTL_INT16_DIV_Msk >> PERI_DIV_16_CTL_INT16_DIV_Pos)))
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_CTL[dividerNum], PERI_DIV_16_CTL_INT16_DIV, dividerValue);
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 37


1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDivider
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the integer divider value for the specified divider. One works for
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * integer dividers. Use \ref Cy_SysClk_PeriphGetFracDivider to get the fractional
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider value
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal;
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(dividerType <= CY_SYSCLK_DIV_16_BIT);
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_8_NR);
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_8_CTL_INT8_DIV, PERI_DIV_8_CTL[dividerNum]);
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 16-bit divider */
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_NR);
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_16_CTL_INT16_DIV, PERI_DIV_16_CTL[dividerNum]);
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetFracDivider
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This function should only be used
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for fractional clock dividers.
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerIntValue the integer divider value
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 38


1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of the divider is peri_clk, which is a divided version of hf_clk[0].
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The divider value causes integer division of (divider value + 1), or division
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * by 1 to 65536 (16-bit divider) or 1 to 16777216 (24-bit divider).
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerFracValue the fraction part of the divider
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The fractional divider can be 1-32, thus it divides the clock by 1/32 for each
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * count. To divide the clock by 11/32nds set this value to 11.
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                uint32_t dividerIntValue, uint32_t dividerFracValue)
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_5_NR) &&
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_16_5_CTL_INT16_DIV_Msk >> PERI_DIV_16_5_CTL_INT16_DIV_Pos
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_16_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_16_5_CTL_FRAC5_DIV_Po
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_INT16_DIV, dividerInt
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_FRAC5_DIV, dividerFra
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_24_5_BIT)
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_24_5_NR) &&
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_24_5_CTL_INT24_DIV_Msk >> PERI_DIV_24_5_CTL_INT24_DIV_Pos
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_24_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_24_5_CTL_FRAC5_DIV_Po
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_INT24_DIV, dividerInt
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_FRAC5_DIV, dividerFra
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetFracDivider
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the integer and fractional parts of the divider
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 39


2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerIntValue pointer to return integer divider value
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerFracValue pointer to return fractional divider value
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return None. Loads pointed-to variables.
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                     uint32_t *dividerIntValue, uint32_t *dividerFra
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_16_5_BIT) || (dividerType == CY_SYSCLK_DIV_24_5_BIT
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  (dividerIntValue != NULL) && (dividerFracValue != NULL));
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_5_NR);
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_16_5_CTL_INT16_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_16_5_CTL_FRAC5_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 24.5-bit divider */
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_24_5_NR);
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_24_5_CTL_INT24_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_24_5_CTL_FRAC5_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphAssignDivider
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Assigns a programmable divider to a selected IP block, such as a TCPWM or SCB.
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock,
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               cy_en_divider_types_t dividerType, uint32_t dividerNu
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((CY_PERI_CLOCK_NR > (uint32_t)ipBlock) && (CY_SYSCLK_DIV_24_5_BIT >= dividerType))
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 40


2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_CLOCK_CTL[ipBlock] = _VAL2FLD(CY_PERI_CLOCK_CTL_TYPE_SEL, dividerType) |
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                       _VAL2FLD(CY_PERI_CLOCK_CTL_DIV_SEL, dividerNum);
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetAssignedDivider
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports which clock divider is assigned to a selected IP block.
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider type and number, where bits [7:6] = type, bits[5:0] = divider
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * number within that type
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock)
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(CY_PERI_CLOCK_NR > (uint32_t)ipBlock);
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (PERI_CLOCK_CTL[ipBlock] & (CY_PERI_CLOCK_CTL_DIV_SEL_Msk | CY_PERI_CLOCK_CTL_TYPE_SEL_M
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnableDivider
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected divider.
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function also sets the phase alignment bits such that the enabled
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider is aligned to clk_peri. See \ref Cy_SysClk_PeriphDisableDivider()
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for information on how to phase-align a divider after it is enabled.
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphEnableDivider
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerType, uint32_t dividerNu
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 41


2116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider, make the reference = clk_peri, and enable the divider */
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk                         |
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (void)PERI_DIV_CMD; /* dummy read to handle buffered writes */
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphDisableDivider
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables a selected divider.
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphDisableDivider
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider and disable it */
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_DISABLE_Msk          |
  37              		.loc 2 2159 0
  38 0000 1E4B     		ldr	r3, .L4
  39              	.LBE22:
  40              	.LBE21:
  41              	.LBE20:
  42              		.loc 1 129 0
  43 0002 70B5     		push	{r4, r5, r6, lr}
  44              		.cfi_def_cfa_offset 16
  45              		.cfi_offset 4, -16
  46              		.cfi_offset 5, -12
  47              		.cfi_offset 6, -8
  48              		.cfi_offset 14, -4
  49              	.LBB29:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 42


  50              	.LBB26:
  51              	.LBB23:
  52              		.loc 2 2159 0
  53 0004 1B68     		ldr	r3, [r3]
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
  54              		.loc 2 2160 0
  55 0006 0221     		movs	r1, #2
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
  56              		.loc 2 2161 0
  57 0008 1D00     		movs	r5, r3
  58 000a 7035     		adds	r5, r5, #112
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
  59              		.loc 2 2160 0
  60 000c 2A78     		ldrb	r2, [r5]
  61              	.LBE23:
  62              	.LBE26:
  63              	.LBE29:
  64              		.loc 1 129 0
  65 000e 0400     		movs	r4, r0
  66              	.LBB30:
  67              	.LBB27:
  68              	.LBB24:
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
  69              		.loc 2 2160 0
  70 0010 1140     		ands	r1, r2
  71 0012 8022     		movs	r2, #128
  72 0014 D205     		lsls	r2, r2, #23
  73 0016 1143     		orrs	r1, r2
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
  74              		.loc 2 2159 0
  75 0018 8022     		movs	r2, #128
  76 001a 9E68     		ldr	r6, [r3, #8]
  77              	.LBE24:
  78              	.LBE27:
  79              	.LBE30:
 130:Generated_Source\PSoC6/ADC_1.c ****     bool deInitRouting = false;
 131:Generated_Source\PSoC6/ADC_1.c **** 
 132:Generated_Source\PSoC6/ADC_1.c ****     /* If there is an internal SAR clock, set up its divider values. */
 133:Generated_Source\PSoC6/ADC_1.c ****     #if (ADC_1_CLOCK_INTERNAL)
 134:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_Disable();
 135:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_SetDivider(config->clkDivider);
  80              		.loc 1 135 0
  81 001c 0069     		ldr	r0, [r0, #16]
  82              	.LVL1:
  83              	.LBB31:
  84              	.LBB28:
  85              	.LBB25:
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
  86              		.loc 2 2159 0
  87 001e D200     		lsls	r2, r2, #3
  88 0020 B150     		str	r1, [r6, r2]
  89              	.LVL2:
  90              	.LBE25:
  91              	.LBE28:
  92              	.LBE31:
  93              	.LBB32:
  94              	.LBB33:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 43


  95              	.LBB34:
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
  96              		.loc 2 1869 0
  97 0022 FF28     		cmp	r0, #255
  98 0024 0AD8     		bhi	.L2
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
  99              		.loc 2 1872 0
 100 0026 1A00     		movs	r2, r3
 101 0028 7432     		adds	r2, r2, #116
 102 002a 1288     		ldrh	r2, [r2]
 103 002c 0836     		adds	r6, r6, #8
 104 002e 9219     		adds	r2, r2, r6
 105 0030 1668     		ldr	r6, [r2]
 106 0032 1349     		ldr	r1, .L4+4
 107 0034 0002     		lsls	r0, r0, #8
 108              	.LVL3:
 109 0036 3140     		ands	r1, r6
 110 0038 0143     		orrs	r1, r0
 111 003a 1160     		str	r1, [r2]
 112              	.LVL4:
 113              	.L2:
 114              	.LBE34:
 115              	.LBE33:
 116              	.LBE32:
 117              	.LBB35:
 118              	.LBB36:
 119              	.LBB37:
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
 120              		.loc 2 2122 0
 121 003c 1A00     		movs	r2, r3
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 122              		.loc 2 2123 0
 123 003e 2E78     		ldrb	r6, [r5]
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
 124              		.loc 2 2124 0
 125 0040 0321     		movs	r1, #3
 126 0042 3500     		movs	r5, r6
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 127              		.loc 2 2121 0
 128 0044 9868     		ldr	r0, [r3, #8]
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
 129              		.loc 2 2122 0
 130 0046 7332     		adds	r2, r2, #115
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 131              		.loc 2 2123 0
 132 0048 7233     		adds	r3, r3, #114
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
 133              		.loc 2 2124 0
 134 004a 1278     		ldrb	r2, [r2]
 135 004c 1B78     		ldrb	r3, [r3]
 136 004e 9140     		lsls	r1, r1, r2
 137 0050 9D40     		lsls	r5, r5, r3
 138 0052 8023     		movs	r3, #128
 139 0054 2943     		orrs	r1, r5
 140 0056 1B06     		lsls	r3, r3, #24
 141 0058 1943     		orrs	r1, r3
 142 005a 0222     		movs	r2, #2
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 44


 143 005c 0B00     		movs	r3, r1
 144 005e 3240     		ands	r2, r6
 145 0060 1343     		orrs	r3, r2
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 146              		.loc 2 2121 0
 147 0062 8022     		movs	r2, #128
 148 0064 D200     		lsls	r2, r2, #3
 149 0066 8350     		str	r3, [r0, r2]
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 150              		.loc 2 2126 0
 151 0068 8358     		ldr	r3, [r0, r2]
 152              	.LVL5:
 153              	.LBE37:
 154              	.LBE36:
 155              	.LBE35:
 136:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_Enable();
 137:Generated_Source\PSoC6/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 138:Generated_Source\PSoC6/ADC_1.c **** 
 139:Generated_Source\PSoC6/ADC_1.c ****     /* Init SAR and MUX registers */
 140:Generated_Source\PSoC6/ADC_1.c ****     (void)Cy_SAR_DeInit(ADC_1_SAR__HW, deInitRouting);
 156              		.loc 1 140 0
 157 006a 0021     		movs	r1, #0
 158 006c 0548     		ldr	r0, .L4+8
 159 006e FFF7FEFF 		bl	Cy_SAR_DeInit
 160              	.LVL6:
 141:Generated_Source\PSoC6/ADC_1.c ****     (void)Cy_SAR_Init(ADC_1_SAR__HW, config->hwConfigStc);
 161              		.loc 1 141 0
 162 0072 A168     		ldr	r1, [r4, #8]
 163 0074 0348     		ldr	r0, .L4+8
 164 0076 FFF7FEFF 		bl	Cy_SAR_Init
 165              	.LVL7:
 142:Generated_Source\PSoC6/ADC_1.c **** 
 143:Generated_Source\PSoC6/ADC_1.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 144:Generated_Source\PSoC6/ADC_1.c ****     if(1uL == ADC_1_MUX_SWITCH0_INIT)
 145:Generated_Source\PSoC6/ADC_1.c ****     {
 146:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_SetVssaVminusSwitch(ADC_1_SAR__HW, CY_SAR_SWITCH_CLOSE);
 147:Generated_Source\PSoC6/ADC_1.c **** 
 148:Generated_Source\PSoC6/ADC_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 149:Generated_Source\PSoC6/ADC_1.c ****         if(1uL < config->numChannels)
 150:Generated_Source\PSoC6/ADC_1.c ****         {
 151:Generated_Source\PSoC6/ADC_1.c ****             Cy_SAR_SetVssaSarSeqCtrl(ADC_1_SAR__HW, CY_SAR_SWITCH_SEQ_CTRL_ENABLE);
 152:Generated_Source\PSoC6/ADC_1.c ****         }
 153:Generated_Source\PSoC6/ADC_1.c ****     }
 154:Generated_Source\PSoC6/ADC_1.c **** 
 155:Generated_Source\PSoC6/ADC_1.c ****     return;
 156:Generated_Source\PSoC6/ADC_1.c **** }
 166              		.loc 1 156 0
 167              		@ sp needed
 168              	.LVL8:
 169 007a 70BD     		pop	{r4, r5, r6, pc}
 170              	.L5:
 171              		.align	2
 172              	.L4:
 173 007c 00000000 		.word	cy_device
 174 0080 FF00FFFF 		.word	-65281
 175 0084 00001D41 		.word	1092419584
 176              		.cfi_endproc
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 45


 177              	.LFE188:
 178              		.size	ADC_1_InitConfig, .-ADC_1_InitConfig
 179              		.section	.text.ADC_1_StartConvert,"ax",%progbits
 180              		.align	1
 181              		.global	ADC_1_StartConvert
 182              		.code	16
 183              		.thumb_func
 184              		.type	ADC_1_StartConvert, %function
 185              	ADC_1_StartConvert:
 186              	.LFB190:
 157:Generated_Source\PSoC6/ADC_1.c **** 
 158:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 159:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SelectConfig
 160:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 161:Generated_Source\PSoC6/ADC_1.c **** *
 162:Generated_Source\PSoC6/ADC_1.c **** * \brief Selects the predefined configuration for scanning.
 163:Generated_Source\PSoC6/ADC_1.c **** *
 164:Generated_Source\PSoC6/ADC_1.c **** * \param config Number of configuration in the ADC_1.
 165:Generated_Source\PSoC6/ADC_1.c **** *
 166:Generated_Source\PSoC6/ADC_1.c **** * \param restart Set to 1u if the ADC_1 should be  restarted after
 167:Generated_Source\PSoC6/ADC_1.c **** * selecting the configuration.
 168:Generated_Source\PSoC6/ADC_1.c **** *
 169:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 170:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SelectConfig(uint32_t config, uint32_t restart)
 171:Generated_Source\PSoC6/ADC_1.c **** {
 172:Generated_Source\PSoC6/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 173:Generated_Source\PSoC6/ADC_1.c ****     if(ADC_1_TOTAL_CONFIGS > config)
 174:Generated_Source\PSoC6/ADC_1.c ****     {
 175:Generated_Source\PSoC6/ADC_1.c ****         /* Stop the ADC before changing configurations */
 176:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_Stop();
 177:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_selected = 1u;
 178:Generated_Source\PSoC6/ADC_1.c **** 
 179:Generated_Source\PSoC6/ADC_1.c ****         if(0u == ADC_1_initVar)
 180:Generated_Source\PSoC6/ADC_1.c ****         {
 181:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_Init();
 182:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 183:Generated_Source\PSoC6/ADC_1.c ****         }
 184:Generated_Source\PSoC6/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 185:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_vrefAMux_DisconnectAll();
 186:Generated_Source\PSoC6/ADC_1.c ****         #endif
 187:Generated_Source\PSoC6/ADC_1.c **** 
 188:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_InitConfig(&ADC_1_allConfigs[config]);
 189:Generated_Source\PSoC6/ADC_1.c **** 
 190:Generated_Source\PSoC6/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 191:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_vrefAMux_Select((uint8)config);
 192:Generated_Source\PSoC6/ADC_1.c ****         #endif
 193:Generated_Source\PSoC6/ADC_1.c **** 
 194:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_currentConfig = config;
 195:Generated_Source\PSoC6/ADC_1.c **** 
 196:Generated_Source\PSoC6/ADC_1.c ****         if(1u == restart)
 197:Generated_Source\PSoC6/ADC_1.c ****         {
 198:Generated_Source\PSoC6/ADC_1.c ****             /* Restart the ADC */
 199:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_Start();
 200:Generated_Source\PSoC6/ADC_1.c **** 
 201:Generated_Source\PSoC6/ADC_1.c ****             /* Restart the scan */
 202:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_StartConvert();
 203:Generated_Source\PSoC6/ADC_1.c ****         }
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 46


 204:Generated_Source\PSoC6/ADC_1.c ****     }
 205:Generated_Source\PSoC6/ADC_1.c ****     return;
 206:Generated_Source\PSoC6/ADC_1.c **** }
 207:Generated_Source\PSoC6/ADC_1.c **** 
 208:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 209:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_StartConvert
 210:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 211:Generated_Source\PSoC6/ADC_1.c **** *
 212:Generated_Source\PSoC6/ADC_1.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 213:Generated_Source\PSoC6/ADC_1.c **** * continuously.
 214:Generated_Source\PSoC6/ADC_1.c **** 
 215:Generated_Source\PSoC6/ADC_1.c **** * In Single Shot mode, the function triggers a single scan and
 216:Generated_Source\PSoC6/ADC_1.c **** * every scan requires a call of this function. The mode is set with the
 217:Generated_Source\PSoC6/ADC_1.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 218:Generated_Source\PSoC6/ADC_1.c **** * overridden at run time with the ADC_1_SetConvertMode() function.
 219:Generated_Source\PSoC6/ADC_1.c **** *
 220:Generated_Source\PSoC6/ADC_1.c **** * \param None
 221:Generated_Source\PSoC6/ADC_1.c **** *
 222:Generated_Source\PSoC6/ADC_1.c **** * \return None
 223:Generated_Source\PSoC6/ADC_1.c **** *
 224:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 225:Generated_Source\PSoC6/ADC_1.c **** *
 226:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 227:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_StartConvert(void)
 228:Generated_Source\PSoC6/ADC_1.c **** {
 187              		.loc 1 228 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 229:Generated_Source\PSoC6/ADC_1.c ****     if (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk == (ADC_1_SAR__HW->SAMPLE_CTRL & SAR_SAMPLE_CTRL_DSI_
 191              		.loc 1 229 0
 192 0000 8023     		movs	r3, #128
 193 0002 0548     		ldr	r0, .L9
 194 0004 DB02     		lsls	r3, r3, #11
 195 0006 4168     		ldr	r1, [r0, #4]
 228:Generated_Source\PSoC6/ADC_1.c ****     if (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk == (ADC_1_SAR__HW->SAMPLE_CTRL & SAR_SAMPLE_CTRL_DSI_
 196              		.loc 1 228 0
 197 0008 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201              		.loc 1 229 0
 202 000a 1940     		ands	r1, r3
 203 000c 00D0     		beq	.L7
 204              	.LBB40:
 205              	.LBB41:
 230:Generated_Source\PSoC6/ADC_1.c ****     {
 231:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_StartConvert(ADC_1_SAR__HW, CY_SAR_START_CONVERT_CONTINUOUS);
 206              		.loc 1 231 0
 207 000e 0121     		movs	r1, #1
 208              	.L7:
 209              	.LBE41:
 210              	.LBE40:
 232:Generated_Source\PSoC6/ADC_1.c ****     }
 233:Generated_Source\PSoC6/ADC_1.c ****     else
 234:Generated_Source\PSoC6/ADC_1.c ****     {
 235:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_StartConvert(ADC_1_SAR__HW, CY_SAR_START_CONVERT_SINGLE_SHOT);
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 47


 211              		.loc 1 235 0
 212 0010 FFF7FEFF 		bl	Cy_SAR_StartConvert
 213              	.LVL9:
 236:Generated_Source\PSoC6/ADC_1.c ****     }
 237:Generated_Source\PSoC6/ADC_1.c **** }
 214              		.loc 1 237 0
 215              		@ sp needed
 216 0014 10BD     		pop	{r4, pc}
 217              	.L10:
 218 0016 C046     		.align	2
 219              	.L9:
 220 0018 00001D41 		.word	1092419584
 221              		.cfi_endproc
 222              	.LFE190:
 223              		.size	ADC_1_StartConvert, .-ADC_1_StartConvert
 224              		.section	.text.ADC_1_SetConvertMode,"ax",%progbits
 225              		.align	1
 226              		.global	ADC_1_SetConvertMode
 227              		.code	16
 228              		.thumb_func
 229              		.type	ADC_1_SetConvertMode, %function
 230              	ADC_1_SetConvertMode:
 231              	.LFB191:
 238:Generated_Source\PSoC6/ADC_1.c **** 
 239:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 240:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetConvertMode
 241:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 242:Generated_Source\PSoC6/ADC_1.c **** *
 243:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 244:Generated_Source\PSoC6/ADC_1.c **** * function overrides the settings applied in the customizer. Changing
 245:Generated_Source\PSoC6/ADC_1.c **** * configurations will restore the values set in the customizer.
 246:Generated_Source\PSoC6/ADC_1.c **** *
 247:Generated_Source\PSoC6/ADC_1.c **** * \param mode Sets the conversion mode.
 248:Generated_Source\PSoC6/ADC_1.c **** *
 249:Generated_Source\PSoC6/ADC_1.c **** * \return None
 250:Generated_Source\PSoC6/ADC_1.c **** *
 251:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 252:Generated_Source\PSoC6/ADC_1.c **** *
 253:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 254:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetConvertMode(cy_en_sar_start_convert_sel_t mode)
 255:Generated_Source\PSoC6/ADC_1.c **** {
 232              		.loc 1 255 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237              	.LVL10:
 238 0000 064B     		ldr	r3, .L17
 256:Generated_Source\PSoC6/ADC_1.c ****     switch(mode)
 239              		.loc 1 256 0
 240 0002 0128     		cmp	r0, #1
 241 0004 04D1     		bne	.L15
 257:Generated_Source\PSoC6/ADC_1.c ****     {
 258:Generated_Source\PSoC6/ADC_1.c ****     case CY_SAR_START_CONVERT_CONTINUOUS:
 259:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_SAR__HW->SAMPLE_CTRL |= SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 242              		.loc 1 259 0
 243 0006 8021     		movs	r1, #128
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 48


 244 0008 5A68     		ldr	r2, [r3, #4]
 245 000a C902     		lsls	r1, r1, #11
 246 000c 0A43     		orrs	r2, r1
 247 000e 02E0     		b	.L16
 248              	.L15:
 260:Generated_Source\PSoC6/ADC_1.c ****         break;
 261:Generated_Source\PSoC6/ADC_1.c ****     case CY_SAR_START_CONVERT_SINGLE_SHOT:
 262:Generated_Source\PSoC6/ADC_1.c ****     default:
 263:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_SAR__HW->SAMPLE_CTRL &= ~SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 249              		.loc 1 263 0
 250 0010 5968     		ldr	r1, [r3, #4]
 251 0012 034A     		ldr	r2, .L17+4
 252 0014 0A40     		ands	r2, r1
 253              	.L16:
 254 0016 5A60     		str	r2, [r3, #4]
 264:Generated_Source\PSoC6/ADC_1.c ****         break;
 265:Generated_Source\PSoC6/ADC_1.c ****     }
 266:Generated_Source\PSoC6/ADC_1.c **** }
 255              		.loc 1 266 0
 256              		@ sp needed
 257 0018 7047     		bx	lr
 258              	.L18:
 259 001a C046     		.align	2
 260              	.L17:
 261 001c 00001D41 		.word	1092419584
 262 0020 FFFFFBFF 		.word	-262145
 263              		.cfi_endproc
 264              	.LFE191:
 265              		.size	ADC_1_SetConvertMode, .-ADC_1_SetConvertMode
 266              		.section	.text.ADC_1_IRQ_Enable,"ax",%progbits
 267              		.align	1
 268              		.global	ADC_1_IRQ_Enable
 269              		.code	16
 270              		.thumb_func
 271              		.type	ADC_1_IRQ_Enable, %function
 272              	ADC_1_IRQ_Enable:
 273              	.LFB201:
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 278              		@ sp needed
 279 0000 7047     		bx	lr
 280              		.cfi_endproc
 281              	.LFE201:
 282              		.size	ADC_1_IRQ_Enable, .-ADC_1_IRQ_Enable
 283              		.section	.text.ADC_1_IRQ_Disable,"ax",%progbits
 284              		.align	1
 285              		.global	ADC_1_IRQ_Disable
 286              		.code	16
 287              		.thumb_func
 288              		.type	ADC_1_IRQ_Disable, %function
 289              	ADC_1_IRQ_Disable:
 290              	.LFB193:
 267:Generated_Source\PSoC6/ADC_1.c **** 
 268:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 269:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IRQ_Enable
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 49


 270:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 271:Generated_Source\PSoC6/ADC_1.c **** *
 272:Generated_Source\PSoC6/ADC_1.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 273:Generated_Source\PSoC6/ADC_1.c **** * interrupts must also be enabled for the ADC_1 interrupts to occur.
 274:Generated_Source\PSoC6/ADC_1.c **** *
 275:Generated_Source\PSoC6/ADC_1.c **** * \param None
 276:Generated_Source\PSoC6/ADC_1.c **** *
 277:Generated_Source\PSoC6/ADC_1.c **** * \return None
 278:Generated_Source\PSoC6/ADC_1.c **** *
 279:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 280:Generated_Source\PSoC6/ADC_1.c **** *
 281:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 282:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_IRQ_Enable(void){
 283:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. */
 284:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 285:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 286:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 287:Generated_Source\PSoC6/ADC_1.c ****     #endif
 288:Generated_Source\PSoC6/ADC_1.c ****     #endif
 289:Generated_Source\PSoC6/ADC_1.c **** 
 290:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 291:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 292:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 293:Generated_Source\PSoC6/ADC_1.c ****     #endif
 294:Generated_Source\PSoC6/ADC_1.c ****     #endif
 295:Generated_Source\PSoC6/ADC_1.c **** }
 296:Generated_Source\PSoC6/ADC_1.c **** 
 297:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 298:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IRQ_Disable
 299:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 300:Generated_Source\PSoC6/ADC_1.c **** *
 301:Generated_Source\PSoC6/ADC_1.c **** * \brief Disables end of conversion interrupts.
 302:Generated_Source\PSoC6/ADC_1.c **** *
 303:Generated_Source\PSoC6/ADC_1.c **** * \param None
 304:Generated_Source\PSoC6/ADC_1.c **** *
 305:Generated_Source\PSoC6/ADC_1.c **** * \return None
 306:Generated_Source\PSoC6/ADC_1.c **** *
 307:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 308:Generated_Source\PSoC6/ADC_1.c **** *
 309:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 310:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_IRQ_Disable(void){
 291              		.loc 1 310 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 311:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. */
 312:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 313:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 314:Generated_Source\PSoC6/ADC_1.c ****         NVIC_DisableIRQ(ADC_1_IRQ_cfg.intrSrc);
 315:Generated_Source\PSoC6/ADC_1.c ****     #endif
 316:Generated_Source\PSoC6/ADC_1.c ****     #endif
 317:Generated_Source\PSoC6/ADC_1.c **** 
 318:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 319:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 320:Generated_Source\PSoC6/ADC_1.c ****         NVIC_DisableIRQ(ADC_1_IRQ_cfg.intrSrc);
 321:Generated_Source\PSoC6/ADC_1.c ****     #endif
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 50


 322:Generated_Source\PSoC6/ADC_1.c ****     #endif
 323:Generated_Source\PSoC6/ADC_1.c **** }
 296              		.loc 1 323 0
 297              		@ sp needed
 298 0000 7047     		bx	lr
 299              		.cfi_endproc
 300              	.LFE193:
 301              		.size	ADC_1_IRQ_Disable, .-ADC_1_IRQ_Disable
 302              		.section	.text.ADC_1_SetEosMask,"ax",%progbits
 303              		.align	1
 304              		.global	ADC_1_SetEosMask
 305              		.code	16
 306              		.thumb_func
 307              		.type	ADC_1_SetEosMask, %function
 308              	ADC_1_SetEosMask:
 309              	.LFB194:
 324:Generated_Source\PSoC6/ADC_1.c **** 
 325:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 326:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetEosMask
 327:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 328:Generated_Source\PSoC6/ADC_1.c **** *
 329:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets or clears the End of Scan (EOS) interrupt mask.
 330:Generated_Source\PSoC6/ADC_1.c **** *
 331:Generated_Source\PSoC6/ADC_1.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 332:Generated_Source\PSoC6/ADC_1.c **** *
 333:Generated_Source\PSoC6/ADC_1.c **** * \return None
 334:Generated_Source\PSoC6/ADC_1.c **** *
 335:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 336:Generated_Source\PSoC6/ADC_1.c **** *
 337:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 338:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetEosMask(uint32_t mask)
 339:Generated_Source\PSoC6/ADC_1.c **** {
 310              		.loc 1 339 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL11:
 340:Generated_Source\PSoC6/ADC_1.c ****     uint32_t intrMaskReg;
 341:Generated_Source\PSoC6/ADC_1.c **** 
 342:Generated_Source\PSoC6/ADC_1.c ****     intrMaskReg = (0uL == mask) ? CY_SAR_DEINIT : SAR_INTR_MASK_EOS_MASK_Msk;
 316              		.loc 1 342 0
 317 0000 431E     		subs	r3, r0, #1
 318 0002 9841     		sbcs	r0, r0, r3
 319              	.LVL12:
 320              	.LBB42:
 321              	.LBB43:
 322              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 51


  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 52


  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 53


 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 54


 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 55


 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 56


 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 57


 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 58


 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 59


 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 60


 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 61


 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 62


 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 63


 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 64


 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 65


 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 66


 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 67


 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 68


 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 69


1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 70


1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 71


1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 72


1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 73


1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 74


1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 75


1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 76


1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 77


1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 78


1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR(base);
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_INTR(base);
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterrupt
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Trigger an interrupt with software.
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to set.
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 79


1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask)
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_SET(base) = intrMask;
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterruptMask
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable which interrupts can trigger the CPU interrupt controller.
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts. Select one or more values from \ref cy_en_sar_intr_mask_t
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and "OR" them together.
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_MASK_NONE : Disable EOS, overflow, and firmware collision interrupts.
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_INTERRUPT_MASK
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask)
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_MASK(base) = intrMask;
 323              		.loc 3 1649 0
 324 0004 8623     		movs	r3, #134
 325 0006 024A     		ldr	r2, .L22
 326 0008 9B00     		lsls	r3, r3, #2
 327 000a D050     		str	r0, [r2, r3]
 328              	.LVL13:
 329              	.LBE43:
 330              	.LBE42:
 343:Generated_Source\PSoC6/ADC_1.c **** 
 344:Generated_Source\PSoC6/ADC_1.c ****     Cy_SAR_SetInterruptMask(ADC_1_SAR__HW, intrMaskReg);
 345:Generated_Source\PSoC6/ADC_1.c **** }
 331              		.loc 1 345 0
 332              		@ sp needed
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 80


 333 000c 7047     		bx	lr
 334              	.L23:
 335 000e C046     		.align	2
 336              	.L22:
 337 0010 00001D41 		.word	1092419584
 338              		.cfi_endproc
 339              	.LFE194:
 340              		.size	ADC_1_SetEosMask, .-ADC_1_SetEosMask
 341              		.section	.text.ADC_1_SetChanMask,"ax",%progbits
 342              		.align	1
 343              		.global	ADC_1_SetChanMask
 344              		.code	16
 345              		.thumb_func
 346              		.type	ADC_1_SetChanMask, %function
 347              	ADC_1_SetChanMask:
 348              	.LFB195:
 346:Generated_Source\PSoC6/ADC_1.c **** 
 347:Generated_Source\PSoC6/ADC_1.c **** /******************************************************************************
 348:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetChanMask
 349:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 350:Generated_Source\PSoC6/ADC_1.c **** *
 351:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 352:Generated_Source\PSoC6/ADC_1.c **** *
 353:Generated_Source\PSoC6/ADC_1.c **** *
 354:Generated_Source\PSoC6/ADC_1.c **** * \param enableMask
 355:Generated_Source\PSoC6/ADC_1.c **** *  Channel enable/disable mask.
 356:Generated_Source\PSoC6/ADC_1.c **** *
 357:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect
 358:Generated_Source\PSoC6/ADC_1.c **** *  None.
 359:Generated_Source\PSoC6/ADC_1.c **** *
 360:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 361:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetChanMask(uint32_t enableMask)
 362:Generated_Source\PSoC6/ADC_1.c **** {
 349              		.loc 1 362 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LVL14:
 363:Generated_Source\PSoC6/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 355              		.loc 1 363 0
 356 0000 064B     		ldr	r3, .L25
 364:Generated_Source\PSoC6/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 365:Generated_Source\PSoC6/ADC_1.c **** 
 366:Generated_Source\PSoC6/ADC_1.c ****     Cy_SAR_SetChanMask(ADC_1_SAR__HW, enableMask);
 367:Generated_Source\PSoC6/ADC_1.c **** }
 357              		.loc 1 367 0
 358              		@ sp needed
 363:Generated_Source\PSoC6/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 359              		.loc 1 363 0
 360 0002 1A68     		ldr	r2, [r3]
 361 0004 1423     		movs	r3, #20
 362 0006 5343     		muls	r3, r2
 363 0008 054A     		ldr	r2, .L25+4
 364 000a D318     		adds	r3, r2, r3
 364:Generated_Source\PSoC6/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 365              		.loc 1 364 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 81


 366 000c 5A68     		ldr	r2, [r3, #4]
 367 000e 0123     		movs	r3, #1
 368 0010 9340     		lsls	r3, r3, r2
 369 0012 013B     		subs	r3, r3, #1
 370 0014 1840     		ands	r0, r3
 371              	.LVL15:
 372              	.LBB44:
 373              	.LBB45:
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 374              		.loc 3 1503 0
 375 0016 034B     		ldr	r3, .L25+8
 376 0018 1862     		str	r0, [r3, #32]
 377              	.LVL16:
 378              	.LBE45:
 379              	.LBE44:
 380              		.loc 1 367 0
 381 001a 7047     		bx	lr
 382              	.L26:
 383              		.align	2
 384              	.L25:
 385 001c 00000000 		.word	.LANCHOR0
 386 0020 00000000 		.word	ADC_1_allConfigs
 387 0024 00001D41 		.word	1092419584
 388              		.cfi_endproc
 389              	.LFE195:
 390              		.size	ADC_1_SetChanMask, .-ADC_1_SetChanMask
 391              		.section	.text.ADC_1_IsEndConversion,"ax",%progbits
 392              		.align	1
 393              		.global	ADC_1_IsEndConversion
 394              		.code	16
 395              		.thumb_func
 396              		.type	ADC_1_IsEndConversion, %function
 397              	ADC_1_IsEndConversion:
 398              	.LFB196:
 368:Generated_Source\PSoC6/ADC_1.c **** 
 369:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 370:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IsEndConversion
 371:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 372:Generated_Source\PSoC6/ADC_1.c **** *
 373:Generated_Source\PSoC6/ADC_1.c **** * \brief Immediately returns the status of the conversion or does not return
 374:Generated_Source\PSoC6/ADC_1.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 375:Generated_Source\PSoC6/ADC_1.c **** * In blocking mode, there is a time out of about 10 seconds for a CPU speed of
 376:Generated_Source\PSoC6/ADC_1.c **** * 100 Mhz.
 377:Generated_Source\PSoC6/ADC_1.c **** *
 378:Generated_Source\PSoC6/ADC_1.c **** * \param retMode Check conversion return mode.
 379:Generated_Source\PSoC6/ADC_1.c **** *
 380:Generated_Source\PSoC6/ADC_1.c **** * \return uint32_t: If a nonzero value is returned, the last conversion is complete.
 381:Generated_Source\PSoC6/ADC_1.c **** * If the returned value is zero, the ADC_1 is still calculating the last result.
 382:Generated_Source\PSoC6/ADC_1.c **** *
 383:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
 384:Generated_Source\PSoC6/ADC_1.c **** *
 385:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 386:Generated_Source\PSoC6/ADC_1.c **** uint32_t ADC_1_IsEndConversion(cy_en_sar_return_mode_t retMode)
 387:Generated_Source\PSoC6/ADC_1.c **** {
 399              		.loc 1 387 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 82


 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              	.LVL17:
 404 0000 10B5     		push	{r4, lr}
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 4, -8
 407              		.cfi_offset 14, -4
 408              		.loc 1 387 0
 409 0002 0100     		movs	r1, r0
 388:Generated_Source\PSoC6/ADC_1.c ****     uint32 endOfConversion = 0u;
 389:Generated_Source\PSoC6/ADC_1.c ****     cy_en_sar_status_t result;
 390:Generated_Source\PSoC6/ADC_1.c **** 
 391:Generated_Source\PSoC6/ADC_1.c ****     result = Cy_SAR_IsEndConversion(ADC_1_SAR__HW, retMode);
 410              		.loc 1 391 0
 411 0004 0248     		ldr	r0, .L28
 412              	.LVL18:
 413 0006 FFF7FEFF 		bl	Cy_SAR_IsEndConversion
 414              	.LVL19:
 392:Generated_Source\PSoC6/ADC_1.c **** 
 393:Generated_Source\PSoC6/ADC_1.c ****     if (result == CY_SAR_SUCCESS)
 394:Generated_Source\PSoC6/ADC_1.c ****     {
 395:Generated_Source\PSoC6/ADC_1.c ****         endOfConversion = 1u;
 396:Generated_Source\PSoC6/ADC_1.c ****     }
 397:Generated_Source\PSoC6/ADC_1.c **** 
 398:Generated_Source\PSoC6/ADC_1.c ****     return endOfConversion;
 399:Generated_Source\PSoC6/ADC_1.c **** }
 415              		.loc 1 399 0
 416              		@ sp needed
 398:Generated_Source\PSoC6/ADC_1.c **** }
 417              		.loc 1 398 0
 418 000a 4342     		rsbs	r3, r0, #0
 419 000c 5841     		adcs	r0, r0, r3
 420              	.LVL20:
 421              		.loc 1 399 0
 422 000e 10BD     		pop	{r4, pc}
 423              	.L29:
 424              		.align	2
 425              	.L28:
 426 0010 00001D41 		.word	1092419584
 427              		.cfi_endproc
 428              	.LFE196:
 429              		.size	ADC_1_IsEndConversion, .-ADC_1_IsEndConversion
 430              		.section	.text.ADC_1_Init,"ax",%progbits
 431              		.align	1
 432              		.global	ADC_1_Init
 433              		.code	16
 434              		.thumb_func
 435              		.type	ADC_1_Init, %function
 436              	ADC_1_Init:
 437              	.LFB197:
 400:Generated_Source\PSoC6/ADC_1.c **** 
 401:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 402:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_Init
 403:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 404:Generated_Source\PSoC6/ADC_1.c **** *
 405:Generated_Source\PSoC6/ADC_1.c **** * \brief Initialize the component according to parameters defined in the
 406:Generated_Source\PSoC6/ADC_1.c **** * customizer.
 407:Generated_Source\PSoC6/ADC_1.c **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 83


 408:Generated_Source\PSoC6/ADC_1.c **** * \param None
 409:Generated_Source\PSoC6/ADC_1.c **** *
 410:Generated_Source\PSoC6/ADC_1.c **** * \return None
 411:Generated_Source\PSoC6/ADC_1.c **** *
 412:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 413:Generated_Source\PSoC6/ADC_1.c **** *
 414:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 415:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_Init(void)
 416:Generated_Source\PSoC6/ADC_1.c **** {
 438              		.loc 1 416 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              	.LVL21:
 443 0000 10B5     		push	{r4, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 4, -8
 446              		.cfi_offset 14, -4
 417:Generated_Source\PSoC6/ADC_1.c ****     uint32_t configNum = 0u;
 418:Generated_Source\PSoC6/ADC_1.c **** 
 419:Generated_Source\PSoC6/ADC_1.c ****     if(0u == ADC_1_initVar)
 447              		.loc 1 419 0
 448 0002 064B     		ldr	r3, .L32
 449 0004 1A79     		ldrb	r2, [r3, #4]
 450 0006 002A     		cmp	r2, #0
 451 0008 07D1     		bne	.L30
 420:Generated_Source\PSoC6/ADC_1.c ****     {
 421:Generated_Source\PSoC6/ADC_1.c ****         /* Interrupt core assignment will be up to the user. Initialize but do not enable the inter
 422:Generated_Source\PSoC6/ADC_1.c ****         #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 423:Generated_Source\PSoC6/ADC_1.c ****         #if (CY_CPU_CORTEX_M4)
 424:Generated_Source\PSoC6/ADC_1.c ****             (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, &ADC_1_ISR);
 425:Generated_Source\PSoC6/ADC_1.c ****         #endif
 426:Generated_Source\PSoC6/ADC_1.c ****         #endif
 427:Generated_Source\PSoC6/ADC_1.c **** 
 428:Generated_Source\PSoC6/ADC_1.c ****         #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 429:Generated_Source\PSoC6/ADC_1.c ****         #if (CY_CPU_CORTEX_M0P)
 430:Generated_Source\PSoC6/ADC_1.c ****             (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, &ADC_1_ISR);
 431:Generated_Source\PSoC6/ADC_1.c ****         #endif
 432:Generated_Source\PSoC6/ADC_1.c ****         #endif
 433:Generated_Source\PSoC6/ADC_1.c **** 
 434:Generated_Source\PSoC6/ADC_1.c ****         /* Initialize configuration zero if SelectConfig has not been called */
 435:Generated_Source\PSoC6/ADC_1.c ****         if(0u == ADC_1_selected)
 452              		.loc 1 435 0
 453 000a 5A79     		ldrb	r2, [r3, #5]
 454 000c 002A     		cmp	r2, #0
 455 000e 04D1     		bne	.L30
 456              	.LBB48:
 457              	.LBB49:
 436:Generated_Source\PSoC6/ADC_1.c ****         {
 437:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_selected = 1u;
 458              		.loc 1 437 0
 459 0010 0132     		adds	r2, r2, #1
 438:Generated_Source\PSoC6/ADC_1.c ****             configNum = 0uL;
 439:Generated_Source\PSoC6/ADC_1.c **** 
 440:Generated_Source\PSoC6/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Break. */
 441:Generated_Source\PSoC6/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
 442:Generated_Source\PSoC6/ADC_1.c ****                 ADC_1_vrefAMux_DisconnectAll();
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 84


 443:Generated_Source\PSoC6/ADC_1.c ****             #endif
 444:Generated_Source\PSoC6/ADC_1.c **** 
 445:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_InitConfig(&ADC_1_allConfigs[configNum]);
 460              		.loc 1 445 0
 461 0012 0348     		ldr	r0, .L32+4
 437:Generated_Source\PSoC6/ADC_1.c ****             configNum = 0uL;
 462              		.loc 1 437 0
 463 0014 5A71     		strb	r2, [r3, #5]
 464              	.LVL22:
 465              		.loc 1 445 0
 466 0016 FFF7FEFF 		bl	ADC_1_InitConfig
 467              	.LVL23:
 468              	.L30:
 469              	.LBE49:
 470              	.LBE48:
 446:Generated_Source\PSoC6/ADC_1.c **** 
 447:Generated_Source\PSoC6/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Make. */
 448:Generated_Source\PSoC6/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
 449:Generated_Source\PSoC6/ADC_1.c ****                 ADC_1_vrefAMux_Select((uint8)configNum);
 450:Generated_Source\PSoC6/ADC_1.c ****             #endif
 451:Generated_Source\PSoC6/ADC_1.c ****         }
 452:Generated_Source\PSoC6/ADC_1.c ****     }
 453:Generated_Source\PSoC6/ADC_1.c **** }
 471              		.loc 1 453 0
 472              		@ sp needed
 473 001a 10BD     		pop	{r4, pc}
 474              	.L33:
 475              		.align	2
 476              	.L32:
 477 001c 00000000 		.word	.LANCHOR0
 478 0020 00000000 		.word	ADC_1_allConfigs
 479              		.cfi_endproc
 480              	.LFE197:
 481              		.size	ADC_1_Init, .-ADC_1_Init
 482              		.section	.text.ADC_1_Start,"ax",%progbits
 483              		.align	1
 484              		.global	ADC_1_Start
 485              		.code	16
 486              		.thumb_func
 487              		.type	ADC_1_Start, %function
 488              	ADC_1_Start:
 489              	.LFB186:
  66:Generated_Source\PSoC6/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 490              		.loc 1 66 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494 0000 70B5     		push	{r4, r5, r6, lr}
 495              		.cfi_def_cfa_offset 16
 496              		.cfi_offset 4, -16
 497              		.cfi_offset 5, -12
 498              		.cfi_offset 6, -8
 499              		.cfi_offset 14, -4
  67:Generated_Source\PSoC6/ADC_1.c ****     {
 500              		.loc 1 67 0
 501 0002 0125     		movs	r5, #1
 502 0004 064C     		ldr	r4, .L36
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 85


 503 0006 2379     		ldrb	r3, [r4, #4]
 504 0008 2B42     		tst	r3, r5
 505 000a 04D1     		bne	.L35
  69:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 506              		.loc 1 69 0
 507 000c FFF7FEFF 		bl	ADC_1_Init
 508              	.LVL24:
  70:Generated_Source\PSoC6/ADC_1.c ****     }
 509              		.loc 1 70 0
 510 0010 2379     		ldrb	r3, [r4, #4]
 511 0012 2B43     		orrs	r3, r5
 512 0014 2371     		strb	r3, [r4, #4]
 513              	.L35:
 514              	.LBB52:
 515              	.LBB53:
 516              		.file 4 "Generated_Source\\PSoC6\\ADC_1.h"
   1:Generated_Source\PSoC6/ADC_1.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1.h **** * \file     ADC_1.h
   3:Generated_Source\PSoC6/ADC_1.h **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1.h **** *
   5:Generated_Source\PSoC6/ADC_1.h **** * \brief
   6:Generated_Source\PSoC6/ADC_1.h **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1.h **** *
   8:Generated_Source\PSoC6/ADC_1.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1.h **** * \copyright
  10:Generated_Source\PSoC6/ADC_1.h **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1.h **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1.h **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1.h **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1.h **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1.h **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1.h **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1.h **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1.h **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_1.h **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1.h **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1.h **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1.h **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_1.h **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1.h **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1.h **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1.h **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1.h **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1.h **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1.h **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_1.h **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_1.h **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1.h **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1.h **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1.h **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1.h **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1.h **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1.h **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1.h **** #if !defined(CY_ADC_1_H)
  40:Generated_Source\PSoC6/ADC_1.h **** #define CY_ADC_1_H
  41:Generated_Source\PSoC6/ADC_1.h **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 86


  42:Generated_Source\PSoC6/ADC_1.h **** #include <cy_device_headers.h>
  43:Generated_Source\PSoC6/ADC_1.h **** #include <sar/cy_sar.h>
  44:Generated_Source\PSoC6/ADC_1.h **** 
  45:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_VREF_ROUTED                  ((0) == 1u)
  46:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_VREF_ROUTED)
  47:Generated_Source\PSoC6/ADC_1.h **** #include "ADC_1_vrefAMux.h"
  48:Generated_Source\PSoC6/ADC_1.h **** #endif
  49:Generated_Source\PSoC6/ADC_1.h **** 
  50:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CLOCK_INTERNAL               ((1) == 1u)
  51:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
  52:Generated_Source\PSoC6/ADC_1.h **** #include "ADC_1_intSarClock.h"
  53:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CLOCK_INTERNAL */
  54:Generated_Source\PSoC6/ADC_1.h **** 
  55:Generated_Source\PSoC6/ADC_1.h **** /**
  56:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_structures
  57:Generated_Source\PSoC6/ADC_1.h **** *
  58:Generated_Source\PSoC6/ADC_1.h **** */
  59:Generated_Source\PSoC6/ADC_1.h **** typedef struct
  60:Generated_Source\PSoC6/ADC_1.h **** {
  61:Generated_Source\PSoC6/ADC_1.h ****     uint32_t channelBase;                   /* Start of channels for the configuration */
  62:Generated_Source\PSoC6/ADC_1.h ****     uint32_t numChannels;                   /* Number of channels in the configuration */
  63:Generated_Source\PSoC6/ADC_1.h ****     const cy_stc_sar_config_t *hwConfigStc; /* PDL structure */
  64:Generated_Source\PSoC6/ADC_1.h ****     uint32_t miscConfig;                    /* Miscellaneous configuration bits broken down as foll
  65:Generated_Source\PSoC6/ADC_1.h ****                                             [0] - Freerunning: Set if the sample mode is freerunnin
  66:Generated_Source\PSoC6/ADC_1.h ****                                             [2] - Mux Switch 0: Set when VSSA is used for the neg i
  67:Generated_Source\PSoC6/ADC_1.h ****                                             */
  68:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
  69:Generated_Source\PSoC6/ADC_1.h ****     uint32_t clkDivider;                    /* Clock divider */
  70:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CLOCK_INTERNAL */
  71:Generated_Source\PSoC6/ADC_1.h **** 
  72:Generated_Source\PSoC6/ADC_1.h **** } ADC_1_CONFIG_STRUCT;
  73:Generated_Source\PSoC6/ADC_1.h **** /** @} structures */
  74:Generated_Source\PSoC6/ADC_1.h **** 
  75:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
  76:Generated_Source\PSoC6/ADC_1.h **** * Function Prototypes
  77:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
  78:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SelectConfig(uint32_t config, uint32_t restart);
  79:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config);
  80:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_Init(void);
  81:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Enable(void);
  82:Generated_Source\PSoC6/ADC_1.h **** 
  83:Generated_Source\PSoC6/ADC_1.h **** /**
  84:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_general
  85:Generated_Source\PSoC6/ADC_1.h **** * @{
  86:Generated_Source\PSoC6/ADC_1.h **** */
  87:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_Start(void);
  88:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_StartEx(cy_israddress userIsr);
  89:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Stop(void);
  90:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_StartConvert(void);
  91:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_StopConvert(void);
  92:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetConvertMode(cy_en_sar_start_convert_sel_t mode);
  93:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetEosMask(uint32_t mask);
  94:Generated_Source\PSoC6/ADC_1.h **** uint32_t ADC_1_IsEndConversion(cy_en_sar_return_mode_t retMode);
  95:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int16_t ADC_1_GetResult16(uint32_t chan);
  96:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int32_t ADC_1_GetResult32(uint32_t chan);
  97:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetLowLimit(uint32_t lowLimit);
  98:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetHighLimit(uint32_t highLimit);
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 87


  99:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetLimitMask(uint32_t limitMask);
 100:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetSatMask(uint32_t satMask);
 101:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE cy_en_sar_status_t ADC_1_SetOffset(uint32_t chan, int16_t offset);
 102:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE cy_en_sar_status_t ADC_1_SetGain(uint32_t chan, int32_t adcGain);
 103:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE float32_t ADC_1_CountsTo_Volts(uint32_t chan, int16_t adcCounts);
 104:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int16_t ADC_1_CountsTo_mVolts(uint32_t chan, int16_t adcCounts);
 105:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int32_t ADC_1_CountsTo_uVolts(uint32_t chan, int16_t adcCounts);
 106:Generated_Source\PSoC6/ADC_1.h **** 
 107:Generated_Source\PSoC6/ADC_1.h **** /** @} general */
 108:Generated_Source\PSoC6/ADC_1.h **** 
 109:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetChanMask(uint32_t enableMask);
 110:Generated_Source\PSoC6/ADC_1.h **** 
 111:Generated_Source\PSoC6/ADC_1.h **** /**
 112:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_power
 113:Generated_Source\PSoC6/ADC_1.h **** * @{
 114:Generated_Source\PSoC6/ADC_1.h **** */
 115:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Sleep(void);
 116:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Wakeup(void);
 117:Generated_Source\PSoC6/ADC_1.h **** 
 118:Generated_Source\PSoC6/ADC_1.h **** /** @} power */
 119:Generated_Source\PSoC6/ADC_1.h **** 
 120:Generated_Source\PSoC6/ADC_1.h **** /**
 121:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_interrupt
 122:Generated_Source\PSoC6/ADC_1.h **** * @{
 123:Generated_Source\PSoC6/ADC_1.h **** */
 124:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_ISR(void);
 125:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_IRQ_Enable(void);
 126:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_IRQ_Disable(void);
 127:Generated_Source\PSoC6/ADC_1.h **** 
 128:Generated_Source\PSoC6/ADC_1.h **** /** @} interrupt */
 129:Generated_Source\PSoC6/ADC_1.h **** 
 130:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
 131:Generated_Source\PSoC6/ADC_1.h ****                                   Parameters
 132:Generated_Source\PSoC6/ADC_1.h **** The parameters that are set in the customizer are redefined as constants here.
 133:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 134:Generated_Source\PSoC6/ADC_1.h **** 
 135:Generated_Source\PSoC6/ADC_1.h **** /*  Sample Mode setting constants */
 136:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_TOTAL_CONFIGS                (1ul)
 137:Generated_Source\PSoC6/ADC_1.h **** 
 138:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 139:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 0 customizer defines                                   */
 140:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 141:Generated_Source\PSoC6/ADC_1.h **** 
 142:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_RATE             (100000)
 143:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_BASE            (0u)
 144:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_COUNT           (1u)
 145:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_SEL_MASK           (0x70u)
 146:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_NOMINAL_CLOCK_FREQ      (16666666u)
 147:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_EN              (0x1u)
 148:Generated_Source\PSoC6/ADC_1.h **** 
 149:Generated_Source\PSoC6/ADC_1.h **** /* Sample Control Register */
 150:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SINGLE_ENDED_FORMAT     (0uL)
 151:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DIFFERENTIAL_FORMAT     (0uL)
 152:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLES_AVERAGED        (0uL)
 153:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_INTR_MASK         (0x0u)
 154:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SATURATE_INTR_MASK      (0x1u)
 155:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VNEG_INPUT_SEL          (7)
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 88


 156:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SINGLE_PRESENT          (1)
 157:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_MV_VALUE           (3300)
 158:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME0          (4uL)
 159:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME1          (2uL)
 160:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME2          (2uL)
 161:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME3          (2uL)
 162:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_FREERUNNING             (0u)
 163:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVGERAGING_MODE         (2uL)
 164:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_LOW_LIMIT               (512u)
 165:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_HIGH_LIMIT              (1550u)
 166:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_COND              (2uL)
 167:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_USE_SOC                 (1uL)
 168:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_PWR                (2uL)
 169:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_PWR                (3uL)
 170:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_DLY                (3uL)
 171:Generated_Source\PSoC6/ADC_1.h **** 
 172:Generated_Source\PSoC6/ADC_1.h **** /* Clock parameters*/
 173:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
 174:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG0_NOMINAL_CLOCK_FR
 175:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_CLOCK_INTERNAL) */
 176:Generated_Source\PSoC6/ADC_1.h **** 
 177:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 178:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 0 customizer defines                                     */
 179:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 180:Generated_Source\PSoC6/ADC_1.h **** 
 181:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 182:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 1 customizer defines                                   */
 183:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 184:Generated_Source\PSoC6/ADC_1.h **** 
 185:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 1)
 186:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_RATE             ()
 187:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_BASE            (u)
 188:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_COUNT           (u)
 189:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_SEL_MASK           (u)
 190:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_NOMINAL_CLOCK_FREQ      (u)
 191:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_EN              (u)
 192:Generated_Source\PSoC6/ADC_1.h **** 
 193:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 194:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SINGLE_ENDED_FORMAT     (uL)
 195:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DIFFERENTIAL_FORMAT     (uL)
 196:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLES_AVERAGED        (uL)
 197:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_INTR_MASK         (u)
 198:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SATURATE_INTR_MASK      (u)
 199:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VNEG_INPUT_SEL          ()
 200:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SINGLE_PRESENT          ()
 201:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_MV_VALUE           ()
 202:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME0          (uL)
 203:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME1          (uL)
 204:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME2          (uL)
 205:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME3          (uL)
 206:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_FREERUNNING             (u)
 207:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVGERAGING_MODE         (uL)
 208:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_LOW_LIMIT               (u)
 209:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_HIGH_LIMIT              (u)
 210:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_COND              (uL)
 211:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_USE_SOC                 (1uL)
 212:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_PWR                (uL)
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 89


 213:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_PWR                (uL)
 214:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_DLY                (uL)
 215:Generated_Source\PSoC6/ADC_1.h **** 
 216:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 217:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 218:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG1_NOMINAL_CLOC
 219:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 220:Generated_Source\PSoC6/ADC_1.h **** #endif /* #if(ADC_1_TOTAL_CONFIGS > 1) */
 221:Generated_Source\PSoC6/ADC_1.h **** 
 222:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 223:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 1 customizer defines                                     */
 224:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 225:Generated_Source\PSoC6/ADC_1.h **** 
 226:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 227:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 2 customizer defines                                         */
 228:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 229:Generated_Source\PSoC6/ADC_1.h **** 
 230:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 2)
 231:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_RATE             ()
 232:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_BASE            (u)
 233:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_COUNT           (u)
 234:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_SEL_MASK           (u)
 235:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_NOMINAL_CLOCK_FREQ      (u)
 236:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_EN              (u)
 237:Generated_Source\PSoC6/ADC_1.h **** 
 238:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 239:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SINGLE_ENDED_FORMAT     (uL)
 240:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DIFFERENTIAL_FORMAT     (uL)
 241:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLES_AVERAGED        (uL)
 242:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_INTR_MASK         (u)
 243:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SATURATE_INTR_MASK      (u)
 244:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VNEG_INPUT_SEL          ()
 245:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SINGLE_PRESENT          ()
 246:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_MV_VALUE           ()
 247:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME0          (uL)
 248:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME1          (uL)
 249:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME2          (uL)
 250:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME3          (uL)
 251:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_FREERUNNING             (u)
 252:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVGERAGING_MODE         (uL)
 253:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_LOW_LIMIT               (u)
 254:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_HIGH_LIMIT              (u)
 255:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_COND              (uL)
 256:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_USE_SOC                 (1uL)
 257:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_PWR                (uL)
 258:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_PWR                (uL)
 259:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_DLY                (uL)
 260:Generated_Source\PSoC6/ADC_1.h **** 
 261:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 262:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 263:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG2_NOMINAL_CLOC
 264:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 265:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_TOTAL_CONFIGS > 2) */
 266:Generated_Source\PSoC6/ADC_1.h **** 
 267:Generated_Source\PSoC6/ADC_1.h **** 
 268:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 269:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 2 customizer defines                                     */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 90


 270:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 271:Generated_Source\PSoC6/ADC_1.h **** 
 272:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 273:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 3 customizer defines                                   */
 274:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 275:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 3)
 276:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_RATE             ()
 277:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_BASE            (u)
 278:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_COUNT           (u)
 279:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_SEL_MASK           (u)
 280:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_NOMINAL_CLOCK_FREQ      (u)
 281:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_EN              (u)
 282:Generated_Source\PSoC6/ADC_1.h **** 
 283:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 284:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SINGLE_ENDED_FORMAT     (uL)
 285:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DIFFERENTIAL_FORMAT     (uL)
 286:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLES_AVERAGED        (uL)
 287:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_INTR_MASK         (u)
 288:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SATURATE_INTR_MASK      (u)
 289:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VNEG_INPUT_SEL          ()
 290:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SINGLE_PRESENT          ()
 291:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_MV_VALUE           ()
 292:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME0          (uL)
 293:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME1          (uL)
 294:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME2          (uL)
 295:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME3          (uL)
 296:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_FREERUNNING             (u)
 297:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVGERAGING_MODE         (uL)
 298:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_LOW_LIMIT               (u)
 299:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_HIGH_LIMIT              (u)
 300:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_COND              (uL)
 301:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_USE_SOC                 (1uL)
 302:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_PWR                (uL)
 303:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_PWR                (uL)
 304:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_DLY                (uL)
 305:Generated_Source\PSoC6/ADC_1.h **** 
 306:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 307:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 308:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG3_NOMINAL_CLOC
 309:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 310:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_TOTAL_CONFIGS > 3) */
 311:Generated_Source\PSoC6/ADC_1.h **** 
 312:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 313:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 3 customizer defines                                     */
 314:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 315:Generated_Source\PSoC6/ADC_1.h **** 
 316:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_DEFAULT_SAMPLE_MODE_SEL      (0u)
 317:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_FREERUNNING                  (1u)
 318:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_HARDWARESOC                  (1u)
 319:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_NEG_SEL_VSSA_KELVIN          (0x0uL)
 320:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_NEG_SEL_VREF                 (0x7uL)
 321:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_PWR_CTRL_VREF_NORMAL_PWR     (0x0uL)
 322:Generated_Source\PSoC6/ADC_1.h **** 
 323:Generated_Source\PSoC6/ADC_1.h **** /** ADC_1_TOTAL_CHANNELS_NUM
 324:Generated_Source\PSoC6/ADC_1.h **** * This constant represents the number of input channels available for scanning.
 325:Generated_Source\PSoC6/ADC_1.h **** */
 326:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_TOTAL_CHANNELS_NUM           (1u)
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 91


 327:Generated_Source\PSoC6/ADC_1.h **** 
 328:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
 329:Generated_Source\PSoC6/ADC_1.h **** *    Variables with External Linkage
 330:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 331:Generated_Source\PSoC6/ADC_1.h **** /**
 332:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_globals
 333:Generated_Source\PSoC6/ADC_1.h **** * Globals are noted in the descriptions of the functions that use globals.
 334:Generated_Source\PSoC6/ADC_1.h **** * They are marked with (R), (W), or (RW) noting whether the variable is read,
 335:Generated_Source\PSoC6/ADC_1.h **** * write, or read/write.
 336:Generated_Source\PSoC6/ADC_1.h **** * @{
 337:Generated_Source\PSoC6/ADC_1.h **** */
 338:Generated_Source\PSoC6/ADC_1.h **** 
 339:Generated_Source\PSoC6/ADC_1.h **** /** ADC_1_initVar
 340:Generated_Source\PSoC6/ADC_1.h **** * The ADC_1_initVar variable is used to indicate
 341:Generated_Source\PSoC6/ADC_1.h **** * initial configuration of this component. The variable is initialized to zero and
 342:Generated_Source\PSoC6/ADC_1.h **** * set to 1 the first time ADC_1_Start() is called. This allows for
 343:Generated_Source\PSoC6/ADC_1.h **** * component initialization without reinitialization in all subsequent calls to the
 344:Generated_Source\PSoC6/ADC_1.h **** * ADC_1_Start() routine.
 345:Generated_Source\PSoC6/ADC_1.h **** *
 346:Generated_Source\PSoC6/ADC_1.h **** * If reinitialization of the component is required, then the ADC_1_Init() function
 347:Generated_Source\PSoC6/ADC_1.h **** * can be called before the ADC_1_Start() or ADC_1_Enable()
 348:Generated_Source\PSoC6/ADC_1.h **** * functions.
 349:Generated_Source\PSoC6/ADC_1.h **** */
 350:Generated_Source\PSoC6/ADC_1.h **** extern uint8_t ADC_1_initVar;
 351:Generated_Source\PSoC6/ADC_1.h **** extern uint8_t ADC_1_selected;
 352:Generated_Source\PSoC6/ADC_1.h **** extern uint32_t ADC_1_currentConfig;
 353:Generated_Source\PSoC6/ADC_1.h **** 
 354:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_INIT_VAR_INIT_FLAG     (0x01u)
 355:Generated_Source\PSoC6/ADC_1.h **** 
 356:Generated_Source\PSoC6/ADC_1.h **** extern const ADC_1_CONFIG_STRUCT ADC_1_allConfigs[ADC_1_TOTAL_CONFIGS];
 357:Generated_Source\PSoC6/ADC_1.h **** 
 358:Generated_Source\PSoC6/ADC_1.h **** /* SysPm callback structure for deep sleep entry and exit.
 359:Generated_Source\PSoC6/ADC_1.h ****  * Call the Cy_SysPm_RegisterCallback function with this
 360:Generated_Source\PSoC6/ADC_1.h ****  * structure before calling Cy_SysPm_DeepSleep.
 361:Generated_Source\PSoC6/ADC_1.h **** */
 362:Generated_Source\PSoC6/ADC_1.h **** extern cy_stc_syspm_callback_t ADC_1_DeepSleepCallbackStruct;
 363:Generated_Source\PSoC6/ADC_1.h **** 
 364:Generated_Source\PSoC6/ADC_1.h **** /** @} globals */
 365:Generated_Source\PSoC6/ADC_1.h **** 
 366:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 367:Generated_Source\PSoC6/ADC_1.h **** /* *******************Global MUX_SWITCH0 Definitions ************************ */
 368:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 369:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 370:Generated_Source\PSoC6/ADC_1.h ****     /* Do not connect VSSA to VMINUS when one channel in differential mode used */
 371:Generated_Source\PSoC6/ADC_1.h ****     #if((ADC_1_TOTAL_CHANNELS_NUM == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u))
 372:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_MUX_SWITCH0_INIT      0u
 373:Generated_Source\PSoC6/ADC_1.h ****     #else    /* multiple channels or one single ended channel */
 374:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_MUX_SWITCH0_INIT      1u
 375:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ((ADC_1_TOTAL_CHANNELS_NUM == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u)) */
 376:Generated_Source\PSoC6/ADC_1.h **** #else
 377:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_MUX_SWITCH0_INIT          0u
 378:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 379:Generated_Source\PSoC6/ADC_1.h **** 
 380:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 381:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 0 calculated defines                                   */
 382:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 383:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_TIME01_INIT \
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 92


 384:Generated_Source\PSoC6/ADC_1.h ****         ((ADC_1_CFG0_APERTURE_TIME0 \
 385:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 386:Generated_Source\PSoC6/ADC_1.h ****         | (ADC_1_CFG0_APERTURE_TIME1 \
 387:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 388:Generated_Source\PSoC6/ADC_1.h **** 
 389:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_TIME23_INIT \
 390:Generated_Source\PSoC6/ADC_1.h ****         ((ADC_1_CFG0_APERTURE_TIME2 \
 391:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 392:Generated_Source\PSoC6/ADC_1.h ****         | (ADC_1_CFG0_APERTURE_TIME3 \
 393:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 394:Generated_Source\PSoC6/ADC_1.h **** 
 395:Generated_Source\PSoC6/ADC_1.h **** /* Enable soc pin if used */
 396:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DSI_TRIGGER_EN_INIT \
 397:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_USE_SOC \
 398:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 399:Generated_Source\PSoC6/ADC_1.h **** 
 400:Generated_Source\PSoC6/ADC_1.h **** /* Set soc operation to edge or level based on sample mode */
 401:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_FREERUNNING == ADC_1_FREERUNNING)
 402:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 403:Generated_Source\PSoC6/ADC_1.h **** #else /* Edge trigger */
 404:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT    (0u)
 405:Generated_Source\PSoC6/ADC_1.h **** #endif /* End ADC_1_CFG0_FREERUNNING == ADC_1_FREERUNNING */
 406:Generated_Source\PSoC6/ADC_1.h **** 
 407:Generated_Source\PSoC6/ADC_1.h **** /* Set SE_NEG_INPUT */
 408:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 409:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT \
 410:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 411:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 412:Generated_Source\PSoC6/ADC_1.h **** #elif(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 413:Generated_Source\PSoC6/ADC_1.h **** 
 414:Generated_Source\PSoC6/ADC_1.h ****     /* Do not connect VNEG to VREF when one channel in differential mode used */
 415:Generated_Source\PSoC6/ADC_1.h ****     /* Only needed for config 0 since 2+ configs == 2+ channels */
 416:Generated_Source\PSoC6/ADC_1.h ****     #if((ADC_1_CFG0_CHANNEL_COUNT == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u))
 417:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG0_SE_NEG_INPUT_INIT     0u
 418:Generated_Source\PSoC6/ADC_1.h ****     #else    /* multiple channels or one single channel */
 419:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG0_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 420:Generated_Source\PSoC6/ADC_1.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 421:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CFG0_CHANNEL_COUNT == 1u) && (ADC_1_CFG0_CHANNELS_MODE != 0u) */
 422:Generated_Source\PSoC6/ADC_1.h **** #elif (ADC_1_CFG0_SINGLE_PRESENT != 0u)
 423:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT         ADC_1_CFG0_NEG_OTHER
 424:Generated_Source\PSoC6/ADC_1.h **** #else
 425:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT         0u
 426:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 427:Generated_Source\PSoC6/ADC_1.h **** 
 428:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CHANNELS_NUM > 1u)
 429:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG0 << SAR_CTRL_N
 430:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SWITCH_CONF_INIT          0u
 431:Generated_Source\PSoC6/ADC_1.h **** #else /* Disable SAR sequencer from enabling routing switches in single channel mode */
 432:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SWITCH_CONF_INIT          SAR_CTRL_SWITCH_DISABLE_Msk
 433:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_NEG_OTHER                 0u
 434:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_CHANNEL_COUNT > 1u */
 435:Generated_Source\PSoC6/ADC_1.h **** 
 436:Generated_Source\PSoC6/ADC_1.h **** /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 437:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CHANNELS_NUM == 1u)
 438:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_HW_CTRL_NEGVREF_INIT      0u
 439:Generated_Source\PSoC6/ADC_1.h **** #else
 440:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 93


 441:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_CHANNEL_COUNT == 1u */
 442:Generated_Source\PSoC6/ADC_1.h **** 
 443:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 444:Generated_Source\PSoC6/ADC_1.h **** 
 445:Generated_Source\PSoC6/ADC_1.h **** /* SAMPLE_CTRL initial values */
 446:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SE_RESULT_FORMAT_INIT \
 447:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SINGLE_ENDED_FORMAT \
 448:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 449:Generated_Source\PSoC6/ADC_1.h **** 
 450:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DIFF_RESULT_FORMAT_INIT \
 451:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_DIFFERENTIAL_FORMAT \
 452:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 453:Generated_Source\PSoC6/ADC_1.h **** 
 454:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVG_SAMPLES_NUM_INIT \
 455:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SAMPLES_AVERAGED \
 456:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 457:Generated_Source\PSoC6/ADC_1.h **** 
 458:Generated_Source\PSoC6/ADC_1.h **** /* Combination of Average Mode and Average Shift */
 459:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVG_MODE_INIT \
 460:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_AVGERAGING_MODE \
 461:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 462:Generated_Source\PSoC6/ADC_1.h **** 
 463:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_TRIGGER_OUT_INIT      (0u)
 464:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_UAB_SCAN_MODE_INIT    (0u)
 465:Generated_Source\PSoC6/ADC_1.h **** 
 466:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_POWER_INIT  \
 467:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_VREF_PWR \
 468:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_PWR_CTRL_VREF_Pos)
 469:Generated_Source\PSoC6/ADC_1.h **** 
 470:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_PWR_INIT  \
 471:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_COMP_PWR \
 472:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_COMP_PWR_Pos)
 473:Generated_Source\PSoC6/ADC_1.h **** 
 474:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_DLY_INIT  \
 475:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_COMP_DLY \
 476:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_COMP_DLY_Pos)
 477:Generated_Source\PSoC6/ADC_1.h **** 
 478:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CTRL_INIT  \
 479:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_VREF_POWER_INIT \
 480:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_VREF_SEL_MASK \
 481:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_SE_NEG_INPUT_INIT \
 482:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_HW_CTRL_NEGVREF_INIT \
 483:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_COMP_DLY_INIT \
 484:Generated_Source\PSoC6/ADC_1.h ****         | SAR_CTRL_REFBUF_EN_Msk \
 485:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_COMP_PWR_INIT \
 486:Generated_Source\PSoC6/ADC_1.h ****         | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 487:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_SWITCH_CONF_INIT )
 488:Generated_Source\PSoC6/ADC_1.h **** 
 489:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_CTRL_INIT \
 490:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SE_RESULT_FORMAT_INIT \
 491:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DIFF_RESULT_FORMAT_INIT \
 492:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_AVG_SAMPLES_NUM_INIT \
 493:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_AVG_MODE_INIT \
 494:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT \
 495:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DSI_TRIGGER_EN_INIT \
 496:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_UAB_SCAN_MODE_INIT \
 497:Generated_Source\PSoC6/ADC_1.h ****         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 94


 498:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_TRIGGER_OUT_INIT \
 499:Generated_Source\PSoC6/ADC_1.h ****         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 500:Generated_Source\PSoC6/ADC_1.h **** )
 501:Generated_Source\PSoC6/ADC_1.h **** 
 502:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_THRES_INIT \
 503:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_LOW_LIMIT \
 504:Generated_Source\PSoC6/ADC_1.h ****         | (uint32)((uint32)ADC_1_CFG0_HIGH_LIMIT \
 505:Generated_Source\PSoC6/ADC_1.h ****         << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 506:Generated_Source\PSoC6/ADC_1.h **** 
 507:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG0_RANGE_COND
 508:Generated_Source\PSoC6/ADC_1.h **** 
 509:Generated_Source\PSoC6/ADC_1.h **** /* Misc Config
 510:Generated_Source\PSoC6/ADC_1.h ****     [0] - Freerunning: Set if the sample mode is freerunning
 511:Generated_Source\PSoC6/ADC_1.h **** */
 512:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_MISC_CONFIG_INIT \
 513:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_FREERUNNING)
 514:Generated_Source\PSoC6/ADC_1.h **** 
 515:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 516:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 0 calculated defines                                     */
 517:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 518:Generated_Source\PSoC6/ADC_1.h **** 
 519:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 520:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 1 calculated defines                                   */
 521:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 522:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 1)
 523:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_TIME01_INIT \
 524:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG1_APERTURE_TIME0 \
 525:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 526:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG1_APERTURE_TIME1 \
 527:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 528:Generated_Source\PSoC6/ADC_1.h **** 
 529:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_TIME23_INIT \
 530:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG1_APERTURE_TIME2 \
 531:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 532:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG1_APERTURE_TIME3 \
 533:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 534:Generated_Source\PSoC6/ADC_1.h **** 
 535:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 536:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DSI_TRIGGER_EN_INIT \
 537:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_USE_SOC \
 538:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 539:Generated_Source\PSoC6/ADC_1.h **** 
 540:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 541:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG1_FREERUNNING == ADC_1_FREERUNNING)
 542:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 543:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 544:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT    (0u)
 545:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG1_FREERUNNING == ADC_1_FREERUNNING */
 546:Generated_Source\PSoC6/ADC_1.h **** 
 547:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT */
 548:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 549:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT \
 550:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 551:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 552:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 553:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 554:Generated_Source\PSoC6/ADC_1.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 95


 555:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG1_SINGLE_PRESENT != 0u)
 556:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT         ADC_1_CFG1_NEG_OTHER
 557:Generated_Source\PSoC6/ADC_1.h ****     #else
 558:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT         0u
 559:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 560:Generated_Source\PSoC6/ADC_1.h **** 
 561:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG1 << SAR_CTRL_N
 562:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SWITCH_CONF_INIT          0u
 563:Generated_Source\PSoC6/ADC_1.h **** 
 564:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 565:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 566:Generated_Source\PSoC6/ADC_1.h **** 
 567:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 568:Generated_Source\PSoC6/ADC_1.h **** 
 569:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 570:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SE_RESULT_FORMAT_INIT \
 571:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SINGLE_ENDED_FORMAT \
 572:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 573:Generated_Source\PSoC6/ADC_1.h **** 
 574:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DIFF_RESULT_FORMAT_INIT \
 575:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_DIFFERENTIAL_FORMAT \
 576:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 577:Generated_Source\PSoC6/ADC_1.h **** 
 578:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVG_SAMPLES_NUM_INIT \
 579:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SAMPLES_AVERAGED \
 580:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 581:Generated_Source\PSoC6/ADC_1.h **** 
 582:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 583:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVG_MODE_INIT \
 584:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_AVGERAGING_MODE \
 585:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 586:Generated_Source\PSoC6/ADC_1.h **** 
 587:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_TRIGGER_OUT_INIT      (0u)
 588:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_UAB_SCAN_MODE_INIT    (0u)
 589:Generated_Source\PSoC6/ADC_1.h **** 
 590:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_POWER_INIT  \
 591:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_VREF_PWR \
 592:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 593:Generated_Source\PSoC6/ADC_1.h **** 
 594:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_PWR_INIT  \
 595:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_COMP_PWR \
 596:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 597:Generated_Source\PSoC6/ADC_1.h **** 
 598:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_DLY_INIT  \
 599:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_COMP_DLY \
 600:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 601:Generated_Source\PSoC6/ADC_1.h **** 
 602:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CTRL_INIT  \
 603:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_VREF_POWER_INIT \
 604:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_VREF_SEL_MASK \
 605:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_SE_NEG_INPUT_INIT \
 606:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_HW_CTRL_NEGVREF_INIT \
 607:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_COMP_DLY_INIT \
 608:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 609:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_COMP_PWR_INIT \
 610:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 611:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_SWITCH_CONF_INIT )
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 96


 612:Generated_Source\PSoC6/ADC_1.h **** 
 613:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_CTRL_INIT \
 614:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SE_RESULT_FORMAT_INIT \
 615:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DIFF_RESULT_FORMAT_INIT \
 616:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_AVG_SAMPLES_NUM_INIT \
 617:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_AVG_MODE_INIT \
 618:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT \
 619:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DSI_TRIGGER_EN_INIT \
 620:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_UAB_SCAN_MODE_INIT \
 621:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 622:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_TRIGGER_OUT_INIT \
 623:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 624:Generated_Source\PSoC6/ADC_1.h ****     )
 625:Generated_Source\PSoC6/ADC_1.h **** 
 626:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_THRES_INIT \
 627:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_LOW_LIMIT \
 628:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG1_HIGH_LIMIT \
 629:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 630:Generated_Source\PSoC6/ADC_1.h **** 
 631:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG1_RANGE_COND
 632:Generated_Source\PSoC6/ADC_1.h **** 
 633:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 634:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 635:Generated_Source\PSoC6/ADC_1.h ****     */
 636:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_MISC_CONFIG_INIT \
 637:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_FREERUNNING)
 638:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 1 */
 639:Generated_Source\PSoC6/ADC_1.h **** 
 640:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 641:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 1 calculated defines                                     */
 642:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 643:Generated_Source\PSoC6/ADC_1.h **** 
 644:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 645:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 2 calculated defines                                   */
 646:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 647:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 2)
 648:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_TIME01_INIT \
 649:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG2_APERTURE_TIME0 \
 650:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 651:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG2_APERTURE_TIME1 \
 652:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 653:Generated_Source\PSoC6/ADC_1.h **** 
 654:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_TIME23_INIT \
 655:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG2_APERTURE_TIME2 \
 656:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 657:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG2_APERTURE_TIME3 \
 658:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 659:Generated_Source\PSoC6/ADC_1.h **** 
 660:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 661:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DSI_TRIGGER_EN_INIT \
 662:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_USE_SOC \
 663:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 664:Generated_Source\PSoC6/ADC_1.h **** 
 665:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 666:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG2_FREERUNNING == ADC_1_FREERUNNING)
 667:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 668:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 97


 669:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT    (0u)
 670:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG2_FREERUNNING == ADC_1_FREERUNNING */
 671:Generated_Source\PSoC6/ADC_1.h **** 
 672:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT */
 673:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 674:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT \
 675:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 676:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 677:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 678:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 679:Generated_Source\PSoC6/ADC_1.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 680:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG2_SINGLE_PRESENT != 0u)
 681:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT         ADC_1_CFG2_NEG_OTHER
 682:Generated_Source\PSoC6/ADC_1.h ****     #else
 683:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT         0u
 684:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 685:Generated_Source\PSoC6/ADC_1.h **** 
 686:Generated_Source\PSoC6/ADC_1.h ****    #define ADC_1_CFG2_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG2 << SAR_CTRL_NE
 687:Generated_Source\PSoC6/ADC_1.h **** 
 688:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SWITCH_CONF_INIT          0u
 689:Generated_Source\PSoC6/ADC_1.h **** 
 690:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 691:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 692:Generated_Source\PSoC6/ADC_1.h **** 
 693:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 694:Generated_Source\PSoC6/ADC_1.h **** 
 695:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 696:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SE_RESULT_FORMAT_INIT \
 697:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SINGLE_ENDED_FORMAT \
 698:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 699:Generated_Source\PSoC6/ADC_1.h **** 
 700:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DIFF_RESULT_FORMAT_INIT \
 701:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_DIFFERENTIAL_FORMAT \
 702:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 703:Generated_Source\PSoC6/ADC_1.h **** 
 704:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVG_SAMPLES_NUM_INIT \
 705:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SAMPLES_AVERAGED \
 706:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 707:Generated_Source\PSoC6/ADC_1.h **** 
 708:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 709:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVG_MODE_INIT \
 710:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_AVGERAGING_MODE \
 711:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 712:Generated_Source\PSoC6/ADC_1.h **** 
 713:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_TRIGGER_OUT_INIT      (0u)
 714:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_UAB_SCAN_MODE_INIT    (0u)
 715:Generated_Source\PSoC6/ADC_1.h **** 
 716:Generated_Source\PSoC6/ADC_1.h **** 
 717:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_POWER_INIT  \
 718:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_VREF_PWR \
 719:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 720:Generated_Source\PSoC6/ADC_1.h **** 
 721:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_PWR_INIT  \
 722:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_COMP_PWR \
 723:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 724:Generated_Source\PSoC6/ADC_1.h **** 
 725:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_DLY_INIT  \
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 98


 726:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_COMP_DLY \
 727:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 728:Generated_Source\PSoC6/ADC_1.h **** 
 729:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CTRL_INIT  \
 730:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_VREF_POWER_INIT \
 731:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_VREF_SEL_MASK \
 732:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_SE_NEG_INPUT_INIT \
 733:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_HW_CTRL_NEGVREF_INIT \
 734:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_COMP_DLY_INIT \
 735:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 736:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_COMP_PWR_INIT \
 737:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 738:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_SWITCH_CONF_INIT )
 739:Generated_Source\PSoC6/ADC_1.h **** 
 740:Generated_Source\PSoC6/ADC_1.h **** 
 741:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_CTRL_INIT \
 742:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SE_RESULT_FORMAT_INIT \
 743:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DIFF_RESULT_FORMAT_INIT \
 744:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_AVG_SAMPLES_NUM_INIT \
 745:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_AVG_MODE_INIT \
 746:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT \
 747:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DSI_TRIGGER_EN_INIT \
 748:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_UAB_SCAN_MODE_INIT \
 749:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 750:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_TRIGGER_OUT_INIT \
 751:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 752:Generated_Source\PSoC6/ADC_1.h ****     )
 753:Generated_Source\PSoC6/ADC_1.h **** 
 754:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_THRES_INIT \
 755:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_LOW_LIMIT \
 756:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG2_HIGH_LIMIT \
 757:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 758:Generated_Source\PSoC6/ADC_1.h **** 
 759:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG2_RANGE_COND
 760:Generated_Source\PSoC6/ADC_1.h **** 
 761:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 762:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 763:Generated_Source\PSoC6/ADC_1.h ****     */
 764:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_MISC_CONFIG_INIT \
 765:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_FREERUNNING)
 766:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 2 */
 767:Generated_Source\PSoC6/ADC_1.h **** 
 768:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 769:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 2 calculated defines                                     */
 770:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 771:Generated_Source\PSoC6/ADC_1.h **** 
 772:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 773:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 3 calculated defines                                   */
 774:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 775:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 3)
 776:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_TIME01_INIT \
 777:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG3_APERTURE_TIME0 \
 778:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 779:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG3_APERTURE_TIME1 \
 780:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 781:Generated_Source\PSoC6/ADC_1.h **** 
 782:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_TIME23_INIT \
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 99


 783:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG3_APERTURE_TIME2 \
 784:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 785:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG3_APERTURE_TIME3 \
 786:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 787:Generated_Source\PSoC6/ADC_1.h **** 
 788:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 789:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DSI_TRIGGER_EN_INIT \
 790:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_USE_SOC \
 791:Generated_Source\PSoC6/ADC_1.h ****              << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 792:Generated_Source\PSoC6/ADC_1.h **** 
 793:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 794:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG3_FREERUNNING == ADC_1_FREERUNNING)
 795:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 796:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 797:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT    (0u)
 798:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG3_FREERUNNING == ADC_1_FREERUNNING */
 799:Generated_Source\PSoC6/ADC_1.h **** 
 800:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT  */
 801:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 802:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT \
 803:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 804:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 805:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 806:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 807:Generated_Source\PSoC6/ADC_1.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 808:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG3_SINGLE_PRESENT != 0u)
 809:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT         ADC_1_CFG3_NEG_OTHER
 810:Generated_Source\PSoC6/ADC_1.h ****     #else
 811:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT         0u
 812:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 813:Generated_Source\PSoC6/ADC_1.h **** 
 814:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG3 << SAR_CTRL_N
 815:Generated_Source\PSoC6/ADC_1.h **** 
 816:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SWITCH_CONF_INIT          0u
 817:Generated_Source\PSoC6/ADC_1.h **** 
 818:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 819:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 820:Generated_Source\PSoC6/ADC_1.h **** 
 821:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 822:Generated_Source\PSoC6/ADC_1.h **** 
 823:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 824:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SE_RESULT_FORMAT_INIT \
 825:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SINGLE_ENDED_FORMAT \
 826:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 827:Generated_Source\PSoC6/ADC_1.h **** 
 828:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DIFF_RESULT_FORMAT_INIT \
 829:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_DIFFERENTIAL_FORMAT \
 830:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 831:Generated_Source\PSoC6/ADC_1.h **** 
 832:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVG_SAMPLES_NUM_INIT \
 833:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SAMPLES_AVERAGED \
 834:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 835:Generated_Source\PSoC6/ADC_1.h **** 
 836:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 837:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVG_MODE_INIT \
 838:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_AVGERAGING_MODE \
 839:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 100


 840:Generated_Source\PSoC6/ADC_1.h **** 
 841:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_TRIGGER_OUT_INIT      (0u)
 842:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_UAB_SCAN_MODE_INIT    (0u)
 843:Generated_Source\PSoC6/ADC_1.h **** 
 844:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_POWER_INIT  \
 845:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_VREF_PWR \
 846:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 847:Generated_Source\PSoC6/ADC_1.h **** 
 848:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_PWR_INIT  \
 849:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_COMP_PWR \
 850:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 851:Generated_Source\PSoC6/ADC_1.h **** 
 852:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_DLY_INIT  \
 853:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_COMP_DLY \
 854:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 855:Generated_Source\PSoC6/ADC_1.h **** 
 856:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CTRL_INIT  \
 857:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_VREF_POWER_INIT \
 858:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_VREF_SEL_MASK \
 859:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_SE_NEG_INPUT_INIT \
 860:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_HW_CTRL_NEGVREF_INIT \
 861:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_COMP_DLY_INIT \
 862:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 863:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_COMP_PWR_INIT \
 864:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 865:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_SWITCH_CONF_INIT )
 866:Generated_Source\PSoC6/ADC_1.h **** 
 867:Generated_Source\PSoC6/ADC_1.h **** 
 868:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_CTRL_INIT \
 869:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SE_RESULT_FORMAT_INIT \
 870:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DIFF_RESULT_FORMAT_INIT \
 871:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_AVG_SAMPLES_NUM_INIT \
 872:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_AVG_MODE_INIT \
 873:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT \
 874:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DSI_TRIGGER_EN_INIT \
 875:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_UAB_SCAN_MODE_INIT \
 876:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 877:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_TRIGGER_OUT_INIT \
 878:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 879:Generated_Source\PSoC6/ADC_1.h ****     )
 880:Generated_Source\PSoC6/ADC_1.h **** 
 881:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_THRES_INIT \
 882:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_LOW_LIMIT \
 883:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG3_HIGH_LIMIT \
 884:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 885:Generated_Source\PSoC6/ADC_1.h **** 
 886:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG3_RANGE_COND
 887:Generated_Source\PSoC6/ADC_1.h **** 
 888:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 889:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 890:Generated_Source\PSoC6/ADC_1.h ****     */
 891:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_MISC_CONFIG_INIT \
 892:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_FREERUNNING )
 893:Generated_Source\PSoC6/ADC_1.h **** 
 894:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 3 */
 895:Generated_Source\PSoC6/ADC_1.h **** 
 896:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 101


 897:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 3 calculated defines                                     */
 898:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 899:Generated_Source\PSoC6/ADC_1.h **** 
 900:Generated_Source\PSoC6/ADC_1.h **** /******************************************************************************
 901:Generated_Source\PSoC6/ADC_1.h **** * Function Name: ADC_1_Enable
 902:Generated_Source\PSoC6/ADC_1.h **** ****************************************************************************//*
 903:Generated_Source\PSoC6/ADC_1.h **** *
 904:Generated_Source\PSoC6/ADC_1.h **** * \brief Enables the component.
 905:Generated_Source\PSoC6/ADC_1.h **** *
 906:Generated_Source\PSoC6/ADC_1.h **** * \param None
 907:Generated_Source\PSoC6/ADC_1.h **** *
 908:Generated_Source\PSoC6/ADC_1.h **** * \return None
 909:Generated_Source\PSoC6/ADC_1.h **** *
 910:Generated_Source\PSoC6/ADC_1.h **** * \sideeffect
 911:Generated_Source\PSoC6/ADC_1.h **** *  None
 912:Generated_Source\PSoC6/ADC_1.h **** *
 913:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 914:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Enable(void)
 915:Generated_Source\PSoC6/ADC_1.h **** {
 916:Generated_Source\PSoC6/ADC_1.h ****     Cy_SAR_Enable(ADC_1_SAR__HW);
 517              		.loc 4 916 0
 518 0016 0348     		ldr	r0, .L36+4
 519 0018 FFF7FEFF 		bl	Cy_SAR_Enable
 520              	.LVL25:
 521              	.LBE53:
 522              	.LBE52:
  76:Generated_Source\PSoC6/ADC_1.c **** 
 523              		.loc 1 76 0
 524              		@ sp needed
 525 001c 70BD     		pop	{r4, r5, r6, pc}
 526              	.L37:
 527 001e C046     		.align	2
 528              	.L36:
 529 0020 00000000 		.word	.LANCHOR0
 530 0024 00001D41 		.word	1092419584
 531              		.cfi_endproc
 532              	.LFE186:
 533              		.size	ADC_1_Start, .-ADC_1_Start
 534              		.section	.text.ADC_1_StartEx,"ax",%progbits
 535              		.align	1
 536              		.global	ADC_1_StartEx
 537              		.code	16
 538              		.thumb_func
 539              		.type	ADC_1_StartEx, %function
 540              	ADC_1_StartEx:
 541              	.LFB187:
  95:Generated_Source\PSoC6/ADC_1.c ****     ADC_1_Start();
 542              		.loc 1 95 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              	.LVL26:
 547 0000 10B5     		push	{r4, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 4, -8
 550              		.cfi_offset 14, -4
  96:Generated_Source\PSoC6/ADC_1.c **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 102


 551              		.loc 1 96 0
 552 0002 FFF7FEFF 		bl	ADC_1_Start
 553              	.LVL27:
 113:Generated_Source\PSoC6/ADC_1.c **** 
 554              		.loc 1 113 0
 555              		@ sp needed
 556 0006 10BD     		pop	{r4, pc}
 557              		.cfi_endproc
 558              	.LFE187:
 559              		.size	ADC_1_StartEx, .-ADC_1_StartEx
 560              		.section	.text.ADC_1_SelectConfig,"ax",%progbits
 561              		.align	1
 562              		.global	ADC_1_SelectConfig
 563              		.code	16
 564              		.thumb_func
 565              		.type	ADC_1_SelectConfig, %function
 566              	ADC_1_SelectConfig:
 567              	.LFB189:
 171:Generated_Source\PSoC6/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 568              		.loc 1 171 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 0
 571              		@ frame_needed = 0, uses_anonymous_args = 0
 572              	.LVL28:
 573 0000 70B5     		push	{r4, r5, r6, lr}
 574              		.cfi_def_cfa_offset 16
 575              		.cfi_offset 4, -16
 576              		.cfi_offset 5, -12
 577              		.cfi_offset 6, -8
 578              		.cfi_offset 14, -4
 171:Generated_Source\PSoC6/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 579              		.loc 1 171 0
 580 0002 0D00     		movs	r5, r1
 173:Generated_Source\PSoC6/ADC_1.c ****     {
 581              		.loc 1 173 0
 582 0004 0028     		cmp	r0, #0
 583 0006 1AD1     		bne	.L39
 584              	.LVL29:
 177:Generated_Source\PSoC6/ADC_1.c **** 
 585              		.loc 1 177 0
 586 0008 0126     		movs	r6, #1
 587              	.LBB58:
 588              	.LBB59:
 589              	.LBB60:
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 590              		.loc 3 1440 0
 591 000a 0D4A     		ldr	r2, .L44
 592              	.LBE60:
 593              	.LBE59:
 594              	.LBE58:
 177:Generated_Source\PSoC6/ADC_1.c **** 
 595              		.loc 1 177 0
 596 000c 0D4C     		ldr	r4, .L44+4
 597              	.LBB63:
 598              	.LBB62:
 599              	.LBB61:
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 103


 600              		.loc 3 1440 0
 601 000e 1368     		ldr	r3, [r2]
 602 0010 5B00     		lsls	r3, r3, #1
 603 0012 5B08     		lsrs	r3, r3, #1
 604 0014 1360     		str	r3, [r2]
 605              	.LVL30:
 606              	.LBE61:
 607              	.LBE62:
 608              	.LBE63:
 179:Generated_Source\PSoC6/ADC_1.c ****         {
 609              		.loc 1 179 0
 610 0016 2379     		ldrb	r3, [r4, #4]
 177:Generated_Source\PSoC6/ADC_1.c **** 
 611              		.loc 1 177 0
 612 0018 6671     		strb	r6, [r4, #5]
 179:Generated_Source\PSoC6/ADC_1.c ****         {
 613              		.loc 1 179 0
 614 001a 002B     		cmp	r3, #0
 615 001c 04D1     		bne	.L42
 181:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 616              		.loc 1 181 0
 617 001e FFF7FEFF 		bl	ADC_1_Init
 618              	.LVL31:
 182:Generated_Source\PSoC6/ADC_1.c ****         }
 619              		.loc 1 182 0
 620 0022 2379     		ldrb	r3, [r4, #4]
 621 0024 3343     		orrs	r3, r6
 622 0026 2371     		strb	r3, [r4, #4]
 623              	.L42:
 188:Generated_Source\PSoC6/ADC_1.c **** 
 624              		.loc 1 188 0
 625 0028 0748     		ldr	r0, .L44+8
 626 002a FFF7FEFF 		bl	ADC_1_InitConfig
 627              	.LVL32:
 194:Generated_Source\PSoC6/ADC_1.c **** 
 628              		.loc 1 194 0
 629 002e 0023     		movs	r3, #0
 630 0030 2360     		str	r3, [r4]
 196:Generated_Source\PSoC6/ADC_1.c ****         {
 631              		.loc 1 196 0
 632 0032 012D     		cmp	r5, #1
 633 0034 03D1     		bne	.L39
 199:Generated_Source\PSoC6/ADC_1.c **** 
 634              		.loc 1 199 0
 635 0036 FFF7FEFF 		bl	ADC_1_Start
 636              	.LVL33:
 202:Generated_Source\PSoC6/ADC_1.c ****         }
 637              		.loc 1 202 0
 638 003a FFF7FEFF 		bl	ADC_1_StartConvert
 639              	.LVL34:
 640              	.L39:
 206:Generated_Source\PSoC6/ADC_1.c **** 
 641              		.loc 1 206 0
 642              		@ sp needed
 643              	.LVL35:
 644 003e 70BD     		pop	{r4, r5, r6, pc}
 645              	.L45:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 104


 646              		.align	2
 647              	.L44:
 648 0040 00001D41 		.word	1092419584
 649 0044 00000000 		.word	.LANCHOR0
 650 0048 00000000 		.word	ADC_1_allConfigs
 651              		.cfi_endproc
 652              	.LFE189:
 653              		.size	ADC_1_SelectConfig, .-ADC_1_SelectConfig
 654              		.global	ADC_1_currentConfig
 655              		.global	ADC_1_selected
 656              		.global	ADC_1_initVar
 657              		.bss
 658              		.align	2
 659              		.set	.LANCHOR0,. + 0
 660              		.type	ADC_1_currentConfig, %object
 661              		.size	ADC_1_currentConfig, 4
 662              	ADC_1_currentConfig:
 663 0000 00000000 		.space	4
 664              		.type	ADC_1_initVar, %object
 665              		.size	ADC_1_initVar, 1
 666              	ADC_1_initVar:
 667 0004 00       		.space	1
 668              		.type	ADC_1_selected, %object
 669              		.size	ADC_1_selected, 1
 670              	ADC_1_selected:
 671 0005 00       		.space	1
 672              		.text
 673              	.Letext0:
 674              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 675              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 676              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_peri.h"
 677              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 678              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 679              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 680              		.file 11 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 681              		.file 12 "Generated_Source\\PSoC6\\ADC_1_intSarClock.h"
 682              		.section	.debug_info,"",%progbits
 683              	.Ldebug_info0:
 684 0000 D8140000 		.4byte	0x14d8
 685 0004 0400     		.2byte	0x4
 686 0006 00000000 		.4byte	.Ldebug_abbrev0
 687 000a 04       		.byte	0x4
 688 000b 01       		.uleb128 0x1
 689 000c 530D0000 		.4byte	.LASF286
 690 0010 0C       		.byte	0xc
 691 0011 51010000 		.4byte	.LASF287
 692 0015 B7020000 		.4byte	.LASF288
 693 0019 40000000 		.4byte	.Ldebug_ranges0+0x40
 694 001d 00000000 		.4byte	0
 695 0021 00000000 		.4byte	.Ldebug_line0
 696 0025 02       		.uleb128 0x2
 697 0026 02       		.byte	0x2
 698 0027 05       		.byte	0x5
 699 0028 9F020000 		.4byte	.LASF0
 700 002c 02       		.uleb128 0x2
 701 002d 01       		.byte	0x1
 702 002e 08       		.byte	0x8
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 105


 703 002f 740E0000 		.4byte	.LASF1
 704 0033 02       		.uleb128 0x2
 705 0034 01       		.byte	0x1
 706 0035 06       		.byte	0x6
 707 0036 D60F0000 		.4byte	.LASF2
 708 003a 03       		.uleb128 0x3
 709 003b E30C0000 		.4byte	.LASF3
 710 003f 05       		.byte	0x5
 711 0040 1D       		.byte	0x1d
 712 0041 2C000000 		.4byte	0x2c
 713 0045 03       		.uleb128 0x3
 714 0046 F9080000 		.4byte	.LASF4
 715 004a 05       		.byte	0x5
 716 004b 29       		.byte	0x29
 717 004c 25000000 		.4byte	0x25
 718 0050 03       		.uleb128 0x3
 719 0051 59050000 		.4byte	.LASF5
 720 0055 05       		.byte	0x5
 721 0056 2B       		.byte	0x2b
 722 0057 5B000000 		.4byte	0x5b
 723 005b 02       		.uleb128 0x2
 724 005c 02       		.byte	0x2
 725 005d 07       		.byte	0x7
 726 005e 570A0000 		.4byte	.LASF6
 727 0062 02       		.uleb128 0x2
 728 0063 04       		.byte	0x4
 729 0064 05       		.byte	0x5
 730 0065 EF0B0000 		.4byte	.LASF7
 731 0069 03       		.uleb128 0x3
 732 006a 960E0000 		.4byte	.LASF8
 733 006e 05       		.byte	0x5
 734 006f 41       		.byte	0x41
 735 0070 74000000 		.4byte	0x74
 736 0074 02       		.uleb128 0x2
 737 0075 04       		.byte	0x4
 738 0076 07       		.byte	0x7
 739 0077 000E0000 		.4byte	.LASF9
 740 007b 02       		.uleb128 0x2
 741 007c 08       		.byte	0x8
 742 007d 05       		.byte	0x5
 743 007e 84080000 		.4byte	.LASF10
 744 0082 02       		.uleb128 0x2
 745 0083 08       		.byte	0x8
 746 0084 07       		.byte	0x7
 747 0085 E9040000 		.4byte	.LASF11
 748 0089 04       		.uleb128 0x4
 749 008a 04       		.byte	0x4
 750 008b 05       		.byte	0x5
 751 008c 696E7400 		.ascii	"int\000"
 752 0090 02       		.uleb128 0x2
 753 0091 04       		.byte	0x4
 754 0092 07       		.byte	0x7
 755 0093 82010000 		.4byte	.LASF12
 756 0097 03       		.uleb128 0x3
 757 0098 0F080000 		.4byte	.LASF13
 758 009c 06       		.byte	0x6
 759 009d 18       		.byte	0x18
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 106


 760 009e 3A000000 		.4byte	0x3a
 761 00a2 03       		.uleb128 0x3
 762 00a3 C7040000 		.4byte	.LASF14
 763 00a7 06       		.byte	0x6
 764 00a8 20       		.byte	0x20
 765 00a9 45000000 		.4byte	0x45
 766 00ad 03       		.uleb128 0x3
 767 00ae 760A0000 		.4byte	.LASF15
 768 00b2 06       		.byte	0x6
 769 00b3 24       		.byte	0x24
 770 00b4 50000000 		.4byte	0x50
 771 00b8 03       		.uleb128 0x3
 772 00b9 5C040000 		.4byte	.LASF16
 773 00bd 06       		.byte	0x6
 774 00be 30       		.byte	0x30
 775 00bf 69000000 		.4byte	0x69
 776 00c3 02       		.uleb128 0x2
 777 00c4 04       		.byte	0x4
 778 00c5 07       		.byte	0x7
 779 00c6 210B0000 		.4byte	.LASF17
 780 00ca 05       		.uleb128 0x5
 781 00cb B8000000 		.4byte	0xb8
 782 00cf 06       		.uleb128 0x6
 783 00d0 CA000000 		.4byte	0xca
 784 00d4 07       		.uleb128 0x7
 785 00d5 CF000000 		.4byte	0xcf
 786 00d9 E4000000 		.4byte	0xe4
 787 00dd 08       		.uleb128 0x8
 788 00de C3000000 		.4byte	0xc3
 789 00e2 01       		.byte	0x1
 790 00e3 00       		.byte	0
 791 00e4 07       		.uleb128 0x7
 792 00e5 CA000000 		.4byte	0xca
 793 00e9 F4000000 		.4byte	0xf4
 794 00ed 08       		.uleb128 0x8
 795 00ee C3000000 		.4byte	0xc3
 796 00f2 7F       		.byte	0x7f
 797 00f3 00       		.byte	0
 798 00f4 07       		.uleb128 0x7
 799 00f5 CA000000 		.4byte	0xca
 800 00f9 04010000 		.4byte	0x104
 801 00fd 08       		.uleb128 0x8
 802 00fe C3000000 		.4byte	0xc3
 803 0102 0F       		.byte	0xf
 804 0103 00       		.byte	0
 805 0104 07       		.uleb128 0x7
 806 0105 CF000000 		.4byte	0xcf
 807 0109 14010000 		.4byte	0x114
 808 010d 08       		.uleb128 0x8
 809 010e C3000000 		.4byte	0xc3
 810 0112 06       		.byte	0x6
 811 0113 00       		.byte	0
 812 0114 09       		.uleb128 0x9
 813 0115 40       		.byte	0x40
 814 0116 07       		.byte	0x7
 815 0117 27       		.byte	0x27
 816 0118 59010000 		.4byte	0x159
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 107


 817 011c 0A       		.uleb128 0xa
 818 011d E9060000 		.4byte	.LASF18
 819 0121 07       		.byte	0x7
 820 0122 28       		.byte	0x28
 821 0123 CA000000 		.4byte	0xca
 822 0127 00       		.byte	0
 823 0128 0A       		.uleb128 0xa
 824 0129 27000000 		.4byte	.LASF19
 825 012d 07       		.byte	0x7
 826 012e 29       		.byte	0x29
 827 012f 5E010000 		.4byte	0x15e
 828 0133 04       		.byte	0x4
 829 0134 0A       		.uleb128 0xa
 830 0135 B5040000 		.4byte	.LASF20
 831 0139 07       		.byte	0x7
 832 013a 2A       		.byte	0x2a
 833 013b CA000000 		.4byte	0xca
 834 013f 20       		.byte	0x20
 835 0140 0A       		.uleb128 0xa
 836 0141 2B110000 		.4byte	.LASF21
 837 0145 07       		.byte	0x7
 838 0146 2B       		.byte	0x2b
 839 0147 CA000000 		.4byte	0xca
 840 014b 24       		.byte	0x24
 841 014c 0A       		.uleb128 0xa
 842 014d 96100000 		.4byte	.LASF22
 843 0151 07       		.byte	0x7
 844 0152 2C       		.byte	0x2c
 845 0153 78010000 		.4byte	0x178
 846 0157 28       		.byte	0x28
 847 0158 00       		.byte	0
 848 0159 05       		.uleb128 0x5
 849 015a 04010000 		.4byte	0x104
 850 015e 06       		.uleb128 0x6
 851 015f 59010000 		.4byte	0x159
 852 0163 07       		.uleb128 0x7
 853 0164 CF000000 		.4byte	0xcf
 854 0168 73010000 		.4byte	0x173
 855 016c 08       		.uleb128 0x8
 856 016d C3000000 		.4byte	0xc3
 857 0171 05       		.byte	0x5
 858 0172 00       		.byte	0
 859 0173 05       		.uleb128 0x5
 860 0174 63010000 		.4byte	0x163
 861 0178 06       		.uleb128 0x6
 862 0179 73010000 		.4byte	0x173
 863 017d 03       		.uleb128 0x3
 864 017e B6100000 		.4byte	.LASF23
 865 0182 07       		.byte	0x7
 866 0183 2D       		.byte	0x2d
 867 0184 14010000 		.4byte	0x114
 868 0188 0B       		.uleb128 0xb
 869 0189 0002     		.2byte	0x200
 870 018b 07       		.byte	0x7
 871 018c 32       		.byte	0x32
 872 018d 9E010000 		.4byte	0x19e
 873 0191 0A       		.uleb128 0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 108


 874 0192 5D070000 		.4byte	.LASF24
 875 0196 07       		.byte	0x7
 876 0197 33       		.byte	0x33
 877 0198 9E010000 		.4byte	0x19e
 878 019c 00       		.byte	0
 879 019d 00       		.byte	0
 880 019e 05       		.uleb128 0x5
 881 019f E4000000 		.4byte	0xe4
 882 01a3 03       		.uleb128 0x3
 883 01a4 14000000 		.4byte	.LASF25
 884 01a8 07       		.byte	0x7
 885 01a9 34       		.byte	0x34
 886 01aa 88010000 		.4byte	0x188
 887 01ae 09       		.uleb128 0x9
 888 01af 40       		.byte	0x40
 889 01b0 07       		.byte	0x7
 890 01b1 39       		.byte	0x39
 891 01b2 FF010000 		.4byte	0x1ff
 892 01b6 0A       		.uleb128 0xa
 893 01b7 4F100000 		.4byte	.LASF26
 894 01bb 07       		.byte	0x7
 895 01bc 3A       		.byte	0x3a
 896 01bd CA000000 		.4byte	0xca
 897 01c1 00       		.byte	0
 898 01c2 0A       		.uleb128 0xa
 899 01c3 8C100000 		.4byte	.LASF27
 900 01c7 07       		.byte	0x7
 901 01c8 3B       		.byte	0x3b
 902 01c9 CA000000 		.4byte	0xca
 903 01cd 04       		.byte	0x4
 904 01ce 0A       		.uleb128 0xa
 905 01cf 27000000 		.4byte	.LASF19
 906 01d3 07       		.byte	0x7
 907 01d4 3C       		.byte	0x3c
 908 01d5 04020000 		.4byte	0x204
 909 01d9 08       		.byte	0x8
 910 01da 0A       		.uleb128 0xa
 911 01db 55100000 		.4byte	.LASF28
 912 01df 07       		.byte	0x7
 913 01e0 3D       		.byte	0x3d
 914 01e1 CF000000 		.4byte	0xcf
 915 01e5 20       		.byte	0x20
 916 01e6 0A       		.uleb128 0xa
 917 01e7 91100000 		.4byte	.LASF29
 918 01eb 07       		.byte	0x7
 919 01ec 3E       		.byte	0x3e
 920 01ed CA000000 		.4byte	0xca
 921 01f1 24       		.byte	0x24
 922 01f2 0A       		.uleb128 0xa
 923 01f3 96100000 		.4byte	.LASF22
 924 01f7 07       		.byte	0x7
 925 01f8 3F       		.byte	0x3f
 926 01f9 0E020000 		.4byte	0x20e
 927 01fd 28       		.byte	0x28
 928 01fe 00       		.byte	0
 929 01ff 05       		.uleb128 0x5
 930 0200 63010000 		.4byte	0x163
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 109


 931 0204 06       		.uleb128 0x6
 932 0205 FF010000 		.4byte	0x1ff
 933 0209 05       		.uleb128 0x5
 934 020a 63010000 		.4byte	0x163
 935 020e 06       		.uleb128 0x6
 936 020f 09020000 		.4byte	0x209
 937 0213 03       		.uleb128 0x3
 938 0214 48040000 		.4byte	.LASF30
 939 0218 07       		.byte	0x7
 940 0219 40       		.byte	0x40
 941 021a AE010000 		.4byte	0x1ae
 942 021e 09       		.uleb128 0x9
 943 021f 40       		.byte	0x40
 944 0220 07       		.byte	0x7
 945 0221 45       		.byte	0x45
 946 0222 6F020000 		.4byte	0x26f
 947 0226 0A       		.uleb128 0xa
 948 0227 4F100000 		.4byte	.LASF26
 949 022b 07       		.byte	0x7
 950 022c 46       		.byte	0x46
 951 022d CF000000 		.4byte	0xcf
 952 0231 00       		.byte	0
 953 0232 0A       		.uleb128 0xa
 954 0233 8C100000 		.4byte	.LASF27
 955 0237 07       		.byte	0x7
 956 0238 47       		.byte	0x47
 957 0239 CA000000 		.4byte	0xca
 958 023d 04       		.byte	0x4
 959 023e 0A       		.uleb128 0xa
 960 023f 27000000 		.4byte	.LASF19
 961 0243 07       		.byte	0x7
 962 0244 48       		.byte	0x48
 963 0245 74020000 		.4byte	0x274
 964 0249 08       		.byte	0x8
 965 024a 0A       		.uleb128 0xa
 966 024b 55100000 		.4byte	.LASF28
 967 024f 07       		.byte	0x7
 968 0250 49       		.byte	0x49
 969 0251 CF000000 		.4byte	0xcf
 970 0255 20       		.byte	0x20
 971 0256 0A       		.uleb128 0xa
 972 0257 91100000 		.4byte	.LASF29
 973 025b 07       		.byte	0x7
 974 025c 4A       		.byte	0x4a
 975 025d CA000000 		.4byte	0xca
 976 0261 24       		.byte	0x24
 977 0262 0A       		.uleb128 0xa
 978 0263 96100000 		.4byte	.LASF22
 979 0267 07       		.byte	0x7
 980 0268 4B       		.byte	0x4b
 981 0269 7E020000 		.4byte	0x27e
 982 026d 28       		.byte	0x28
 983 026e 00       		.byte	0
 984 026f 05       		.uleb128 0x5
 985 0270 63010000 		.4byte	0x163
 986 0274 06       		.uleb128 0x6
 987 0275 6F020000 		.4byte	0x26f
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 110


 988 0279 05       		.uleb128 0x5
 989 027a 63010000 		.4byte	0x163
 990 027e 06       		.uleb128 0x6
 991 027f 79020000 		.4byte	0x279
 992 0283 03       		.uleb128 0x3
 993 0284 57110000 		.4byte	.LASF31
 994 0288 07       		.byte	0x7
 995 0289 4C       		.byte	0x4c
 996 028a 1E020000 		.4byte	0x21e
 997 028e 0B       		.uleb128 0xb
 998 028f 0054     		.2byte	0x5400
 999 0291 07       		.byte	0x7
 1000 0292 69       		.byte	0x69
 1001 0293 66030000 		.4byte	0x366
 1002 0297 0C       		.uleb128 0xc
 1003 0298 475200   		.ascii	"GR\000"
 1004 029b 07       		.byte	0x7
 1005 029c 6A       		.byte	0x6a
 1006 029d 66030000 		.4byte	0x366
 1007 02a1 00       		.byte	0
 1008 02a2 0D       		.uleb128 0xd
 1009 02a3 110C0000 		.4byte	.LASF32
 1010 02a7 07       		.byte	0x7
 1011 02a8 6B       		.byte	0x6b
 1012 02a9 CA000000 		.4byte	0xca
 1013 02ad 0004     		.2byte	0x400
 1014 02af 0D       		.uleb128 0xd
 1015 02b0 27000000 		.4byte	.LASF19
 1016 02b4 07       		.byte	0x7
 1017 02b5 6C       		.byte	0x6c
 1018 02b6 8B030000 		.4byte	0x38b
 1019 02ba 0404     		.2byte	0x404
 1020 02bc 0D       		.uleb128 0xd
 1021 02bd E2000000 		.4byte	.LASF33
 1022 02c1 07       		.byte	0x7
 1023 02c2 6D       		.byte	0x6d
 1024 02c3 A0030000 		.4byte	0x3a0
 1025 02c7 0008     		.2byte	0x800
 1026 02c9 0D       		.uleb128 0xd
 1027 02ca DE060000 		.4byte	.LASF34
 1028 02ce 07       		.byte	0x7
 1029 02cf 6E       		.byte	0x6e
 1030 02d0 A5030000 		.4byte	0x3a5
 1031 02d4 0009     		.2byte	0x900
 1032 02d6 0D       		.uleb128 0xd
 1033 02d7 36020000 		.4byte	.LASF35
 1034 02db 07       		.byte	0x7
 1035 02dc 6F       		.byte	0x6f
 1036 02dd AA030000 		.4byte	0x3aa
 1037 02e1 000A     		.2byte	0xa00
 1038 02e3 0D       		.uleb128 0xd
 1039 02e4 91060000 		.4byte	.LASF36
 1040 02e8 07       		.byte	0x7
 1041 02e9 70       		.byte	0x70
 1042 02ea BF030000 		.4byte	0x3bf
 1043 02ee 000B     		.2byte	0xb00
 1044 02f0 0D       		.uleb128 0xd
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 111


 1045 02f1 96100000 		.4byte	.LASF22
 1046 02f5 07       		.byte	0x7
 1047 02f6 71       		.byte	0x71
 1048 02f7 CF000000 		.4byte	0xcf
 1049 02fb FC0B     		.2byte	0xbfc
 1050 02fd 0D       		.uleb128 0xd
 1051 02fe E9060000 		.4byte	.LASF18
 1052 0302 07       		.byte	0x7
 1053 0303 72       		.byte	0x72
 1054 0304 C4030000 		.4byte	0x3c4
 1055 0308 000C     		.2byte	0xc00
 1056 030a 0D       		.uleb128 0xd
 1057 030b 7A0B0000 		.4byte	.LASF37
 1058 030f 07       		.byte	0x7
 1059 0310 73       		.byte	0x73
 1060 0311 DE030000 		.4byte	0x3de
 1061 0315 000E     		.2byte	0xe00
 1062 0317 0D       		.uleb128 0xd
 1063 0318 E3050000 		.4byte	.LASF38
 1064 031c 07       		.byte	0x7
 1065 031d 74       		.byte	0x74
 1066 031e CA000000 		.4byte	0xca
 1067 0322 0010     		.2byte	0x1000
 1068 0324 0D       		.uleb128 0xd
 1069 0325 840B0000 		.4byte	.LASF39
 1070 0329 07       		.byte	0x7
 1071 032a 75       		.byte	0x75
 1072 032b F9030000 		.4byte	0x3f9
 1073 032f 0410     		.2byte	0x1004
 1074 0331 0D       		.uleb128 0xd
 1075 0332 7A070000 		.4byte	.LASF40
 1076 0336 07       		.byte	0x7
 1077 0337 76       		.byte	0x76
 1078 0338 FE030000 		.4byte	0x3fe
 1079 033c 0020     		.2byte	0x2000
 1080 033e 0D       		.uleb128 0xd
 1081 033f 59020000 		.4byte	.LASF41
 1082 0343 07       		.byte	0x7
 1083 0344 77       		.byte	0x77
 1084 0345 0E040000 		.4byte	0x40e
 1085 0349 0040     		.2byte	0x4000
 1086 034b 0D       		.uleb128 0xd
 1087 034c 8E0B0000 		.4byte	.LASF42
 1088 0350 07       		.byte	0x7
 1089 0351 78       		.byte	0x78
 1090 0352 34040000 		.4byte	0x434
 1091 0356 0048     		.2byte	0x4800
 1092 0358 0D       		.uleb128 0xd
 1093 0359 D7080000 		.4byte	.LASF43
 1094 035d 07       		.byte	0x7
 1095 035e 79       		.byte	0x79
 1096 035f 39040000 		.4byte	0x439
 1097 0363 0050     		.2byte	0x5000
 1098 0365 00       		.byte	0
 1099 0366 07       		.uleb128 0x7
 1100 0367 7D010000 		.4byte	0x17d
 1101 036b 76030000 		.4byte	0x376
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 112


 1102 036f 08       		.uleb128 0x8
 1103 0370 C3000000 		.4byte	0xc3
 1104 0374 0F       		.byte	0xf
 1105 0375 00       		.byte	0
 1106 0376 07       		.uleb128 0x7
 1107 0377 CF000000 		.4byte	0xcf
 1108 037b 86030000 		.4byte	0x386
 1109 037f 08       		.uleb128 0x8
 1110 0380 C3000000 		.4byte	0xc3
 1111 0384 FE       		.byte	0xfe
 1112 0385 00       		.byte	0
 1113 0386 05       		.uleb128 0x5
 1114 0387 76030000 		.4byte	0x376
 1115 038b 06       		.uleb128 0x6
 1116 038c 86030000 		.4byte	0x386
 1117 0390 07       		.uleb128 0x7
 1118 0391 CA000000 		.4byte	0xca
 1119 0395 A0030000 		.4byte	0x3a0
 1120 0399 08       		.uleb128 0x8
 1121 039a C3000000 		.4byte	0xc3
 1122 039e 3F       		.byte	0x3f
 1123 039f 00       		.byte	0
 1124 03a0 05       		.uleb128 0x5
 1125 03a1 90030000 		.4byte	0x390
 1126 03a5 05       		.uleb128 0x5
 1127 03a6 90030000 		.4byte	0x390
 1128 03aa 05       		.uleb128 0x5
 1129 03ab 90030000 		.4byte	0x390
 1130 03af 07       		.uleb128 0x7
 1131 03b0 CA000000 		.4byte	0xca
 1132 03b4 BF030000 		.4byte	0x3bf
 1133 03b8 08       		.uleb128 0x8
 1134 03b9 C3000000 		.4byte	0xc3
 1135 03bd 3E       		.byte	0x3e
 1136 03be 00       		.byte	0
 1137 03bf 05       		.uleb128 0x5
 1138 03c0 AF030000 		.4byte	0x3af
 1139 03c4 05       		.uleb128 0x5
 1140 03c5 E4000000 		.4byte	0xe4
 1141 03c9 07       		.uleb128 0x7
 1142 03ca CF000000 		.4byte	0xcf
 1143 03ce D9030000 		.4byte	0x3d9
 1144 03d2 08       		.uleb128 0x8
 1145 03d3 C3000000 		.4byte	0xc3
 1146 03d7 7F       		.byte	0x7f
 1147 03d8 00       		.byte	0
 1148 03d9 05       		.uleb128 0x5
 1149 03da C9030000 		.4byte	0x3c9
 1150 03de 06       		.uleb128 0x6
 1151 03df D9030000 		.4byte	0x3d9
 1152 03e3 07       		.uleb128 0x7
 1153 03e4 CF000000 		.4byte	0xcf
 1154 03e8 F4030000 		.4byte	0x3f4
 1155 03ec 0E       		.uleb128 0xe
 1156 03ed C3000000 		.4byte	0xc3
 1157 03f1 FE03     		.2byte	0x3fe
 1158 03f3 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 113


 1159 03f4 05       		.uleb128 0x5
 1160 03f5 E3030000 		.4byte	0x3e3
 1161 03f9 06       		.uleb128 0x6
 1162 03fa F4030000 		.4byte	0x3f4
 1163 03fe 07       		.uleb128 0x7
 1164 03ff A3010000 		.4byte	0x1a3
 1165 0403 0E040000 		.4byte	0x40e
 1166 0407 08       		.uleb128 0x8
 1167 0408 C3000000 		.4byte	0xc3
 1168 040c 0F       		.byte	0xf
 1169 040d 00       		.byte	0
 1170 040e 07       		.uleb128 0x7
 1171 040f 13020000 		.4byte	0x213
 1172 0413 1E040000 		.4byte	0x41e
 1173 0417 08       		.uleb128 0x8
 1174 0418 C3000000 		.4byte	0xc3
 1175 041c 1F       		.byte	0x1f
 1176 041d 00       		.byte	0
 1177 041e 07       		.uleb128 0x7
 1178 041f CF000000 		.4byte	0xcf
 1179 0423 2F040000 		.4byte	0x42f
 1180 0427 0E       		.uleb128 0xe
 1181 0428 C3000000 		.4byte	0xc3
 1182 042c FF01     		.2byte	0x1ff
 1183 042e 00       		.byte	0
 1184 042f 05       		.uleb128 0x5
 1185 0430 1E040000 		.4byte	0x41e
 1186 0434 06       		.uleb128 0x6
 1187 0435 2F040000 		.4byte	0x42f
 1188 0439 07       		.uleb128 0x7
 1189 043a 83020000 		.4byte	0x283
 1190 043e 49040000 		.4byte	0x449
 1191 0442 08       		.uleb128 0x8
 1192 0443 C3000000 		.4byte	0xc3
 1193 0447 0F       		.byte	0xf
 1194 0448 00       		.byte	0
 1195 0449 03       		.uleb128 0x3
 1196 044a CF0B0000 		.4byte	.LASF44
 1197 044e 07       		.byte	0x7
 1198 044f 7B       		.byte	0x7b
 1199 0450 8E020000 		.4byte	0x28e
 1200 0454 07       		.uleb128 0x7
 1201 0455 CF000000 		.4byte	0xcf
 1202 0459 64040000 		.4byte	0x464
 1203 045d 08       		.uleb128 0x8
 1204 045e C3000000 		.4byte	0xc3
 1205 0462 0F       		.byte	0xf
 1206 0463 00       		.byte	0
 1207 0464 07       		.uleb128 0x7
 1208 0465 CF000000 		.4byte	0xcf
 1209 0469 74040000 		.4byte	0x474
 1210 046d 08       		.uleb128 0x8
 1211 046e C3000000 		.4byte	0xc3
 1212 0472 02       		.byte	0x2
 1213 0473 00       		.byte	0
 1214 0474 07       		.uleb128 0x7
 1215 0475 CF000000 		.4byte	0xcf
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 114


 1216 0479 84040000 		.4byte	0x484
 1217 047d 08       		.uleb128 0x8
 1218 047e C3000000 		.4byte	0xc3
 1219 0482 0E       		.byte	0xe
 1220 0483 00       		.byte	0
 1221 0484 0B       		.uleb128 0xb
 1222 0485 080F     		.2byte	0xf08
 1223 0487 08       		.byte	0x8
 1224 0488 21       		.byte	0x21
 1225 0489 0C070000 		.4byte	0x70c
 1226 048d 0A       		.uleb128 0xa
 1227 048e BF110000 		.4byte	.LASF45
 1228 0492 08       		.byte	0x8
 1229 0493 22       		.byte	0x22
 1230 0494 CA000000 		.4byte	0xca
 1231 0498 00       		.byte	0
 1232 0499 0A       		.uleb128 0xa
 1233 049a 6B090000 		.4byte	.LASF46
 1234 049e 08       		.byte	0x8
 1235 049f 23       		.byte	0x23
 1236 04a0 CA000000 		.4byte	0xca
 1237 04a4 04       		.byte	0x4
 1238 04a5 0A       		.uleb128 0xa
 1239 04a6 27000000 		.4byte	.LASF19
 1240 04aa 08       		.byte	0x8
 1241 04ab 24       		.byte	0x24
 1242 04ac 11070000 		.4byte	0x711
 1243 04b0 08       		.byte	0x8
 1244 04b1 0A       		.uleb128 0xa
 1245 04b2 1F030000 		.4byte	.LASF47
 1246 04b6 08       		.byte	0x8
 1247 04b7 25       		.byte	0x25
 1248 04b8 CA000000 		.4byte	0xca
 1249 04bc 10       		.byte	0x10
 1250 04bd 0A       		.uleb128 0xa
 1251 04be 40050000 		.4byte	.LASF48
 1252 04c2 08       		.byte	0x8
 1253 04c3 26       		.byte	0x26
 1254 04c4 CA000000 		.4byte	0xca
 1255 04c8 14       		.byte	0x14
 1256 04c9 0A       		.uleb128 0xa
 1257 04ca 740C0000 		.4byte	.LASF49
 1258 04ce 08       		.byte	0x8
 1259 04cf 27       		.byte	0x27
 1260 04d0 CA000000 		.4byte	0xca
 1261 04d4 18       		.byte	0x18
 1262 04d5 0A       		.uleb128 0xa
 1263 04d6 72060000 		.4byte	.LASF50
 1264 04da 08       		.byte	0x8
 1265 04db 28       		.byte	0x28
 1266 04dc CA000000 		.4byte	0xca
 1267 04e0 1C       		.byte	0x1c
 1268 04e1 0A       		.uleb128 0xa
 1269 04e2 22010000 		.4byte	.LASF51
 1270 04e6 08       		.byte	0x8
 1271 04e7 29       		.byte	0x29
 1272 04e8 CA000000 		.4byte	0xca
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 115


 1273 04ec 20       		.byte	0x20
 1274 04ed 0A       		.uleb128 0xa
 1275 04ee F6090000 		.4byte	.LASF52
 1276 04f2 08       		.byte	0x8
 1277 04f3 2A       		.byte	0x2a
 1278 04f4 CA000000 		.4byte	0xca
 1279 04f8 24       		.byte	0x24
 1280 04f9 0A       		.uleb128 0xa
 1281 04fa 96100000 		.4byte	.LASF22
 1282 04fe 08       		.byte	0x8
 1283 04ff 2B       		.byte	0x2b
 1284 0500 2B070000 		.4byte	0x72b
 1285 0504 28       		.byte	0x28
 1286 0505 0A       		.uleb128 0xa
 1287 0506 5D0E0000 		.4byte	.LASF53
 1288 050a 08       		.byte	0x8
 1289 050b 2C       		.byte	0x2c
 1290 050c 30070000 		.4byte	0x730
 1291 0510 80       		.byte	0x80
 1292 0511 0A       		.uleb128 0xa
 1293 0512 7A0B0000 		.4byte	.LASF37
 1294 0516 08       		.byte	0x8
 1295 0517 2D       		.byte	0x2d
 1296 0518 3A070000 		.4byte	0x73a
 1297 051c C0       		.byte	0xc0
 1298 051d 0D       		.uleb128 0xd
 1299 051e BD0C0000 		.4byte	.LASF54
 1300 0522 08       		.byte	0x8
 1301 0523 2E       		.byte	0x2e
 1302 0524 44070000 		.4byte	0x744
 1303 0528 0001     		.2byte	0x100
 1304 052a 0D       		.uleb128 0xd
 1305 052b 840B0000 		.4byte	.LASF39
 1306 052f 08       		.byte	0x8
 1307 0530 2F       		.byte	0x2f
 1308 0531 4E070000 		.4byte	0x74e
 1309 0535 4001     		.2byte	0x140
 1310 0537 0D       		.uleb128 0xd
 1311 0538 21090000 		.4byte	.LASF55
 1312 053c 08       		.byte	0x8
 1313 053d 30       		.byte	0x30
 1314 053e 58070000 		.4byte	0x758
 1315 0542 8001     		.2byte	0x180
 1316 0544 0D       		.uleb128 0xd
 1317 0545 8E0B0000 		.4byte	.LASF42
 1318 0549 08       		.byte	0x8
 1319 054a 31       		.byte	0x31
 1320 054b 62070000 		.4byte	0x762
 1321 054f C001     		.2byte	0x1c0
 1322 0551 0D       		.uleb128 0xd
 1323 0552 50000000 		.4byte	.LASF56
 1324 0556 08       		.byte	0x8
 1325 0557 32       		.byte	0x32
 1326 0558 CF000000 		.4byte	0xcf
 1327 055c 0002     		.2byte	0x200
 1328 055e 0D       		.uleb128 0xd
 1329 055f 310E0000 		.4byte	.LASF57
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 116


 1330 0563 08       		.byte	0x8
 1331 0564 33       		.byte	0x33
 1332 0565 CF000000 		.4byte	0xcf
 1333 0569 0402     		.2byte	0x204
 1334 056b 0D       		.uleb128 0xd
 1335 056c 19020000 		.4byte	.LASF58
 1336 0570 08       		.byte	0x8
 1337 0571 34       		.byte	0x34
 1338 0572 CF000000 		.4byte	0xcf
 1339 0576 0802     		.2byte	0x208
 1340 0578 0D       		.uleb128 0xd
 1341 0579 E4070000 		.4byte	.LASF59
 1342 057d 08       		.byte	0x8
 1343 057e 35       		.byte	0x35
 1344 057f CF000000 		.4byte	0xcf
 1345 0583 0C02     		.2byte	0x20c
 1346 0585 0D       		.uleb128 0xd
 1347 0586 79040000 		.4byte	.LASF60
 1348 058a 08       		.byte	0x8
 1349 058b 36       		.byte	0x36
 1350 058c CA000000 		.4byte	0xca
 1351 0590 1002     		.2byte	0x210
 1352 0592 0D       		.uleb128 0xd
 1353 0593 65030000 		.4byte	.LASF61
 1354 0597 08       		.byte	0x8
 1355 0598 37       		.byte	0x37
 1356 0599 CA000000 		.4byte	0xca
 1357 059d 1402     		.2byte	0x214
 1358 059f 0D       		.uleb128 0xd
 1359 05a0 61090000 		.4byte	.LASF62
 1360 05a4 08       		.byte	0x8
 1361 05a5 38       		.byte	0x38
 1362 05a6 CA000000 		.4byte	0xca
 1363 05aa 1802     		.2byte	0x218
 1364 05ac 0D       		.uleb128 0xd
 1365 05ad 240D0000 		.4byte	.LASF63
 1366 05b1 08       		.byte	0x8
 1367 05b2 39       		.byte	0x39
 1368 05b3 CF000000 		.4byte	0xcf
 1369 05b7 1C02     		.2byte	0x21c
 1370 05b9 0D       		.uleb128 0xd
 1371 05ba A9020000 		.4byte	.LASF64
 1372 05be 08       		.byte	0x8
 1373 05bf 3A       		.byte	0x3a
 1374 05c0 CA000000 		.4byte	0xca
 1375 05c4 2002     		.2byte	0x220
 1376 05c6 0D       		.uleb128 0xd
 1377 05c7 68070000 		.4byte	.LASF65
 1378 05cb 08       		.byte	0x8
 1379 05cc 3B       		.byte	0x3b
 1380 05cd CA000000 		.4byte	0xca
 1381 05d1 2402     		.2byte	0x224
 1382 05d3 0D       		.uleb128 0xd
 1383 05d4 D90E0000 		.4byte	.LASF66
 1384 05d8 08       		.byte	0x8
 1385 05d9 3C       		.byte	0x3c
 1386 05da CA000000 		.4byte	0xca
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 117


 1387 05de 2802     		.2byte	0x228
 1388 05e0 0D       		.uleb128 0xd
 1389 05e1 48070000 		.4byte	.LASF67
 1390 05e5 08       		.byte	0x8
 1391 05e6 3D       		.byte	0x3d
 1392 05e7 CF000000 		.4byte	0xcf
 1393 05eb 2C02     		.2byte	0x22c
 1394 05ed 0D       		.uleb128 0xd
 1395 05ee 4A090000 		.4byte	.LASF68
 1396 05f2 08       		.byte	0x8
 1397 05f3 3E       		.byte	0x3e
 1398 05f4 CA000000 		.4byte	0xca
 1399 05f8 3002     		.2byte	0x230
 1400 05fa 0D       		.uleb128 0xd
 1401 05fb 4D080000 		.4byte	.LASF69
 1402 05ff 08       		.byte	0x8
 1403 0600 3F       		.byte	0x3f
 1404 0601 CA000000 		.4byte	0xca
 1405 0605 3402     		.2byte	0x234
 1406 0607 0D       		.uleb128 0xd
 1407 0608 46060000 		.4byte	.LASF70
 1408 060c 08       		.byte	0x8
 1409 060d 40       		.byte	0x40
 1410 060e CA000000 		.4byte	0xca
 1411 0612 3802     		.2byte	0x238
 1412 0614 0D       		.uleb128 0xd
 1413 0615 30000000 		.4byte	.LASF71
 1414 0619 08       		.byte	0x8
 1415 061a 41       		.byte	0x41
 1416 061b CF000000 		.4byte	0xcf
 1417 061f 3C02     		.2byte	0x23c
 1418 0621 0D       		.uleb128 0xd
 1419 0622 A2010000 		.4byte	.LASF72
 1420 0626 08       		.byte	0x8
 1421 0627 42       		.byte	0x42
 1422 0628 CF000000 		.4byte	0xcf
 1423 062c 4002     		.2byte	0x240
 1424 062e 0D       		.uleb128 0xd
 1425 062f 980B0000 		.4byte	.LASF73
 1426 0633 08       		.byte	0x8
 1427 0634 43       		.byte	0x43
 1428 0635 6C070000 		.4byte	0x76c
 1429 0639 4402     		.2byte	0x244
 1430 063b 0D       		.uleb128 0xd
 1431 063c 96050000 		.4byte	.LASF74
 1432 0640 08       		.byte	0x8
 1433 0641 44       		.byte	0x44
 1434 0642 CA000000 		.4byte	0xca
 1435 0646 8002     		.2byte	0x280
 1436 0648 0D       		.uleb128 0xd
 1437 0649 A20B0000 		.4byte	.LASF75
 1438 064d 08       		.byte	0x8
 1439 064e 45       		.byte	0x45
 1440 064f 76070000 		.4byte	0x776
 1441 0653 8402     		.2byte	0x284
 1442 0655 0D       		.uleb128 0xd
 1443 0656 44030000 		.4byte	.LASF76
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 118


 1444 065a 08       		.byte	0x8
 1445 065b 46       		.byte	0x46
 1446 065c CF000000 		.4byte	0xcf
 1447 0660 9002     		.2byte	0x290
 1448 0662 0D       		.uleb128 0xd
 1449 0663 29050000 		.4byte	.LASF77
 1450 0667 08       		.byte	0x8
 1451 0668 47       		.byte	0x47
 1452 0669 80070000 		.4byte	0x780
 1453 066d 9402     		.2byte	0x294
 1454 066f 0D       		.uleb128 0xd
 1455 0670 AF100000 		.4byte	.LASF78
 1456 0674 08       		.byte	0x8
 1457 0675 48       		.byte	0x48
 1458 0676 CF000000 		.4byte	0xcf
 1459 067a A002     		.2byte	0x2a0
 1460 067c 0D       		.uleb128 0xd
 1461 067d F9070000 		.4byte	.LASF79
 1462 0681 08       		.byte	0x8
 1463 0682 49       		.byte	0x49
 1464 0683 CF000000 		.4byte	0xcf
 1465 0687 A402     		.2byte	0x2a4
 1466 0689 0D       		.uleb128 0xd
 1467 068a BB0B0000 		.4byte	.LASF80
 1468 068e 08       		.byte	0x8
 1469 068f 4A       		.byte	0x4a
 1470 0690 8A070000 		.4byte	0x78a
 1471 0694 A802     		.2byte	0x2a8
 1472 0696 0D       		.uleb128 0xd
 1473 0697 250E0000 		.4byte	.LASF81
 1474 069b 08       		.byte	0x8
 1475 069c 4B       		.byte	0x4b
 1476 069d CA000000 		.4byte	0xca
 1477 06a1 0003     		.2byte	0x300
 1478 06a3 0D       		.uleb128 0xd
 1479 06a4 A0090000 		.4byte	.LASF82
 1480 06a8 08       		.byte	0x8
 1481 06a9 4C       		.byte	0x4c
 1482 06aa CA000000 		.4byte	0xca
 1483 06ae 0403     		.2byte	0x304
 1484 06b0 0D       		.uleb128 0xd
 1485 06b1 C50B0000 		.4byte	.LASF83
 1486 06b5 08       		.byte	0x8
 1487 06b6 4D       		.byte	0x4d
 1488 06b7 A4070000 		.4byte	0x7a4
 1489 06bb 0803     		.2byte	0x308
 1490 06bd 0D       		.uleb128 0xd
 1491 06be 0A100000 		.4byte	.LASF84
 1492 06c2 08       		.byte	0x8
 1493 06c3 4E       		.byte	0x4e
 1494 06c4 CA000000 		.4byte	0xca
 1495 06c8 4003     		.2byte	0x340
 1496 06ca 0D       		.uleb128 0xd
 1497 06cb DC0B0000 		.4byte	.LASF85
 1498 06cf 08       		.byte	0x8
 1499 06d0 4F       		.byte	0x4f
 1500 06d1 CA000000 		.4byte	0xca
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 119


 1501 06d5 4403     		.2byte	0x344
 1502 06d7 0D       		.uleb128 0xd
 1503 06d8 3D100000 		.4byte	.LASF86
 1504 06dc 08       		.byte	0x8
 1505 06dd 50       		.byte	0x50
 1506 06de CF000000 		.4byte	0xcf
 1507 06e2 4803     		.2byte	0x348
 1508 06e4 0D       		.uleb128 0xd
 1509 06e5 F40E0000 		.4byte	.LASF87
 1510 06e9 08       		.byte	0x8
 1511 06ea 51       		.byte	0x51
 1512 06eb BF070000 		.4byte	0x7bf
 1513 06ef 4C03     		.2byte	0x34c
 1514 06f1 0D       		.uleb128 0xd
 1515 06f2 820E0000 		.4byte	.LASF88
 1516 06f6 08       		.byte	0x8
 1517 06f7 52       		.byte	0x52
 1518 06f8 CA000000 		.4byte	0xca
 1519 06fc 000F     		.2byte	0xf00
 1520 06fe 0D       		.uleb128 0xd
 1521 06ff 8C0E0000 		.4byte	.LASF89
 1522 0703 08       		.byte	0x8
 1523 0704 53       		.byte	0x53
 1524 0705 CA000000 		.4byte	0xca
 1525 0709 040F     		.2byte	0xf04
 1526 070b 00       		.byte	0
 1527 070c 05       		.uleb128 0x5
 1528 070d D4000000 		.4byte	0xd4
 1529 0711 06       		.uleb128 0x6
 1530 0712 0C070000 		.4byte	0x70c
 1531 0716 07       		.uleb128 0x7
 1532 0717 CF000000 		.4byte	0xcf
 1533 071b 26070000 		.4byte	0x726
 1534 071f 08       		.uleb128 0x8
 1535 0720 C3000000 		.4byte	0xc3
 1536 0724 15       		.byte	0x15
 1537 0725 00       		.byte	0
 1538 0726 05       		.uleb128 0x5
 1539 0727 16070000 		.4byte	0x716
 1540 072b 06       		.uleb128 0x6
 1541 072c 26070000 		.4byte	0x726
 1542 0730 05       		.uleb128 0x5
 1543 0731 F4000000 		.4byte	0xf4
 1544 0735 05       		.uleb128 0x5
 1545 0736 54040000 		.4byte	0x454
 1546 073a 06       		.uleb128 0x6
 1547 073b 35070000 		.4byte	0x735
 1548 073f 05       		.uleb128 0x5
 1549 0740 54040000 		.4byte	0x454
 1550 0744 06       		.uleb128 0x6
 1551 0745 3F070000 		.4byte	0x73f
 1552 0749 05       		.uleb128 0x5
 1553 074a 54040000 		.4byte	0x454
 1554 074e 06       		.uleb128 0x6
 1555 074f 49070000 		.4byte	0x749
 1556 0753 05       		.uleb128 0x5
 1557 0754 54040000 		.4byte	0x454
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 120


 1558 0758 06       		.uleb128 0x6
 1559 0759 53070000 		.4byte	0x753
 1560 075d 05       		.uleb128 0x5
 1561 075e 54040000 		.4byte	0x454
 1562 0762 06       		.uleb128 0x6
 1563 0763 5D070000 		.4byte	0x75d
 1564 0767 05       		.uleb128 0x5
 1565 0768 74040000 		.4byte	0x474
 1566 076c 06       		.uleb128 0x6
 1567 076d 67070000 		.4byte	0x767
 1568 0771 05       		.uleb128 0x5
 1569 0772 64040000 		.4byte	0x464
 1570 0776 06       		.uleb128 0x6
 1571 0777 71070000 		.4byte	0x771
 1572 077b 05       		.uleb128 0x5
 1573 077c 64040000 		.4byte	0x464
 1574 0780 06       		.uleb128 0x6
 1575 0781 7B070000 		.4byte	0x77b
 1576 0785 05       		.uleb128 0x5
 1577 0786 16070000 		.4byte	0x716
 1578 078a 06       		.uleb128 0x6
 1579 078b 85070000 		.4byte	0x785
 1580 078f 07       		.uleb128 0x7
 1581 0790 CF000000 		.4byte	0xcf
 1582 0794 9F070000 		.4byte	0x79f
 1583 0798 08       		.uleb128 0x8
 1584 0799 C3000000 		.4byte	0xc3
 1585 079d 0D       		.byte	0xd
 1586 079e 00       		.byte	0
 1587 079f 05       		.uleb128 0x5
 1588 07a0 8F070000 		.4byte	0x78f
 1589 07a4 06       		.uleb128 0x6
 1590 07a5 9F070000 		.4byte	0x79f
 1591 07a9 07       		.uleb128 0x7
 1592 07aa CF000000 		.4byte	0xcf
 1593 07ae BA070000 		.4byte	0x7ba
 1594 07b2 0E       		.uleb128 0xe
 1595 07b3 C3000000 		.4byte	0xc3
 1596 07b7 EC02     		.2byte	0x2ec
 1597 07b9 00       		.byte	0
 1598 07ba 05       		.uleb128 0x5
 1599 07bb A9070000 		.4byte	0x7a9
 1600 07bf 06       		.uleb128 0x6
 1601 07c0 BA070000 		.4byte	0x7ba
 1602 07c4 03       		.uleb128 0x3
 1603 07c5 30070000 		.4byte	.LASF90
 1604 07c9 08       		.byte	0x8
 1605 07ca 54       		.byte	0x54
 1606 07cb 84040000 		.4byte	0x484
 1607 07cf 0F       		.uleb128 0xf
 1608 07d0 EA050000 		.4byte	.LASF91
 1609 07d4 09       		.byte	0x9
 1610 07d5 5206     		.2byte	0x652
 1611 07d7 C4070000 		.4byte	0x7c4
 1612 07db 02       		.uleb128 0x2
 1613 07dc 08       		.byte	0x8
 1614 07dd 04       		.byte	0x4
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 121


 1615 07de 6A0A0000 		.4byte	.LASF92
 1616 07e2 09       		.uleb128 0x9
 1617 07e3 B8       		.byte	0xb8
 1618 07e4 0A       		.byte	0xa
 1619 07e5 34       		.byte	0x34
 1620 07e6 F30B0000 		.4byte	0xbf3
 1621 07ea 0A       		.uleb128 0xa
 1622 07eb 2C020000 		.4byte	.LASF93
 1623 07ef 0A       		.byte	0xa
 1624 07f0 37       		.byte	0x37
 1625 07f1 B8000000 		.4byte	0xb8
 1626 07f5 00       		.byte	0
 1627 07f6 0A       		.uleb128 0xa
 1628 07f7 BC040000 		.4byte	.LASF94
 1629 07fb 0A       		.byte	0xa
 1630 07fc 38       		.byte	0x38
 1631 07fd B8000000 		.4byte	0xb8
 1632 0801 04       		.byte	0x4
 1633 0802 0A       		.uleb128 0xa
 1634 0803 2A010000 		.4byte	.LASF95
 1635 0807 0A       		.byte	0xa
 1636 0808 39       		.byte	0x39
 1637 0809 B8000000 		.4byte	0xb8
 1638 080d 08       		.byte	0x8
 1639 080e 0A       		.uleb128 0xa
 1640 080f 06010000 		.4byte	.LASF96
 1641 0813 0A       		.byte	0xa
 1642 0814 3A       		.byte	0x3a
 1643 0815 B8000000 		.4byte	0xb8
 1644 0819 0C       		.byte	0xc
 1645 081a 0A       		.uleb128 0xa
 1646 081b 390C0000 		.4byte	.LASF97
 1647 081f 0A       		.byte	0xa
 1648 0820 3B       		.byte	0x3b
 1649 0821 B8000000 		.4byte	0xb8
 1650 0825 10       		.byte	0x10
 1651 0826 0A       		.uleb128 0xa
 1652 0827 03090000 		.4byte	.LASF98
 1653 082b 0A       		.byte	0xa
 1654 082c 3C       		.byte	0x3c
 1655 082d B8000000 		.4byte	0xb8
 1656 0831 14       		.byte	0x14
 1657 0832 0A       		.uleb128 0xa
 1658 0833 AF060000 		.4byte	.LASF99
 1659 0837 0A       		.byte	0xa
 1660 0838 3D       		.byte	0x3d
 1661 0839 B8000000 		.4byte	0xb8
 1662 083d 18       		.byte	0x18
 1663 083e 0A       		.uleb128 0xa
 1664 083f 83100000 		.4byte	.LASF100
 1665 0843 0A       		.byte	0xa
 1666 0844 3E       		.byte	0x3e
 1667 0845 B8000000 		.4byte	0xb8
 1668 0849 1C       		.byte	0x1c
 1669 084a 0A       		.uleb128 0xa
 1670 084b 92080000 		.4byte	.LASF101
 1671 084f 0A       		.byte	0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 122


 1672 0850 3F       		.byte	0x3f
 1673 0851 B8000000 		.4byte	0xb8
 1674 0855 20       		.byte	0x20
 1675 0856 0A       		.uleb128 0xa
 1676 0857 A9080000 		.4byte	.LASF102
 1677 085b 0A       		.byte	0xa
 1678 085c 40       		.byte	0x40
 1679 085d B8000000 		.4byte	0xb8
 1680 0861 24       		.byte	0x24
 1681 0862 0A       		.uleb128 0xa
 1682 0863 F80B0000 		.4byte	.LASF103
 1683 0867 0A       		.byte	0xa
 1684 0868 43       		.byte	0x43
 1685 0869 97000000 		.4byte	0x97
 1686 086d 28       		.byte	0x28
 1687 086e 0A       		.uleb128 0xa
 1688 086f 84040000 		.4byte	.LASF104
 1689 0873 0A       		.byte	0xa
 1690 0874 44       		.byte	0x44
 1691 0875 97000000 		.4byte	0x97
 1692 0879 29       		.byte	0x29
 1693 087a 0A       		.uleb128 0xa
 1694 087b FC0A0000 		.4byte	.LASF105
 1695 087f 0A       		.byte	0xa
 1696 0880 45       		.byte	0x45
 1697 0881 97000000 		.4byte	0x97
 1698 0885 2A       		.byte	0x2a
 1699 0886 0A       		.uleb128 0xa
 1700 0887 190C0000 		.4byte	.LASF106
 1701 088b 0A       		.byte	0xa
 1702 088c 46       		.byte	0x46
 1703 088d 97000000 		.4byte	0x97
 1704 0891 2B       		.byte	0x2b
 1705 0892 0A       		.uleb128 0xa
 1706 0893 050C0000 		.4byte	.LASF107
 1707 0897 0A       		.byte	0xa
 1708 0898 47       		.byte	0x47
 1709 0899 97000000 		.4byte	0x97
 1710 089d 2C       		.byte	0x2c
 1711 089e 0A       		.uleb128 0xa
 1712 089f F30D0000 		.4byte	.LASF108
 1713 08a3 0A       		.byte	0xa
 1714 08a4 48       		.byte	0x48
 1715 08a5 97000000 		.4byte	0x97
 1716 08a9 2D       		.byte	0x2d
 1717 08aa 0A       		.uleb128 0xa
 1718 08ab 6B110000 		.4byte	.LASF109
 1719 08af 0A       		.byte	0xa
 1720 08b0 49       		.byte	0x49
 1721 08b1 97000000 		.4byte	0x97
 1722 08b5 2E       		.byte	0x2e
 1723 08b6 0A       		.uleb128 0xa
 1724 08b7 5B100000 		.4byte	.LASF110
 1725 08bb 0A       		.byte	0xa
 1726 08bc 4A       		.byte	0x4a
 1727 08bd 97000000 		.4byte	0x97
 1728 08c1 2F       		.byte	0x2f
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 123


 1729 08c2 0A       		.uleb128 0xa
 1730 08c3 E9030000 		.4byte	.LASF111
 1731 08c7 0A       		.byte	0xa
 1732 08c8 4B       		.byte	0x4b
 1733 08c9 97000000 		.4byte	0x97
 1734 08cd 30       		.byte	0x30
 1735 08ce 0A       		.uleb128 0xa
 1736 08cf 95090000 		.4byte	.LASF112
 1737 08d3 0A       		.byte	0xa
 1738 08d4 4E       		.byte	0x4e
 1739 08d5 97000000 		.4byte	0x97
 1740 08d9 31       		.byte	0x31
 1741 08da 0A       		.uleb128 0xa
 1742 08db ED0F0000 		.4byte	.LASF113
 1743 08df 0A       		.byte	0xa
 1744 08e0 4F       		.byte	0x4f
 1745 08e1 97000000 		.4byte	0x97
 1746 08e5 32       		.byte	0x32
 1747 08e6 0A       		.uleb128 0xa
 1748 08e7 55090000 		.4byte	.LASF114
 1749 08eb 0A       		.byte	0xa
 1750 08ec 50       		.byte	0x50
 1751 08ed 97000000 		.4byte	0x97
 1752 08f1 33       		.byte	0x33
 1753 08f2 0A       		.uleb128 0xa
 1754 08f3 F6010000 		.4byte	.LASF115
 1755 08f7 0A       		.byte	0xa
 1756 08f8 51       		.byte	0x51
 1757 08f9 97000000 		.4byte	0x97
 1758 08fd 34       		.byte	0x34
 1759 08fe 0A       		.uleb128 0xa
 1760 08ff 33050000 		.4byte	.LASF116
 1761 0903 0A       		.byte	0xa
 1762 0904 52       		.byte	0x52
 1763 0905 A2000000 		.4byte	0xa2
 1764 0909 36       		.byte	0x36
 1765 090a 0A       		.uleb128 0xa
 1766 090b 60020000 		.4byte	.LASF117
 1767 090f 0A       		.byte	0xa
 1768 0910 53       		.byte	0x53
 1769 0911 A2000000 		.4byte	0xa2
 1770 0915 38       		.byte	0x38
 1771 0916 0A       		.uleb128 0xa
 1772 0917 77020000 		.4byte	.LASF118
 1773 091b 0A       		.byte	0xa
 1774 091c 54       		.byte	0x54
 1775 091d A2000000 		.4byte	0xa2
 1776 0921 3A       		.byte	0x3a
 1777 0922 0A       		.uleb128 0xa
 1778 0923 A0100000 		.4byte	.LASF119
 1779 0927 0A       		.byte	0xa
 1780 0928 55       		.byte	0x55
 1781 0929 97000000 		.4byte	0x97
 1782 092d 3C       		.byte	0x3c
 1783 092e 0A       		.uleb128 0xa
 1784 092f BB030000 		.4byte	.LASF120
 1785 0933 0A       		.byte	0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 124


 1786 0934 56       		.byte	0x56
 1787 0935 97000000 		.4byte	0x97
 1788 0939 3D       		.byte	0x3d
 1789 093a 0A       		.uleb128 0xa
 1790 093b C30A0000 		.4byte	.LASF121
 1791 093f 0A       		.byte	0xa
 1792 0940 57       		.byte	0x57
 1793 0941 97000000 		.4byte	0x97
 1794 0945 3E       		.byte	0x3e
 1795 0946 0A       		.uleb128 0xa
 1796 0947 C8000000 		.4byte	.LASF122
 1797 094b 0A       		.byte	0xa
 1798 094c 58       		.byte	0x58
 1799 094d 97000000 		.4byte	0x97
 1800 0951 3F       		.byte	0x3f
 1801 0952 0A       		.uleb128 0xa
 1802 0953 AD010000 		.4byte	.LASF123
 1803 0957 0A       		.byte	0xa
 1804 0958 59       		.byte	0x59
 1805 0959 97000000 		.4byte	0x97
 1806 095d 40       		.byte	0x40
 1807 095e 0A       		.uleb128 0xa
 1808 095f B7090000 		.4byte	.LASF124
 1809 0963 0A       		.byte	0xa
 1810 0964 5A       		.byte	0x5a
 1811 0965 97000000 		.4byte	0x97
 1812 0969 41       		.byte	0x41
 1813 096a 0A       		.uleb128 0xa
 1814 096b B70F0000 		.4byte	.LASF125
 1815 096f 0A       		.byte	0xa
 1816 0970 5B       		.byte	0x5b
 1817 0971 97000000 		.4byte	0x97
 1818 0975 42       		.byte	0x42
 1819 0976 0A       		.uleb128 0xa
 1820 0977 14070000 		.4byte	.LASF126
 1821 097b 0A       		.byte	0xa
 1822 097c 5C       		.byte	0x5c
 1823 097d 97000000 		.4byte	0x97
 1824 0981 43       		.byte	0x43
 1825 0982 0A       		.uleb128 0xa
 1826 0983 C5070000 		.4byte	.LASF127
 1827 0987 0A       		.byte	0xa
 1828 0988 5D       		.byte	0x5d
 1829 0989 97000000 		.4byte	0x97
 1830 098d 44       		.byte	0x44
 1831 098e 0A       		.uleb128 0xa
 1832 098f 270C0000 		.4byte	.LASF128
 1833 0993 0A       		.byte	0xa
 1834 0994 5E       		.byte	0x5e
 1835 0995 B8000000 		.4byte	0xb8
 1836 0999 48       		.byte	0x48
 1837 099a 0A       		.uleb128 0xa
 1838 099b D6070000 		.4byte	.LASF129
 1839 099f 0A       		.byte	0xa
 1840 09a0 5F       		.byte	0x5f
 1841 09a1 B8000000 		.4byte	0xb8
 1842 09a5 4C       		.byte	0x4c
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 125


 1843 09a6 0A       		.uleb128 0xa
 1844 09a7 950F0000 		.4byte	.LASF130
 1845 09ab 0A       		.byte	0xa
 1846 09ac 60       		.byte	0x60
 1847 09ad 97000000 		.4byte	0x97
 1848 09b1 50       		.byte	0x50
 1849 09b2 0A       		.uleb128 0xa
 1850 09b3 34060000 		.4byte	.LASF131
 1851 09b7 0A       		.byte	0xa
 1852 09b8 61       		.byte	0x61
 1853 09b9 97000000 		.4byte	0x97
 1854 09bd 51       		.byte	0x51
 1855 09be 0A       		.uleb128 0xa
 1856 09bf C7080000 		.4byte	.LASF132
 1857 09c3 0A       		.byte	0xa
 1858 09c4 62       		.byte	0x62
 1859 09c5 97000000 		.4byte	0x97
 1860 09c9 52       		.byte	0x52
 1861 09ca 0A       		.uleb128 0xa
 1862 09cb 92040000 		.4byte	.LASF133
 1863 09cf 0A       		.byte	0xa
 1864 09d0 63       		.byte	0x63
 1865 09d1 97000000 		.4byte	0x97
 1866 09d5 53       		.byte	0x53
 1867 09d6 0A       		.uleb128 0xa
 1868 09d7 FF0E0000 		.4byte	.LASF134
 1869 09db 0A       		.byte	0xa
 1870 09dc 64       		.byte	0x64
 1871 09dd 97000000 		.4byte	0x97
 1872 09e1 54       		.byte	0x54
 1873 09e2 0A       		.uleb128 0xa
 1874 09e3 7D060000 		.4byte	.LASF135
 1875 09e7 0A       		.byte	0xa
 1876 09e8 65       		.byte	0x65
 1877 09e9 97000000 		.4byte	0x97
 1878 09ed 55       		.byte	0x55
 1879 09ee 0A       		.uleb128 0xa
 1880 09ef 00000000 		.4byte	.LASF136
 1881 09f3 0A       		.byte	0xa
 1882 09f4 66       		.byte	0x66
 1883 09f5 97000000 		.4byte	0x97
 1884 09f9 56       		.byte	0x56
 1885 09fa 0A       		.uleb128 0xa
 1886 09fb 060B0000 		.4byte	.LASF137
 1887 09ff 0A       		.byte	0xa
 1888 0a00 67       		.byte	0x67
 1889 0a01 97000000 		.4byte	0x97
 1890 0a05 57       		.byte	0x57
 1891 0a06 0A       		.uleb128 0xa
 1892 0a07 A6050000 		.4byte	.LASF138
 1893 0a0b 0A       		.byte	0xa
 1894 0a0c 68       		.byte	0x68
 1895 0a0d 97000000 		.4byte	0x97
 1896 0a11 58       		.byte	0x58
 1897 0a12 0A       		.uleb128 0xa
 1898 0a13 C6100000 		.4byte	.LASF139
 1899 0a17 0A       		.byte	0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 126


 1900 0a18 69       		.byte	0x69
 1901 0a19 97000000 		.4byte	0x97
 1902 0a1d 59       		.byte	0x59
 1903 0a1e 0A       		.uleb128 0xa
 1904 0a1f E20F0000 		.4byte	.LASF140
 1905 0a23 0A       		.byte	0xa
 1906 0a24 6E       		.byte	0x6e
 1907 0a25 AD000000 		.4byte	0xad
 1908 0a29 5A       		.byte	0x5a
 1909 0a2a 0A       		.uleb128 0xa
 1910 0a2b 48010000 		.4byte	.LASF141
 1911 0a2f 0A       		.byte	0xa
 1912 0a30 6F       		.byte	0x6f
 1913 0a31 AD000000 		.4byte	0xad
 1914 0a35 5C       		.byte	0x5c
 1915 0a36 0A       		.uleb128 0xa
 1916 0a37 9A080000 		.4byte	.LASF142
 1917 0a3b 0A       		.byte	0xa
 1918 0a3c 70       		.byte	0x70
 1919 0a3d 97000000 		.4byte	0x97
 1920 0a41 5E       		.byte	0x5e
 1921 0a42 0A       		.uleb128 0xa
 1922 0a43 D10A0000 		.4byte	.LASF143
 1923 0a47 0A       		.byte	0xa
 1924 0a48 71       		.byte	0x71
 1925 0a49 97000000 		.4byte	0x97
 1926 0a4d 5F       		.byte	0x5f
 1927 0a4e 0A       		.uleb128 0xa
 1928 0a4f 1F070000 		.4byte	.LASF144
 1929 0a53 0A       		.byte	0xa
 1930 0a54 72       		.byte	0x72
 1931 0a55 97000000 		.4byte	0x97
 1932 0a59 60       		.byte	0x60
 1933 0a5a 0A       		.uleb128 0xa
 1934 0a5b 9E060000 		.4byte	.LASF145
 1935 0a5f 0A       		.byte	0xa
 1936 0a60 73       		.byte	0x73
 1937 0a61 B8000000 		.4byte	0xb8
 1938 0a65 64       		.byte	0x64
 1939 0a66 0A       		.uleb128 0xa
 1940 0a67 7F110000 		.4byte	.LASF146
 1941 0a6b 0A       		.byte	0xa
 1942 0a6c 76       		.byte	0x76
 1943 0a6d AD000000 		.4byte	0xad
 1944 0a71 68       		.byte	0x68
 1945 0a72 0A       		.uleb128 0xa
 1946 0a73 8C0A0000 		.4byte	.LASF147
 1947 0a77 0A       		.byte	0xa
 1948 0a78 77       		.byte	0x77
 1949 0a79 AD000000 		.4byte	0xad
 1950 0a7d 6A       		.byte	0x6a
 1951 0a7e 0A       		.uleb128 0xa
 1952 0a7f 3B090000 		.4byte	.LASF148
 1953 0a83 0A       		.byte	0xa
 1954 0a84 78       		.byte	0x78
 1955 0a85 AD000000 		.4byte	0xad
 1956 0a89 6C       		.byte	0x6c
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 127


 1957 0a8a 0A       		.uleb128 0xa
 1958 0a8b AE030000 		.4byte	.LASF149
 1959 0a8f 0A       		.byte	0xa
 1960 0a90 79       		.byte	0x79
 1961 0a91 AD000000 		.4byte	0xad
 1962 0a95 6E       		.byte	0x6e
 1963 0a96 0A       		.uleb128 0xa
 1964 0a97 2A080000 		.4byte	.LASF150
 1965 0a9b 0A       		.byte	0xa
 1966 0a9c 7B       		.byte	0x7b
 1967 0a9d 97000000 		.4byte	0x97
 1968 0aa1 70       		.byte	0x70
 1969 0aa2 0A       		.uleb128 0xa
 1970 0aa3 0D040000 		.4byte	.LASF151
 1971 0aa7 0A       		.byte	0xa
 1972 0aa8 7C       		.byte	0x7c
 1973 0aa9 97000000 		.4byte	0x97
 1974 0aad 71       		.byte	0x71
 1975 0aae 0A       		.uleb128 0xa
 1976 0aaf 4F030000 		.4byte	.LASF152
 1977 0ab3 0A       		.byte	0xa
 1978 0ab4 7D       		.byte	0x7d
 1979 0ab5 97000000 		.4byte	0x97
 1980 0ab9 72       		.byte	0x72
 1981 0aba 0A       		.uleb128 0xa
 1982 0abb D4010000 		.4byte	.LASF153
 1983 0abf 0A       		.byte	0xa
 1984 0ac0 7E       		.byte	0x7e
 1985 0ac1 97000000 		.4byte	0x97
 1986 0ac5 73       		.byte	0x73
 1987 0ac6 0A       		.uleb128 0xa
 1988 0ac7 680B0000 		.4byte	.LASF154
 1989 0acb 0A       		.byte	0xa
 1990 0acc 80       		.byte	0x80
 1991 0acd AD000000 		.4byte	0xad
 1992 0ad1 74       		.byte	0x74
 1993 0ad2 0A       		.uleb128 0xa
 1994 0ad3 180A0000 		.4byte	.LASF155
 1995 0ad7 0A       		.byte	0xa
 1996 0ad8 81       		.byte	0x81
 1997 0ad9 AD000000 		.4byte	0xad
 1998 0add 76       		.byte	0x76
 1999 0ade 0A       		.uleb128 0xa
 2000 0adf A4070000 		.4byte	.LASF156
 2001 0ae3 0A       		.byte	0xa
 2002 0ae4 82       		.byte	0x82
 2003 0ae5 AD000000 		.4byte	0xad
 2004 0ae9 78       		.byte	0x78
 2005 0aea 0A       		.uleb128 0xa
 2006 0aeb 00050000 		.4byte	.LASF157
 2007 0aef 0A       		.byte	0xa
 2008 0af0 83       		.byte	0x83
 2009 0af1 AD000000 		.4byte	0xad
 2010 0af5 7A       		.byte	0x7a
 2011 0af6 0A       		.uleb128 0xa
 2012 0af7 F80C0000 		.4byte	.LASF158
 2013 0afb 0A       		.byte	0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 128


 2014 0afc 86       		.byte	0x86
 2015 0afd 97000000 		.4byte	0x97
 2016 0b01 7C       		.byte	0x7c
 2017 0b02 0A       		.uleb128 0xa
 2018 0b03 A60F0000 		.4byte	.LASF159
 2019 0b07 0A       		.byte	0xa
 2020 0b08 87       		.byte	0x87
 2021 0b09 97000000 		.4byte	0x97
 2022 0b0d 7D       		.byte	0x7d
 2023 0b0e 0A       		.uleb128 0xa
 2024 0b0f CF040000 		.4byte	.LASF160
 2025 0b13 0A       		.byte	0xa
 2026 0b14 88       		.byte	0x88
 2027 0b15 97000000 		.4byte	0x97
 2028 0b19 7E       		.byte	0x7e
 2029 0b1a 0A       		.uleb128 0xa
 2030 0b1b 65040000 		.4byte	.LASF161
 2031 0b1f 0A       		.byte	0xa
 2032 0b20 89       		.byte	0x89
 2033 0b21 97000000 		.4byte	0x97
 2034 0b25 7F       		.byte	0x7f
 2035 0b26 0A       		.uleb128 0xa
 2036 0b27 15050000 		.4byte	.LASF162
 2037 0b2b 0A       		.byte	0xa
 2038 0b2c 8A       		.byte	0x8a
 2039 0b2d 97000000 		.4byte	0x97
 2040 0b31 80       		.byte	0x80
 2041 0b32 0A       		.uleb128 0xa
 2042 0b33 B1000000 		.4byte	.LASF163
 2043 0b37 0A       		.byte	0xa
 2044 0b38 8D       		.byte	0x8d
 2045 0b39 B8000000 		.4byte	0xb8
 2046 0b3d 84       		.byte	0x84
 2047 0b3e 0A       		.uleb128 0xa
 2048 0b3f 0D0D0000 		.4byte	.LASF164
 2049 0b43 0A       		.byte	0xa
 2050 0b44 8E       		.byte	0x8e
 2051 0b45 B8000000 		.4byte	0xb8
 2052 0b49 88       		.byte	0x88
 2053 0b4a 0A       		.uleb128 0xa
 2054 0b4b 1D100000 		.4byte	.LASF165
 2055 0b4f 0A       		.byte	0xa
 2056 0b50 8F       		.byte	0x8f
 2057 0b51 B8000000 		.4byte	0xb8
 2058 0b55 8C       		.byte	0x8c
 2059 0b56 0A       		.uleb128 0xa
 2060 0b57 530B0000 		.4byte	.LASF166
 2061 0b5b 0A       		.byte	0xa
 2062 0b5c 90       		.byte	0x90
 2063 0b5d B8000000 		.4byte	0xb8
 2064 0b61 90       		.byte	0x90
 2065 0b62 0A       		.uleb128 0xa
 2066 0b63 CE0C0000 		.4byte	.LASF167
 2067 0b67 0A       		.byte	0xa
 2068 0b68 91       		.byte	0x91
 2069 0b69 B8000000 		.4byte	0xb8
 2070 0b6d 94       		.byte	0x94
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 129


 2071 0b6e 0A       		.uleb128 0xa
 2072 0b6f 22040000 		.4byte	.LASF168
 2073 0b73 0A       		.byte	0xa
 2074 0b74 92       		.byte	0x92
 2075 0b75 B8000000 		.4byte	0xb8
 2076 0b79 98       		.byte	0x98
 2077 0b7a 0A       		.uleb128 0xa
 2078 0b7b 300D0000 		.4byte	.LASF169
 2079 0b7f 0A       		.byte	0xa
 2080 0b80 93       		.byte	0x93
 2081 0b81 B8000000 		.4byte	0xb8
 2082 0b85 9C       		.byte	0x9c
 2083 0b86 0A       		.uleb128 0xa
 2084 0b87 FE060000 		.4byte	.LASF170
 2085 0b8b 0A       		.byte	0xa
 2086 0b8c 94       		.byte	0x94
 2087 0b8d B8000000 		.4byte	0xb8
 2088 0b91 A0       		.byte	0xa0
 2089 0b92 0A       		.uleb128 0xa
 2090 0b93 33010000 		.4byte	.LASF171
 2091 0b97 0A       		.byte	0xa
 2092 0b98 95       		.byte	0x95
 2093 0b99 AD000000 		.4byte	0xad
 2094 0b9d A4       		.byte	0xa4
 2095 0b9e 0A       		.uleb128 0xa
 2096 0b9f 3E0B0000 		.4byte	.LASF172
 2097 0ba3 0A       		.byte	0xa
 2098 0ba4 96       		.byte	0x96
 2099 0ba5 AD000000 		.4byte	0xad
 2100 0ba9 A6       		.byte	0xa6
 2101 0baa 0A       		.uleb128 0xa
 2102 0bab 190E0000 		.4byte	.LASF173
 2103 0baf 0A       		.byte	0xa
 2104 0bb0 97       		.byte	0x97
 2105 0bb1 AD000000 		.4byte	0xad
 2106 0bb5 A8       		.byte	0xa8
 2107 0bb6 0A       		.uleb128 0xa
 2108 0bb7 76080000 		.4byte	.LASF174
 2109 0bbb 0A       		.byte	0xa
 2110 0bbc 98       		.byte	0x98
 2111 0bbd AD000000 		.4byte	0xad
 2112 0bc1 AA       		.byte	0xaa
 2113 0bc2 0A       		.uleb128 0xa
 2114 0bc3 2D090000 		.4byte	.LASF175
 2115 0bc7 0A       		.byte	0xa
 2116 0bc8 99       		.byte	0x99
 2117 0bc9 AD000000 		.4byte	0xad
 2118 0bcd AC       		.byte	0xac
 2119 0bce 0A       		.uleb128 0xa
 2120 0bcf C7090000 		.4byte	.LASF176
 2121 0bd3 0A       		.byte	0xa
 2122 0bd4 9A       		.byte	0x9a
 2123 0bd5 AD000000 		.4byte	0xad
 2124 0bd9 AE       		.byte	0xae
 2125 0bda 0A       		.uleb128 0xa
 2126 0bdb C6030000 		.4byte	.LASF177
 2127 0bdf 0A       		.byte	0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 130


 2128 0be0 9D       		.byte	0x9d
 2129 0be1 AD000000 		.4byte	0xad
 2130 0be5 B0       		.byte	0xb0
 2131 0be6 0A       		.uleb128 0xa
 2132 0be7 62000000 		.4byte	.LASF178
 2133 0beb 0A       		.byte	0xa
 2134 0bec 9E       		.byte	0x9e
 2135 0bed B8000000 		.4byte	0xb8
 2136 0bf1 B4       		.byte	0xb4
 2137 0bf2 00       		.byte	0
 2138 0bf3 03       		.uleb128 0x3
 2139 0bf4 38040000 		.4byte	.LASF179
 2140 0bf8 0A       		.byte	0xa
 2141 0bf9 9F       		.byte	0x9f
 2142 0bfa E2070000 		.4byte	0x7e2
 2143 0bfe 0F       		.uleb128 0xf
 2144 0bff A10E0000 		.4byte	.LASF180
 2145 0c03 0B       		.byte	0xb
 2146 0c04 EE01     		.2byte	0x1ee
 2147 0c06 0A0C0000 		.4byte	0xc0a
 2148 0c0a 10       		.uleb128 0x10
 2149 0c0b 04       		.byte	0x4
 2150 0c0c 100C0000 		.4byte	0xc10
 2151 0c10 11       		.uleb128 0x11
 2152 0c11 02       		.uleb128 0x2
 2153 0c12 01       		.byte	0x1
 2154 0c13 08       		.byte	0x8
 2155 0c14 98070000 		.4byte	.LASF181
 2156 0c18 02       		.uleb128 0x2
 2157 0c19 04       		.byte	0x4
 2158 0c1a 04       		.byte	0x4
 2159 0c1b 7E040000 		.4byte	.LASF182
 2160 0c1f 02       		.uleb128 0x2
 2161 0c20 08       		.byte	0x8
 2162 0c21 04       		.byte	0x4
 2163 0c22 C70C0000 		.4byte	.LASF183
 2164 0c26 0F       		.uleb128 0xf
 2165 0c27 8E090000 		.4byte	.LASF184
 2166 0c2b 0B       		.byte	0xb
 2167 0c2c EC03     		.2byte	0x3ec
 2168 0c2e B8000000 		.4byte	0xb8
 2169 0c32 12       		.uleb128 0x12
 2170 0c33 04       		.byte	0x4
 2171 0c34 90000000 		.4byte	0x90
 2172 0c38 03       		.byte	0x3
 2173 0c39 FE02     		.2byte	0x2fe
 2174 0c3b 610C0000 		.4byte	0xc61
 2175 0c3f 13       		.uleb128 0x13
 2176 0c40 3E080000 		.4byte	.LASF185
 2177 0c44 00       		.byte	0
 2178 0c45 14       		.uleb128 0x14
 2179 0c46 B8060000 		.4byte	.LASF186
 2180 0c4a 01000600 		.4byte	0x60001
 2181 0c4e 14       		.uleb128 0x14
 2182 0c4f 7F090000 		.4byte	.LASF187
 2183 0c53 02000600 		.4byte	0x60002
 2184 0c57 14       		.uleb128 0x14
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 131


 2185 0c58 9E0C0000 		.4byte	.LASF188
 2186 0c5c 03000600 		.4byte	0x60003
 2187 0c60 00       		.byte	0
 2188 0c61 0F       		.uleb128 0xf
 2189 0c62 17080000 		.4byte	.LASF189
 2190 0c66 03       		.byte	0x3
 2191 0c67 0303     		.2byte	0x303
 2192 0c69 320C0000 		.4byte	0xc32
 2193 0c6d 12       		.uleb128 0x12
 2194 0c6e 01       		.byte	0x1
 2195 0c6f 2C000000 		.4byte	0x2c
 2196 0c73 03       		.byte	0x3
 2197 0c74 0703     		.2byte	0x307
 2198 0c76 870C0000 		.4byte	0xc87
 2199 0c7a 13       		.uleb128 0x13
 2200 0c7b D5090000 		.4byte	.LASF190
 2201 0c7f 00       		.byte	0
 2202 0c80 13       		.uleb128 0x13
 2203 0c81 37110000 		.4byte	.LASF191
 2204 0c85 01       		.byte	0x1
 2205 0c86 00       		.byte	0
 2206 0c87 0F       		.uleb128 0xf
 2207 0c88 90030000 		.4byte	.LASF192
 2208 0c8c 03       		.byte	0x3
 2209 0c8d 0A03     		.2byte	0x30a
 2210 0c8f 6D0C0000 		.4byte	0xc6d
 2211 0c93 12       		.uleb128 0x12
 2212 0c94 01       		.byte	0x1
 2213 0c95 2C000000 		.4byte	0x2c
 2214 0c99 03       		.byte	0x3
 2215 0c9a 0E03     		.2byte	0x30e
 2216 0c9c AD0C0000 		.4byte	0xcad
 2217 0ca0 13       		.uleb128 0x13
 2218 0ca1 CE050000 		.4byte	.LASF193
 2219 0ca5 00       		.byte	0
 2220 0ca6 13       		.uleb128 0x13
 2221 0ca7 2D030000 		.4byte	.LASF194
 2222 0cab 01       		.byte	0x1
 2223 0cac 00       		.byte	0
 2224 0cad 0F       		.uleb128 0xf
 2225 0cae 450E0000 		.4byte	.LASF195
 2226 0cb2 03       		.byte	0x3
 2227 0cb3 1103     		.2byte	0x311
 2228 0cb5 930C0000 		.4byte	0xc93
 2229 0cb9 12       		.uleb128 0x12
 2230 0cba 01       		.byte	0x1
 2231 0cbb 2C000000 		.4byte	0x2c
 2232 0cbf 03       		.byte	0x3
 2233 0cc0 1503     		.2byte	0x315
 2234 0cc2 D30C0000 		.4byte	0xcd3
 2235 0cc6 13       		.uleb128 0x13
 2236 0cc7 AF0E0000 		.4byte	.LASF196
 2237 0ccb 00       		.byte	0
 2238 0ccc 13       		.uleb128 0x13
 2239 0ccd E8100000 		.4byte	.LASF197
 2240 0cd1 01       		.byte	0x1
 2241 0cd2 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 132


 2242 0cd3 12       		.uleb128 0x12
 2243 0cd4 01       		.byte	0x1
 2244 0cd5 2C000000 		.4byte	0x2c
 2245 0cd9 03       		.byte	0x3
 2246 0cda 1C03     		.2byte	0x31c
 2247 0cdc ED0C0000 		.4byte	0xced
 2248 0ce0 13       		.uleb128 0x13
 2249 0ce1 580F0000 		.4byte	.LASF198
 2250 0ce5 00       		.byte	0
 2251 0ce6 13       		.uleb128 0x13
 2252 0ce7 800C0000 		.4byte	.LASF199
 2253 0ceb 01       		.byte	0x1
 2254 0cec 00       		.byte	0
 2255 0ced 12       		.uleb128 0x12
 2256 0cee 01       		.byte	0x1
 2257 0cef 2C000000 		.4byte	0x2c
 2258 0cf3 03       		.byte	0x3
 2259 0cf4 1304     		.2byte	0x413
 2260 0cf6 130D0000 		.4byte	0xd13
 2261 0cfa 13       		.uleb128 0x13
 2262 0cfb F5030000 		.4byte	.LASF200
 2263 0cff 00       		.byte	0
 2264 0d00 13       		.uleb128 0x13
 2265 0d01 64050000 		.4byte	.LASF201
 2266 0d05 01       		.byte	0x1
 2267 0d06 13       		.uleb128 0x13
 2268 0d07 80070000 		.4byte	.LASF202
 2269 0d0b 02       		.byte	0x2
 2270 0d0c 13       		.uleb128 0x13
 2271 0d0d BA010000 		.4byte	.LASF203
 2272 0d11 03       		.byte	0x3
 2273 0d12 00       		.byte	0
 2274 0d13 0F       		.uleb128 0xf
 2275 0d14 08110000 		.4byte	.LASF204
 2276 0d18 03       		.byte	0x3
 2277 0d19 1804     		.2byte	0x418
 2278 0d1b ED0C0000 		.4byte	0xced
 2279 0d1f 15       		.uleb128 0x15
 2280 0d20 78       		.byte	0x78
 2281 0d21 03       		.byte	0x3
 2282 0d22 0205     		.2byte	0x502
 2283 0d24 EC0D0000 		.4byte	0xdec
 2284 0d28 16       		.uleb128 0x16
 2285 0d29 91050000 		.4byte	.LASF205
 2286 0d2d 03       		.byte	0x3
 2287 0d2e 0405     		.2byte	0x504
 2288 0d30 B8000000 		.4byte	0xb8
 2289 0d34 00       		.byte	0
 2290 0d35 16       		.uleb128 0x16
 2291 0d36 690E0000 		.4byte	.LASF206
 2292 0d3a 03       		.byte	0x3
 2293 0d3b 0505     		.2byte	0x505
 2294 0d3d B8000000 		.4byte	0xb8
 2295 0d41 04       		.byte	0x4
 2296 0d42 16       		.uleb128 0x16
 2297 0d43 B60A0000 		.4byte	.LASF207
 2298 0d47 03       		.byte	0x3
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 133


 2299 0d48 0605     		.2byte	0x506
 2300 0d4a B8000000 		.4byte	0xb8
 2301 0d4e 08       		.byte	0x8
 2302 0d4f 16       		.uleb128 0x16
 2303 0d50 460D0000 		.4byte	.LASF208
 2304 0d54 03       		.byte	0x3
 2305 0d55 0705     		.2byte	0x507
 2306 0d57 B8000000 		.4byte	0xb8
 2307 0d5b 0C       		.byte	0xc
 2308 0d5c 16       		.uleb128 0x16
 2309 0d5d 4E050000 		.4byte	.LASF209
 2310 0d61 03       		.byte	0x3
 2311 0d62 0805     		.2byte	0x508
 2312 0d64 B8000000 		.4byte	0xb8
 2313 0d68 10       		.byte	0x10
 2314 0d69 16       		.uleb128 0x16
 2315 0d6a 6C080000 		.4byte	.LASF210
 2316 0d6e 03       		.byte	0x3
 2317 0d6f 0905     		.2byte	0x509
 2318 0d71 130D0000 		.4byte	0xd13
 2319 0d75 14       		.byte	0x14
 2320 0d76 16       		.uleb128 0x16
 2321 0d77 9D070000 		.4byte	.LASF211
 2322 0d7b 03       		.byte	0x3
 2323 0d7c 0A05     		.2byte	0x50a
 2324 0d7e B8000000 		.4byte	0xb8
 2325 0d82 18       		.byte	0x18
 2326 0d83 16       		.uleb128 0x16
 2327 0d84 32100000 		.4byte	.LASF212
 2328 0d88 03       		.byte	0x3
 2329 0d89 0B05     		.2byte	0x50b
 2330 0d8b EC0D0000 		.4byte	0xdec
 2331 0d8f 1C       		.byte	0x1c
 2332 0d90 16       		.uleb128 0x16
 2333 0d91 76110000 		.4byte	.LASF213
 2334 0d95 03       		.byte	0x3
 2335 0d96 0C05     		.2byte	0x50c
 2336 0d98 B8000000 		.4byte	0xb8
 2337 0d9c 5C       		.byte	0x5c
 2338 0d9d 16       		.uleb128 0x16
 2339 0d9e 84030000 		.4byte	.LASF214
 2340 0da2 03       		.byte	0x3
 2341 0da3 0D05     		.2byte	0x50d
 2342 0da5 B8000000 		.4byte	0xb8
 2343 0da9 60       		.byte	0x60
 2344 0daa 16       		.uleb128 0x16
 2345 0dab DA100000 		.4byte	.LASF215
 2346 0daf 03       		.byte	0x3
 2347 0db0 0E05     		.2byte	0x50e
 2348 0db2 B8000000 		.4byte	0xb8
 2349 0db6 64       		.byte	0x64
 2350 0db7 16       		.uleb128 0x16
 2351 0db8 4D0A0000 		.4byte	.LASF216
 2352 0dbc 03       		.byte	0x3
 2353 0dbd 0F05     		.2byte	0x50f
 2354 0dbf B8000000 		.4byte	0xb8
 2355 0dc3 68       		.byte	0x68
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 134


 2356 0dc4 16       		.uleb128 0x16
 2357 0dc5 5C080000 		.4byte	.LASF217
 2358 0dc9 03       		.byte	0x3
 2359 0dca 1005     		.2byte	0x510
 2360 0dcc B8000000 		.4byte	0xb8
 2361 0dd0 6C       		.byte	0x6c
 2362 0dd1 16       		.uleb128 0x16
 2363 0dd2 75100000 		.4byte	.LASF218
 2364 0dd6 03       		.byte	0x3
 2365 0dd7 1105     		.2byte	0x511
 2366 0dd9 FC0D0000 		.4byte	0xdfc
 2367 0ddd 70       		.byte	0x70
 2368 0dde 16       		.uleb128 0x16
 2369 0ddf 3C070000 		.4byte	.LASF219
 2370 0de3 03       		.byte	0x3
 2371 0de4 1205     		.2byte	0x512
 2372 0de6 B8000000 		.4byte	0xb8
 2373 0dea 74       		.byte	0x74
 2374 0deb 00       		.byte	0
 2375 0dec 07       		.uleb128 0x7
 2376 0ded B8000000 		.4byte	0xb8
 2377 0df1 FC0D0000 		.4byte	0xdfc
 2378 0df5 08       		.uleb128 0x8
 2379 0df6 C3000000 		.4byte	0xc3
 2380 0dfa 0F       		.byte	0xf
 2381 0dfb 00       		.byte	0
 2382 0dfc 02       		.uleb128 0x2
 2383 0dfd 01       		.byte	0x1
 2384 0dfe 02       		.byte	0x2
 2385 0dff 6C060000 		.4byte	.LASF220
 2386 0e03 0F       		.uleb128 0xf
 2387 0e04 7D050000 		.4byte	.LASF221
 2388 0e08 03       		.byte	0x3
 2389 0e09 1305     		.2byte	0x513
 2390 0e0b 1F0D0000 		.4byte	0xd1f
 2391 0e0f 12       		.uleb128 0x12
 2392 0e10 04       		.byte	0x4
 2393 0e11 90000000 		.4byte	0x90
 2394 0e15 02       		.byte	0x2
 2395 0e16 5102     		.2byte	0x251
 2396 0e18 3E0E0000 		.4byte	0xe3e
 2397 0e1c 13       		.uleb128 0x13
 2398 0e1d 07020000 		.4byte	.LASF222
 2399 0e21 00       		.byte	0
 2400 0e22 14       		.uleb128 0x14
 2401 0e23 2A0B0000 		.4byte	.LASF223
 2402 0e27 01004A00 		.4byte	0x4a0001
 2403 0e2b 14       		.uleb128 0x14
 2404 0e2c 70010000 		.4byte	.LASF224
 2405 0e30 02004A00 		.4byte	0x4a0002
 2406 0e34 14       		.uleb128 0x14
 2407 0e35 9E0A0000 		.4byte	.LASF225
 2408 0e39 03004A00 		.4byte	0x4a0003
 2409 0e3d 00       		.byte	0
 2410 0e3e 0F       		.uleb128 0xf
 2411 0e3f 01060000 		.4byte	.LASF226
 2412 0e43 02       		.byte	0x2
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 135


 2413 0e44 5602     		.2byte	0x256
 2414 0e46 0F0E0000 		.4byte	0xe0f
 2415 0e4a 12       		.uleb128 0x12
 2416 0e4b 01       		.byte	0x1
 2417 0e4c 2C000000 		.4byte	0x2c
 2418 0e50 02       		.byte	0x2
 2419 0e51 1607     		.2byte	0x716
 2420 0e53 700E0000 		.4byte	0xe70
 2421 0e57 13       		.uleb128 0x13
 2422 0e58 0E010000 		.4byte	.LASF227
 2423 0e5c 00       		.byte	0
 2424 0e5d 13       		.uleb128 0x13
 2425 0e5e E70A0000 		.4byte	.LASF228
 2426 0e62 01       		.byte	0x1
 2427 0e63 13       		.uleb128 0x13
 2428 0e64 010A0000 		.4byte	.LASF229
 2429 0e68 02       		.byte	0x2
 2430 0e69 13       		.uleb128 0x13
 2431 0e6a C20E0000 		.4byte	.LASF230
 2432 0e6e 03       		.byte	0x3
 2433 0e6f 00       		.byte	0
 2434 0e70 0F       		.uleb128 0xf
 2435 0e71 1A0F0000 		.4byte	.LASF231
 2436 0e75 02       		.byte	0x2
 2437 0e76 1B07     		.2byte	0x71b
 2438 0e78 4A0E0000 		.4byte	0xe4a
 2439 0e7c 09       		.uleb128 0x9
 2440 0e7d 14       		.byte	0x14
 2441 0e7e 04       		.byte	0x4
 2442 0e7f 3B       		.byte	0x3b
 2443 0e80 C10E0000 		.4byte	0xec1
 2444 0e84 0A       		.uleb128 0xa
 2445 0e85 C4110000 		.4byte	.LASF232
 2446 0e89 04       		.byte	0x4
 2447 0e8a 3D       		.byte	0x3d
 2448 0e8b B8000000 		.4byte	0xb8
 2449 0e8f 00       		.byte	0
 2450 0e90 0A       		.uleb128 0xa
 2451 0e91 A9040000 		.4byte	.LASF233
 2452 0e95 04       		.byte	0x4
 2453 0e96 3E       		.byte	0x3e
 2454 0e97 B8000000 		.4byte	0xb8
 2455 0e9b 04       		.byte	0x4
 2456 0e9c 0A       		.uleb128 0xa
 2457 0e9d 6B020000 		.4byte	.LASF234
 2458 0ea1 04       		.byte	0x4
 2459 0ea2 3F       		.byte	0x3f
 2460 0ea3 C10E0000 		.4byte	0xec1
 2461 0ea7 08       		.byte	0x8
 2462 0ea8 0A       		.uleb128 0xa
 2463 0ea9 ED0C0000 		.4byte	.LASF235
 2464 0ead 04       		.byte	0x4
 2465 0eae 40       		.byte	0x40
 2466 0eaf B8000000 		.4byte	0xb8
 2467 0eb3 0C       		.byte	0xc
 2468 0eb4 0A       		.uleb128 0xa
 2469 0eb5 0F0F0000 		.4byte	.LASF236
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 136


 2470 0eb9 04       		.byte	0x4
 2471 0eba 45       		.byte	0x45
 2472 0ebb B8000000 		.4byte	0xb8
 2473 0ebf 10       		.byte	0x10
 2474 0ec0 00       		.byte	0
 2475 0ec1 10       		.uleb128 0x10
 2476 0ec2 04       		.byte	0x4
 2477 0ec3 C70E0000 		.4byte	0xec7
 2478 0ec7 06       		.uleb128 0x6
 2479 0ec8 030E0000 		.4byte	0xe03
 2480 0ecc 03       		.uleb128 0x3
 2481 0ecd BA050000 		.4byte	.LASF237
 2482 0ed1 04       		.byte	0x4
 2483 0ed2 48       		.byte	0x48
 2484 0ed3 7C0E0000 		.4byte	0xe7c
 2485 0ed7 17       		.uleb128 0x17
 2486 0ed8 AC0B0000 		.4byte	.LASF238
 2487 0edc 03       		.byte	0x3
 2488 0edd 9E05     		.2byte	0x59e
 2489 0edf 03       		.byte	0x3
 2490 0ee0 F10E0000 		.4byte	0xef1
 2491 0ee4 18       		.uleb128 0x18
 2492 0ee5 A4040000 		.4byte	.LASF240
 2493 0ee9 03       		.byte	0x3
 2494 0eea 9E05     		.2byte	0x59e
 2495 0eec F10E0000 		.4byte	0xef1
 2496 0ef0 00       		.byte	0
 2497 0ef1 10       		.uleb128 0x10
 2498 0ef2 04       		.byte	0x4
 2499 0ef3 CF070000 		.4byte	0x7cf
 2500 0ef7 19       		.uleb128 0x19
 2501 0ef8 8C020000 		.4byte	.LASF258
 2502 0efc 01       		.byte	0x1
 2503 0efd E3       		.byte	0xe3
 2504 0efe 01       		.byte	0x1
 2505 0eff 17       		.uleb128 0x17
 2506 0f00 300F0000 		.4byte	.LASF239
 2507 0f04 03       		.byte	0x3
 2508 0f05 6D06     		.2byte	0x66d
 2509 0f07 03       		.byte	0x3
 2510 0f08 250F0000 		.4byte	0xf25
 2511 0f0c 18       		.uleb128 0x18
 2512 0f0d A4040000 		.4byte	.LASF240
 2513 0f11 03       		.byte	0x3
 2514 0f12 6D06     		.2byte	0x66d
 2515 0f14 F10E0000 		.4byte	0xef1
 2516 0f18 18       		.uleb128 0x18
 2517 0f19 76110000 		.4byte	.LASF213
 2518 0f1d 03       		.byte	0x3
 2519 0f1e 6D06     		.2byte	0x66d
 2520 0f20 B8000000 		.4byte	0xb8
 2521 0f24 00       		.byte	0
 2522 0f25 17       		.uleb128 0x17
 2523 0f26 B4080000 		.4byte	.LASF241
 2524 0f2a 03       		.byte	0x3
 2525 0f2b DB05     		.2byte	0x5db
 2526 0f2d 03       		.byte	0x3
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 137


 2527 0f2e 4B0F0000 		.4byte	0xf4b
 2528 0f32 18       		.uleb128 0x18
 2529 0f33 A4040000 		.4byte	.LASF240
 2530 0f37 03       		.byte	0x3
 2531 0f38 DB05     		.2byte	0x5db
 2532 0f3a F10E0000 		.4byte	0xef1
 2533 0f3e 18       		.uleb128 0x18
 2534 0f3f F3060000 		.4byte	.LASF242
 2535 0f43 03       		.byte	0x3
 2536 0f44 DB05     		.2byte	0x5db
 2537 0f46 B8000000 		.4byte	0xb8
 2538 0f4a 00       		.byte	0
 2539 0f4b 1A       		.uleb128 0x1a
 2540 0f4c 8F010000 		.4byte	.LASF289
 2541 0f50 01       		.byte	0x1
 2542 0f51 9F01     		.2byte	0x19f
 2543 0f53 01       		.byte	0x1
 2544 0f54 650F0000 		.4byte	0xf65
 2545 0f58 1B       		.uleb128 0x1b
 2546 0f59 56060000 		.4byte	.LASF245
 2547 0f5d 01       		.byte	0x1
 2548 0f5e A101     		.2byte	0x1a1
 2549 0f60 B8000000 		.4byte	0xb8
 2550 0f64 00       		.byte	0
 2551 0f65 1C       		.uleb128 0x1c
 2552 0f66 420C0000 		.4byte	.LASF247
 2553 0f6a 02       		.byte	0x2
 2554 0f6b 3E08     		.2byte	0x83e
 2555 0f6d 3E0E0000 		.4byte	0xe3e
 2556 0f71 03       		.byte	0x3
 2557 0f72 9B0F0000 		.4byte	0xf9b
 2558 0f76 18       		.uleb128 0x18
 2559 0f77 B9070000 		.4byte	.LASF243
 2560 0f7b 02       		.byte	0x2
 2561 0f7c 3E08     		.2byte	0x83e
 2562 0f7e 700E0000 		.4byte	0xe70
 2563 0f82 18       		.uleb128 0x18
 2564 0f83 EB010000 		.4byte	.LASF244
 2565 0f87 02       		.byte	0x2
 2566 0f88 3E08     		.2byte	0x83e
 2567 0f8a B8000000 		.4byte	0xb8
 2568 0f8e 1B       		.uleb128 0x1b
 2569 0f8f 120E0000 		.4byte	.LASF246
 2570 0f93 02       		.byte	0x2
 2571 0f94 4008     		.2byte	0x840
 2572 0f96 3E0E0000 		.4byte	0xe3e
 2573 0f9a 00       		.byte	0
 2574 0f9b 1C       		.uleb128 0x1c
 2575 0f9c DE080000 		.4byte	.LASF248
 2576 0fa0 02       		.byte	0x2
 2577 0fa1 4707     		.2byte	0x747
 2578 0fa3 3E0E0000 		.4byte	0xe3e
 2579 0fa7 03       		.byte	0x3
 2580 0fa8 DD0F0000 		.4byte	0xfdd
 2581 0fac 18       		.uleb128 0x18
 2582 0fad B9070000 		.4byte	.LASF243
 2583 0fb1 02       		.byte	0x2
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 138


 2584 0fb2 4707     		.2byte	0x747
 2585 0fb4 700E0000 		.4byte	0xe70
 2586 0fb8 18       		.uleb128 0x18
 2587 0fb9 EB010000 		.4byte	.LASF244
 2588 0fbd 02       		.byte	0x2
 2589 0fbe 4807     		.2byte	0x748
 2590 0fc0 B8000000 		.4byte	0xb8
 2591 0fc4 18       		.uleb128 0x18
 2592 0fc5 02080000 		.4byte	.LASF249
 2593 0fc9 02       		.byte	0x2
 2594 0fca 4807     		.2byte	0x748
 2595 0fcc B8000000 		.4byte	0xb8
 2596 0fd0 1B       		.uleb128 0x1b
 2597 0fd1 120E0000 		.4byte	.LASF246
 2598 0fd5 02       		.byte	0x2
 2599 0fd6 4A07     		.2byte	0x74a
 2600 0fd8 3E0E0000 		.4byte	0xe3e
 2601 0fdc 00       		.byte	0
 2602 0fdd 1C       		.uleb128 0x1c
 2603 0fde 88000000 		.4byte	.LASF250
 2604 0fe2 02       		.byte	0x2
 2605 0fe3 6408     		.2byte	0x864
 2606 0fe5 3E0E0000 		.4byte	0xe3e
 2607 0fe9 03       		.byte	0x3
 2608 0fea 13100000 		.4byte	0x1013
 2609 0fee 18       		.uleb128 0x18
 2610 0fef B9070000 		.4byte	.LASF243
 2611 0ff3 02       		.byte	0x2
 2612 0ff4 6408     		.2byte	0x864
 2613 0ff6 700E0000 		.4byte	0xe70
 2614 0ffa 18       		.uleb128 0x18
 2615 0ffb EB010000 		.4byte	.LASF244
 2616 0fff 02       		.byte	0x2
 2617 1000 6408     		.2byte	0x864
 2618 1002 B8000000 		.4byte	0xb8
 2619 1006 1B       		.uleb128 0x1b
 2620 1007 120E0000 		.4byte	.LASF246
 2621 100b 02       		.byte	0x2
 2622 100c 6608     		.2byte	0x866
 2623 100e 3E0E0000 		.4byte	0xe3e
 2624 1012 00       		.byte	0
 2625 1013 1D       		.uleb128 0x1d
 2626 1014 A6110000 		.4byte	.LASF252
 2627 1018 0C       		.byte	0xc
 2628 1019 3C       		.byte	0x3c
 2629 101a 03       		.byte	0x3
 2630 101b 1E       		.uleb128 0x1e
 2631 101c 17060000 		.4byte	.LASF251
 2632 1020 0C       		.byte	0xc
 2633 1021 62       		.byte	0x62
 2634 1022 03       		.byte	0x3
 2635 1023 33100000 		.4byte	0x1033
 2636 1027 1F       		.uleb128 0x1f
 2637 1028 02080000 		.4byte	.LASF249
 2638 102c 0C       		.byte	0xc
 2639 102d 62       		.byte	0x62
 2640 102e B8000000 		.4byte	0xb8
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 139


 2641 1032 00       		.byte	0
 2642 1033 1D       		.uleb128 0x1d
 2643 1034 EC000000 		.4byte	.LASF253
 2644 1038 0C       		.byte	0xc
 2645 1039 4C       		.byte	0x4c
 2646 103a 03       		.byte	0x3
 2647 103b 20       		.uleb128 0x20
 2648 103c 6E030000 		.4byte	.LASF254
 2649 1040 01       		.byte	0x1
 2650 1041 80       		.byte	0x80
 2651 1042 00000000 		.4byte	.LFB188
 2652 1046 88000000 		.4byte	.LFE188-.LFB188
 2653 104a 01       		.uleb128 0x1
 2654 104b 9C       		.byte	0x9c
 2655 104c 84110000 		.4byte	0x1184
 2656 1050 21       		.uleb128 0x21
 2657 1051 1A0B0000 		.4byte	.LASF256
 2658 1055 01       		.byte	0x1
 2659 1056 80       		.byte	0x80
 2660 1057 84110000 		.4byte	0x1184
 2661 105b 00000000 		.4byte	.LLST0
 2662 105f 22       		.uleb128 0x22
 2663 1060 67100000 		.4byte	.LASF262
 2664 1064 01       		.byte	0x1
 2665 1065 82       		.byte	0x82
 2666 1066 FC0D0000 		.4byte	0xdfc
 2667 106a 00       		.byte	0
 2668 106b 23       		.uleb128 0x23
 2669 106c 33100000 		.4byte	0x1033
 2670 1070 00000000 		.4byte	.LBB20
 2671 1074 00000000 		.4byte	.Ldebug_ranges0+0
 2672 1078 01       		.byte	0x1
 2673 1079 86       		.byte	0x86
 2674 107a B0100000 		.4byte	0x10b0
 2675 107e 24       		.uleb128 0x24
 2676 107f DD0F0000 		.4byte	0xfdd
 2677 1083 00000000 		.4byte	.LBB21
 2678 1087 00000000 		.4byte	.Ldebug_ranges0+0
 2679 108b 0C       		.byte	0xc
 2680 108c 4E       		.byte	0x4e
 2681 108d 25       		.uleb128 0x25
 2682 108e EE0F0000 		.4byte	0xfee
 2683 1092 2C000000 		.4byte	.LLST1
 2684 1096 25       		.uleb128 0x25
 2685 1097 FA0F0000 		.4byte	0xffa
 2686 109b 40000000 		.4byte	.LLST2
 2687 109f 26       		.uleb128 0x26
 2688 10a0 00000000 		.4byte	.Ldebug_ranges0+0
 2689 10a4 27       		.uleb128 0x27
 2690 10a5 06100000 		.4byte	0x1006
 2691 10a9 54000000 		.4byte	.LLST3
 2692 10ad 00       		.byte	0
 2693 10ae 00       		.byte	0
 2694 10af 00       		.byte	0
 2695 10b0 28       		.uleb128 0x28
 2696 10b1 1B100000 		.4byte	0x101b
 2697 10b5 22000000 		.4byte	.LBB32
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 140


 2698 10b9 1A000000 		.4byte	.LBE32-.LBB32
 2699 10bd 01       		.byte	0x1
 2700 10be 87       		.byte	0x87
 2701 10bf 0B110000 		.4byte	0x110b
 2702 10c3 25       		.uleb128 0x25
 2703 10c4 27100000 		.4byte	0x1027
 2704 10c8 6C000000 		.4byte	.LLST4
 2705 10cc 29       		.uleb128 0x29
 2706 10cd 9B0F0000 		.4byte	0xf9b
 2707 10d1 22000000 		.4byte	.LBB33
 2708 10d5 1A000000 		.4byte	.LBE33-.LBB33
 2709 10d9 0C       		.byte	0xc
 2710 10da 64       		.byte	0x64
 2711 10db 25       		.uleb128 0x25
 2712 10dc AC0F0000 		.4byte	0xfac
 2713 10e0 8B000000 		.4byte	.LLST5
 2714 10e4 25       		.uleb128 0x25
 2715 10e5 B80F0000 		.4byte	0xfb8
 2716 10e9 9F000000 		.4byte	.LLST6
 2717 10ed 25       		.uleb128 0x25
 2718 10ee C40F0000 		.4byte	0xfc4
 2719 10f2 6C000000 		.4byte	.LLST4
 2720 10f6 2A       		.uleb128 0x2a
 2721 10f7 22000000 		.4byte	.LBB34
 2722 10fb 1A000000 		.4byte	.LBE34-.LBB34
 2723 10ff 27       		.uleb128 0x27
 2724 1100 D00F0000 		.4byte	0xfd0
 2725 1104 B3000000 		.4byte	.LLST8
 2726 1108 00       		.byte	0
 2727 1109 00       		.byte	0
 2728 110a 00       		.byte	0
 2729 110b 28       		.uleb128 0x28
 2730 110c 13100000 		.4byte	0x1013
 2731 1110 3C000000 		.4byte	.LBB35
 2732 1114 2E000000 		.4byte	.LBE35-.LBB35
 2733 1118 01       		.byte	0x1
 2734 1119 88       		.byte	0x88
 2735 111a 54110000 		.4byte	0x1154
 2736 111e 29       		.uleb128 0x29
 2737 111f 650F0000 		.4byte	0xf65
 2738 1123 3C000000 		.4byte	.LBB36
 2739 1127 2E000000 		.4byte	.LBE36-.LBB36
 2740 112b 0C       		.byte	0xc
 2741 112c 3E       		.byte	0x3e
 2742 112d 25       		.uleb128 0x25
 2743 112e 760F0000 		.4byte	0xf76
 2744 1132 CB000000 		.4byte	.LLST9
 2745 1136 25       		.uleb128 0x25
 2746 1137 820F0000 		.4byte	0xf82
 2747 113b DF000000 		.4byte	.LLST10
 2748 113f 2A       		.uleb128 0x2a
 2749 1140 3C000000 		.4byte	.LBB37
 2750 1144 2E000000 		.4byte	.LBE37-.LBB37
 2751 1148 27       		.uleb128 0x27
 2752 1149 8E0F0000 		.4byte	0xf8e
 2753 114d F3000000 		.4byte	.LLST11
 2754 1151 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 141


 2755 1152 00       		.byte	0
 2756 1153 00       		.byte	0
 2757 1154 2B       		.uleb128 0x2b
 2758 1155 72000000 		.4byte	.LVL6
 2759 1159 9F140000 		.4byte	0x149f
 2760 115d 70110000 		.4byte	0x1170
 2761 1161 2C       		.uleb128 0x2c
 2762 1162 01       		.uleb128 0x1
 2763 1163 50       		.byte	0x50
 2764 1164 05       		.uleb128 0x5
 2765 1165 0C       		.byte	0xc
 2766 1166 00001D41 		.4byte	0x411d0000
 2767 116a 2C       		.uleb128 0x2c
 2768 116b 01       		.uleb128 0x1
 2769 116c 51       		.byte	0x51
 2770 116d 01       		.uleb128 0x1
 2771 116e 30       		.byte	0x30
 2772 116f 00       		.byte	0
 2773 1170 2D       		.uleb128 0x2d
 2774 1171 7A000000 		.4byte	.LVL7
 2775 1175 AB140000 		.4byte	0x14ab
 2776 1179 2C       		.uleb128 0x2c
 2777 117a 01       		.uleb128 0x1
 2778 117b 50       		.byte	0x50
 2779 117c 05       		.uleb128 0x5
 2780 117d 0C       		.byte	0xc
 2781 117e 00001D41 		.4byte	0x411d0000
 2782 1182 00       		.byte	0
 2783 1183 00       		.byte	0
 2784 1184 10       		.uleb128 0x10
 2785 1185 04       		.byte	0x4
 2786 1186 8A110000 		.4byte	0x118a
 2787 118a 06       		.uleb128 0x6
 2788 118b CC0E0000 		.4byte	0xecc
 2789 118f 2E       		.uleb128 0x2e
 2790 1190 F70E0000 		.4byte	0xef7
 2791 1194 00000000 		.4byte	.LFB190
 2792 1198 1C000000 		.4byte	.LFE190-.LFB190
 2793 119c 01       		.uleb128 0x1
 2794 119d 9C       		.byte	0x9c
 2795 119e AC110000 		.4byte	0x11ac
 2796 11a2 2F       		.uleb128 0x2f
 2797 11a3 14000000 		.4byte	.LVL9
 2798 11a7 B7140000 		.4byte	0x14b7
 2799 11ab 00       		.byte	0
 2800 11ac 20       		.uleb128 0x20
 2801 11ad D4030000 		.4byte	.LASF255
 2802 11b1 01       		.byte	0x1
 2803 11b2 FE       		.byte	0xfe
 2804 11b3 00000000 		.4byte	.LFB191
 2805 11b7 24000000 		.4byte	.LFE191-.LFB191
 2806 11bb 01       		.uleb128 0x1
 2807 11bc 9C       		.byte	0x9c
 2808 11bd CF110000 		.4byte	0x11cf
 2809 11c1 30       		.uleb128 0x30
 2810 11c2 7F030000 		.4byte	.LASF257
 2811 11c6 01       		.byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 142


 2812 11c7 FE       		.byte	0xfe
 2813 11c8 870C0000 		.4byte	0xc87
 2814 11cc 01       		.uleb128 0x1
 2815 11cd 50       		.byte	0x50
 2816 11ce 00       		.byte	0
 2817 11cf 31       		.uleb128 0x31
 2818 11d0 770F0000 		.4byte	.LASF259
 2819 11d4 01       		.byte	0x1
 2820 11d5 3601     		.2byte	0x136
 2821 11d7 01       		.byte	0x1
 2822 11d8 32       		.uleb128 0x32
 2823 11d9 CF110000 		.4byte	0x11cf
 2824 11dd 00000000 		.4byte	.LFB193
 2825 11e1 02000000 		.4byte	.LFE193-.LFB193
 2826 11e5 01       		.uleb128 0x1
 2827 11e6 9C       		.byte	0x9c
 2828 11e7 33       		.uleb128 0x33
 2829 11e8 3C0A0000 		.4byte	.LASF260
 2830 11ec 01       		.byte	0x1
 2831 11ed 5201     		.2byte	0x152
 2832 11ef 00000000 		.4byte	.LFB194
 2833 11f3 14000000 		.4byte	.LFE194-.LFB194
 2834 11f7 01       		.uleb128 0x1
 2835 11f8 9C       		.byte	0x9c
 2836 11f9 3F120000 		.4byte	0x123f
 2837 11fd 34       		.uleb128 0x34
 2838 11fe B2090000 		.4byte	.LASF261
 2839 1202 01       		.byte	0x1
 2840 1203 5201     		.2byte	0x152
 2841 1205 B8000000 		.4byte	0xb8
 2842 1209 0B010000 		.4byte	.LLST12
 2843 120d 35       		.uleb128 0x35
 2844 120e FC100000 		.4byte	.LASF263
 2845 1212 01       		.byte	0x1
 2846 1213 5401     		.2byte	0x154
 2847 1215 B8000000 		.4byte	0xb8
 2848 1219 01       		.uleb128 0x1
 2849 121a 50       		.byte	0x50
 2850 121b 36       		.uleb128 0x36
 2851 121c FF0E0000 		.4byte	0xeff
 2852 1220 04000000 		.4byte	.LBB42
 2853 1224 08000000 		.4byte	.LBE42-.LBB42
 2854 1228 01       		.byte	0x1
 2855 1229 5801     		.2byte	0x158
 2856 122b 25       		.uleb128 0x25
 2857 122c 180F0000 		.4byte	0xf18
 2858 1230 2C010000 		.4byte	.LLST13
 2859 1234 25       		.uleb128 0x25
 2860 1235 0C0F0000 		.4byte	0xf0c
 2861 1239 3F010000 		.4byte	.LLST14
 2862 123d 00       		.byte	0
 2863 123e 00       		.byte	0
 2864 123f 33       		.uleb128 0x33
 2865 1240 76000000 		.4byte	.LASF264
 2866 1244 01       		.byte	0x1
 2867 1245 6901     		.2byte	0x169
 2868 1247 00000000 		.4byte	.LFB195
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 143


 2869 124b 28000000 		.4byte	.LFE195-.LFB195
 2870 124f 01       		.uleb128 0x1
 2871 1250 9C       		.byte	0x9c
 2872 1251 95120000 		.4byte	0x1295
 2873 1255 34       		.uleb128 0x34
 2874 1256 F3060000 		.4byte	.LASF242
 2875 125a 01       		.byte	0x1
 2876 125b 6901     		.2byte	0x169
 2877 125d B8000000 		.4byte	0xb8
 2878 1261 57010000 		.4byte	.LLST15
 2879 1265 1B       		.uleb128 0x1b
 2880 1266 D4060000 		.4byte	.LASF265
 2881 126a 01       		.byte	0x1
 2882 126b 6B01     		.2byte	0x16b
 2883 126d 260C0000 		.4byte	0xc26
 2884 1271 36       		.uleb128 0x36
 2885 1272 250F0000 		.4byte	0xf25
 2886 1276 16000000 		.4byte	.LBB44
 2887 127a 04000000 		.4byte	.LBE44-.LBB44
 2888 127e 01       		.byte	0x1
 2889 127f 6E01     		.2byte	0x16e
 2890 1281 25       		.uleb128 0x25
 2891 1282 3E0F0000 		.4byte	0xf3e
 2892 1286 75010000 		.4byte	.LLST16
 2893 128a 25       		.uleb128 0x25
 2894 128b 320F0000 		.4byte	0xf32
 2895 128f 88010000 		.4byte	.LLST17
 2896 1293 00       		.byte	0
 2897 1294 00       		.byte	0
 2898 1295 37       		.uleb128 0x37
 2899 1296 43020000 		.4byte	.LASF290
 2900 129a 01       		.byte	0x1
 2901 129b 8201     		.2byte	0x182
 2902 129d B8000000 		.4byte	0xb8
 2903 12a1 00000000 		.4byte	.LFB196
 2904 12a5 14000000 		.4byte	.LFE196-.LFB196
 2905 12a9 01       		.uleb128 0x1
 2906 12aa 9C       		.byte	0x9c
 2907 12ab F3120000 		.4byte	0x12f3
 2908 12af 34       		.uleb128 0x34
 2909 12b0 EC0E0000 		.4byte	.LASF266
 2910 12b4 01       		.byte	0x1
 2911 12b5 8201     		.2byte	0x182
 2912 12b7 AD0C0000 		.4byte	0xcad
 2913 12bb A0010000 		.4byte	.LLST18
 2914 12bf 38       		.uleb128 0x38
 2915 12c0 480F0000 		.4byte	.LASF267
 2916 12c4 01       		.byte	0x1
 2917 12c5 8401     		.2byte	0x184
 2918 12c7 260C0000 		.4byte	0xc26
 2919 12cb C1010000 		.4byte	.LLST19
 2920 12cf 38       		.uleb128 0x38
 2921 12d0 E2040000 		.4byte	.LASF268
 2922 12d4 01       		.byte	0x1
 2923 12d5 8501     		.2byte	0x185
 2924 12d7 610C0000 		.4byte	0xc61
 2925 12db E7010000 		.4byte	.LLST20
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 144


 2926 12df 2D       		.uleb128 0x2d
 2927 12e0 0A000000 		.4byte	.LVL19
 2928 12e4 C3140000 		.4byte	0x14c3
 2929 12e8 2C       		.uleb128 0x2c
 2930 12e9 01       		.uleb128 0x1
 2931 12ea 50       		.byte	0x50
 2932 12eb 05       		.uleb128 0x5
 2933 12ec 0C       		.byte	0xc
 2934 12ed 00001D41 		.4byte	0x411d0000
 2935 12f1 00       		.byte	0
 2936 12f2 00       		.byte	0
 2937 12f3 2E       		.uleb128 0x2e
 2938 12f4 4B0F0000 		.4byte	0xf4b
 2939 12f8 00000000 		.4byte	.LFB197
 2940 12fc 24000000 		.4byte	.LFE197-.LFB197
 2941 1300 01       		.uleb128 0x1
 2942 1301 9C       		.byte	0x9c
 2943 1302 29130000 		.4byte	0x1329
 2944 1306 39       		.uleb128 0x39
 2945 1307 580F0000 		.4byte	0xf58
 2946 130b 00       		.byte	0
 2947 130c 2A       		.uleb128 0x2a
 2948 130d 10000000 		.4byte	.LBB49
 2949 1311 0A000000 		.4byte	.LBE49-.LBB49
 2950 1315 27       		.uleb128 0x27
 2951 1316 580F0000 		.4byte	0xf58
 2952 131a FA010000 		.4byte	.LLST21
 2953 131e 2F       		.uleb128 0x2f
 2954 131f 1A000000 		.4byte	.LVL23
 2955 1323 3B100000 		.4byte	0x103b
 2956 1327 00       		.byte	0
 2957 1328 00       		.byte	0
 2958 1329 3A       		.uleb128 0x3a
 2959 132a 7F0A0000 		.4byte	.LASF269
 2960 132e 04       		.byte	0x4
 2961 132f 9203     		.2byte	0x392
 2962 1331 03       		.byte	0x3
 2963 1332 20       		.uleb128 0x20
 2964 1333 60060000 		.4byte	.LASF270
 2965 1337 01       		.byte	0x1
 2966 1338 41       		.byte	0x41
 2967 1339 00000000 		.4byte	.LFB186
 2968 133d 28000000 		.4byte	.LFE186-.LFB186
 2969 1341 01       		.uleb128 0x1
 2970 1342 9C       		.byte	0x9c
 2971 1343 78130000 		.4byte	0x1378
 2972 1347 28       		.uleb128 0x28
 2973 1348 29130000 		.4byte	0x1329
 2974 134c 16000000 		.4byte	.LBB52
 2975 1350 06000000 		.4byte	.LBE52-.LBB52
 2976 1354 01       		.byte	0x1
 2977 1355 49       		.byte	0x49
 2978 1356 6E130000 		.4byte	0x136e
 2979 135a 2D       		.uleb128 0x2d
 2980 135b 1C000000 		.4byte	.LVL25
 2981 135f CF140000 		.4byte	0x14cf
 2982 1363 2C       		.uleb128 0x2c
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 145


 2983 1364 01       		.uleb128 0x1
 2984 1365 50       		.byte	0x50
 2985 1366 05       		.uleb128 0x5
 2986 1367 0C       		.byte	0xc
 2987 1368 00001D41 		.4byte	0x411d0000
 2988 136c 00       		.byte	0
 2989 136d 00       		.byte	0
 2990 136e 2F       		.uleb128 0x2f
 2991 136f 10000000 		.4byte	.LVL24
 2992 1373 4B0F0000 		.4byte	0xf4b
 2993 1377 00       		.byte	0
 2994 1378 20       		.uleb128 0x20
 2995 1379 D4000000 		.4byte	.LASF271
 2996 137d 01       		.byte	0x1
 2997 137e 5E       		.byte	0x5e
 2998 137f 00000000 		.4byte	.LFB187
 2999 1383 08000000 		.4byte	.LFE187-.LFB187
 3000 1387 01       		.uleb128 0x1
 3001 1388 9C       		.byte	0x9c
 3002 1389 A6130000 		.4byte	0x13a6
 3003 138d 21       		.uleb128 0x21
 3004 138e 77090000 		.4byte	.LASF272
 3005 1392 01       		.byte	0x1
 3006 1393 5E       		.byte	0x5e
 3007 1394 FE0B0000 		.4byte	0xbfe
 3008 1398 0E020000 		.4byte	.LLST22
 3009 139c 2F       		.uleb128 0x2f
 3010 139d 06000000 		.4byte	.LVL27
 3011 13a1 32130000 		.4byte	0x1332
 3012 13a5 00       		.byte	0
 3013 13a6 3A       		.uleb128 0x3a
 3014 13a7 C9060000 		.4byte	.LASF273
 3015 13ab 04       		.byte	0x4
 3016 13ac AE03     		.2byte	0x3ae
 3017 13ae 03       		.byte	0x3
 3018 13af 20       		.uleb128 0x20
 3019 13b0 C30F0000 		.4byte	.LASF274
 3020 13b4 01       		.byte	0x1
 3021 13b5 AA       		.byte	0xaa
 3022 13b6 00000000 		.4byte	.LFB189
 3023 13ba 4C000000 		.4byte	.LFE189-.LFB189
 3024 13be 01       		.uleb128 0x1
 3025 13bf 9C       		.byte	0x9c
 3026 13c0 35140000 		.4byte	0x1435
 3027 13c4 21       		.uleb128 0x21
 3028 13c5 1A0B0000 		.4byte	.LASF256
 3029 13c9 01       		.byte	0x1
 3030 13ca AA       		.byte	0xaa
 3031 13cb B8000000 		.4byte	0xb8
 3032 13cf 2F020000 		.4byte	.LLST23
 3033 13d3 21       		.uleb128 0x21
 3034 13d4 9A010000 		.4byte	.LASF275
 3035 13d8 01       		.byte	0x1
 3036 13d9 AA       		.byte	0xaa
 3037 13da B8000000 		.4byte	0xb8
 3038 13de 50020000 		.4byte	.LLST24
 3039 13e2 23       		.uleb128 0x23
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 146


 3040 13e3 A6130000 		.4byte	0x13a6
 3041 13e7 0A000000 		.4byte	.LBB58
 3042 13eb 28000000 		.4byte	.Ldebug_ranges0+0x28
 3043 13ef 01       		.byte	0x1
 3044 13f0 B0       		.byte	0xb0
 3045 13f1 10140000 		.4byte	0x1410
 3046 13f5 3B       		.uleb128 0x3b
 3047 13f6 D70E0000 		.4byte	0xed7
 3048 13fa 0A000000 		.4byte	.LBB59
 3049 13fe 28000000 		.4byte	.Ldebug_ranges0+0x28
 3050 1402 04       		.byte	0x4
 3051 1403 B003     		.2byte	0x3b0
 3052 1405 25       		.uleb128 0x25
 3053 1406 E40E0000 		.4byte	0xee4
 3054 140a 7C020000 		.4byte	.LLST25
 3055 140e 00       		.byte	0
 3056 140f 00       		.byte	0
 3057 1410 2F       		.uleb128 0x2f
 3058 1411 22000000 		.4byte	.LVL31
 3059 1415 4B0F0000 		.4byte	0xf4b
 3060 1419 2F       		.uleb128 0x2f
 3061 141a 2E000000 		.4byte	.LVL32
 3062 141e 3B100000 		.4byte	0x103b
 3063 1422 2F       		.uleb128 0x2f
 3064 1423 3A000000 		.4byte	.LVL33
 3065 1427 32130000 		.4byte	0x1332
 3066 142b 2F       		.uleb128 0x2f
 3067 142c 3E000000 		.4byte	.LVL34
 3068 1430 F70E0000 		.4byte	0xef7
 3069 1434 00       		.byte	0
 3070 1435 3C       		.uleb128 0x3c
 3071 1436 A7000000 		.4byte	.LASF276
 3072 143a 0A       		.byte	0xa
 3073 143b A7       		.byte	0xa7
 3074 143c 40140000 		.4byte	0x1440
 3075 1440 10       		.uleb128 0x10
 3076 1441 04       		.byte	0x4
 3077 1442 46140000 		.4byte	0x1446
 3078 1446 06       		.uleb128 0x6
 3079 1447 F30B0000 		.4byte	0xbf3
 3080 144b 3D       		.uleb128 0x3d
 3081 144c 42000000 		.4byte	.LASF277
 3082 1450 01       		.byte	0x1
 3083 1451 2B       		.byte	0x2b
 3084 1452 97000000 		.4byte	0x97
 3085 1456 05       		.uleb128 0x5
 3086 1457 03       		.byte	0x3
 3087 1458 00000000 		.4byte	ADC_1_initVar
 3088 145c 3D       		.uleb128 0x3d
 3089 145d FB0F0000 		.4byte	.LASF278
 3090 1461 01       		.byte	0x1
 3091 1462 2C       		.byte	0x2c
 3092 1463 97000000 		.4byte	0x97
 3093 1467 05       		.uleb128 0x5
 3094 1468 03       		.byte	0x3
 3095 1469 00000000 		.4byte	ADC_1_selected
 3096 146d 3D       		.uleb128 0x3d
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 147


 3097 146e 600C0000 		.4byte	.LASF279
 3098 1472 01       		.byte	0x1
 3099 1473 2D       		.byte	0x2d
 3100 1474 B8000000 		.4byte	0xb8
 3101 1478 05       		.uleb128 0x5
 3102 1479 03       		.byte	0x3
 3103 147a 00000000 		.4byte	ADC_1_currentConfig
 3104 147e 07       		.uleb128 0x7
 3105 147f 8A110000 		.4byte	0x118a
 3106 1483 8E140000 		.4byte	0x148e
 3107 1487 08       		.uleb128 0x8
 3108 1488 C3000000 		.4byte	0xc3
 3109 148c 00       		.byte	0
 3110 148d 00       		.byte	0
 3111 148e 3E       		.uleb128 0x3e
 3112 148f 2B0A0000 		.4byte	.LASF280
 3113 1493 04       		.byte	0x4
 3114 1494 6401     		.2byte	0x164
 3115 1496 9A140000 		.4byte	0x149a
 3116 149a 06       		.uleb128 0x6
 3117 149b 7E140000 		.4byte	0x147e
 3118 149f 3F       		.uleb128 0x3f
 3119 14a0 F3050000 		.4byte	.LASF281
 3120 14a4 F3050000 		.4byte	.LASF281
 3121 14a8 03       		.byte	0x3
 3122 14a9 3005     		.2byte	0x530
 3123 14ab 3F       		.uleb128 0x3f
 3124 14ac 890F0000 		.4byte	.LASF282
 3125 14b0 890F0000 		.4byte	.LASF282
 3126 14b4 03       		.byte	0x3
 3127 14b5 2F05     		.2byte	0x52f
 3128 14b7 3F       		.uleb128 0x3f
 3129 14b8 0D090000 		.4byte	.LASF283
 3130 14bc 0D090000 		.4byte	.LASF283
 3131 14c0 03       		.byte	0x3
 3132 14c1 3305     		.2byte	0x533
 3133 14c3 3F       		.uleb128 0x3f
 3134 14c4 8F110000 		.4byte	.LASF284
 3135 14c8 8F110000 		.4byte	.LASF284
 3136 14cc 03       		.byte	0x3
 3137 14cd 3505     		.2byte	0x535
 3138 14cf 3F       		.uleb128 0x3f
 3139 14d0 E50D0000 		.4byte	.LASF285
 3140 14d4 E50D0000 		.4byte	.LASF285
 3141 14d8 03       		.byte	0x3
 3142 14d9 3105     		.2byte	0x531
 3143 14db 00       		.byte	0
 3144              		.section	.debug_abbrev,"",%progbits
 3145              	.Ldebug_abbrev0:
 3146 0000 01       		.uleb128 0x1
 3147 0001 11       		.uleb128 0x11
 3148 0002 01       		.byte	0x1
 3149 0003 25       		.uleb128 0x25
 3150 0004 0E       		.uleb128 0xe
 3151 0005 13       		.uleb128 0x13
 3152 0006 0B       		.uleb128 0xb
 3153 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 148


 3154 0008 0E       		.uleb128 0xe
 3155 0009 1B       		.uleb128 0x1b
 3156 000a 0E       		.uleb128 0xe
 3157 000b 55       		.uleb128 0x55
 3158 000c 17       		.uleb128 0x17
 3159 000d 11       		.uleb128 0x11
 3160 000e 01       		.uleb128 0x1
 3161 000f 10       		.uleb128 0x10
 3162 0010 17       		.uleb128 0x17
 3163 0011 00       		.byte	0
 3164 0012 00       		.byte	0
 3165 0013 02       		.uleb128 0x2
 3166 0014 24       		.uleb128 0x24
 3167 0015 00       		.byte	0
 3168 0016 0B       		.uleb128 0xb
 3169 0017 0B       		.uleb128 0xb
 3170 0018 3E       		.uleb128 0x3e
 3171 0019 0B       		.uleb128 0xb
 3172 001a 03       		.uleb128 0x3
 3173 001b 0E       		.uleb128 0xe
 3174 001c 00       		.byte	0
 3175 001d 00       		.byte	0
 3176 001e 03       		.uleb128 0x3
 3177 001f 16       		.uleb128 0x16
 3178 0020 00       		.byte	0
 3179 0021 03       		.uleb128 0x3
 3180 0022 0E       		.uleb128 0xe
 3181 0023 3A       		.uleb128 0x3a
 3182 0024 0B       		.uleb128 0xb
 3183 0025 3B       		.uleb128 0x3b
 3184 0026 0B       		.uleb128 0xb
 3185 0027 49       		.uleb128 0x49
 3186 0028 13       		.uleb128 0x13
 3187 0029 00       		.byte	0
 3188 002a 00       		.byte	0
 3189 002b 04       		.uleb128 0x4
 3190 002c 24       		.uleb128 0x24
 3191 002d 00       		.byte	0
 3192 002e 0B       		.uleb128 0xb
 3193 002f 0B       		.uleb128 0xb
 3194 0030 3E       		.uleb128 0x3e
 3195 0031 0B       		.uleb128 0xb
 3196 0032 03       		.uleb128 0x3
 3197 0033 08       		.uleb128 0x8
 3198 0034 00       		.byte	0
 3199 0035 00       		.byte	0
 3200 0036 05       		.uleb128 0x5
 3201 0037 35       		.uleb128 0x35
 3202 0038 00       		.byte	0
 3203 0039 49       		.uleb128 0x49
 3204 003a 13       		.uleb128 0x13
 3205 003b 00       		.byte	0
 3206 003c 00       		.byte	0
 3207 003d 06       		.uleb128 0x6
 3208 003e 26       		.uleb128 0x26
 3209 003f 00       		.byte	0
 3210 0040 49       		.uleb128 0x49
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 149


 3211 0041 13       		.uleb128 0x13
 3212 0042 00       		.byte	0
 3213 0043 00       		.byte	0
 3214 0044 07       		.uleb128 0x7
 3215 0045 01       		.uleb128 0x1
 3216 0046 01       		.byte	0x1
 3217 0047 49       		.uleb128 0x49
 3218 0048 13       		.uleb128 0x13
 3219 0049 01       		.uleb128 0x1
 3220 004a 13       		.uleb128 0x13
 3221 004b 00       		.byte	0
 3222 004c 00       		.byte	0
 3223 004d 08       		.uleb128 0x8
 3224 004e 21       		.uleb128 0x21
 3225 004f 00       		.byte	0
 3226 0050 49       		.uleb128 0x49
 3227 0051 13       		.uleb128 0x13
 3228 0052 2F       		.uleb128 0x2f
 3229 0053 0B       		.uleb128 0xb
 3230 0054 00       		.byte	0
 3231 0055 00       		.byte	0
 3232 0056 09       		.uleb128 0x9
 3233 0057 13       		.uleb128 0x13
 3234 0058 01       		.byte	0x1
 3235 0059 0B       		.uleb128 0xb
 3236 005a 0B       		.uleb128 0xb
 3237 005b 3A       		.uleb128 0x3a
 3238 005c 0B       		.uleb128 0xb
 3239 005d 3B       		.uleb128 0x3b
 3240 005e 0B       		.uleb128 0xb
 3241 005f 01       		.uleb128 0x1
 3242 0060 13       		.uleb128 0x13
 3243 0061 00       		.byte	0
 3244 0062 00       		.byte	0
 3245 0063 0A       		.uleb128 0xa
 3246 0064 0D       		.uleb128 0xd
 3247 0065 00       		.byte	0
 3248 0066 03       		.uleb128 0x3
 3249 0067 0E       		.uleb128 0xe
 3250 0068 3A       		.uleb128 0x3a
 3251 0069 0B       		.uleb128 0xb
 3252 006a 3B       		.uleb128 0x3b
 3253 006b 0B       		.uleb128 0xb
 3254 006c 49       		.uleb128 0x49
 3255 006d 13       		.uleb128 0x13
 3256 006e 38       		.uleb128 0x38
 3257 006f 0B       		.uleb128 0xb
 3258 0070 00       		.byte	0
 3259 0071 00       		.byte	0
 3260 0072 0B       		.uleb128 0xb
 3261 0073 13       		.uleb128 0x13
 3262 0074 01       		.byte	0x1
 3263 0075 0B       		.uleb128 0xb
 3264 0076 05       		.uleb128 0x5
 3265 0077 3A       		.uleb128 0x3a
 3266 0078 0B       		.uleb128 0xb
 3267 0079 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 150


 3268 007a 0B       		.uleb128 0xb
 3269 007b 01       		.uleb128 0x1
 3270 007c 13       		.uleb128 0x13
 3271 007d 00       		.byte	0
 3272 007e 00       		.byte	0
 3273 007f 0C       		.uleb128 0xc
 3274 0080 0D       		.uleb128 0xd
 3275 0081 00       		.byte	0
 3276 0082 03       		.uleb128 0x3
 3277 0083 08       		.uleb128 0x8
 3278 0084 3A       		.uleb128 0x3a
 3279 0085 0B       		.uleb128 0xb
 3280 0086 3B       		.uleb128 0x3b
 3281 0087 0B       		.uleb128 0xb
 3282 0088 49       		.uleb128 0x49
 3283 0089 13       		.uleb128 0x13
 3284 008a 38       		.uleb128 0x38
 3285 008b 0B       		.uleb128 0xb
 3286 008c 00       		.byte	0
 3287 008d 00       		.byte	0
 3288 008e 0D       		.uleb128 0xd
 3289 008f 0D       		.uleb128 0xd
 3290 0090 00       		.byte	0
 3291 0091 03       		.uleb128 0x3
 3292 0092 0E       		.uleb128 0xe
 3293 0093 3A       		.uleb128 0x3a
 3294 0094 0B       		.uleb128 0xb
 3295 0095 3B       		.uleb128 0x3b
 3296 0096 0B       		.uleb128 0xb
 3297 0097 49       		.uleb128 0x49
 3298 0098 13       		.uleb128 0x13
 3299 0099 38       		.uleb128 0x38
 3300 009a 05       		.uleb128 0x5
 3301 009b 00       		.byte	0
 3302 009c 00       		.byte	0
 3303 009d 0E       		.uleb128 0xe
 3304 009e 21       		.uleb128 0x21
 3305 009f 00       		.byte	0
 3306 00a0 49       		.uleb128 0x49
 3307 00a1 13       		.uleb128 0x13
 3308 00a2 2F       		.uleb128 0x2f
 3309 00a3 05       		.uleb128 0x5
 3310 00a4 00       		.byte	0
 3311 00a5 00       		.byte	0
 3312 00a6 0F       		.uleb128 0xf
 3313 00a7 16       		.uleb128 0x16
 3314 00a8 00       		.byte	0
 3315 00a9 03       		.uleb128 0x3
 3316 00aa 0E       		.uleb128 0xe
 3317 00ab 3A       		.uleb128 0x3a
 3318 00ac 0B       		.uleb128 0xb
 3319 00ad 3B       		.uleb128 0x3b
 3320 00ae 05       		.uleb128 0x5
 3321 00af 49       		.uleb128 0x49
 3322 00b0 13       		.uleb128 0x13
 3323 00b1 00       		.byte	0
 3324 00b2 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 151


 3325 00b3 10       		.uleb128 0x10
 3326 00b4 0F       		.uleb128 0xf
 3327 00b5 00       		.byte	0
 3328 00b6 0B       		.uleb128 0xb
 3329 00b7 0B       		.uleb128 0xb
 3330 00b8 49       		.uleb128 0x49
 3331 00b9 13       		.uleb128 0x13
 3332 00ba 00       		.byte	0
 3333 00bb 00       		.byte	0
 3334 00bc 11       		.uleb128 0x11
 3335 00bd 15       		.uleb128 0x15
 3336 00be 00       		.byte	0
 3337 00bf 27       		.uleb128 0x27
 3338 00c0 19       		.uleb128 0x19
 3339 00c1 00       		.byte	0
 3340 00c2 00       		.byte	0
 3341 00c3 12       		.uleb128 0x12
 3342 00c4 04       		.uleb128 0x4
 3343 00c5 01       		.byte	0x1
 3344 00c6 0B       		.uleb128 0xb
 3345 00c7 0B       		.uleb128 0xb
 3346 00c8 49       		.uleb128 0x49
 3347 00c9 13       		.uleb128 0x13
 3348 00ca 3A       		.uleb128 0x3a
 3349 00cb 0B       		.uleb128 0xb
 3350 00cc 3B       		.uleb128 0x3b
 3351 00cd 05       		.uleb128 0x5
 3352 00ce 01       		.uleb128 0x1
 3353 00cf 13       		.uleb128 0x13
 3354 00d0 00       		.byte	0
 3355 00d1 00       		.byte	0
 3356 00d2 13       		.uleb128 0x13
 3357 00d3 28       		.uleb128 0x28
 3358 00d4 00       		.byte	0
 3359 00d5 03       		.uleb128 0x3
 3360 00d6 0E       		.uleb128 0xe
 3361 00d7 1C       		.uleb128 0x1c
 3362 00d8 0B       		.uleb128 0xb
 3363 00d9 00       		.byte	0
 3364 00da 00       		.byte	0
 3365 00db 14       		.uleb128 0x14
 3366 00dc 28       		.uleb128 0x28
 3367 00dd 00       		.byte	0
 3368 00de 03       		.uleb128 0x3
 3369 00df 0E       		.uleb128 0xe
 3370 00e0 1C       		.uleb128 0x1c
 3371 00e1 06       		.uleb128 0x6
 3372 00e2 00       		.byte	0
 3373 00e3 00       		.byte	0
 3374 00e4 15       		.uleb128 0x15
 3375 00e5 13       		.uleb128 0x13
 3376 00e6 01       		.byte	0x1
 3377 00e7 0B       		.uleb128 0xb
 3378 00e8 0B       		.uleb128 0xb
 3379 00e9 3A       		.uleb128 0x3a
 3380 00ea 0B       		.uleb128 0xb
 3381 00eb 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 152


 3382 00ec 05       		.uleb128 0x5
 3383 00ed 01       		.uleb128 0x1
 3384 00ee 13       		.uleb128 0x13
 3385 00ef 00       		.byte	0
 3386 00f0 00       		.byte	0
 3387 00f1 16       		.uleb128 0x16
 3388 00f2 0D       		.uleb128 0xd
 3389 00f3 00       		.byte	0
 3390 00f4 03       		.uleb128 0x3
 3391 00f5 0E       		.uleb128 0xe
 3392 00f6 3A       		.uleb128 0x3a
 3393 00f7 0B       		.uleb128 0xb
 3394 00f8 3B       		.uleb128 0x3b
 3395 00f9 05       		.uleb128 0x5
 3396 00fa 49       		.uleb128 0x49
 3397 00fb 13       		.uleb128 0x13
 3398 00fc 38       		.uleb128 0x38
 3399 00fd 0B       		.uleb128 0xb
 3400 00fe 00       		.byte	0
 3401 00ff 00       		.byte	0
 3402 0100 17       		.uleb128 0x17
 3403 0101 2E       		.uleb128 0x2e
 3404 0102 01       		.byte	0x1
 3405 0103 03       		.uleb128 0x3
 3406 0104 0E       		.uleb128 0xe
 3407 0105 3A       		.uleb128 0x3a
 3408 0106 0B       		.uleb128 0xb
 3409 0107 3B       		.uleb128 0x3b
 3410 0108 05       		.uleb128 0x5
 3411 0109 27       		.uleb128 0x27
 3412 010a 19       		.uleb128 0x19
 3413 010b 20       		.uleb128 0x20
 3414 010c 0B       		.uleb128 0xb
 3415 010d 01       		.uleb128 0x1
 3416 010e 13       		.uleb128 0x13
 3417 010f 00       		.byte	0
 3418 0110 00       		.byte	0
 3419 0111 18       		.uleb128 0x18
 3420 0112 05       		.uleb128 0x5
 3421 0113 00       		.byte	0
 3422 0114 03       		.uleb128 0x3
 3423 0115 0E       		.uleb128 0xe
 3424 0116 3A       		.uleb128 0x3a
 3425 0117 0B       		.uleb128 0xb
 3426 0118 3B       		.uleb128 0x3b
 3427 0119 05       		.uleb128 0x5
 3428 011a 49       		.uleb128 0x49
 3429 011b 13       		.uleb128 0x13
 3430 011c 00       		.byte	0
 3431 011d 00       		.byte	0
 3432 011e 19       		.uleb128 0x19
 3433 011f 2E       		.uleb128 0x2e
 3434 0120 00       		.byte	0
 3435 0121 3F       		.uleb128 0x3f
 3436 0122 19       		.uleb128 0x19
 3437 0123 03       		.uleb128 0x3
 3438 0124 0E       		.uleb128 0xe
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 153


 3439 0125 3A       		.uleb128 0x3a
 3440 0126 0B       		.uleb128 0xb
 3441 0127 3B       		.uleb128 0x3b
 3442 0128 0B       		.uleb128 0xb
 3443 0129 27       		.uleb128 0x27
 3444 012a 19       		.uleb128 0x19
 3445 012b 20       		.uleb128 0x20
 3446 012c 0B       		.uleb128 0xb
 3447 012d 00       		.byte	0
 3448 012e 00       		.byte	0
 3449 012f 1A       		.uleb128 0x1a
 3450 0130 2E       		.uleb128 0x2e
 3451 0131 01       		.byte	0x1
 3452 0132 3F       		.uleb128 0x3f
 3453 0133 19       		.uleb128 0x19
 3454 0134 03       		.uleb128 0x3
 3455 0135 0E       		.uleb128 0xe
 3456 0136 3A       		.uleb128 0x3a
 3457 0137 0B       		.uleb128 0xb
 3458 0138 3B       		.uleb128 0x3b
 3459 0139 05       		.uleb128 0x5
 3460 013a 27       		.uleb128 0x27
 3461 013b 19       		.uleb128 0x19
 3462 013c 20       		.uleb128 0x20
 3463 013d 0B       		.uleb128 0xb
 3464 013e 01       		.uleb128 0x1
 3465 013f 13       		.uleb128 0x13
 3466 0140 00       		.byte	0
 3467 0141 00       		.byte	0
 3468 0142 1B       		.uleb128 0x1b
 3469 0143 34       		.uleb128 0x34
 3470 0144 00       		.byte	0
 3471 0145 03       		.uleb128 0x3
 3472 0146 0E       		.uleb128 0xe
 3473 0147 3A       		.uleb128 0x3a
 3474 0148 0B       		.uleb128 0xb
 3475 0149 3B       		.uleb128 0x3b
 3476 014a 05       		.uleb128 0x5
 3477 014b 49       		.uleb128 0x49
 3478 014c 13       		.uleb128 0x13
 3479 014d 00       		.byte	0
 3480 014e 00       		.byte	0
 3481 014f 1C       		.uleb128 0x1c
 3482 0150 2E       		.uleb128 0x2e
 3483 0151 01       		.byte	0x1
 3484 0152 03       		.uleb128 0x3
 3485 0153 0E       		.uleb128 0xe
 3486 0154 3A       		.uleb128 0x3a
 3487 0155 0B       		.uleb128 0xb
 3488 0156 3B       		.uleb128 0x3b
 3489 0157 05       		.uleb128 0x5
 3490 0158 27       		.uleb128 0x27
 3491 0159 19       		.uleb128 0x19
 3492 015a 49       		.uleb128 0x49
 3493 015b 13       		.uleb128 0x13
 3494 015c 20       		.uleb128 0x20
 3495 015d 0B       		.uleb128 0xb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 154


 3496 015e 01       		.uleb128 0x1
 3497 015f 13       		.uleb128 0x13
 3498 0160 00       		.byte	0
 3499 0161 00       		.byte	0
 3500 0162 1D       		.uleb128 0x1d
 3501 0163 2E       		.uleb128 0x2e
 3502 0164 00       		.byte	0
 3503 0165 03       		.uleb128 0x3
 3504 0166 0E       		.uleb128 0xe
 3505 0167 3A       		.uleb128 0x3a
 3506 0168 0B       		.uleb128 0xb
 3507 0169 3B       		.uleb128 0x3b
 3508 016a 0B       		.uleb128 0xb
 3509 016b 27       		.uleb128 0x27
 3510 016c 19       		.uleb128 0x19
 3511 016d 20       		.uleb128 0x20
 3512 016e 0B       		.uleb128 0xb
 3513 016f 00       		.byte	0
 3514 0170 00       		.byte	0
 3515 0171 1E       		.uleb128 0x1e
 3516 0172 2E       		.uleb128 0x2e
 3517 0173 01       		.byte	0x1
 3518 0174 03       		.uleb128 0x3
 3519 0175 0E       		.uleb128 0xe
 3520 0176 3A       		.uleb128 0x3a
 3521 0177 0B       		.uleb128 0xb
 3522 0178 3B       		.uleb128 0x3b
 3523 0179 0B       		.uleb128 0xb
 3524 017a 27       		.uleb128 0x27
 3525 017b 19       		.uleb128 0x19
 3526 017c 20       		.uleb128 0x20
 3527 017d 0B       		.uleb128 0xb
 3528 017e 01       		.uleb128 0x1
 3529 017f 13       		.uleb128 0x13
 3530 0180 00       		.byte	0
 3531 0181 00       		.byte	0
 3532 0182 1F       		.uleb128 0x1f
 3533 0183 05       		.uleb128 0x5
 3534 0184 00       		.byte	0
 3535 0185 03       		.uleb128 0x3
 3536 0186 0E       		.uleb128 0xe
 3537 0187 3A       		.uleb128 0x3a
 3538 0188 0B       		.uleb128 0xb
 3539 0189 3B       		.uleb128 0x3b
 3540 018a 0B       		.uleb128 0xb
 3541 018b 49       		.uleb128 0x49
 3542 018c 13       		.uleb128 0x13
 3543 018d 00       		.byte	0
 3544 018e 00       		.byte	0
 3545 018f 20       		.uleb128 0x20
 3546 0190 2E       		.uleb128 0x2e
 3547 0191 01       		.byte	0x1
 3548 0192 3F       		.uleb128 0x3f
 3549 0193 19       		.uleb128 0x19
 3550 0194 03       		.uleb128 0x3
 3551 0195 0E       		.uleb128 0xe
 3552 0196 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 155


 3553 0197 0B       		.uleb128 0xb
 3554 0198 3B       		.uleb128 0x3b
 3555 0199 0B       		.uleb128 0xb
 3556 019a 27       		.uleb128 0x27
 3557 019b 19       		.uleb128 0x19
 3558 019c 11       		.uleb128 0x11
 3559 019d 01       		.uleb128 0x1
 3560 019e 12       		.uleb128 0x12
 3561 019f 06       		.uleb128 0x6
 3562 01a0 40       		.uleb128 0x40
 3563 01a1 18       		.uleb128 0x18
 3564 01a2 9742     		.uleb128 0x2117
 3565 01a4 19       		.uleb128 0x19
 3566 01a5 01       		.uleb128 0x1
 3567 01a6 13       		.uleb128 0x13
 3568 01a7 00       		.byte	0
 3569 01a8 00       		.byte	0
 3570 01a9 21       		.uleb128 0x21
 3571 01aa 05       		.uleb128 0x5
 3572 01ab 00       		.byte	0
 3573 01ac 03       		.uleb128 0x3
 3574 01ad 0E       		.uleb128 0xe
 3575 01ae 3A       		.uleb128 0x3a
 3576 01af 0B       		.uleb128 0xb
 3577 01b0 3B       		.uleb128 0x3b
 3578 01b1 0B       		.uleb128 0xb
 3579 01b2 49       		.uleb128 0x49
 3580 01b3 13       		.uleb128 0x13
 3581 01b4 02       		.uleb128 0x2
 3582 01b5 17       		.uleb128 0x17
 3583 01b6 00       		.byte	0
 3584 01b7 00       		.byte	0
 3585 01b8 22       		.uleb128 0x22
 3586 01b9 34       		.uleb128 0x34
 3587 01ba 00       		.byte	0
 3588 01bb 03       		.uleb128 0x3
 3589 01bc 0E       		.uleb128 0xe
 3590 01bd 3A       		.uleb128 0x3a
 3591 01be 0B       		.uleb128 0xb
 3592 01bf 3B       		.uleb128 0x3b
 3593 01c0 0B       		.uleb128 0xb
 3594 01c1 49       		.uleb128 0x49
 3595 01c2 13       		.uleb128 0x13
 3596 01c3 1C       		.uleb128 0x1c
 3597 01c4 0B       		.uleb128 0xb
 3598 01c5 00       		.byte	0
 3599 01c6 00       		.byte	0
 3600 01c7 23       		.uleb128 0x23
 3601 01c8 1D       		.uleb128 0x1d
 3602 01c9 01       		.byte	0x1
 3603 01ca 31       		.uleb128 0x31
 3604 01cb 13       		.uleb128 0x13
 3605 01cc 52       		.uleb128 0x52
 3606 01cd 01       		.uleb128 0x1
 3607 01ce 55       		.uleb128 0x55
 3608 01cf 17       		.uleb128 0x17
 3609 01d0 58       		.uleb128 0x58
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 156


 3610 01d1 0B       		.uleb128 0xb
 3611 01d2 59       		.uleb128 0x59
 3612 01d3 0B       		.uleb128 0xb
 3613 01d4 01       		.uleb128 0x1
 3614 01d5 13       		.uleb128 0x13
 3615 01d6 00       		.byte	0
 3616 01d7 00       		.byte	0
 3617 01d8 24       		.uleb128 0x24
 3618 01d9 1D       		.uleb128 0x1d
 3619 01da 01       		.byte	0x1
 3620 01db 31       		.uleb128 0x31
 3621 01dc 13       		.uleb128 0x13
 3622 01dd 52       		.uleb128 0x52
 3623 01de 01       		.uleb128 0x1
 3624 01df 55       		.uleb128 0x55
 3625 01e0 17       		.uleb128 0x17
 3626 01e1 58       		.uleb128 0x58
 3627 01e2 0B       		.uleb128 0xb
 3628 01e3 59       		.uleb128 0x59
 3629 01e4 0B       		.uleb128 0xb
 3630 01e5 00       		.byte	0
 3631 01e6 00       		.byte	0
 3632 01e7 25       		.uleb128 0x25
 3633 01e8 05       		.uleb128 0x5
 3634 01e9 00       		.byte	0
 3635 01ea 31       		.uleb128 0x31
 3636 01eb 13       		.uleb128 0x13
 3637 01ec 02       		.uleb128 0x2
 3638 01ed 17       		.uleb128 0x17
 3639 01ee 00       		.byte	0
 3640 01ef 00       		.byte	0
 3641 01f0 26       		.uleb128 0x26
 3642 01f1 0B       		.uleb128 0xb
 3643 01f2 01       		.byte	0x1
 3644 01f3 55       		.uleb128 0x55
 3645 01f4 17       		.uleb128 0x17
 3646 01f5 00       		.byte	0
 3647 01f6 00       		.byte	0
 3648 01f7 27       		.uleb128 0x27
 3649 01f8 34       		.uleb128 0x34
 3650 01f9 00       		.byte	0
 3651 01fa 31       		.uleb128 0x31
 3652 01fb 13       		.uleb128 0x13
 3653 01fc 02       		.uleb128 0x2
 3654 01fd 17       		.uleb128 0x17
 3655 01fe 00       		.byte	0
 3656 01ff 00       		.byte	0
 3657 0200 28       		.uleb128 0x28
 3658 0201 1D       		.uleb128 0x1d
 3659 0202 01       		.byte	0x1
 3660 0203 31       		.uleb128 0x31
 3661 0204 13       		.uleb128 0x13
 3662 0205 11       		.uleb128 0x11
 3663 0206 01       		.uleb128 0x1
 3664 0207 12       		.uleb128 0x12
 3665 0208 06       		.uleb128 0x6
 3666 0209 58       		.uleb128 0x58
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 157


 3667 020a 0B       		.uleb128 0xb
 3668 020b 59       		.uleb128 0x59
 3669 020c 0B       		.uleb128 0xb
 3670 020d 01       		.uleb128 0x1
 3671 020e 13       		.uleb128 0x13
 3672 020f 00       		.byte	0
 3673 0210 00       		.byte	0
 3674 0211 29       		.uleb128 0x29
 3675 0212 1D       		.uleb128 0x1d
 3676 0213 01       		.byte	0x1
 3677 0214 31       		.uleb128 0x31
 3678 0215 13       		.uleb128 0x13
 3679 0216 11       		.uleb128 0x11
 3680 0217 01       		.uleb128 0x1
 3681 0218 12       		.uleb128 0x12
 3682 0219 06       		.uleb128 0x6
 3683 021a 58       		.uleb128 0x58
 3684 021b 0B       		.uleb128 0xb
 3685 021c 59       		.uleb128 0x59
 3686 021d 0B       		.uleb128 0xb
 3687 021e 00       		.byte	0
 3688 021f 00       		.byte	0
 3689 0220 2A       		.uleb128 0x2a
 3690 0221 0B       		.uleb128 0xb
 3691 0222 01       		.byte	0x1
 3692 0223 11       		.uleb128 0x11
 3693 0224 01       		.uleb128 0x1
 3694 0225 12       		.uleb128 0x12
 3695 0226 06       		.uleb128 0x6
 3696 0227 00       		.byte	0
 3697 0228 00       		.byte	0
 3698 0229 2B       		.uleb128 0x2b
 3699 022a 898201   		.uleb128 0x4109
 3700 022d 01       		.byte	0x1
 3701 022e 11       		.uleb128 0x11
 3702 022f 01       		.uleb128 0x1
 3703 0230 31       		.uleb128 0x31
 3704 0231 13       		.uleb128 0x13
 3705 0232 01       		.uleb128 0x1
 3706 0233 13       		.uleb128 0x13
 3707 0234 00       		.byte	0
 3708 0235 00       		.byte	0
 3709 0236 2C       		.uleb128 0x2c
 3710 0237 8A8201   		.uleb128 0x410a
 3711 023a 00       		.byte	0
 3712 023b 02       		.uleb128 0x2
 3713 023c 18       		.uleb128 0x18
 3714 023d 9142     		.uleb128 0x2111
 3715 023f 18       		.uleb128 0x18
 3716 0240 00       		.byte	0
 3717 0241 00       		.byte	0
 3718 0242 2D       		.uleb128 0x2d
 3719 0243 898201   		.uleb128 0x4109
 3720 0246 01       		.byte	0x1
 3721 0247 11       		.uleb128 0x11
 3722 0248 01       		.uleb128 0x1
 3723 0249 31       		.uleb128 0x31
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 158


 3724 024a 13       		.uleb128 0x13
 3725 024b 00       		.byte	0
 3726 024c 00       		.byte	0
 3727 024d 2E       		.uleb128 0x2e
 3728 024e 2E       		.uleb128 0x2e
 3729 024f 01       		.byte	0x1
 3730 0250 31       		.uleb128 0x31
 3731 0251 13       		.uleb128 0x13
 3732 0252 11       		.uleb128 0x11
 3733 0253 01       		.uleb128 0x1
 3734 0254 12       		.uleb128 0x12
 3735 0255 06       		.uleb128 0x6
 3736 0256 40       		.uleb128 0x40
 3737 0257 18       		.uleb128 0x18
 3738 0258 9742     		.uleb128 0x2117
 3739 025a 19       		.uleb128 0x19
 3740 025b 01       		.uleb128 0x1
 3741 025c 13       		.uleb128 0x13
 3742 025d 00       		.byte	0
 3743 025e 00       		.byte	0
 3744 025f 2F       		.uleb128 0x2f
 3745 0260 898201   		.uleb128 0x4109
 3746 0263 00       		.byte	0
 3747 0264 11       		.uleb128 0x11
 3748 0265 01       		.uleb128 0x1
 3749 0266 31       		.uleb128 0x31
 3750 0267 13       		.uleb128 0x13
 3751 0268 00       		.byte	0
 3752 0269 00       		.byte	0
 3753 026a 30       		.uleb128 0x30
 3754 026b 05       		.uleb128 0x5
 3755 026c 00       		.byte	0
 3756 026d 03       		.uleb128 0x3
 3757 026e 0E       		.uleb128 0xe
 3758 026f 3A       		.uleb128 0x3a
 3759 0270 0B       		.uleb128 0xb
 3760 0271 3B       		.uleb128 0x3b
 3761 0272 0B       		.uleb128 0xb
 3762 0273 49       		.uleb128 0x49
 3763 0274 13       		.uleb128 0x13
 3764 0275 02       		.uleb128 0x2
 3765 0276 18       		.uleb128 0x18
 3766 0277 00       		.byte	0
 3767 0278 00       		.byte	0
 3768 0279 31       		.uleb128 0x31
 3769 027a 2E       		.uleb128 0x2e
 3770 027b 00       		.byte	0
 3771 027c 3F       		.uleb128 0x3f
 3772 027d 19       		.uleb128 0x19
 3773 027e 03       		.uleb128 0x3
 3774 027f 0E       		.uleb128 0xe
 3775 0280 3A       		.uleb128 0x3a
 3776 0281 0B       		.uleb128 0xb
 3777 0282 3B       		.uleb128 0x3b
 3778 0283 05       		.uleb128 0x5
 3779 0284 27       		.uleb128 0x27
 3780 0285 19       		.uleb128 0x19
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 159


 3781 0286 20       		.uleb128 0x20
 3782 0287 0B       		.uleb128 0xb
 3783 0288 00       		.byte	0
 3784 0289 00       		.byte	0
 3785 028a 32       		.uleb128 0x32
 3786 028b 2E       		.uleb128 0x2e
 3787 028c 00       		.byte	0
 3788 028d 31       		.uleb128 0x31
 3789 028e 13       		.uleb128 0x13
 3790 028f 11       		.uleb128 0x11
 3791 0290 01       		.uleb128 0x1
 3792 0291 12       		.uleb128 0x12
 3793 0292 06       		.uleb128 0x6
 3794 0293 40       		.uleb128 0x40
 3795 0294 18       		.uleb128 0x18
 3796 0295 9742     		.uleb128 0x2117
 3797 0297 19       		.uleb128 0x19
 3798 0298 00       		.byte	0
 3799 0299 00       		.byte	0
 3800 029a 33       		.uleb128 0x33
 3801 029b 2E       		.uleb128 0x2e
 3802 029c 01       		.byte	0x1
 3803 029d 3F       		.uleb128 0x3f
 3804 029e 19       		.uleb128 0x19
 3805 029f 03       		.uleb128 0x3
 3806 02a0 0E       		.uleb128 0xe
 3807 02a1 3A       		.uleb128 0x3a
 3808 02a2 0B       		.uleb128 0xb
 3809 02a3 3B       		.uleb128 0x3b
 3810 02a4 05       		.uleb128 0x5
 3811 02a5 27       		.uleb128 0x27
 3812 02a6 19       		.uleb128 0x19
 3813 02a7 11       		.uleb128 0x11
 3814 02a8 01       		.uleb128 0x1
 3815 02a9 12       		.uleb128 0x12
 3816 02aa 06       		.uleb128 0x6
 3817 02ab 40       		.uleb128 0x40
 3818 02ac 18       		.uleb128 0x18
 3819 02ad 9742     		.uleb128 0x2117
 3820 02af 19       		.uleb128 0x19
 3821 02b0 01       		.uleb128 0x1
 3822 02b1 13       		.uleb128 0x13
 3823 02b2 00       		.byte	0
 3824 02b3 00       		.byte	0
 3825 02b4 34       		.uleb128 0x34
 3826 02b5 05       		.uleb128 0x5
 3827 02b6 00       		.byte	0
 3828 02b7 03       		.uleb128 0x3
 3829 02b8 0E       		.uleb128 0xe
 3830 02b9 3A       		.uleb128 0x3a
 3831 02ba 0B       		.uleb128 0xb
 3832 02bb 3B       		.uleb128 0x3b
 3833 02bc 05       		.uleb128 0x5
 3834 02bd 49       		.uleb128 0x49
 3835 02be 13       		.uleb128 0x13
 3836 02bf 02       		.uleb128 0x2
 3837 02c0 17       		.uleb128 0x17
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 160


 3838 02c1 00       		.byte	0
 3839 02c2 00       		.byte	0
 3840 02c3 35       		.uleb128 0x35
 3841 02c4 34       		.uleb128 0x34
 3842 02c5 00       		.byte	0
 3843 02c6 03       		.uleb128 0x3
 3844 02c7 0E       		.uleb128 0xe
 3845 02c8 3A       		.uleb128 0x3a
 3846 02c9 0B       		.uleb128 0xb
 3847 02ca 3B       		.uleb128 0x3b
 3848 02cb 05       		.uleb128 0x5
 3849 02cc 49       		.uleb128 0x49
 3850 02cd 13       		.uleb128 0x13
 3851 02ce 02       		.uleb128 0x2
 3852 02cf 18       		.uleb128 0x18
 3853 02d0 00       		.byte	0
 3854 02d1 00       		.byte	0
 3855 02d2 36       		.uleb128 0x36
 3856 02d3 1D       		.uleb128 0x1d
 3857 02d4 01       		.byte	0x1
 3858 02d5 31       		.uleb128 0x31
 3859 02d6 13       		.uleb128 0x13
 3860 02d7 11       		.uleb128 0x11
 3861 02d8 01       		.uleb128 0x1
 3862 02d9 12       		.uleb128 0x12
 3863 02da 06       		.uleb128 0x6
 3864 02db 58       		.uleb128 0x58
 3865 02dc 0B       		.uleb128 0xb
 3866 02dd 59       		.uleb128 0x59
 3867 02de 05       		.uleb128 0x5
 3868 02df 00       		.byte	0
 3869 02e0 00       		.byte	0
 3870 02e1 37       		.uleb128 0x37
 3871 02e2 2E       		.uleb128 0x2e
 3872 02e3 01       		.byte	0x1
 3873 02e4 3F       		.uleb128 0x3f
 3874 02e5 19       		.uleb128 0x19
 3875 02e6 03       		.uleb128 0x3
 3876 02e7 0E       		.uleb128 0xe
 3877 02e8 3A       		.uleb128 0x3a
 3878 02e9 0B       		.uleb128 0xb
 3879 02ea 3B       		.uleb128 0x3b
 3880 02eb 05       		.uleb128 0x5
 3881 02ec 27       		.uleb128 0x27
 3882 02ed 19       		.uleb128 0x19
 3883 02ee 49       		.uleb128 0x49
 3884 02ef 13       		.uleb128 0x13
 3885 02f0 11       		.uleb128 0x11
 3886 02f1 01       		.uleb128 0x1
 3887 02f2 12       		.uleb128 0x12
 3888 02f3 06       		.uleb128 0x6
 3889 02f4 40       		.uleb128 0x40
 3890 02f5 18       		.uleb128 0x18
 3891 02f6 9742     		.uleb128 0x2117
 3892 02f8 19       		.uleb128 0x19
 3893 02f9 01       		.uleb128 0x1
 3894 02fa 13       		.uleb128 0x13
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 161


 3895 02fb 00       		.byte	0
 3896 02fc 00       		.byte	0
 3897 02fd 38       		.uleb128 0x38
 3898 02fe 34       		.uleb128 0x34
 3899 02ff 00       		.byte	0
 3900 0300 03       		.uleb128 0x3
 3901 0301 0E       		.uleb128 0xe
 3902 0302 3A       		.uleb128 0x3a
 3903 0303 0B       		.uleb128 0xb
 3904 0304 3B       		.uleb128 0x3b
 3905 0305 05       		.uleb128 0x5
 3906 0306 49       		.uleb128 0x49
 3907 0307 13       		.uleb128 0x13
 3908 0308 02       		.uleb128 0x2
 3909 0309 17       		.uleb128 0x17
 3910 030a 00       		.byte	0
 3911 030b 00       		.byte	0
 3912 030c 39       		.uleb128 0x39
 3913 030d 34       		.uleb128 0x34
 3914 030e 00       		.byte	0
 3915 030f 31       		.uleb128 0x31
 3916 0310 13       		.uleb128 0x13
 3917 0311 1C       		.uleb128 0x1c
 3918 0312 0B       		.uleb128 0xb
 3919 0313 00       		.byte	0
 3920 0314 00       		.byte	0
 3921 0315 3A       		.uleb128 0x3a
 3922 0316 2E       		.uleb128 0x2e
 3923 0317 00       		.byte	0
 3924 0318 03       		.uleb128 0x3
 3925 0319 0E       		.uleb128 0xe
 3926 031a 3A       		.uleb128 0x3a
 3927 031b 0B       		.uleb128 0xb
 3928 031c 3B       		.uleb128 0x3b
 3929 031d 05       		.uleb128 0x5
 3930 031e 27       		.uleb128 0x27
 3931 031f 19       		.uleb128 0x19
 3932 0320 20       		.uleb128 0x20
 3933 0321 0B       		.uleb128 0xb
 3934 0322 00       		.byte	0
 3935 0323 00       		.byte	0
 3936 0324 3B       		.uleb128 0x3b
 3937 0325 1D       		.uleb128 0x1d
 3938 0326 01       		.byte	0x1
 3939 0327 31       		.uleb128 0x31
 3940 0328 13       		.uleb128 0x13
 3941 0329 52       		.uleb128 0x52
 3942 032a 01       		.uleb128 0x1
 3943 032b 55       		.uleb128 0x55
 3944 032c 17       		.uleb128 0x17
 3945 032d 58       		.uleb128 0x58
 3946 032e 0B       		.uleb128 0xb
 3947 032f 59       		.uleb128 0x59
 3948 0330 05       		.uleb128 0x5
 3949 0331 00       		.byte	0
 3950 0332 00       		.byte	0
 3951 0333 3C       		.uleb128 0x3c
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 162


 3952 0334 34       		.uleb128 0x34
 3953 0335 00       		.byte	0
 3954 0336 03       		.uleb128 0x3
 3955 0337 0E       		.uleb128 0xe
 3956 0338 3A       		.uleb128 0x3a
 3957 0339 0B       		.uleb128 0xb
 3958 033a 3B       		.uleb128 0x3b
 3959 033b 0B       		.uleb128 0xb
 3960 033c 49       		.uleb128 0x49
 3961 033d 13       		.uleb128 0x13
 3962 033e 3F       		.uleb128 0x3f
 3963 033f 19       		.uleb128 0x19
 3964 0340 3C       		.uleb128 0x3c
 3965 0341 19       		.uleb128 0x19
 3966 0342 00       		.byte	0
 3967 0343 00       		.byte	0
 3968 0344 3D       		.uleb128 0x3d
 3969 0345 34       		.uleb128 0x34
 3970 0346 00       		.byte	0
 3971 0347 03       		.uleb128 0x3
 3972 0348 0E       		.uleb128 0xe
 3973 0349 3A       		.uleb128 0x3a
 3974 034a 0B       		.uleb128 0xb
 3975 034b 3B       		.uleb128 0x3b
 3976 034c 0B       		.uleb128 0xb
 3977 034d 49       		.uleb128 0x49
 3978 034e 13       		.uleb128 0x13
 3979 034f 3F       		.uleb128 0x3f
 3980 0350 19       		.uleb128 0x19
 3981 0351 02       		.uleb128 0x2
 3982 0352 18       		.uleb128 0x18
 3983 0353 00       		.byte	0
 3984 0354 00       		.byte	0
 3985 0355 3E       		.uleb128 0x3e
 3986 0356 34       		.uleb128 0x34
 3987 0357 00       		.byte	0
 3988 0358 03       		.uleb128 0x3
 3989 0359 0E       		.uleb128 0xe
 3990 035a 3A       		.uleb128 0x3a
 3991 035b 0B       		.uleb128 0xb
 3992 035c 3B       		.uleb128 0x3b
 3993 035d 05       		.uleb128 0x5
 3994 035e 49       		.uleb128 0x49
 3995 035f 13       		.uleb128 0x13
 3996 0360 3F       		.uleb128 0x3f
 3997 0361 19       		.uleb128 0x19
 3998 0362 3C       		.uleb128 0x3c
 3999 0363 19       		.uleb128 0x19
 4000 0364 00       		.byte	0
 4001 0365 00       		.byte	0
 4002 0366 3F       		.uleb128 0x3f
 4003 0367 2E       		.uleb128 0x2e
 4004 0368 00       		.byte	0
 4005 0369 3F       		.uleb128 0x3f
 4006 036a 19       		.uleb128 0x19
 4007 036b 3C       		.uleb128 0x3c
 4008 036c 19       		.uleb128 0x19
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 163


 4009 036d 6E       		.uleb128 0x6e
 4010 036e 0E       		.uleb128 0xe
 4011 036f 03       		.uleb128 0x3
 4012 0370 0E       		.uleb128 0xe
 4013 0371 3A       		.uleb128 0x3a
 4014 0372 0B       		.uleb128 0xb
 4015 0373 3B       		.uleb128 0x3b
 4016 0374 05       		.uleb128 0x5
 4017 0375 00       		.byte	0
 4018 0376 00       		.byte	0
 4019 0377 00       		.byte	0
 4020              		.section	.debug_loc,"",%progbits
 4021              	.Ldebug_loc0:
 4022              	.LLST0:
 4023 0000 00000000 		.4byte	.LVL0
 4024 0004 1E000000 		.4byte	.LVL1
 4025 0008 0100     		.2byte	0x1
 4026 000a 50       		.byte	0x50
 4027 000b 1E000000 		.4byte	.LVL1
 4028 000f 7A000000 		.4byte	.LVL8
 4029 0013 0100     		.2byte	0x1
 4030 0015 54       		.byte	0x54
 4031 0016 7A000000 		.4byte	.LVL8
 4032 001a 88000000 		.4byte	.LFE188
 4033 001e 0400     		.2byte	0x4
 4034 0020 F3       		.byte	0xf3
 4035 0021 01       		.uleb128 0x1
 4036 0022 50       		.byte	0x50
 4037 0023 9F       		.byte	0x9f
 4038 0024 00000000 		.4byte	0
 4039 0028 00000000 		.4byte	0
 4040              	.LLST1:
 4041 002c 00000000 		.4byte	.LVL0
 4042 0030 22000000 		.4byte	.LVL2
 4043 0034 0200     		.2byte	0x2
 4044 0036 30       		.byte	0x30
 4045 0037 9F       		.byte	0x9f
 4046 0038 00000000 		.4byte	0
 4047 003c 00000000 		.4byte	0
 4048              	.LLST2:
 4049 0040 00000000 		.4byte	.LVL0
 4050 0044 22000000 		.4byte	.LVL2
 4051 0048 0200     		.2byte	0x2
 4052 004a 32       		.byte	0x32
 4053 004b 9F       		.byte	0x9f
 4054 004c 00000000 		.4byte	0
 4055 0050 00000000 		.4byte	0
 4056              	.LLST3:
 4057 0054 00000000 		.4byte	.LVL0
 4058 0058 22000000 		.4byte	.LVL2
 4059 005c 0600     		.2byte	0x6
 4060 005e 0C       		.byte	0xc
 4061 005f 01004A00 		.4byte	0x4a0001
 4062 0063 9F       		.byte	0x9f
 4063 0064 00000000 		.4byte	0
 4064 0068 00000000 		.4byte	0
 4065              	.LLST4:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 164


 4066 006c 22000000 		.4byte	.LVL2
 4067 0070 36000000 		.4byte	.LVL3
 4068 0074 0100     		.2byte	0x1
 4069 0076 50       		.byte	0x50
 4070 0077 36000000 		.4byte	.LVL3
 4071 007b 3C000000 		.4byte	.LVL4
 4072 007f 0200     		.2byte	0x2
 4073 0081 74       		.byte	0x74
 4074 0082 10       		.sleb128 16
 4075 0083 00000000 		.4byte	0
 4076 0087 00000000 		.4byte	0
 4077              	.LLST5:
 4078 008b 22000000 		.4byte	.LVL2
 4079 008f 3C000000 		.4byte	.LVL4
 4080 0093 0200     		.2byte	0x2
 4081 0095 30       		.byte	0x30
 4082 0096 9F       		.byte	0x9f
 4083 0097 00000000 		.4byte	0
 4084 009b 00000000 		.4byte	0
 4085              	.LLST6:
 4086 009f 22000000 		.4byte	.LVL2
 4087 00a3 3C000000 		.4byte	.LVL4
 4088 00a7 0200     		.2byte	0x2
 4089 00a9 32       		.byte	0x32
 4090 00aa 9F       		.byte	0x9f
 4091 00ab 00000000 		.4byte	0
 4092 00af 00000000 		.4byte	0
 4093              	.LLST8:
 4094 00b3 22000000 		.4byte	.LVL2
 4095 00b7 3C000000 		.4byte	.LVL4
 4096 00bb 0600     		.2byte	0x6
 4097 00bd 0C       		.byte	0xc
 4098 00be 01004A00 		.4byte	0x4a0001
 4099 00c2 9F       		.byte	0x9f
 4100 00c3 00000000 		.4byte	0
 4101 00c7 00000000 		.4byte	0
 4102              	.LLST9:
 4103 00cb 3C000000 		.4byte	.LVL4
 4104 00cf 6A000000 		.4byte	.LVL5
 4105 00d3 0200     		.2byte	0x2
 4106 00d5 30       		.byte	0x30
 4107 00d6 9F       		.byte	0x9f
 4108 00d7 00000000 		.4byte	0
 4109 00db 00000000 		.4byte	0
 4110              	.LLST10:
 4111 00df 3C000000 		.4byte	.LVL4
 4112 00e3 6A000000 		.4byte	.LVL5
 4113 00e7 0200     		.2byte	0x2
 4114 00e9 32       		.byte	0x32
 4115 00ea 9F       		.byte	0x9f
 4116 00eb 00000000 		.4byte	0
 4117 00ef 00000000 		.4byte	0
 4118              	.LLST11:
 4119 00f3 3C000000 		.4byte	.LVL4
 4120 00f7 6A000000 		.4byte	.LVL5
 4121 00fb 0600     		.2byte	0x6
 4122 00fd 0C       		.byte	0xc
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 165


 4123 00fe 01004A00 		.4byte	0x4a0001
 4124 0102 9F       		.byte	0x9f
 4125 0103 00000000 		.4byte	0
 4126 0107 00000000 		.4byte	0
 4127              	.LLST12:
 4128 010b 00000000 		.4byte	.LVL11
 4129 010f 04000000 		.4byte	.LVL12
 4130 0113 0100     		.2byte	0x1
 4131 0115 50       		.byte	0x50
 4132 0116 04000000 		.4byte	.LVL12
 4133 011a 14000000 		.4byte	.LFE194
 4134 011e 0400     		.2byte	0x4
 4135 0120 F3       		.byte	0xf3
 4136 0121 01       		.uleb128 0x1
 4137 0122 50       		.byte	0x50
 4138 0123 9F       		.byte	0x9f
 4139 0124 00000000 		.4byte	0
 4140 0128 00000000 		.4byte	0
 4141              	.LLST13:
 4142 012c 04000000 		.4byte	.LVL12
 4143 0130 0C000000 		.4byte	.LVL13
 4144 0134 0100     		.2byte	0x1
 4145 0136 50       		.byte	0x50
 4146 0137 00000000 		.4byte	0
 4147 013b 00000000 		.4byte	0
 4148              	.LLST14:
 4149 013f 04000000 		.4byte	.LVL12
 4150 0143 0C000000 		.4byte	.LVL13
 4151 0147 0600     		.2byte	0x6
 4152 0149 0C       		.byte	0xc
 4153 014a 00001D41 		.4byte	0x411d0000
 4154 014e 9F       		.byte	0x9f
 4155 014f 00000000 		.4byte	0
 4156 0153 00000000 		.4byte	0
 4157              	.LLST15:
 4158 0157 00000000 		.4byte	.LVL14
 4159 015b 16000000 		.4byte	.LVL15
 4160 015f 0100     		.2byte	0x1
 4161 0161 50       		.byte	0x50
 4162 0162 16000000 		.4byte	.LVL15
 4163 0166 28000000 		.4byte	.LFE195
 4164 016a 0100     		.2byte	0x1
 4165 016c 50       		.byte	0x50
 4166 016d 00000000 		.4byte	0
 4167 0171 00000000 		.4byte	0
 4168              	.LLST16:
 4169 0175 16000000 		.4byte	.LVL15
 4170 0179 1A000000 		.4byte	.LVL16
 4171 017d 0100     		.2byte	0x1
 4172 017f 50       		.byte	0x50
 4173 0180 00000000 		.4byte	0
 4174 0184 00000000 		.4byte	0
 4175              	.LLST17:
 4176 0188 16000000 		.4byte	.LVL15
 4177 018c 1A000000 		.4byte	.LVL16
 4178 0190 0600     		.2byte	0x6
 4179 0192 0C       		.byte	0xc
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 166


 4180 0193 00001D41 		.4byte	0x411d0000
 4181 0197 9F       		.byte	0x9f
 4182 0198 00000000 		.4byte	0
 4183 019c 00000000 		.4byte	0
 4184              	.LLST18:
 4185 01a0 00000000 		.4byte	.LVL17
 4186 01a4 06000000 		.4byte	.LVL18
 4187 01a8 0100     		.2byte	0x1
 4188 01aa 50       		.byte	0x50
 4189 01ab 06000000 		.4byte	.LVL18
 4190 01af 14000000 		.4byte	.LFE196
 4191 01b3 0400     		.2byte	0x4
 4192 01b5 F3       		.byte	0xf3
 4193 01b6 01       		.uleb128 0x1
 4194 01b7 50       		.byte	0x50
 4195 01b8 9F       		.byte	0x9f
 4196 01b9 00000000 		.4byte	0
 4197 01bd 00000000 		.4byte	0
 4198              	.LLST19:
 4199 01c1 00000000 		.4byte	.LVL17
 4200 01c5 0A000000 		.4byte	.LVL19
 4201 01c9 0200     		.2byte	0x2
 4202 01cb 30       		.byte	0x30
 4203 01cc 9F       		.byte	0x9f
 4204 01cd 0A000000 		.4byte	.LVL19
 4205 01d1 0E000000 		.4byte	.LVL20
 4206 01d5 0800     		.2byte	0x8
 4207 01d7 70       		.byte	0x70
 4208 01d8 00       		.sleb128 0
 4209 01d9 30       		.byte	0x30
 4210 01da 29       		.byte	0x29
 4211 01db 08       		.byte	0x8
 4212 01dc FF       		.byte	0xff
 4213 01dd 1A       		.byte	0x1a
 4214 01de 9F       		.byte	0x9f
 4215 01df 00000000 		.4byte	0
 4216 01e3 00000000 		.4byte	0
 4217              	.LLST20:
 4218 01e7 0A000000 		.4byte	.LVL19
 4219 01eb 0E000000 		.4byte	.LVL20
 4220 01ef 0100     		.2byte	0x1
 4221 01f1 50       		.byte	0x50
 4222 01f2 00000000 		.4byte	0
 4223 01f6 00000000 		.4byte	0
 4224              	.LLST21:
 4225 01fa 16000000 		.4byte	.LVL22
 4226 01fe 1A000000 		.4byte	.LVL23
 4227 0202 0200     		.2byte	0x2
 4228 0204 30       		.byte	0x30
 4229 0205 9F       		.byte	0x9f
 4230 0206 00000000 		.4byte	0
 4231 020a 00000000 		.4byte	0
 4232              	.LLST22:
 4233 020e 00000000 		.4byte	.LVL26
 4234 0212 05000000 		.4byte	.LVL27-1
 4235 0216 0100     		.2byte	0x1
 4236 0218 50       		.byte	0x50
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 167


 4237 0219 05000000 		.4byte	.LVL27-1
 4238 021d 08000000 		.4byte	.LFE187
 4239 0221 0400     		.2byte	0x4
 4240 0223 F3       		.byte	0xf3
 4241 0224 01       		.uleb128 0x1
 4242 0225 50       		.byte	0x50
 4243 0226 9F       		.byte	0x9f
 4244 0227 00000000 		.4byte	0
 4245 022b 00000000 		.4byte	0
 4246              	.LLST23:
 4247 022f 00000000 		.4byte	.LVL28
 4248 0233 21000000 		.4byte	.LVL31-1
 4249 0237 0100     		.2byte	0x1
 4250 0239 50       		.byte	0x50
 4251 023a 21000000 		.4byte	.LVL31-1
 4252 023e 4C000000 		.4byte	.LFE189
 4253 0242 0400     		.2byte	0x4
 4254 0244 F3       		.byte	0xf3
 4255 0245 01       		.uleb128 0x1
 4256 0246 50       		.byte	0x50
 4257 0247 9F       		.byte	0x9f
 4258 0248 00000000 		.4byte	0
 4259 024c 00000000 		.4byte	0
 4260              	.LLST24:
 4261 0250 00000000 		.4byte	.LVL28
 4262 0254 21000000 		.4byte	.LVL31-1
 4263 0258 0100     		.2byte	0x1
 4264 025a 51       		.byte	0x51
 4265 025b 21000000 		.4byte	.LVL31-1
 4266 025f 3E000000 		.4byte	.LVL35
 4267 0263 0100     		.2byte	0x1
 4268 0265 55       		.byte	0x55
 4269 0266 3E000000 		.4byte	.LVL35
 4270 026a 4C000000 		.4byte	.LFE189
 4271 026e 0400     		.2byte	0x4
 4272 0270 F3       		.byte	0xf3
 4273 0271 01       		.uleb128 0x1
 4274 0272 51       		.byte	0x51
 4275 0273 9F       		.byte	0x9f
 4276 0274 00000000 		.4byte	0
 4277 0278 00000000 		.4byte	0
 4278              	.LLST25:
 4279 027c 08000000 		.4byte	.LVL29
 4280 0280 16000000 		.4byte	.LVL30
 4281 0284 0600     		.2byte	0x6
 4282 0286 0C       		.byte	0xc
 4283 0287 00001D41 		.4byte	0x411d0000
 4284 028b 9F       		.byte	0x9f
 4285 028c 00000000 		.4byte	0
 4286 0290 00000000 		.4byte	0
 4287              		.section	.debug_aranges,"",%progbits
 4288 0000 6C000000 		.4byte	0x6c
 4289 0004 0200     		.2byte	0x2
 4290 0006 00000000 		.4byte	.Ldebug_info0
 4291 000a 04       		.byte	0x4
 4292 000b 00       		.byte	0
 4293 000c 0000     		.2byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 168


 4294 000e 0000     		.2byte	0
 4295 0010 00000000 		.4byte	.LFB188
 4296 0014 88000000 		.4byte	.LFE188-.LFB188
 4297 0018 00000000 		.4byte	.LFB190
 4298 001c 1C000000 		.4byte	.LFE190-.LFB190
 4299 0020 00000000 		.4byte	.LFB191
 4300 0024 24000000 		.4byte	.LFE191-.LFB191
 4301 0028 00000000 		.4byte	.LFB193
 4302 002c 02000000 		.4byte	.LFE193-.LFB193
 4303 0030 00000000 		.4byte	.LFB194
 4304 0034 14000000 		.4byte	.LFE194-.LFB194
 4305 0038 00000000 		.4byte	.LFB195
 4306 003c 28000000 		.4byte	.LFE195-.LFB195
 4307 0040 00000000 		.4byte	.LFB196
 4308 0044 14000000 		.4byte	.LFE196-.LFB196
 4309 0048 00000000 		.4byte	.LFB197
 4310 004c 24000000 		.4byte	.LFE197-.LFB197
 4311 0050 00000000 		.4byte	.LFB186
 4312 0054 28000000 		.4byte	.LFE186-.LFB186
 4313 0058 00000000 		.4byte	.LFB187
 4314 005c 08000000 		.4byte	.LFE187-.LFB187
 4315 0060 00000000 		.4byte	.LFB189
 4316 0064 4C000000 		.4byte	.LFE189-.LFB189
 4317 0068 00000000 		.4byte	0
 4318 006c 00000000 		.4byte	0
 4319              		.section	.debug_ranges,"",%progbits
 4320              	.Ldebug_ranges0:
 4321 0000 00000000 		.4byte	.LBB20
 4322 0004 02000000 		.4byte	.LBE20
 4323 0008 04000000 		.4byte	.LBB29
 4324 000c 0E000000 		.4byte	.LBE29
 4325 0010 10000000 		.4byte	.LBB30
 4326 0014 1C000000 		.4byte	.LBE30
 4327 0018 1E000000 		.4byte	.LBB31
 4328 001c 22000000 		.4byte	.LBE31
 4329 0020 00000000 		.4byte	0
 4330 0024 00000000 		.4byte	0
 4331 0028 0A000000 		.4byte	.LBB58
 4332 002c 0C000000 		.4byte	.LBE58
 4333 0030 0E000000 		.4byte	.LBB63
 4334 0034 16000000 		.4byte	.LBE63
 4335 0038 00000000 		.4byte	0
 4336 003c 00000000 		.4byte	0
 4337 0040 00000000 		.4byte	.LFB188
 4338 0044 88000000 		.4byte	.LFE188
 4339 0048 00000000 		.4byte	.LFB190
 4340 004c 1C000000 		.4byte	.LFE190
 4341 0050 00000000 		.4byte	.LFB191
 4342 0054 24000000 		.4byte	.LFE191
 4343 0058 00000000 		.4byte	.LFB193
 4344 005c 02000000 		.4byte	.LFE193
 4345 0060 00000000 		.4byte	.LFB194
 4346 0064 14000000 		.4byte	.LFE194
 4347 0068 00000000 		.4byte	.LFB195
 4348 006c 28000000 		.4byte	.LFE195
 4349 0070 00000000 		.4byte	.LFB196
 4350 0074 14000000 		.4byte	.LFE196
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 169


 4351 0078 00000000 		.4byte	.LFB197
 4352 007c 24000000 		.4byte	.LFE197
 4353 0080 00000000 		.4byte	.LFB186
 4354 0084 28000000 		.4byte	.LFE186
 4355 0088 00000000 		.4byte	.LFB187
 4356 008c 08000000 		.4byte	.LFE187
 4357 0090 00000000 		.4byte	.LFB189
 4358 0094 4C000000 		.4byte	.LFE189
 4359 0098 00000000 		.4byte	0
 4360 009c 00000000 		.4byte	0
 4361              		.section	.debug_line,"",%progbits
 4362              	.Ldebug_line0:
 4363 0000 66040000 		.section	.debug_str,"MS",%progbits,1
 4363      0200F502 
 4363      00000201 
 4363      FB0E0D00 
 4363      01010101 
 4364              	.LASF136:
 4365 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 4365      6843746C 
 4365      4D61696E 
 4365      57733146 
 4365      72657100 
 4366              	.LASF25:
 4367 0014 50455249 		.ascii	"PERI_TR_GR_V1_Type\000"
 4367      5F54525F 
 4367      47525F56 
 4367      315F5479 
 4367      706500
 4368              	.LASF19:
 4369 0027 52455345 		.ascii	"RESERVED\000"
 4369      52564544 
 4369      00
 4370              	.LASF71:
 4371 0030 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 4371      455F494E 
 4371      54525F4D 
 4371      41534B45 
 4371      4400
 4372              	.LASF277:
 4373 0042 4144435F 		.ascii	"ADC_1_initVar\000"
 4373      315F696E 
 4373      69745661 
 4373      7200
 4374              	.LASF56:
 4375 0050 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 4375      5F574F52 
 4375      4B5F5550 
 4375      44415445 
 4375      4400
 4376              	.LASF178:
 4377 0062 6970634C 		.ascii	"ipcLockStatusOffset\000"
 4377      6F636B53 
 4377      74617475 
 4377      734F6666 
 4377      73657400 
 4378              	.LASF264:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 170


 4379 0076 4144435F 		.ascii	"ADC_1_SetChanMask\000"
 4379      315F5365 
 4379      74436861 
 4379      6E4D6173 
 4379      6B00
 4380              	.LASF250:
 4381 0088 43795F53 		.ascii	"Cy_SysClk_PeriphDisableDivider\000"
 4381      7973436C 
 4381      6B5F5065 
 4381      72697068 
 4381      44697361 
 4382              	.LASF276:
 4383 00a7 63795F64 		.ascii	"cy_device\000"
 4383      65766963 
 4383      6500
 4384              	.LASF163:
 4385 00b1 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 4385      73436D30 
 4385      436C6F63 
 4385      6B43746C 
 4385      4F666673 
 4386              	.LASF122:
 4387 00c8 70657269 		.ascii	"periClockNr\000"
 4387      436C6F63 
 4387      6B4E7200 
 4388              	.LASF271:
 4389 00d4 4144435F 		.ascii	"ADC_1_StartEx\000"
 4389      315F5374 
 4389      61727445 
 4389      7800
 4390              	.LASF33:
 4391 00e2 4449565F 		.ascii	"DIV_8_CTL\000"
 4391      385F4354 
 4391      4C00
 4392              	.LASF253:
 4393 00ec 4144435F 		.ascii	"ADC_1_intSarClock_Disable\000"
 4393      315F696E 
 4393      74536172 
 4393      436C6F63 
 4393      6B5F4469 
 4394              	.LASF96:
 4395 0106 75646242 		.ascii	"udbBase\000"
 4395      61736500 
 4396              	.LASF227:
 4397 010e 43595F53 		.ascii	"CY_SYSCLK_DIV_8_BIT\000"
 4397      5953434C 
 4397      4B5F4449 
 4397      565F385F 
 4397      42495400 
 4398              	.LASF51:
 4399 0122 4348414E 		.ascii	"CHAN_EN\000"
 4399      5F454E00 
 4400              	.LASF95:
 4401 012a 70657269 		.ascii	"periBase\000"
 4401      42617365 
 4401      00
 4402              	.LASF171:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 171


 4403 0133 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 4403      73436D30 
 4403      4E6D6943 
 4403      746C4F66 
 4403      66736574 
 4404              	.LASF141:
 4405 0148 64774368 		.ascii	"dwChSize\000"
 4405      53697A65 
 4405      00
 4406              	.LASF287:
 4407 0151 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_1.c\000"
 4407      72617465 
 4407      645F536F 
 4407      75726365 
 4407      5C50536F 
 4408              	.LASF224:
 4409 0170 43595F53 		.ascii	"CY_SYSCLK_TIMEOUT\000"
 4409      5953434C 
 4409      4B5F5449 
 4409      4D454F55 
 4409      5400
 4410              	.LASF12:
 4411 0182 756E7369 		.ascii	"unsigned int\000"
 4411      676E6564 
 4411      20696E74 
 4411      00
 4412              	.LASF289:
 4413 018f 4144435F 		.ascii	"ADC_1_Init\000"
 4413      315F496E 
 4413      697400
 4414              	.LASF275:
 4415 019a 72657374 		.ascii	"restart\000"
 4415      61727400 
 4416              	.LASF72:
 4417 01a2 494E5452 		.ascii	"INTR_CAUSE\000"
 4417      5F434155 
 4417      534500
 4418              	.LASF123:
 4419 01ad 736D6966 		.ascii	"smifDeviceNr\000"
 4419      44657669 
 4419      63654E72 
 4419      00
 4420              	.LASF203:
 4421 01ba 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 4421      41525F52 
 4421      414E4745 
 4421      5F434F4E 
 4421      445F4F55 
 4422              	.LASF153:
 4423 01d4 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 4423      44697643 
 4423      6D645061 
 4423      54797065 
 4423      53656C50 
 4424              	.LASF244:
 4425 01eb 64697669 		.ascii	"dividerNum\000"
 4425      6465724E 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 172


 4425      756D00
 4426              	.LASF115:
 4427 01f6 63707573 		.ascii	"cpussFlashPaSize\000"
 4427      73466C61 
 4427      73685061 
 4427      53697A65 
 4427      00
 4428              	.LASF222:
 4429 0207 43595F53 		.ascii	"CY_SYSCLK_SUCCESS\000"
 4429      5953434C 
 4429      4B5F5355 
 4429      43434553 
 4429      5300
 4430              	.LASF58:
 4431 0219 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 4431      5F574F52 
 4431      4B5F4E45 
 4431      5756414C 
 4431      554500
 4432              	.LASF93:
 4433 022c 63707573 		.ascii	"cpussBase\000"
 4433      73426173 
 4433      6500
 4434              	.LASF35:
 4435 0236 4449565F 		.ascii	"DIV_16_5_CTL\000"
 4435      31365F35 
 4435      5F43544C 
 4435      00
 4436              	.LASF290:
 4437 0243 4144435F 		.ascii	"ADC_1_IsEndConversion\000"
 4437      315F4973 
 4437      456E6443 
 4437      6F6E7665 
 4437      7273696F 
 4438              	.LASF41:
 4439 0259 5050555F 		.ascii	"PPU_PR\000"
 4439      505200
 4440              	.LASF117:
 4441 0260 63707573 		.ascii	"cpussFmIrq\000"
 4441      73466D49 
 4441      727100
 4442              	.LASF234:
 4443 026b 6877436F 		.ascii	"hwConfigStc\000"
 4443      6E666967 
 4443      53746300 
 4444              	.LASF118:
 4445 0277 63707573 		.ascii	"cpussNotConnectedIrq\000"
 4445      734E6F74 
 4445      436F6E6E 
 4445      65637465 
 4445      64497271 
 4446              	.LASF258:
 4447 028c 4144435F 		.ascii	"ADC_1_StartConvert\000"
 4447      315F5374 
 4447      61727443 
 4447      6F6E7665 
 4447      727400
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 173


 4448              	.LASF0:
 4449 029f 73686F72 		.ascii	"short int\000"
 4449      7420696E 
 4449      7400
 4450              	.LASF64:
 4451 02a9 53415455 		.ascii	"SATURATE_INTR\000"
 4451      52415445 
 4451      5F494E54 
 4451      5200
 4452              	.LASF288:
 4453 02b7 433A5C55 		.ascii	"C:\\Users\\mcfdo\\OneDrive\\Documents\\PSoC Creator"
 4453      73657273 
 4453      5C6D6366 
 4453      646F5C4F 
 4453      6E654472 
 4454 02e5 5C576F72 		.ascii	"\\Workspace_prog1\\Mario_mobile_robot_Copy_01_Copy_"
 4454      6B737061 
 4454      63655F70 
 4454      726F6731 
 4454      5C4D6172 
 4455 0316 30312E63 		.ascii	"01.cydsn\000"
 4455      7964736E 
 4455      00
 4456              	.LASF47:
 4457 031f 53414D50 		.ascii	"SAMPLE_TIME01\000"
 4457      4C455F54 
 4457      494D4530 
 4457      3100
 4458              	.LASF194:
 4459 032d 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 4459      41525F57 
 4459      4149545F 
 4459      464F525F 
 4459      52455355 
 4460              	.LASF76:
 4461 0344 494E4A5F 		.ascii	"INJ_RESULT\000"
 4461      52455355 
 4461      4C5400
 4462              	.LASF152:
 4463 034f 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 4463      44697643 
 4463      6D645061 
 4463      44697653 
 4463      656C506F 
 4464              	.LASF61:
 4465 0365 494E5452 		.ascii	"INTR_SET\000"
 4465      5F534554 
 4465      00
 4466              	.LASF254:
 4467 036e 4144435F 		.ascii	"ADC_1_InitConfig\000"
 4467      315F496E 
 4467      6974436F 
 4467      6E666967 
 4467      00
 4468              	.LASF257:
 4469 037f 6D6F6465 		.ascii	"mode\000"
 4469      00
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 174


 4470              	.LASF214:
 4471 0384 73617449 		.ascii	"satIntrMask\000"
 4471      6E74724D 
 4471      61736B00 
 4472              	.LASF192:
 4473 0390 63795F65 		.ascii	"cy_en_sar_start_convert_sel_t\000"
 4473      6E5F7361 
 4473      725F7374 
 4473      6172745F 
 4473      636F6E76 
 4474              	.LASF149:
 4475 03ae 70657269 		.ascii	"periTrGrSize\000"
 4475      54724772 
 4475      53697A65 
 4475      00
 4476              	.LASF120:
 4477 03bb 73727373 		.ascii	"srssNumPll\000"
 4477      4E756D50 
 4477      6C6C00
 4478              	.LASF177:
 4479 03c6 69706353 		.ascii	"ipcStructSize\000"
 4479      74727563 
 4479      7453697A 
 4479      6500
 4480              	.LASF255:
 4481 03d4 4144435F 		.ascii	"ADC_1_SetConvertMode\000"
 4481      315F5365 
 4481      74436F6E 
 4481      76657274 
 4481      4D6F6465 
 4482              	.LASF111:
 4483 03e9 70726F74 		.ascii	"protVersion\000"
 4483      56657273 
 4483      696F6E00 
 4484              	.LASF200:
 4485 03f5 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 4485      41525F52 
 4485      414E4745 
 4485      5F434F4E 
 4485      445F4245 
 4486              	.LASF151:
 4487 040d 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 4487      44697643 
 4487      6D645479 
 4487      70655365 
 4487      6C506F73 
 4488              	.LASF168:
 4489 0422 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 4489      73547269 
 4489      6D52616D 
 4489      43746C4F 
 4489      66667365 
 4490              	.LASF179:
 4491 0438 63795F73 		.ascii	"cy_stc_device_t\000"
 4491      74635F64 
 4491      65766963 
 4491      655F7400 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 175


 4492              	.LASF30:
 4493 0448 50455249 		.ascii	"PERI_PPU_PR_V1_Type\000"
 4493      5F505055 
 4493      5F50525F 
 4493      56315F54 
 4493      79706500 
 4494              	.LASF16:
 4495 045c 75696E74 		.ascii	"uint32_t\000"
 4495      33325F74 
 4495      00
 4496              	.LASF161:
 4497 0465 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 4497      50727443 
 4497      66674F75 
 4497      744F6666 
 4497      73657400 
 4498              	.LASF60:
 4499 0479 494E5452 		.ascii	"INTR\000"
 4499      00
 4500              	.LASF182:
 4501 047e 666C6F61 		.ascii	"float\000"
 4501      7400
 4502              	.LASF104:
 4503 0484 63727970 		.ascii	"cryptoVersion\000"
 4503      746F5665 
 4503      7273696F 
 4503      6E00
 4504              	.LASF133:
 4505 0492 666C6173 		.ascii	"flashProgramDelay\000"
 4505      6850726F 
 4505      6772616D 
 4505      44656C61 
 4505      7900
 4506              	.LASF240:
 4507 04a4 62617365 		.ascii	"base\000"
 4507      00
 4508              	.LASF233:
 4509 04a9 6E756D43 		.ascii	"numChannels\000"
 4509      68616E6E 
 4509      656C7300 
 4510              	.LASF20:
 4511 04b5 534C5F43 		.ascii	"SL_CTL\000"
 4511      544C00
 4512              	.LASF94:
 4513 04bc 666C6173 		.ascii	"flashcBase\000"
 4513      68634261 
 4513      736500
 4514              	.LASF14:
 4515 04c7 696E7431 		.ascii	"int16_t\000"
 4515      365F7400 
 4516              	.LASF160:
 4517 04cf 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 4517      50727443 
 4517      6667496E 
 4517      4F666673 
 4517      657400
 4518              	.LASF268:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 176


 4519 04e2 72657375 		.ascii	"result\000"
 4519      6C7400
 4520              	.LASF11:
 4521 04e9 6C6F6E67 		.ascii	"long long unsigned int\000"
 4521      206C6F6E 
 4521      6720756E 
 4521      7369676E 
 4521      65642069 
 4522              	.LASF157:
 4523 0500 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 4523      44697632 
 4523      345F3543 
 4523      746C4F66 
 4523      66736574 
 4524              	.LASF162:
 4525 0515 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 4525      50727443 
 4525      66675369 
 4525      6F4F6666 
 4525      73657400 
 4526              	.LASF77:
 4527 0529 52455345 		.ascii	"RESERVED7\000"
 4527      52564544 
 4527      3700
 4528              	.LASF116:
 4529 0533 63707573 		.ascii	"cpussIpc0Irq\000"
 4529      73497063 
 4529      30497271 
 4529      00
 4530              	.LASF48:
 4531 0540 53414D50 		.ascii	"SAMPLE_TIME23\000"
 4531      4C455F54 
 4531      494D4532 
 4531      3300
 4532              	.LASF209:
 4533 054e 72616E67 		.ascii	"rangeThres\000"
 4533      65546872 
 4533      657300
 4534              	.LASF5:
 4535 0559 5F5F7569 		.ascii	"__uint16_t\000"
 4535      6E743136 
 4535      5F7400
 4536              	.LASF201:
 4537 0564 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 4537      41525F52 
 4537      414E4745 
 4537      5F434F4E 
 4537      445F494E 
 4538              	.LASF221:
 4539 057d 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 4539      74635F73 
 4539      61725F63 
 4539      6F6E6669 
 4539      675F7400 
 4540              	.LASF205:
 4541 0591 6374726C 		.ascii	"ctrl\000"
 4541      00
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 177


 4542              	.LASF74:
 4543 0596 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 4543      4348414E 
 4543      5F434F4E 
 4543      46494700 
 4544              	.LASF138:
 4545 05a6 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 4545      6843746C 
 4545      4D61696E 
 4545      57733346 
 4545      72657100 
 4546              	.LASF237:
 4547 05ba 4144435F 		.ascii	"ADC_1_CONFIG_STRUCT\000"
 4547      315F434F 
 4547      4E464947 
 4547      5F535452 
 4547      55435400 
 4548              	.LASF193:
 4549 05ce 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 4549      41525F52 
 4549      45545552 
 4549      4E5F5354 
 4549      41545553 
 4550              	.LASF38:
 4551 05e3 54525F43 		.ascii	"TR_CMD\000"
 4551      4D4400
 4552              	.LASF91:
 4553 05ea 5341525F 		.ascii	"SAR_Type\000"
 4553      54797065 
 4553      00
 4554              	.LASF281:
 4555 05f3 43795F53 		.ascii	"Cy_SAR_DeInit\000"
 4555      41525F44 
 4555      65496E69 
 4555      7400
 4556              	.LASF226:
 4557 0601 63795F65 		.ascii	"cy_en_sysclk_status_t\000"
 4557      6E5F7379 
 4557      73636C6B 
 4557      5F737461 
 4557      7475735F 
 4558              	.LASF251:
 4559 0617 4144435F 		.ascii	"ADC_1_intSarClock_SetDivider\000"
 4559      315F696E 
 4559      74536172 
 4559      436C6F63 
 4559      6B5F5365 
 4560              	.LASF131:
 4561 0634 666C6173 		.ascii	"flashPipeRequired\000"
 4561      68506970 
 4561      65526571 
 4561      75697265 
 4561      6400
 4562              	.LASF70:
 4563 0646 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 4563      455F494E 
 4563      54525F4D 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 178


 4563      41534B00 
 4564              	.LASF245:
 4565 0656 636F6E66 		.ascii	"configNum\000"
 4565      69674E75 
 4565      6D00
 4566              	.LASF270:
 4567 0660 4144435F 		.ascii	"ADC_1_Start\000"
 4567      315F5374 
 4567      61727400 
 4568              	.LASF220:
 4569 066c 5F426F6F 		.ascii	"_Bool\000"
 4569      6C00
 4570              	.LASF50:
 4571 0672 52414E47 		.ascii	"RANGE_COND\000"
 4571      455F434F 
 4571      4E4400
 4572              	.LASF135:
 4573 067d 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 4573      6843746C 
 4573      4D61696E 
 4573      57733046 
 4573      72657100 
 4574              	.LASF36:
 4575 0691 4449565F 		.ascii	"DIV_24_5_CTL\000"
 4575      32345F35 
 4575      5F43544C 
 4575      00
 4576              	.LASF145:
 4577 069e 64775374 		.ascii	"dwStatusChIdxMsk\000"
 4577      61747573 
 4577      43684964 
 4577      784D736B 
 4577      00
 4578              	.LASF99:
 4579 06af 6770696F 		.ascii	"gpioBase\000"
 4579      42617365 
 4579      00
 4580              	.LASF186:
 4581 06b8 43595F53 		.ascii	"CY_SAR_BAD_PARAM\000"
 4581      41525F42 
 4581      41445F50 
 4581      4152414D 
 4581      00
 4582              	.LASF273:
 4583 06c9 4144435F 		.ascii	"ADC_1_Stop\000"
 4583      315F5374 
 4583      6F7000
 4584              	.LASF265:
 4585 06d4 6368616E 		.ascii	"chanCount\000"
 4585      436F756E 
 4585      7400
 4586              	.LASF34:
 4587 06de 4449565F 		.ascii	"DIV_16_CTL\000"
 4587      31365F43 
 4587      544C00
 4588              	.LASF18:
 4589 06e9 434C4F43 		.ascii	"CLOCK_CTL\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 179


 4589      4B5F4354 
 4589      4C00
 4590              	.LASF242:
 4591 06f3 656E6162 		.ascii	"enableMask\000"
 4591      6C654D61 
 4591      736B00
 4592              	.LASF170:
 4593 06fe 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 4593      73537973 
 4593      5469636B 
 4593      43746C4F 
 4593      66667365 
 4594              	.LASF126:
 4595 0714 75646250 		.ascii	"udbPresent\000"
 4595      72657365 
 4595      6E7400
 4596              	.LASF144:
 4597 071f 64775374 		.ascii	"dwStatusChIdxPos\000"
 4597      61747573 
 4597      43684964 
 4597      78506F73 
 4597      00
 4598              	.LASF90:
 4599 0730 5341525F 		.ascii	"SAR_V1_Type\000"
 4599      56315F54 
 4599      79706500 
 4600              	.LASF219:
 4601 073c 76726566 		.ascii	"vrefMvValue\000"
 4601      4D765661 
 4601      6C756500 
 4602              	.LASF67:
 4603 0748 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 4603      52415445 
 4603      5F494E54 
 4603      525F4D41 
 4603      534B4544 
 4604              	.LASF24:
 4605 075d 54525F4F 		.ascii	"TR_OUT_CTL\000"
 4605      55545F43 
 4605      544C00
 4606              	.LASF65:
 4607 0768 53415455 		.ascii	"SATURATE_INTR_SET\000"
 4607      52415445 
 4607      5F494E54 
 4607      525F5345 
 4607      5400
 4608              	.LASF40:
 4609 077a 54525F47 		.ascii	"TR_GR\000"
 4609      5200
 4610              	.LASF202:
 4611 0780 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 4611      41525F52 
 4611      414E4745 
 4611      5F434F4E 
 4611      445F4142 
 4612              	.LASF181:
 4613 0798 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 180


 4613      00
 4614              	.LASF211:
 4615 079d 6368616E 		.ascii	"chanEn\000"
 4615      456E00
 4616              	.LASF156:
 4617 07a4 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 4617      44697631 
 4617      365F3543 
 4617      746C4F66 
 4617      66736574 
 4618              	.LASF243:
 4619 07b9 64697669 		.ascii	"dividerType\000"
 4619      64657254 
 4619      79706500 
 4620              	.LASF127:
 4621 07c5 73797350 		.ascii	"sysPmSimoPresent\000"
 4621      6D53696D 
 4621      6F507265 
 4621      73656E74 
 4621      00
 4622              	.LASF129:
 4623 07d6 63727970 		.ascii	"cryptoMemSize\000"
 4623      746F4D65 
 4623      6D53697A 
 4623      6500
 4624              	.LASF59:
 4625 07e4 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 4625      5F524553 
 4625      554C545F 
 4625      4E455756 
 4625      414C5545 
 4626              	.LASF79:
 4627 07f9 4156475F 		.ascii	"AVG_STAT\000"
 4627      53544154 
 4627      00
 4628              	.LASF249:
 4629 0802 64697669 		.ascii	"dividerValue\000"
 4629      64657256 
 4629      616C7565 
 4629      00
 4630              	.LASF13:
 4631 080f 75696E74 		.ascii	"uint8_t\000"
 4631      385F7400 
 4632              	.LASF189:
 4633 0817 63795F65 		.ascii	"cy_en_sar_status_t\000"
 4633      6E5F7361 
 4633      725F7374 
 4633      61747573 
 4633      5F7400
 4634              	.LASF150:
 4635 082a 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 4635      44697643 
 4635      6D644469 
 4635      7653656C 
 4635      4D736B00 
 4636              	.LASF185:
 4637 083e 43595F53 		.ascii	"CY_SAR_SUCCESS\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 181


 4637      41525F53 
 4637      55434345 
 4637      535300
 4638              	.LASF69:
 4639 084d 52414E47 		.ascii	"RANGE_INTR_SET\000"
 4639      455F494E 
 4639      54525F53 
 4639      455400
 4640              	.LASF217:
 4641 085c 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 4641      77697463 
 4641      68537143 
 4641      74726C00 
 4642              	.LASF210:
 4643 086c 72616E67 		.ascii	"rangeCond\000"
 4643      65436F6E 
 4643      6400
 4644              	.LASF174:
 4645 0876 63707573 		.ascii	"cpussRam0Ctl0\000"
 4645      7352616D 
 4645      3043746C 
 4645      3000
 4646              	.LASF10:
 4647 0884 6C6F6E67 		.ascii	"long long int\000"
 4647      206C6F6E 
 4647      6720696E 
 4647      7400
 4648              	.LASF101:
 4649 0892 69706342 		.ascii	"ipcBase\000"
 4649      61736500 
 4650              	.LASF142:
 4651 089a 64774368 		.ascii	"dwChCtlPrioPos\000"
 4651      43746C50 
 4651      72696F50 
 4651      6F7300
 4652              	.LASF102:
 4653 08a9 63727970 		.ascii	"cryptoBase\000"
 4653      746F4261 
 4653      736500
 4654              	.LASF241:
 4655 08b4 43795F53 		.ascii	"Cy_SAR_SetChanMask\000"
 4655      41525F53 
 4655      65744368 
 4655      616E4D61 
 4655      736B00
 4656              	.LASF132:
 4657 08c7 666C6173 		.ascii	"flashWriteDelay\000"
 4657      68577269 
 4657      74654465 
 4657      6C617900 
 4658              	.LASF43:
 4659 08d7 5050555F 		.ascii	"PPU_GR\000"
 4659      475200
 4660              	.LASF248:
 4661 08de 43795F53 		.ascii	"Cy_SysClk_PeriphSetDivider\000"
 4661      7973436C 
 4661      6B5F5065 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 182


 4661      72697068 
 4661      53657444 
 4662              	.LASF4:
 4663 08f9 5F5F696E 		.ascii	"__int16_t\000"
 4663      7431365F 
 4663      7400
 4664              	.LASF98:
 4665 0903 6873696F 		.ascii	"hsiomBase\000"
 4665      6D426173 
 4665      6500
 4666              	.LASF283:
 4667 090d 43795F53 		.ascii	"Cy_SAR_StartConvert\000"
 4667      41525F53 
 4667      74617274 
 4667      436F6E76 
 4667      65727400 
 4668              	.LASF55:
 4669 0921 4348414E 		.ascii	"CHAN_RESULT\000"
 4669      5F524553 
 4669      554C5400 
 4670              	.LASF175:
 4671 092d 63707573 		.ascii	"cpussRam1Ctl0\000"
 4671      7352616D 
 4671      3143746C 
 4671      3000
 4672              	.LASF148:
 4673 093b 70657269 		.ascii	"periTrGrOffset\000"
 4673      54724772 
 4673      4F666673 
 4673      657400
 4674              	.LASF68:
 4675 094a 52414E47 		.ascii	"RANGE_INTR\000"
 4675      455F494E 
 4675      545200
 4676              	.LASF114:
 4677 0955 63707573 		.ascii	"cpussDwChNr\000"
 4677      73447743 
 4677      684E7200 
 4678              	.LASF62:
 4679 0961 494E5452 		.ascii	"INTR_MASK\000"
 4679      5F4D4153 
 4679      4B00
 4680              	.LASF46:
 4681 096b 53414D50 		.ascii	"SAMPLE_CTRL\000"
 4681      4C455F43 
 4681      54524C00 
 4682              	.LASF272:
 4683 0977 75736572 		.ascii	"userIsr\000"
 4683      49737200 
 4684              	.LASF187:
 4685 097f 43595F53 		.ascii	"CY_SAR_TIMEOUT\000"
 4685      41525F54 
 4685      494D454F 
 4685      555400
 4686              	.LASF184:
 4687 098e 75696E74 		.ascii	"uint32\000"
 4687      333200
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 183


 4688              	.LASF112:
 4689 0995 63707573 		.ascii	"cpussIpcNr\000"
 4689      73497063 
 4689      4E7200
 4690              	.LASF82:
 4691 09a0 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 4691      53574954 
 4691      43485F43 
 4691      4C454152 
 4691      3000
 4692              	.LASF261:
 4693 09b2 6D61736B 		.ascii	"mask\000"
 4693      00
 4694              	.LASF124:
 4695 09b7 70617373 		.ascii	"passSarChannels\000"
 4695      53617243 
 4695      68616E6E 
 4695      656C7300 
 4696              	.LASF176:
 4697 09c7 63707573 		.ascii	"cpussRam2Ctl0\000"
 4697      7352616D 
 4697      3243746C 
 4697      3000
 4698              	.LASF190:
 4699 09d5 43595F53 		.ascii	"CY_SAR_START_CONVERT_SINGLE_SHOT\000"
 4699      41525F53 
 4699      54415254 
 4699      5F434F4E 
 4699      56455254 
 4700              	.LASF52:
 4701 09f6 53544152 		.ascii	"START_CTRL\000"
 4701      545F4354 
 4701      524C00
 4702              	.LASF229:
 4703 0a01 43595F53 		.ascii	"CY_SYSCLK_DIV_16_5_BIT\000"
 4703      5953434C 
 4703      4B5F4449 
 4703      565F3136 
 4703      5F355F42 
 4704              	.LASF155:
 4705 0a18 70657269 		.ascii	"periDiv16CtlOffset\000"
 4705      44697631 
 4705      3643746C 
 4705      4F666673 
 4705      657400
 4706              	.LASF280:
 4707 0a2b 4144435F 		.ascii	"ADC_1_allConfigs\000"
 4707      315F616C 
 4707      6C436F6E 
 4707      66696773 
 4707      00
 4708              	.LASF260:
 4709 0a3c 4144435F 		.ascii	"ADC_1_SetEosMask\000"
 4709      315F5365 
 4709      74456F73 
 4709      4D61736B 
 4709      00
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 184


 4710              	.LASF216:
 4711 0a4d 6D757853 		.ascii	"muxSwitch\000"
 4711      77697463 
 4711      6800
 4712              	.LASF6:
 4713 0a57 73686F72 		.ascii	"short unsigned int\000"
 4713      7420756E 
 4713      7369676E 
 4713      65642069 
 4713      6E7400
 4714              	.LASF92:
 4715 0a6a 6C6F6E67 		.ascii	"long double\000"
 4715      20646F75 
 4715      626C6500 
 4716              	.LASF15:
 4717 0a76 75696E74 		.ascii	"uint16_t\000"
 4717      31365F74 
 4717      00
 4718              	.LASF269:
 4719 0a7f 4144435F 		.ascii	"ADC_1_Enable\000"
 4719      315F456E 
 4719      61626C65 
 4719      00
 4720              	.LASF147:
 4721 0a8c 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 4721      5472436D 
 4721      64477253 
 4721      656C4D73 
 4721      6B00
 4722              	.LASF225:
 4723 0a9e 43595F53 		.ascii	"CY_SYSCLK_INVALID_STATE\000"
 4723      5953434C 
 4723      4B5F494E 
 4723      56414C49 
 4723      445F5354 
 4724              	.LASF207:
 4725 0ab6 73616D70 		.ascii	"sampleTime01\000"
 4725      6C655469 
 4725      6D653031 
 4725      00
 4726              	.LASF121:
 4727 0ac3 73727373 		.ascii	"srssNumHfroot\000"
 4727      4E756D48 
 4727      66726F6F 
 4727      7400
 4728              	.LASF143:
 4729 0ad1 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 4729      43746C50 
 4729      7265656D 
 4729      70746162 
 4729      6C65506F 
 4730              	.LASF228:
 4731 0ae7 43595F53 		.ascii	"CY_SYSCLK_DIV_16_BIT\000"
 4731      5953434C 
 4731      4B5F4449 
 4731      565F3136 
 4731      5F424954 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 185


 4732              	.LASF105:
 4733 0afc 64775665 		.ascii	"dwVersion\000"
 4733      7273696F 
 4733      6E00
 4734              	.LASF137:
 4735 0b06 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 4735      6843746C 
 4735      4D61696E 
 4735      57733246 
 4735      72657100 
 4736              	.LASF256:
 4737 0b1a 636F6E66 		.ascii	"config\000"
 4737      696700
 4738              	.LASF17:
 4739 0b21 73697A65 		.ascii	"sizetype\000"
 4739      74797065 
 4739      00
 4740              	.LASF223:
 4741 0b2a 43595F53 		.ascii	"CY_SYSCLK_BAD_PARAM\000"
 4741      5953434C 
 4741      4B5F4241 
 4741      445F5041 
 4741      52414D00 
 4742              	.LASF172:
 4743 0b3e 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 4743      73436D34 
 4743      4E6D6943 
 4743      746C4F66 
 4743      66736574 
 4744              	.LASF166:
 4745 0b53 63707573 		.ascii	"cpussCm0StatusOffset\000"
 4745      73436D30 
 4745      53746174 
 4745      75734F66 
 4745      66736574 
 4746              	.LASF154:
 4747 0b68 70657269 		.ascii	"periDiv8CtlOffset\000"
 4747      44697638 
 4747      43746C4F 
 4747      66667365 
 4747      7400
 4748              	.LASF37:
 4749 0b7a 52455345 		.ascii	"RESERVED2\000"
 4749      52564544 
 4749      3200
 4750              	.LASF39:
 4751 0b84 52455345 		.ascii	"RESERVED3\000"
 4751      52564544 
 4751      3300
 4752              	.LASF42:
 4753 0b8e 52455345 		.ascii	"RESERVED4\000"
 4753      52564544 
 4753      3400
 4754              	.LASF73:
 4755 0b98 52455345 		.ascii	"RESERVED5\000"
 4755      52564544 
 4755      3500
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 186


 4756              	.LASF75:
 4757 0ba2 52455345 		.ascii	"RESERVED6\000"
 4757      52564544 
 4757      3600
 4758              	.LASF238:
 4759 0bac 43795F53 		.ascii	"Cy_SAR_Disable\000"
 4759      41525F44 
 4759      69736162 
 4759      6C6500
 4760              	.LASF80:
 4761 0bbb 52455345 		.ascii	"RESERVED8\000"
 4761      52564544 
 4761      3800
 4762              	.LASF83:
 4763 0bc5 52455345 		.ascii	"RESERVED9\000"
 4763      52564544 
 4763      3900
 4764              	.LASF44:
 4765 0bcf 50455249 		.ascii	"PERI_V1_Type\000"
 4765      5F56315F 
 4765      54797065 
 4765      00
 4766              	.LASF85:
 4767 0bdc 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 4767      53574954 
 4767      43485F53 
 4767      515F4354 
 4767      524C00
 4768              	.LASF7:
 4769 0bef 6C6F6E67 		.ascii	"long int\000"
 4769      20696E74 
 4769      00
 4770              	.LASF103:
 4771 0bf8 63707573 		.ascii	"cpussVersion\000"
 4771      73566572 
 4771      73696F6E 
 4771      00
 4772              	.LASF107:
 4773 0c05 6770696F 		.ascii	"gpioVersion\000"
 4773      56657273 
 4773      696F6E00 
 4774              	.LASF32:
 4775 0c11 4449565F 		.ascii	"DIV_CMD\000"
 4775      434D4400 
 4776              	.LASF106:
 4777 0c19 666C6173 		.ascii	"flashcVersion\000"
 4777      68635665 
 4777      7273696F 
 4777      6E00
 4778              	.LASF128:
 4779 0c27 70726F74 		.ascii	"protBusMasterMask\000"
 4779      4275734D 
 4779      61737465 
 4779      724D6173 
 4779      6B00
 4780              	.LASF97:
 4781 0c39 70726F74 		.ascii	"protBase\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 187


 4781      42617365 
 4781      00
 4782              	.LASF247:
 4783 0c42 43795F53 		.ascii	"Cy_SysClk_PeriphEnableDivider\000"
 4783      7973436C 
 4783      6B5F5065 
 4783      72697068 
 4783      456E6162 
 4784              	.LASF279:
 4785 0c60 4144435F 		.ascii	"ADC_1_currentConfig\000"
 4785      315F6375 
 4785      7272656E 
 4785      74436F6E 
 4785      66696700 
 4786              	.LASF49:
 4787 0c74 52414E47 		.ascii	"RANGE_THRES\000"
 4787      455F5448 
 4787      52455300 
 4788              	.LASF199:
 4789 0c80 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_ENABLE\000"
 4789      41525F53 
 4789      57495443 
 4789      485F5345 
 4789      515F4354 
 4790              	.LASF188:
 4791 0c9e 43595F53 		.ascii	"CY_SAR_CONVERSION_NOT_COMPLETE\000"
 4791      41525F43 
 4791      4F4E5645 
 4791      5253494F 
 4791      4E5F4E4F 
 4792              	.LASF54:
 4793 0cbd 4348414E 		.ascii	"CHAN_WORK\000"
 4793      5F574F52 
 4793      4B00
 4794              	.LASF183:
 4795 0cc7 646F7562 		.ascii	"double\000"
 4795      6C6500
 4796              	.LASF167:
 4797 0cce 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 4797      73436D34 
 4797      50777243 
 4797      746C4F66 
 4797      66736574 
 4798              	.LASF3:
 4799 0ce3 5F5F7569 		.ascii	"__uint8_t\000"
 4799      6E74385F 
 4799      7400
 4800              	.LASF235:
 4801 0ced 6D697363 		.ascii	"miscConfig\000"
 4801      436F6E66 
 4801      696700
 4802              	.LASF158:
 4803 0cf8 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 4803      50727449 
 4803      6E747243 
 4803      66674F66 
 4803      66736574 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 188


 4804              	.LASF164:
 4805 0d0d 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 4805      73436D34 
 4805      436C6F63 
 4805      6B43746C 
 4805      4F666673 
 4806              	.LASF63:
 4807 0d24 494E5452 		.ascii	"INTR_MASKED\000"
 4807      5F4D4153 
 4807      4B454400 
 4808              	.LASF169:
 4809 0d30 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 4809      73547269 
 4809      6D526F6D 
 4809      43746C4F 
 4809      66667365 
 4810              	.LASF208:
 4811 0d46 73616D70 		.ascii	"sampleTime23\000"
 4811      6C655469 
 4811      6D653233 
 4811      00
 4812              	.LASF286:
 4813 0d53 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4813      43313120 
 4813      352E342E 
 4813      31203230 
 4813      31363036 
 4814 0d86 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4814      20726576 
 4814      6973696F 
 4814      6E203233 
 4814      37373135 
 4815 0db9 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 4815      73202D66 
 4815      66756E63 
 4815      74696F6E 
 4815      2D736563 
 4816              	.LASF285:
 4817 0de5 43795F53 		.ascii	"Cy_SAR_Enable\000"
 4817      41525F45 
 4817      6E61626C 
 4817      6500
 4818              	.LASF108:
 4819 0df3 6873696F 		.ascii	"hsiomVersion\000"
 4819      6D566572 
 4819      73696F6E 
 4819      00
 4820              	.LASF9:
 4821 0e00 6C6F6E67 		.ascii	"long unsigned int\000"
 4821      20756E73 
 4821      69676E65 
 4821      6420696E 
 4821      7400
 4822              	.LASF246:
 4823 0e12 72657456 		.ascii	"retVal\000"
 4823      616C00
 4824              	.LASF173:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 189


 4825 0e19 63707573 		.ascii	"cpussRomCtl\000"
 4825      73526F6D 
 4825      43746C00 
 4826              	.LASF81:
 4827 0e25 4D55585F 		.ascii	"MUX_SWITCH0\000"
 4827      53574954 
 4827      43483000 
 4828              	.LASF57:
 4829 0e31 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 4829      5F524553 
 4829      554C545F 
 4829      55504441 
 4829      54454400 
 4830              	.LASF195:
 4831 0e45 63795F65 		.ascii	"cy_en_sar_return_mode_t\000"
 4831      6E5F7361 
 4831      725F7265 
 4831      7475726E 
 4831      5F6D6F64 
 4832              	.LASF53:
 4833 0e5d 4348414E 		.ascii	"CHAN_CONFIG\000"
 4833      5F434F4E 
 4833      46494700 
 4834              	.LASF206:
 4835 0e69 73616D70 		.ascii	"sampleCtrl\000"
 4835      6C654374 
 4835      726C00
 4836              	.LASF1:
 4837 0e74 756E7369 		.ascii	"unsigned char\000"
 4837      676E6564 
 4837      20636861 
 4837      7200
 4838              	.LASF88:
 4839 0e82 414E415F 		.ascii	"ANA_TRIM0\000"
 4839      5452494D 
 4839      3000
 4840              	.LASF89:
 4841 0e8c 414E415F 		.ascii	"ANA_TRIM1\000"
 4841      5452494D 
 4841      3100
 4842              	.LASF8:
 4843 0e96 5F5F7569 		.ascii	"__uint32_t\000"
 4843      6E743332 
 4843      5F7400
 4844              	.LASF180:
 4845 0ea1 63795F69 		.ascii	"cy_israddress\000"
 4845      73726164 
 4845      64726573 
 4845      7300
 4846              	.LASF196:
 4847 0eaf 43595F53 		.ascii	"CY_SAR_SWITCH_OPEN\000"
 4847      41525F53 
 4847      57495443 
 4847      485F4F50 
 4847      454E00
 4848              	.LASF230:
 4849 0ec2 43595F53 		.ascii	"CY_SYSCLK_DIV_24_5_BIT\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 190


 4849      5953434C 
 4849      4B5F4449 
 4849      565F3234 
 4849      5F355F42 
 4850              	.LASF66:
 4851 0ed9 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 4851      52415445 
 4851      5F494E54 
 4851      525F4D41 
 4851      534B00
 4852              	.LASF266:
 4853 0eec 7265744D 		.ascii	"retMode\000"
 4853      6F646500 
 4854              	.LASF87:
 4855 0ef4 52455345 		.ascii	"RESERVED10\000"
 4855      52564544 
 4855      313000
 4856              	.LASF134:
 4857 0eff 666C6173 		.ascii	"flashEraseDelay\000"
 4857      68457261 
 4857      73654465 
 4857      6C617900 
 4858              	.LASF236:
 4859 0f0f 636C6B44 		.ascii	"clkDivider\000"
 4859      69766964 
 4859      657200
 4860              	.LASF231:
 4861 0f1a 63795F65 		.ascii	"cy_en_divider_types_t\000"
 4861      6E5F6469 
 4861      76696465 
 4861      725F7479 
 4861      7065735F 
 4862              	.LASF239:
 4863 0f30 43795F53 		.ascii	"Cy_SAR_SetInterruptMask\000"
 4863      41525F53 
 4863      6574496E 
 4863      74657272 
 4863      7570744D 
 4864              	.LASF267:
 4865 0f48 656E644F 		.ascii	"endOfConversion\000"
 4865      66436F6E 
 4865      76657273 
 4865      696F6E00 
 4866              	.LASF198:
 4867 0f58 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_DISABLE\000"
 4867      41525F53 
 4867      57495443 
 4867      485F5345 
 4867      515F4354 
 4868              	.LASF259:
 4869 0f77 4144435F 		.ascii	"ADC_1_IRQ_Disable\000"
 4869      315F4952 
 4869      515F4469 
 4869      7361626C 
 4869      6500
 4870              	.LASF282:
 4871 0f89 43795F53 		.ascii	"Cy_SAR_Init\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 191


 4871      41525F49 
 4871      6E697400 
 4872              	.LASF130:
 4873 0f95 666C6173 		.ascii	"flashRwwRequired\000"
 4873      68527777 
 4873      52657175 
 4873      69726564 
 4873      00
 4874              	.LASF159:
 4875 0fa6 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 4875      50727443 
 4875      66674F66 
 4875      66736574 
 4875      00
 4876              	.LASF125:
 4877 0fb7 65704D6F 		.ascii	"epMonitorNr\000"
 4877      6E69746F 
 4877      724E7200 
 4878              	.LASF274:
 4879 0fc3 4144435F 		.ascii	"ADC_1_SelectConfig\000"
 4879      315F5365 
 4879      6C656374 
 4879      436F6E66 
 4879      696700
 4880              	.LASF2:
 4881 0fd6 7369676E 		.ascii	"signed char\000"
 4881      65642063 
 4881      68617200 
 4882              	.LASF140:
 4883 0fe2 64774368 		.ascii	"dwChOffset\000"
 4883      4F666673 
 4883      657400
 4884              	.LASF113:
 4885 0fed 63707573 		.ascii	"cpussIpcIrqNr\000"
 4885      73497063 
 4885      4972714E 
 4885      7200
 4886              	.LASF278:
 4887 0ffb 4144435F 		.ascii	"ADC_1_selected\000"
 4887      315F7365 
 4887      6C656374 
 4887      656400
 4888              	.LASF84:
 4889 100a 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 4889      53574954 
 4889      43485F44 
 4889      535F4354 
 4889      524C00
 4890              	.LASF165:
 4891 101d 63707573 		.ascii	"cpussCm4StatusOffset\000"
 4891      73436D34 
 4891      53746174 
 4891      75734F66 
 4891      66736574 
 4892              	.LASF212:
 4893 1032 6368616E 		.ascii	"chanConfig\000"
 4893      436F6E66 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 192


 4893      696700
 4894              	.LASF86:
 4895 103d 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 4895      53574954 
 4895      43485F53 
 4895      54415455 
 4895      5300
 4896              	.LASF26:
 4897 104f 41444452 		.ascii	"ADDR0\000"
 4897      3000
 4898              	.LASF28:
 4899 1055 41444452 		.ascii	"ADDR1\000"
 4899      3100
 4900              	.LASF110:
 4901 105b 70657269 		.ascii	"periVersion\000"
 4901      56657273 
 4901      696F6E00 
 4902              	.LASF262:
 4903 1067 6465496E 		.ascii	"deInitRouting\000"
 4903      6974526F 
 4903      7574696E 
 4903      6700
 4904              	.LASF218:
 4905 1075 636F6E66 		.ascii	"configRouting\000"
 4905      6967526F 
 4905      7574696E 
 4905      6700
 4906              	.LASF100:
 4907 1083 70617373 		.ascii	"passBase\000"
 4907      42617365 
 4907      00
 4908              	.LASF27:
 4909 108c 41545430 		.ascii	"ATT0\000"
 4909      00
 4910              	.LASF29:
 4911 1091 41545431 		.ascii	"ATT1\000"
 4911      00
 4912              	.LASF22:
 4913 1096 52455345 		.ascii	"RESERVED1\000"
 4913      52564544 
 4913      3100
 4914              	.LASF119:
 4915 10a0 73727373 		.ascii	"srssNumClkpath\000"
 4915      4E756D43 
 4915      6C6B7061 
 4915      746800
 4916              	.LASF78:
 4917 10af 53544154 		.ascii	"STATUS\000"
 4917      555300
 4918              	.LASF23:
 4919 10b6 50455249 		.ascii	"PERI_GR_V1_Type\000"
 4919      5F47525F 
 4919      56315F54 
 4919      79706500 
 4920              	.LASF139:
 4921 10c6 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 4921      6843746C 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 193


 4921      4D61696E 
 4921      57733446 
 4921      72657100 
 4922              	.LASF215:
 4923 10da 72616E67 		.ascii	"rangeIntrMask\000"
 4923      65496E74 
 4923      724D6173 
 4923      6B00
 4924              	.LASF197:
 4925 10e8 43595F53 		.ascii	"CY_SAR_SWITCH_CLOSE\000"
 4925      41525F53 
 4925      57495443 
 4925      485F434C 
 4925      4F534500 
 4926              	.LASF263:
 4927 10fc 696E7472 		.ascii	"intrMaskReg\000"
 4927      4D61736B 
 4927      52656700 
 4928              	.LASF204:
 4929 1108 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 4929      6E5F7361 
 4929      725F7261 
 4929      6E67655F 
 4929      64657465 
 4930              	.LASF21:
 4931 112b 54494D45 		.ascii	"TIMEOUT_CTL\000"
 4931      4F55545F 
 4931      43544C00 
 4932              	.LASF191:
 4933 1137 43595F53 		.ascii	"CY_SAR_START_CONVERT_CONTINUOUS\000"
 4933      41525F53 
 4933      54415254 
 4933      5F434F4E 
 4933      56455254 
 4934              	.LASF31:
 4935 1157 50455249 		.ascii	"PERI_PPU_GR_V1_Type\000"
 4935      5F505055 
 4935      5F47525F 
 4935      56315F54 
 4935      79706500 
 4936              	.LASF109:
 4937 116b 69706356 		.ascii	"ipcVersion\000"
 4937      65727369 
 4937      6F6E00
 4938              	.LASF213:
 4939 1176 696E7472 		.ascii	"intrMask\000"
 4939      4D61736B 
 4939      00
 4940              	.LASF146:
 4941 117f 70657269 		.ascii	"periTrCmdOffset\000"
 4941      5472436D 
 4941      644F6666 
 4941      73657400 
 4942              	.LASF284:
 4943 118f 43795F53 		.ascii	"Cy_SAR_IsEndConversion\000"
 4943      41525F49 
 4943      73456E64 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccGcGFgg.s 			page 194


 4943      436F6E76 
 4943      65727369 
 4944              	.LASF252:
 4945 11a6 4144435F 		.ascii	"ADC_1_intSarClock_Enable\000"
 4945      315F696E 
 4945      74536172 
 4945      436C6F63 
 4945      6B5F456E 
 4946              	.LASF45:
 4947 11bf 4354524C 		.ascii	"CTRL\000"
 4947      00
 4948              	.LASF232:
 4949 11c4 6368616E 		.ascii	"channelBase\000"
 4949      6E656C42 
 4949      61736500 
 4950              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
