ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cy_sar.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_idiv
  20              		.section	.text.Cy_SAR_Init,"ax",%progbits
  21              		.align	1
  22              		.global	Cy_SAR_Init
  23              		.code	16
  24              		.thumb_func
  25              		.type	Cy_SAR_Init, %function
  26              	Cy_SAR_Init:
  27              	.LFB105:
  28              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\sar\\cy_sar.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \file cy_sar.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Provides the public functions for the API for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #include "cy_sar.h"
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #ifdef CY_IP_MXS40PASS_SAR
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #if defined(__cplusplus)
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** extern "C" {
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** #endif
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** static cy_stc_sar_state_backup_t enabledBeforeSleep =
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     0uL,
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     0uL
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** };
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 2


  30:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Init
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Initialize all SAR configuration registers.
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If routing is to be configured, all switches will be cleared before
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * being initialized.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param config
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure containing configuration data. See \ref cy_stc_sar_config_t
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and guidance in the \ref group_sar_initialization section.
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : initialization complete
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : input pointers are null, initialization incomplete
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INIT_CUSTOM
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config)
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
  29              		.loc 1 57 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 0400     		movs	r4, r0
  42 0004 85B0     		sub	sp, sp, #20
  43              		.cfi_def_cfa_offset 40
  44              		.loc 1 57 0
  45 0006 0D00     		movs	r5, r1
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != base);
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != config);
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint8_t chan;
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t counts;
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool vrefNegSelect;
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool singleEndedSigned;
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool chanSingleEnded;
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if ((NULL == base) || (NULL == config))
  46              		.loc 1 68 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 3


  47 0008 0028     		cmp	r0, #0
  48 000a 72D0     		beq	.L10
  49              		.loc 1 68 0 is_stmt 0 discriminator 1
  50 000c 0029     		cmp	r1, #0
  51 000e 70D0     		beq	.L10
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_BAD_PARAM;
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CTRL(config->ctrl));
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_CTRL(config->sampleCtrl));
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_TIME(config->sampleTime01));
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_SAMPLE_TIME(config->sampleTime23));
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L3(CY_SAR_RANGECOND(config->rangeCond));
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->chanEn));
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_INTRMASK(config->intrMask));
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->satIntrMask));
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         CY_ASSERT_L2(CY_SAR_CHANMASK(config->rangeIntrMask));
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the EOS_DSI_OUT_EN bit so the EOS signal can be routed */
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) = config->sampleCtrl | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk;
  52              		.loc 1 85 0 is_stmt 1
  53 0010 8023     		movs	r3, #128
  54 0012 4A68     		ldr	r2, [r1, #4]
  55 0014 1B06     		lsls	r3, r3, #24
  56 0016 1343     		orrs	r3, r2
  57 0018 4360     		str	r3, [r0, #4]
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = config->sampleTime01;
  58              		.loc 1 86 0
  59 001a 8B68     		ldr	r3, [r1, #8]
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = config->sampleTime23;
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_THRES(base) = config->rangeThres;
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = (uint32_t)config->rangeCond << SAR_RANGE_COND_RANGE_COND_Pos;
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = config->chanEn;
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Check whether NEG_SEL is set for VREF */
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         vrefNegSelect = ((uint32_t)CY_SAR_NEG_SEL_VREF == (config->ctrl & SAR_CTRL_NEG_SEL_Msk))? t
  60              		.loc 1 93 0
  61 001c 0E68     		ldr	r6, [r1]
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = config->sampleTime01;
  62              		.loc 1 86 0
  63 001e 0361     		str	r3, [r0, #16]
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = config->sampleTime23;
  64              		.loc 1 87 0
  65 0020 CB68     		ldr	r3, [r1, #12]
  66              		.loc 1 93 0
  67 0022 E027     		movs	r7, #224
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = config->sampleTime23;
  68              		.loc 1 87 0
  69 0024 4361     		str	r3, [r0, #20]
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = (uint32_t)config->rangeCond << SAR_RANGE_COND_RANGE_COND_Pos;
  70              		.loc 1 88 0
  71 0026 0B69     		ldr	r3, [r1, #16]
  72              		.loc 1 93 0
  73 0028 3F01     		lsls	r7, r7, #4
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = (uint32_t)config->rangeCond << SAR_RANGE_COND_RANGE_COND_Pos;
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 4


  74              		.loc 1 88 0
  75 002a 8361     		str	r3, [r0, #24]
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = config->chanEn;
  76              		.loc 1 89 0
  77 002c 0B7D     		ldrb	r3, [r1, #20]
  78 002e 9B07     		lsls	r3, r3, #30
  79 0030 C361     		str	r3, [r0, #28]
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  80              		.loc 1 90 0
  81 0032 8B69     		ldr	r3, [r1, #24]
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Check whether single ended channels are set to signed */
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         singleEndedSigned = (SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk == (config->sampleCtrl & SAR_S
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_CHAN_CONFIG(config->chanConfig[chan]));
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CHAN_CONFIG(base, chan) = config->chanConfig[chan];
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             counts = (int32_t) CY_SAR_WRK_MAX_12BIT;
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* For signed single ended channels with NEG_SEL set to VREF,
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****              * set the offset to minus half scale to convert results to unsigned format */
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             chanSingleEnded = (0uL == (config->chanConfig[chan] & (SAR_CHAN_CONFIG_DIFFERENTIAL_EN_
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (chanSingleEnded && vrefNegSelect && singleEndedSigned)
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 Cy_SAR_offset[chan] = (int16_t) (counts / -2);
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             else
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 Cy_SAR_offset[chan] = 0;
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Calculate gain in counts per 10 volts with rounding */
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             Cy_SAR_countsPer10Volt[chan] = (int16_t)(((counts * CY_SAR_10MV_COUNTS) + (int32_t)conf
  82              		.loc 1 118 0
  83 0034 496F     		ldr	r1, [r1, #116]
  84              	.LVL1:
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  85              		.loc 1 90 0
  86 0036 0362     		str	r3, [r0, #32]
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Check whether single ended channels are set to signed */
  87              		.loc 1 93 0
  88 0038 3300     		movs	r3, r6
  89 003a 3B40     		ands	r3, r7
  90 003c 0093     		str	r3, [sp]
  91              	.LVL2:
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  92              		.loc 1 95 0
  93 003e 0423     		movs	r3, #4
  94              	.LVL3:
  95 0040 1A40     		ands	r2, r3
  96              		.loc 1 118 0
  97 0042 2D4B     		ldr	r3, .L23
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
  98              		.loc 1 95 0
  99 0044 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 5


 100              	.LVL4:
 101              		.loc 1 118 0
 102 0046 C818     		adds	r0, r1, r3
 103              	.LVL5:
 104 0048 4900     		lsls	r1, r1, #1
 105 004a FFF7FEFF 		bl	__aeabi_idiv
 106              	.LVL6:
 107 004e 03B2     		sxth	r3, r0
 108 0050 0293     		str	r3, [sp, #8]
 109 0052 0023     		movs	r3, #0
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 110              		.loc 1 114 0
 111 0054 9C46     		mov	ip, r3
 112 0056 2949     		ldr	r1, .L23+4
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 113              		.loc 1 108 0
 114 0058 0397     		str	r7, [sp, #12]
 115              	.LVL7:
 116              	.L5:
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 117              		.loc 1 101 0
 118 005a 9A00     		lsls	r2, r3, #2
 119 005c AA18     		adds	r2, r5, r2
 120 005e D069     		ldr	r0, [r2, #28]
 121 0060 1A00     		movs	r2, r3
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 122              		.loc 1 108 0
 123 0062 274F     		ldr	r7, .L23+8
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 124              		.loc 1 101 0
 125 0064 2032     		adds	r2, r2, #32
 126 0066 9200     		lsls	r2, r2, #2
 127 0068 1051     		str	r0, [r2, r4]
 128              	.LVL8:
 129 006a 5A00     		lsls	r2, r3, #1
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 130              		.loc 1 108 0
 131 006c 3842     		tst	r0, r7
 132 006e 08D1     		bne	.L3
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 133              		.loc 1 108 0 is_stmt 0 discriminator 1
 134 0070 0098     		ldr	r0, [sp]
 135              	.LVL9:
 136 0072 039F     		ldr	r7, [sp, #12]
 137 0074 B842     		cmp	r0, r7
 138 0076 04D1     		bne	.L3
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 139              		.loc 1 108 0 discriminator 2
 140 0078 0198     		ldr	r0, [sp, #4]
 141 007a 0028     		cmp	r0, #0
 142 007c 01D0     		beq	.L3
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 143              		.loc 1 110 0 is_stmt 1
 144 007e 2148     		ldr	r0, .L23+12
 145 0080 00E0     		b	.L21
 146              	.L3:
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 6


 147              		.loc 1 114 0
 148 0082 6046     		mov	r0, ip
 149              	.L21:
 150 0084 8852     		strh	r0, [r1, r2]
 151              	.LVL10:
 152              		.loc 1 118 0
 153 0086 029F     		ldr	r7, [sp, #8]
 154 0088 1F4A     		ldr	r2, .L23+16
 155 008a 9800     		lsls	r0, r3, #2
 156 008c 0133     		adds	r3, r3, #1
 157              	.LVL11:
 158 008e 8750     		str	r7, [r0, r2]
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 159              		.loc 1 97 0
 160 0090 102B     		cmp	r3, #16
 161 0092 E2D1     		bne	.L5
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR_MASK(base) = config->intrMask;
 162              		.loc 1 120 0
 163 0094 8622     		movs	r2, #134
 164 0096 EB6D     		ldr	r3, [r5, #92]
 165 0098 9200     		lsls	r2, r2, #2
 166 009a A350     		str	r3, [r4, r2]
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = config->intrMask;
 167              		.loc 1 121 0
 168 009c 083A     		subs	r2, r2, #8
 169 009e A350     		str	r3, [r4, r2]
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR_MASK(base) = config->satIntrMask;
 170              		.loc 1 122 0
 171 00a0 2B6E     		ldr	r3, [r5, #96]
 172 00a2 1832     		adds	r2, r2, #24
 173 00a4 A350     		str	r3, [r4, r2]
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR(base) = config->satIntrMask;
 174              		.loc 1 123 0
 175 00a6 083A     		subs	r2, r2, #8
 176 00a8 A350     		str	r3, [r4, r2]
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR_MASK(base) = config->rangeIntrMask;
 177              		.loc 1 124 0
 178 00aa 6B6E     		ldr	r3, [r5, #100]
 179 00ac 1832     		adds	r2, r2, #24
 180 00ae A350     		str	r3, [r4, r2]
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR(base) = config->rangeIntrMask;
 181              		.loc 1 125 0
 182 00b0 083A     		subs	r2, r2, #8
 183 00b2 A350     		str	r3, [r4, r2]
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set routing related registers if enabled */
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == config->configRouting)
 184              		.loc 1 128 0
 185 00b4 2B00     		movs	r3, r5
 186 00b6 7033     		adds	r3, r3, #112
 187 00b8 1B78     		ldrb	r3, [r3]
 188 00ba 002B     		cmp	r3, #0
 189 00bc 09D0     		beq	.L6
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_SWITCHMASK(config->muxSwitch));
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             CY_ASSERT_L2(CY_SAR_SQMASK(config->muxSwitchSqCtrl));
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 7


 132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Clear out all the switches so that only the desired switches in the config structure
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_CLEAR0(base) = CY_SAR_CLEAR_ALL_SWITCHES;
 190              		.loc 1 134 0
 191 00be C123     		movs	r3, #193
 192 00c0 124A     		ldr	r2, .L23+20
 193 00c2 9B00     		lsls	r3, r3, #2
 194 00c4 E250     		str	r2, [r4, r3]
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH0(base) = config->muxSwitch;
 195              		.loc 1 136 0
 196 00c6 AA6E     		ldr	r2, [r5, #104]
 197 00c8 043B     		subs	r3, r3, #4
 198 00ca E250     		str	r2, [r4, r3]
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_SQ_CTRL(base) = config->muxSwitchSqCtrl;
 199              		.loc 1 137 0
 200 00cc EA6E     		ldr	r2, [r5, #108]
 201 00ce 4433     		adds	r3, r3, #68
 202 00d0 E250     		str	r2, [r4, r3]
 203              	.L6:
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the Cap trim if it was trimmed out of range from sflash */
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if ((CY_SAR_CAP_TRIM_MAX == SAR_ANA_TRIM0(base)) || (CY_SAR_CAP_TRIM_MIN == SAR_ANA_TRIM0(b
 204              		.loc 1 141 0
 205 00d2 F023     		movs	r3, #240
 206 00d4 1B01     		lsls	r3, r3, #4
 207 00d6 E258     		ldr	r2, [r4, r3]
 208 00d8 3F2A     		cmp	r2, #63
 209 00da 02D0     		beq	.L7
 210              		.loc 1 141 0 is_stmt 0 discriminator 1
 211 00dc E258     		ldr	r2, [r4, r3]
 212 00de 002A     		cmp	r2, #0
 213 00e0 01D1     		bne	.L8
 214              	.L7:
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_ANA_TRIM0(base) = CY_SAR_CAP_TRIM;
 215              		.loc 1 143 0 is_stmt 1
 216 00e2 0B22     		movs	r2, #11
 217 00e4 E250     		str	r2, [r4, r3]
 218              	.L8:
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Set the REFBUF_EN bit as this is required for proper operation. */
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) = config->ctrl | SAR_CTRL_REFBUF_EN_Msk;
 219              		.loc 1 147 0
 220 00e6 8023     		movs	r3, #128
 221 00e8 9B03     		lsls	r3, r3, #14
 222 00ea 1E43     		orrs	r6, r3
 223 00ec 2660     		str	r6, [r4]
 224              	.LVL12:
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 225              		.loc 1 149 0
 226 00ee 0020     		movs	r0, #0
 227 00f0 00E0     		b	.L2
 228              	.LVL13:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 8


 229              	.L10:
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 230              		.loc 1 70 0
 231 00f2 0748     		ldr	r0, .L23+24
 232              	.LVL14:
 233              	.L2:
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 234              		.loc 1 153 0
 235 00f4 05B0     		add	sp, sp, #20
 236              		@ sp needed
 237              	.LVL15:
 238              	.LVL16:
 239 00f6 F0BD     		pop	{r4, r5, r6, r7, pc}
 240              	.L24:
 241              		.align	2
 242              	.L23:
 243 00f8 00007102 		.word	40960000
 244 00fc 00000000 		.word	Cy_SAR_offset
 245 0100 00010001 		.word	16777472
 246 0104 00F8FFFF 		.word	-2048
 247 0108 00000000 		.word	Cy_SAR_countsPer10Volt
 248 010c FFFFFF3F 		.word	1073741823
 249 0110 01000600 		.word	393217
 250              		.cfi_endproc
 251              	.LFE105:
 252              		.size	Cy_SAR_Init, .-Cy_SAR_Init
 253              		.section	.text.Cy_SAR_DeInit,"ax",%progbits
 254              		.align	1
 255              		.global	Cy_SAR_DeInit
 256              		.code	16
 257              		.thumb_func
 258              		.type	Cy_SAR_DeInit, %function
 259              	Cy_SAR_DeInit:
 260              	.LFB106:
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeInit
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Reset SAR registers back to power on reset defaults.
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The \ref Cy_SAR_offset and \ref Cy_SAR_countsPer10Volt arrays are NOT reset.
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param deInitRouting
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If true, all SARMUX switches are opened and switch control registers are reset
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * to zero. If false, switch registers are untouched.
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : de-initialization complete
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : input pointers are null, de-initialization incomplete
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 9


 174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_DEINIT
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting)
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 261              		.loc 1 180 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              	.LVL17:
 266 0000 30B5     		push	{r4, r5, lr}
 267              		.cfi_def_cfa_offset 12
 268              		.cfi_offset 4, -12
 269              		.cfi_offset 5, -8
 270              		.cfi_offset 14, -4
 271              		.loc 1 180 0
 272 0002 031E     		subs	r3, r0, #0
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L1(NULL != base);
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint8_t chan;
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (NULL == base)
 273              		.loc 1 186 0
 274 0004 22D0     		beq	.L28
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****        result = CY_SAR_BAD_PARAM;
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) = CY_SAR_DEINIT;
 275              		.loc 1 192 0
 276 0006 0022     		movs	r2, #0
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) = CY_SAR_DEINIT;
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME01(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_THRES(base) = CY_SAR_DEINIT;
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = CY_SAR_DEINIT;
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = CY_SAR_DEINIT;
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CHAN_CONFIG(base, chan) = CY_SAR_DEINIT;
 277              		.loc 1 201 0
 278 0008 1500     		movs	r5, r2
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) = CY_SAR_DEINIT;
 279              		.loc 1 192 0
 280 000a 0260     		str	r2, [r0]
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) = CY_SAR_DEINIT;
 281              		.loc 1 193 0
 282 000c 4260     		str	r2, [r0, #4]
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_TIME23(base) = CY_SAR_SAMPLE_TIME_DEINIT;
 283              		.loc 1 194 0
 284 000e 1048     		ldr	r0, .L32
 285              	.LVL18:
 286 0010 1861     		str	r0, [r3, #16]
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 10


 195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_THRES(base) = CY_SAR_DEINIT;
 287              		.loc 1 195 0
 288 0012 5861     		str	r0, [r3, #20]
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_COND(base) = CY_SAR_DEINIT;
 289              		.loc 1 196 0
 290 0014 9A61     		str	r2, [r3, #24]
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CHAN_EN(base) = CY_SAR_DEINIT;
 291              		.loc 1 197 0
 292 0016 DA61     		str	r2, [r3, #28]
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         for (chan = 0u; chan < CY_SAR_MAX_NUM_CHANNELS; chan++)
 293              		.loc 1 198 0
 294 0018 1A62     		str	r2, [r3, #32]
 295              	.LVL19:
 296              	.L27:
 297              		.loc 1 201 0 discriminator 3
 298 001a 1400     		movs	r4, r2
 299 001c 2034     		adds	r4, r4, #32
 300 001e A400     		lsls	r4, r4, #2
 301 0020 0132     		adds	r2, r2, #1
 302              	.LVL20:
 303 0022 0020     		movs	r0, #0
 304 0024 E550     		str	r5, [r4, r3]
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 305              		.loc 1 199 0 discriminator 3
 306 0026 102A     		cmp	r2, #16
 307 0028 F7D1     		bne	.L27
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR_MASK(base) = CY_SAR_DEINIT;
 308              		.loc 1 203 0
 309 002a 8622     		movs	r2, #134
 310 002c 9200     		lsls	r2, r2, #2
 311 002e 9850     		str	r0, [r3, r2]
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SATURATE_INTR_MASK(base) = CY_SAR_DEINIT;
 312              		.loc 1 204 0
 313 0030 1032     		adds	r2, r2, #16
 314 0032 9850     		str	r0, [r3, r2]
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_RANGE_INTR_MASK(base) = CY_SAR_DEINIT;
 315              		.loc 1 205 0
 316 0034 1032     		adds	r2, r2, #16
 317 0036 9850     		str	r0, [r3, r2]
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == deInitRouting)
 318              		.loc 1 206 0
 319 0038 8142     		cmp	r1, r0
 320 003a 08D0     		beq	.L26
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_CLEAR0(base) = CY_SAR_CLEAR_ALL_SWITCHES;
 321              		.loc 1 208 0
 322 003c 0549     		ldr	r1, .L32+4
 323              	.LVL21:
 324 003e CC32     		adds	r2, r2, #204
 325 0040 9950     		str	r1, [r3, r2]
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_DS_CTRL(base) = CY_SAR_DEINIT;
 326              		.loc 1 209 0
 327 0042 3C32     		adds	r2, r2, #60
 328 0044 9850     		str	r0, [r3, r2]
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_MUX_SWITCH_SQ_CTRL(base) = CY_SAR_DEINIT;
 329              		.loc 1 210 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 11


 330 0046 0432     		adds	r2, r2, #4
 331 0048 9850     		str	r0, [r3, r2]
 332 004a 00E0     		b	.L26
 333              	.LVL22:
 334              	.L28:
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 335              		.loc 1 188 0
 336 004c 0248     		ldr	r0, .L32+8
 337              	.LVL23:
 338              	.L26:
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 339              		.loc 1 216 0
 340              		@ sp needed
 341 004e 30BD     		pop	{r4, r5, pc}
 342              	.L33:
 343              		.align	2
 344              	.L32:
 345 0050 03000300 		.word	196611
 346 0054 FFFFFF3F 		.word	1073741823
 347 0058 01000600 		.word	393217
 348              		.cfi_endproc
 349              	.LFE106:
 350              		.size	Cy_SAR_DeInit, .-Cy_SAR_DeInit
 351              		.section	.text.Cy_SAR_Enable,"ax",%progbits
 352              		.align	1
 353              		.global	Cy_SAR_Enable
 354              		.code	16
 355              		.thumb_func
 356              		.type	Cy_SAR_Enable, %function
 357              	Cy_SAR_Enable:
 358              	.LFB107:
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Enable
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Power up the SAR ADC subsystem block. The hardware is ready to use
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * after 2 us, which is included in this function.
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_Enable(SAR_Type *base)
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 359              		.loc 1 233 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 12


 363              	.LVL24:
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (0uL == (SAR_CTRL(base) & SAR_CTRL_ENABLED_Msk))
 364              		.loc 1 234 0
 365 0000 0368     		ldr	r3, [r0]
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (0uL == (SAR_CTRL(base) & SAR_CTRL_ENABLED_Msk))
 366              		.loc 1 233 0
 367 0002 10B5     		push	{r4, lr}
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 4, -8
 370              		.cfi_offset 14, -4
 371              		.loc 1 234 0
 372 0004 002B     		cmp	r3, #0
 373 0006 0CDB     		blt	.L34
 374              	.LBB8:
 375              	.LBB9:
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while (0uL != (SAR_STATUS(base) & SAR_STATUS_BUSY_Msk))
 376              		.loc 1 236 0
 377 0008 A822     		movs	r2, #168
 378 000a 9200     		lsls	r2, r2, #2
 379              	.L37:
 380 000c 8358     		ldr	r3, [r0, r2]
 381 000e 002B     		cmp	r3, #0
 382 0010 FCDB     		blt	.L37
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Wait for SAR to go idle to avoid deadlock */
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_CTRL(base) |= SAR_CTRL_ENABLED_Msk;
 383              		.loc 1 241 0
 384 0012 8022     		movs	r2, #128
 385 0014 0368     		ldr	r3, [r0]
 386 0016 1206     		lsls	r2, r2, #24
 387 0018 1343     		orrs	r3, r2
 388 001a 0360     		str	r3, [r0]
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* The block is ready to use 2 us after the enable signal is set high. */
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SysLib_DelayUs(CY_SAR_2US_DELAY);
 389              		.loc 1 244 0
 390 001c 0220     		movs	r0, #2
 391              	.LVL25:
 392 001e FFF7FEFF 		bl	Cy_SysLib_DelayUs
 393              	.LVL26:
 394              	.L34:
 395              	.LBE9:
 396              	.LBE8:
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 397              		.loc 1 246 0
 398              		@ sp needed
 399 0022 10BD     		pop	{r4, pc}
 400              		.cfi_endproc
 401              	.LFE107:
 402              		.size	Cy_SAR_Enable, .-Cy_SAR_Enable
 403              		.section	.text.Cy_SAR_Wakeup,"ax",%progbits
 404              		.align	1
 405              		.global	Cy_SAR_Wakeup
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 13


 406              		.code	16
 407              		.thumb_func
 408              		.type	Cy_SAR_Wakeup, %function
 409              	Cy_SAR_Wakeup:
 410              	.LFB109:
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeepSleep
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This is the preferred routine to prepare the hardware for Deep Sleep.
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * It will call \ref Cy_SAR_StopConvert to disable continuous conversions
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and wait for SAR conversions to stop before entering Deep Sleep.
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If the SARMUX is not configured for Deep Sleep operation, the entire SAR hardware
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * block will be turned off.
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used in the \ref Cy_SAR_DeepSleepCallback. There is no
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * need to call this function directly.
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_DeepSleep(SAR_Type *base)
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t ctrlReg = SAR_CTRL(base);
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     enabledBeforeSleep.hwEnabled = ctrlReg & SAR_CTRL_ENABLED_Msk;
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn off the reference buffer */
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     ctrlReg &= ~SAR_CTRL_REFBUF_EN_Msk;
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_CTRL_ENABLED_Msk == enabledBeforeSleep.hwEnabled)
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Save state of CONTINUOUS bit so that conversions can be re-started upon wake-up */
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         enabledBeforeSleep.continuous = SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_StopConvert(base);
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while (0uL != (SAR_STATUS(base) & SAR_STATUS_BUSY_Msk))
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             /* Wait for SAR to stop conversions before entering low power */
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Turn off the entire hardware block only if the SARMUX is not
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****          * enabled for Deep Sleep operation. */
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_CTRL_DEEPSLEEP_ON_Msk != (ctrlReg & SAR_CTRL_DEEPSLEEP_ON_Msk))
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 14


 299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_CTRL(base) = ctrlReg;
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_Wakeup
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This is the preferred routine to restore the hardware to the state after calling
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_DeepSleep. Restoring the hardware involves re-enabling the hardware,
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * the reference buffer, and continuous scanning if it was previously
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * enabled before entering sleep.
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \sideeffect
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Calling this function without previously calling \ref Cy_SAR_DeepSleep can lead to
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * unpredictable results.
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used in the \ref Cy_SAR_DeepSleepCallback. There is no
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * need to call this function directly.
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_Wakeup(SAR_Type *base)
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 411              		.loc 1 330 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              	.LVL27:
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn on the reference buffer */
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_CTRL(base) |= SAR_CTRL_REFBUF_EN_Msk;
 416              		.loc 1 332 0
 417 0000 8022     		movs	r2, #128
 418 0002 0368     		ldr	r3, [r0]
 419 0004 9203     		lsls	r2, r2, #14
 420 0006 1343     		orrs	r3, r2
 421 0008 0360     		str	r3, [r0]
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_CTRL_ENABLED_Msk == enabledBeforeSleep.hwEnabled)
 422              		.loc 1 334 0
 423 000a 8023     		movs	r3, #128
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn on the reference buffer */
 424              		.loc 1 330 0
 425 000c 70B5     		push	{r4, r5, r6, lr}
 426              		.cfi_def_cfa_offset 16
 427              		.cfi_offset 4, -16
 428              		.cfi_offset 5, -12
 429              		.cfi_offset 6, -8
 430              		.cfi_offset 14, -4
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 15


 431              		.loc 1 334 0
 432 000e 084D     		ldr	r5, .L43
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Turn on the reference buffer */
 433              		.loc 1 330 0
 434 0010 0400     		movs	r4, r0
 435              		.loc 1 334 0
 436 0012 2A68     		ldr	r2, [r5]
 437 0014 1B06     		lsls	r3, r3, #24
 438 0016 9A42     		cmp	r2, r3
 439 0018 09D1     		bne	.L39
 440              	.LVL28:
 441              	.LBB14:
 442              	.LBB15:
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_Enable(base);
 443              		.loc 1 336 0
 444 001a FFF7FEFF 		bl	Cy_SAR_Enable
 445              	.LVL29:
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_CONTINUOUS_Msk == enabledBeforeSleep.continuous)
 446              		.loc 1 338 0
 447 001e 8023     		movs	r3, #128
 448 0020 6A68     		ldr	r2, [r5, #4]
 449 0022 5B02     		lsls	r3, r3, #9
 450 0024 9A42     		cmp	r2, r3
 451 0026 02D1     		bne	.L39
 452              	.LVL30:
 453              	.LBB16:
 454              	.LBB17:
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             Cy_SAR_StartConvert(base, CY_SAR_START_CONVERT_CONTINUOUS);
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_StartConvert
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Start a single scan (one shot) of all enabled channels or start scanning
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * continuously. When in continuous mode, all firmware and hardware triggers
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * are ignored. To stop continuous scanning, call \ref Cy_SAR_StopConvert.
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param startSelect
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_start_convert_sel_t
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_START_CONVERT
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 16


 367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect)
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_STARTCONVERT(startSelect));
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(startSelect)
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_START_CONVERT_CONTINUOUS:
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) |= SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 455              		.loc 1 374 0
 456 0028 6368     		ldr	r3, [r4, #4]
 457 002a 1343     		orrs	r3, r2
 458 002c 6360     		str	r3, [r4, #4]
 459              	.LVL31:
 460              	.L39:
 461              	.LBE17:
 462              	.LBE16:
 463              	.LBE15:
 464              	.LBE14:
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 465              		.loc 1 343 0
 466              		@ sp needed
 467              	.LVL32:
 468 002e 70BD     		pop	{r4, r5, r6, pc}
 469              	.L44:
 470              		.align	2
 471              	.L43:
 472 0030 00000000 		.word	.LANCHOR0
 473              		.cfi_endproc
 474              	.LFE109:
 475              		.size	Cy_SAR_Wakeup, .-Cy_SAR_Wakeup
 476              		.section	.text.Cy_SAR_StartConvert,"ax",%progbits
 477              		.align	1
 478              		.global	Cy_SAR_StartConvert
 479              		.code	16
 480              		.thumb_func
 481              		.type	Cy_SAR_StartConvert, %function
 482              	Cy_SAR_StartConvert:
 483              	.LFB110:
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_STARTCONVERT(startSelect));
 484              		.loc 1 368 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489              	.LVL33:
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 490              		.loc 1 371 0
 491 0000 0129     		cmp	r1, #1
 492 0002 05D1     		bne	.L49
 493              		.loc 1 374 0
 494 0004 8022     		movs	r2, #128
 495 0006 4368     		ldr	r3, [r0, #4]
 496 0008 5202     		lsls	r2, r2, #9
 497 000a 1343     		orrs	r3, r2
 498 000c 4360     		str	r3, [r0, #4]
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 499              		.loc 1 375 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 17


 500 000e 01E0     		b	.L45
 501              	.L49:
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_START_CONVERT_SINGLE_SHOT:
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_START_CTRL(base) = SAR_START_CTRL_FW_TRIGGER_Msk;
 502              		.loc 1 378 0
 503 0010 0123     		movs	r3, #1
 504 0012 4362     		str	r3, [r0, #36]
 505              	.L45:
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 506              		.loc 1 381 0
 507              		@ sp needed
 508 0014 7047     		bx	lr
 509              		.cfi_endproc
 510              	.LFE110:
 511              		.size	Cy_SAR_StartConvert, .-Cy_SAR_StartConvert
 512              		.section	.text.Cy_SAR_StopConvert,"ax",%progbits
 513              		.align	1
 514              		.global	Cy_SAR_StopConvert
 515              		.code	16
 516              		.thumb_func
 517              		.type	Cy_SAR_StopConvert, %function
 518              	Cy_SAR_StopConvert:
 519              	.LFB111:
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_StopConvert
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Stop continuous scanning of enabled channels.
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If a conversion is currently executing, that conversion will complete,
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * but no further conversions will occur until the next call to
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_StartConvert or the next hardware trigger, if enabled.
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_STOP_CONVERT
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_StopConvert(SAR_Type *base)
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 520              		.loc 1 404 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525              	.LVL34:
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_SAMPLE_CTRL_CONTINUOUS_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_CONTINUOUS_Msk))
 526              		.loc 1 405 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 18


 527 0000 4368     		ldr	r3, [r0, #4]
 528 0002 DB03     		lsls	r3, r3, #15
 529 0004 03D5     		bpl	.L50
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_SAMPLE_CTRL(base) &= ~SAR_SAMPLE_CTRL_CONTINUOUS_Msk;
 530              		.loc 1 407 0
 531 0006 4268     		ldr	r2, [r0, #4]
 532 0008 014B     		ldr	r3, .L55
 533 000a 1340     		ands	r3, r2
 534 000c 4360     		str	r3, [r0, #4]
 535              	.L50:
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 536              		.loc 1 409 0
 537              		@ sp needed
 538 000e 7047     		bx	lr
 539              	.L56:
 540              		.align	2
 541              	.L55:
 542 0010 FFFFFEFF 		.word	-65537
 543              		.cfi_endproc
 544              	.LFE111:
 545              		.size	Cy_SAR_StopConvert, .-Cy_SAR_StopConvert
 546              		.section	.text.Cy_SAR_DeepSleep,"ax",%progbits
 547              		.align	1
 548              		.global	Cy_SAR_DeepSleep
 549              		.code	16
 550              		.thumb_func
 551              		.type	Cy_SAR_DeepSleep, %function
 552              	Cy_SAR_DeepSleep:
 553              	.LFB108:
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t ctrlReg = SAR_CTRL(base);
 554              		.loc 1 272 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558              	.LVL35:
 559 0000 70B5     		push	{r4, r5, r6, lr}
 560              		.cfi_def_cfa_offset 16
 561              		.cfi_offset 4, -16
 562              		.cfi_offset 5, -12
 563              		.cfi_offset 6, -8
 564              		.cfi_offset 14, -4
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 565              		.loc 1 273 0
 566 0002 0668     		ldr	r6, [r0]
 567              	.LVL36:
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 568              		.loc 1 275 0
 569 0004 0E4A     		ldr	r2, .L63
 570 0006 F30F     		lsrs	r3, r6, #31
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 571              		.loc 1 278 0
 572 0008 0E4D     		ldr	r5, .L63+4
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 573              		.loc 1 275 0
 574 000a DB07     		lsls	r3, r3, #31
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 19


 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t ctrlReg = SAR_CTRL(base);
 575              		.loc 1 272 0
 576 000c 0400     		movs	r4, r0
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 577              		.loc 1 275 0
 578 000e 1360     		str	r3, [r2]
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 579              		.loc 1 278 0
 580 0010 3540     		ands	r5, r6
 581              	.LVL37:
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 582              		.loc 1 280 0
 583 0012 002B     		cmp	r3, #0
 584 0014 11D0     		beq	.L59
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 585              		.loc 1 284 0
 586 0016 8023     		movs	r3, #128
 587 0018 4168     		ldr	r1, [r0, #4]
 588 001a 5B02     		lsls	r3, r3, #9
 589 001c 0B40     		ands	r3, r1
 590 001e 5360     		str	r3, [r2, #4]
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 591              		.loc 1 286 0
 592 0020 FFF7FEFF 		bl	Cy_SAR_StopConvert
 593              	.LVL38:
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 594              		.loc 1 288 0
 595 0024 A822     		movs	r2, #168
 596 0026 9200     		lsls	r2, r2, #2
 597              	.L60:
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 598              		.loc 1 288 0 is_stmt 0 discriminator 1
 599 0028 A358     		ldr	r3, [r4, r2]
 600 002a 002B     		cmp	r3, #0
 601 002c FCDB     		blt	.L60
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 602              		.loc 1 295 0 is_stmt 1
 603 002e 3301     		lsls	r3, r6, #4
 604 0030 03D4     		bmi	.L59
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 605              		.loc 1 297 0
 606 0032 2368     		ldr	r3, [r4]
 607 0034 5B00     		lsls	r3, r3, #1
 608 0036 5B08     		lsrs	r3, r3, #1
 609 0038 2360     		str	r3, [r4]
 610              	.L59:
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 611              		.loc 1 301 0
 612 003a 2560     		str	r5, [r4]
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 613              		.loc 1 302 0
 614              		@ sp needed
 615              	.LVL39:
 616              	.LVL40:
 617              	.LVL41:
 618 003c 70BD     		pop	{r4, r5, r6, pc}
 619              	.L64:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 20


 620 003e C046     		.align	2
 621              	.L63:
 622 0040 00000000 		.word	.LANCHOR0
 623 0044 FFFFDFFF 		.word	-2097153
 624              		.cfi_endproc
 625              	.LFE108:
 626              		.size	Cy_SAR_DeepSleep, .-Cy_SAR_DeepSleep
 627              		.section	.text.Cy_SAR_SetConvertMode,"ax",%progbits
 628              		.align	1
 629              		.global	Cy_SAR_SetConvertMode
 630              		.code	16
 631              		.thumb_func
 632              		.type	Cy_SAR_SetConvertMode, %function
 633              	Cy_SAR_SetConvertMode:
 634              	.LFB112:
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetConvertMode
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the mode in which conversions are triggered. This function does
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * not start any conversions; it only configures the mode for subsequent conversions.
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * There are three modes:
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware only; hardware triggering is disabled
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware and edge sensitive hardware triggering
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - firmware and level sensitive hardware triggering
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Note that firmware triggering is always enabled.
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param mode
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_sample_ctrl_trigger_mode_t
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_CONVERT_MODE
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode)
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 635              		.loc 1 440 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 640              	.LVL42:
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_TRIGGER(mode));
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Clear the TRIGGER_EN and TRIGGER_LEVEL bits */
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t sampleCtrlReg = SAR_SAMPLE_CTRL(base) & ~(SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAM
 641              		.loc 1 444 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 21


 642 0000 4268     		ldr	r2, [r0, #4]
 643              	.LVL43:
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_SAMPLE_CTRL(base) = sampleCtrlReg | mode;
 644              		.loc 1 446 0
 645 0002 024B     		ldr	r3, .L66
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 646              		.loc 1 447 0
 647              		@ sp needed
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 648              		.loc 1 446 0
 649 0004 1340     		ands	r3, r2
 650              	.LVL44:
 651 0006 1943     		orrs	r1, r3
 652              	.LVL45:
 653 0008 4160     		str	r1, [r0, #4]
 654              		.loc 1 447 0
 655 000a 7047     		bx	lr
 656              	.L67:
 657              		.align	2
 658              	.L66:
 659 000c FFFFF9FF 		.word	-393217
 660              		.cfi_endproc
 661              	.LFE112:
 662              		.size	Cy_SAR_SetConvertMode, .-Cy_SAR_SetConvertMode
 663              		.section	.text.Cy_SAR_IsEndConversion,"ax",%progbits
 664              		.align	1
 665              		.global	Cy_SAR_IsEndConversion
 666              		.code	16
 667              		.thumb_func
 668              		.type	Cy_SAR_IsEndConversion, %function
 669              	Cy_SAR_IsEndConversion:
 670              	.LFB113:
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsEndConversion
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Immediately return the status of the conversion or does not return (blocking)
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * until the conversion completes, depending on the retMode parameter.
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * In blocking mode, there is a time out of about 10 seconds for a CPU speed of
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 100 MHz.
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param retMode
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * A value of the enum \ref cy_en_sar_return_mode_t
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : the last conversion is complete
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_CONVERSION_NOT_COMPLETE : the conversion has not completed
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_TIMEOUT : the watchdog timer has expired in blocking mode
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \sideeffect
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function reads the end of conversion status and clears it after.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 22


 472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_END_CONVERSION
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode)
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 671              		.loc 1 479 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675              	.LVL46:
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_RETURN(retMode));
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result;
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t endOfConversion = SAR_INTR(base) & SAR_INTR_EOS_INTR_Msk;
 676              		.loc 1 484 0
 677 0000 8422     		movs	r2, #132
 678 0002 0123     		movs	r3, #1
 679 0004 9200     		lsls	r2, r2, #2
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_RETURN(retMode));
 680              		.loc 1 479 0
 681 0006 10B5     		push	{r4, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 4, -8
 684              		.cfi_offset 14, -4
 685              		.loc 1 484 0
 686 0008 8458     		ldr	r4, [r0, r2]
 687 000a 2340     		ands	r3, r4
 688              	.LVL47:
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t wdt = 0x1555555uL; /* Watchdog timer for blocking while loop */
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(retMode)
 689              		.loc 1 487 0
 690 000c 0129     		cmp	r1, #1
 691 000e 0FD1     		bne	.L78
 692 0010 094C     		ldr	r4, .L81
 693              	.LVL48:
 694              	.L71:
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_WAIT_FOR_RESULT:
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         while((0uL == endOfConversion) && (0uL != wdt))
 695              		.loc 1 490 0
 696 0012 002B     		cmp	r3, #0
 697 0014 07D1     		bne	.L72
 698 0016 013C     		subs	r4, r4, #1
 699              	.LVL49:
 700              		.loc 1 490 0 is_stmt 0 discriminator 1
 701 0018 002C     		cmp	r4, #0
 702 001a 02D0     		beq	.L80
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             endOfConversion = SAR_INTR(base) & SAR_INTR_EOS_INTR_Msk;
 703              		.loc 1 492 0 is_stmt 1
 704 001c 8358     		ldr	r3, [r0, r2]
 705              	.LVL50:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 23


 706 001e 0B40     		ands	r3, r1
 707              	.LVL51:
 708 0020 F7E7     		b	.L71
 709              	.LVL52:
 710              	.L80:
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             wdt--;
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_RETURN_STATUS:
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Clear the EOS bit */
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (SAR_INTR_EOS_INTR_Msk == endOfConversion)
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = SAR_INTR_EOS_INTR_Msk;
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Do a dummy read after write for buffered write */
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         (void) SAR_INTR(base);
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else if (0uL == wdt)
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_TIMEOUT;
 711              		.loc 1 511 0
 712 0022 0648     		ldr	r0, .L81+4
 713              	.LVL53:
 714 0024 07E0     		b	.L79
 715              	.LVL54:
 716              	.L72:
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Do a dummy read after write for buffered write */
 717              		.loc 1 505 0
 718 0026 0123     		movs	r3, #1
 719 0028 8350     		str	r3, [r0, r2]
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 720              		.loc 1 507 0
 721 002a 8358     		ldr	r3, [r0, r2]
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_INTR(base) = SAR_INTR_EOS_INTR_Msk;
 722              		.loc 1 504 0
 723 002c 0020     		movs	r0, #0
 724              	.LVL55:
 725 002e 02E0     		b	.L79
 726              	.LVL56:
 727              	.L78:
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 728              		.loc 1 502 0
 729 0030 012B     		cmp	r3, #1
 730 0032 F8D0     		beq	.L72
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_CONVERSION_NOT_COMPLETE;
 731              		.loc 1 515 0
 732 0034 0248     		ldr	r0, .L81+8
 733              	.LVL57:
 734              	.L79:
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 24


 517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 735              		.loc 1 519 0
 736              		@ sp needed
 737 0036 10BD     		pop	{r4, pc}
 738              	.L82:
 739              		.align	2
 740              	.L81:
 741 0038 56555501 		.word	22369622
 742 003c 02000600 		.word	393218
 743 0040 03000600 		.word	393219
 744              		.cfi_endproc
 745              	.LFE113:
 746              		.size	Cy_SAR_IsEndConversion, .-Cy_SAR_IsEndConversion
 747              		.section	.text.Cy_SAR_IsChannelSingleEnded,"ax",%progbits
 748              		.align	1
 749              		.global	Cy_SAR_IsChannelSingleEnded
 750              		.code	16
 751              		.thumb_func
 752              		.type	Cy_SAR_IsChannelSingleEnded, %function
 753              	Cy_SAR_IsChannelSingleEnded:
 754              	.LFB115:
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsChannelSigned
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return true if channel result is configured for signed format, else false.
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The formats for single-ended and differential channels are independent.
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function will first check whether the channel is single-ended or differential.
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to check, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, false is returned
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_SIGNED
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan)
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool isSigned = false;
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Sign bits are stored separately for differential and single ended channels. */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 25


 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (true == Cy_SAR_IsChannelDifferential(base, chan))
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Differential channel */
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 isSigned = true;
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         else
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Single ended channel */
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk == (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 isSigned = true;
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return isSigned;
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_IsChannelSingleEnded
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return true if channel is single ended, else false
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to check, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, false is returned
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_SE
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan)
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 755              		.loc 1 595 0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 0
 758              		@ frame_needed = 0, uses_anonymous_args = 0
 759              		@ link register save eliminated.
 760              	.LVL58:
 761              		.loc 1 595 0
 762 0000 0300     		movs	r3, r0
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     bool isSingleEnded = false;
 763              		.loc 1 598 0
 764 0002 0020     		movs	r0, #0
 765              	.LVL59:
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 26


 600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 766              		.loc 1 600 0
 767 0004 0F29     		cmp	r1, #15
 768 0006 07D8     		bhi	.L84
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (0uL == (SAR_CHAN_CONFIG(base, chan) & (SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk | SAR_CHAN_C
 769              		.loc 1 602 0
 770 0008 2031     		adds	r1, r1, #32
 771              	.LVL60:
 772 000a 8900     		lsls	r1, r1, #2
 773              	.LVL61:
 774 000c C858     		ldr	r0, [r1, r3]
 775 000e 034B     		ldr	r3, .L86
 776              	.LVL62:
 777 0010 1840     		ands	r0, r3
 778 0012 4342     		rsbs	r3, r0, #0
 779 0014 5841     		adcs	r0, r0, r3
 780 0016 C0B2     		uxtb	r0, r0
 781              	.L84:
 782              	.LVL63:
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             isSingleEnded = true;
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return isSingleEnded;
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 783              		.loc 1 608 0
 784              		@ sp needed
 785 0018 7047     		bx	lr
 786              	.L87:
 787 001a C046     		.align	2
 788              	.L86:
 789 001c 00010001 		.word	16777472
 790              		.cfi_endproc
 791              	.LFE115:
 792              		.size	Cy_SAR_IsChannelSingleEnded, .-Cy_SAR_IsChannelSingleEnded
 793              		.section	.text.Cy_SAR_IsChannelSigned,"ax",%progbits
 794              		.align	1
 795              		.global	Cy_SAR_IsChannelSigned
 796              		.code	16
 797              		.thumb_func
 798              		.type	Cy_SAR_IsChannelSigned, %function
 799              	Cy_SAR_IsChannelSigned:
 800              	.LFB114:
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 801              		.loc 1 545 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              	.LVL64:
 806 0000 10B5     		push	{r4, lr}
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 4, -8
 809              		.cfi_offset 14, -4
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 810              		.loc 1 545 0
 811 0002 0400     		movs	r4, r0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 27


 812              	.LVL65:
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 813              		.loc 1 548 0
 814 0004 0020     		movs	r0, #0
 815              	.LVL66:
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 816              		.loc 1 550 0
 817 0006 0F29     		cmp	r1, #15
 818 0008 0BD8     		bhi	.L89
 819              	.LVL67:
 820              	.LBB22:
 821              	.LBB23:
 822              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\sar\\cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - selectable voltage references
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 28


  45:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 29


 102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 30


 159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 31


 216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     To allow only firmware triggering, or disable
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 32


 273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 33


 330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 34


 387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 35


 444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 36


 501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     </td>
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 37


 558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_macros
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 38


 615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 39


 672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *        Global Variables
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 40


 729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_return_mode_t;
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 41


 786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 42


 843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 43


 900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 44


 957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 45


1014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 46


1071:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 47


1128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 48


1185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 49


1242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 50


1299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 51


1356:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 52


1413:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1442:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 53


1470:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 54


1527:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR(base);
1557:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 55


1584:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1585:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1586:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
1588:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_INTR(base);
1591:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1592:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1593:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1594:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1595:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterrupt
1596:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1597:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1598:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger an interrupt with software.
1599:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1600:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1601:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1602:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1603:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1604:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts to set.
1605:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1606:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1607:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1608:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask)
1614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR_SET(base) = intrMask;
1618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterruptMask
1623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which interrupts can trigger the CPU interrupt controller.
1626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param intrMask
1631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The mask of interrupts. Select one or more values from \ref cy_en_sar_intr_mask_t
1632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * and "OR" them together.
1633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_MASK_NONE : Disable EOS, overflow, and firmware collision interrupts.
1634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 56


1641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_INTERRUPT_MASK
1643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask)
1646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_INTR_MASK(base) = intrMask;
1650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptMask
1655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger the CPU interrupt controller
1658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * as configured by \ref Cy_SAR_SetInterruptMask.
1659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Interrupt mask. Compare this value with masks in \ref cy_en_sar_intr_mask_t.
1665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_INTERRUPT_MASK
1669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base)
1672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_MASK(base);
1674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatusMasked
1679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the interrupt request and mask registers.
1682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetInterruptStatus and \ref Cy_SAR_GetInterruptMask.
1683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND of the interrupt request and mask registers
1689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base)
1692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_MASKED(base);
1694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 57


1698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatus
1699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the range interrupt register status.
1702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), range detection is not enabled for the
1704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel (\ref Cy_SAR_SetRangeInterruptMask), or range detection was not
1705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * triggered for the channel.
1706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The range interrupt status for all channels. Bit 0 is for channel 0, etc.
1712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RANGE_INTERRUPT_STATUS
1716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base)
1719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR(base);
1721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearRangeInterrupt
1726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the range interrupt for the specified channel mask.
1729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that
1730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * the hardware can set subset interrupts and those interrupts can
1731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * be forwarded to the interrupt controller, if enabled.
1732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetRangeInterruptStatus.
1739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR(base) = chanMask;
1748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_RANGE_INTR(base);
1751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 58


1755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterrupt
1756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger a range interrupt with software for the specific channel mask.
1759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask)
1770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR_SET(base) = chanMask;
1774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeInterruptMask
1779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which channels can trigger a range interrupt.
1782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_INTERRUPT_MASK
1794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask)
1797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_RANGE_INTR_MASK(base) = chanMask;
1801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptMask
1806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger a range interrupt as configured by
1809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \ref Cy_SAR_SetRangeInterruptMask.
1810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 59


1812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The range interrupt mask
1816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base)
1819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR_MASK(base);
1821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetRangeInterruptStatusMasked
1826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the range interrupt request and mask registers.
1829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetRangeInterruptStatus and \ref Cy_SAR_GetRangeInterruptMask.
1830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND between of range interrupt request and mask
1836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base)
1839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_RANGE_INTR_MASKED(base);
1841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatus
1846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the saturate interrupt register status.
1849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * If the status bit is low for a channel, the channel may not be enabled
1850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * (\ref Cy_SAR_SetChanMask), saturation detection is not enabled for the
1851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * channel (\ref Cy_SAR_SetSatInterruptMask), or saturation detection was not
1852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * triggered for the channel.
1853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The saturate interrupt status for all channels. Bit 0 is for channel 0, etc.
1859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_STATUS
1863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base)
1866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR(base);
1868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 60


1869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_ClearSatInterrupt
1873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Clear the saturate interrupt for the specified channel mask.
1876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * to the interrupt controller, if enabled.
1879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Typically, this is the value returned from \ref Cy_SAR_GetSatInterruptStatus.
1886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask)
1891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR(base) = chanMask;
1895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     (void) SAR_SATURATE_INTR(base);
1898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterrupt
1903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Trigger a saturate interrupt with software for the specific channel mask.
1906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask)
1917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR_SET(base) = chanMask;
1921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_SetSatInterruptMask
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 61


1926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Enable which channels can trigger a saturate interrupt.
1929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chanMask
1934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel mask. Bit 0 is for channel 0, etc.
1935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return None
1937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
1939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_SAT_INTERRUPT_MASK
1941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask)
1944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(chanMask));
1946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     SAR_SATURATE_INTR_MASK(base) = chanMask;
1948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptMask
1953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return which interrupts can trigger a saturate interrupt as configured
1956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * by \ref Cy_SAR_SetSatInterruptMask.
1957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The saturate interrupt mask. Bit 0 is for channel 0, etc.
1963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base)
1966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASK(base);
1968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetSatInterruptStatusMasked
1972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the bitwise AND between the saturate interrupt request and mask registers.
1975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * See \ref Cy_SAR_GetSatInterruptStatus and \ref Cy_SAR_GetSatInterruptMask.
1976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
1978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
1979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
1981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Bitwise AND of the saturate interrupt request and mask
1982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 62


1983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
1984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base)
1985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
1986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_SATURATE_INTR_MASKED(base);
1987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
1988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
1990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
1991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptCause
1992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
1993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
1994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return the cause of the interrupt.
1995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The interrupt routine can be called due to one of the following events:
1996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - End of scan (EOS)
1997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Overflow
1998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Firmware collision
1999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Saturation detected on one or more channels
2000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - Range detected on one or more channels
2001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
2003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
2004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
2006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Mask of what caused the interrupt. Compare this value with one of these masks:
2007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_EOS_MASKED_MIR_Msk : EOS caused the interrupt
2008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_OVERFLOW_MASKED_MIR_Msk : Overflow caused the interrupt
2009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_FW_COLLISION_MASKED_MIR_Msk : Firmware collision cause the interrupt
2010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_SATURATE_MASKED_RED_Msk : Saturation detection on one or more channels caused 
2011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *   - SAR_INTR_CAUSE_RANGE_MASKED_RED_Msk : Range detection on one or more channels caused the inte
2012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
2014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base)
2015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
2016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return SAR_INTR_CAUSE(base);
2017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** }
2018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \} */
2019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
2021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \{
2022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** */
2023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** 
2025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** /*******************************************************************************
2026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Function Name: Cy_SAR_IsChannelDifferential
2027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** ****************************************************************************//**
2028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Return true of channel is differential, else false.
2030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param base
2032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * Pointer to structure describing registers
2033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \param chan
2035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * The channel to check, starting at 0.
2036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \return
2038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * A false is return if chan is invalid.
2039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 63


2040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \funcusage
2041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_IS_CHANNEL_DIFF
2043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *
2044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** *******************************************************************************/
2045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan)
2046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h **** {
2047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.h ****     return !Cy_SAR_IsChannelSingleEnded(base, chan);
 823              		.loc 2 2047 0
 824 000a 2000     		movs	r0, r4
 825 000c FFF7FEFF 		bl	Cy_SAR_IsChannelSingleEnded
 826              	.LVL68:
 827 0010 0123     		movs	r3, #1
 828              	.LBE23:
 829              	.LBE22:
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* Differential channel */
 830              		.loc 1 554 0
 831 0012 0028     		cmp	r0, #0
 832 0014 02D1     		bne	.L90
 833              	.LVL69:
 834              	.LBB24:
 835              	.LBB25:
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 836              		.loc 1 556 0
 837 0016 6068     		ldr	r0, [r4, #4]
 838 0018 C008     		lsrs	r0, r0, #3
 839 001a 01E0     		b	.L92
 840              	.LVL70:
 841              	.L90:
 842              	.LBE25:
 843              	.LBE24:
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
 844              		.loc 1 563 0
 845 001c 6068     		ldr	r0, [r4, #4]
 846 001e 8008     		lsrs	r0, r0, #2
 847              	.L92:
 848 0020 1840     		ands	r0, r3
 849              	.L89:
 850              	.LVL71:
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 851              		.loc 1 571 0
 852              		@ sp needed
 853              	.LVL72:
 854 0022 10BD     		pop	{r4, pc}
 855              		.cfi_endproc
 856              	.LFE114:
 857              		.size	Cy_SAR_IsChannelSigned, .-Cy_SAR_IsChannelSigned
 858              		.section	.text.Cy_SAR_GetResult16,"ax",%progbits
 859              		.align	1
 860              		.global	Cy_SAR_GetResult16
 861              		.code	16
 862              		.thumb_func
 863              		.type	Cy_SAR_GetResult16, %function
 864              	Cy_SAR_GetResult16:
 865              	.LFB116:
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 64


 611:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetResult16
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the data available in the channel result data register as a signed
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 16-bit integer.
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to read the result from, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Data is returned as a signed 16-bit integer.
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, 0 is returned.
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RESULT16
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan)
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 866              		.loc 1 634 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 870              		@ link register save eliminated.
 871              	.LVL73:
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t adcResult = 0uL;
 872              		.loc 1 637 0
 873 0000 0023     		movs	r3, #0
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 874              		.loc 1 639 0
 875 0002 0F29     		cmp	r1, #15
 876 0004 03D8     		bhi	.L94
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult = SAR_CHAN_RESULT(base, chan) & SAR_CHAN_RESULT_RESULT_Msk;
 877              		.loc 1 641 0
 878 0006 6031     		adds	r1, r1, #96
 879              	.LVL74:
 880 0008 8900     		lsls	r1, r1, #2
 881              	.LVL75:
 882 000a 0B58     		ldr	r3, [r1, r0]
 883 000c 9BB2     		uxth	r3, r3
 884              	.LVL76:
 885              	.L94:
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int16_t) adcResult;
 886              		.loc 1 644 0
 887 000e 18B2     		sxth	r0, r3
 888              	.LVL77:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 65


 645:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 889              		.loc 1 645 0
 890              		@ sp needed
 891 0010 7047     		bx	lr
 892              		.cfi_endproc
 893              	.LFE116:
 894              		.size	Cy_SAR_GetResult16, .-Cy_SAR_GetResult16
 895              		.section	.text.Cy_SAR_GetResult32,"ax",%progbits
 896              		.align	1
 897              		.global	Cy_SAR_GetResult32
 898              		.code	16
 899              		.thumb_func
 900              		.type	Cy_SAR_GetResult32, %function
 901              	Cy_SAR_GetResult32:
 902              	.LFB117:
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetResult32
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the data available in the channel result data register as a signed
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * 32-bit integer.
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel to read the result from, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Data is returned as a signed 32-bit integer.
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, 0 is returned.
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_RESULT32
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan)
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 903              		.loc 1 671 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907              	.LVL78:
 908 0000 10B5     		push	{r4, lr}
 909              		.cfi_def_cfa_offset 8
 910              		.cfi_offset 4, -8
 911              		.cfi_offset 14, -4
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t adcResult = 0uL;
 912              		.loc 1 674 0
 913 0002 0024     		movs	r4, #0
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int16_t adcResult16;
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t finalResult;
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 66


 677:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 914              		.loc 1 678 0
 915 0004 0F29     		cmp	r1, #15
 916 0006 04D8     		bhi	.L97
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult = SAR_CHAN_RESULT(base, chan) & SAR_CHAN_RESULT_RESULT_Msk;
 917              		.loc 1 680 0
 918 0008 0B00     		movs	r3, r1
 919 000a 6033     		adds	r3, r3, #96
 920 000c 9B00     		lsls	r3, r3, #2
 921 000e 1C58     		ldr	r4, [r3, r0]
 922 0010 A4B2     		uxth	r4, r4
 923              	.LVL79:
 924              	.L97:
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (true == Cy_SAR_IsChannelSigned(base, chan))
 925              		.loc 1 683 0
 926 0012 FFF7FEFF 		bl	Cy_SAR_IsChannelSigned
 927              	.LVL80:
 928 0016 0300     		movs	r3, r0
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcResult16 = (int16_t) adcResult;
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         finalResult = (int32_t) adcResult16;
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         finalResult = (int32_t) adcResult;
 929              		.loc 1 690 0
 930 0018 2000     		movs	r0, r4
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 931              		.loc 1 683 0
 932 001a 002B     		cmp	r3, #0
 933 001c 00D0     		beq	.L99
 934              	.LVL81:
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 935              		.loc 1 686 0
 936 001e 20B2     		sxth	r0, r4
 937              	.LVL82:
 938              	.L99:
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return finalResult;
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 939              		.loc 1 694 0
 940              		@ sp needed
 941 0020 10BD     		pop	{r4, pc}
 942              		.cfi_endproc
 943              	.LFE117:
 944              		.size	Cy_SAR_GetResult32, .-Cy_SAR_GetResult32
 945              		.section	.text.Cy_SAR_SetLowLimit,"ax",%progbits
 946              		.align	1
 947              		.global	Cy_SAR_SetLowLimit
 948              		.code	16
 949              		.thumb_func
 950              		.type	Cy_SAR_SetLowLimit, %function
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 67


 951              	Cy_SAR_SetLowLimit:
 952              	.LFB118:
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetLowLimit
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the low threshold for range detection. The values are interpreted
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * as signed or unsigned according to the channel configuration. Range
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * detection is done on the value stored in the result register. That is, after
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging, shifting sign extension, and left/right alignment.
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param lowLimit
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The low threshold for range detection
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_LOWHIGH_LIMIT
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit)
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 953              		.loc 1 720 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              		@ link register save eliminated.
 958              	.LVL83:
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_RANGE_LIMIT(lowLimit));
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t rangeThresReg;
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     /* Preserve the RANGE_HIGH field value when changing the RANGE_LOW field value */
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg = SAR_RANGE_THRES(base) & ~SAR_RANGE_THRES_RANGE_LOW_Msk;
 959              		.loc 1 726 0
 960 0000 8369     		ldr	r3, [r0, #24]
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg |= lowLimit  & SAR_RANGE_THRES_RANGE_LOW_Msk;
 961              		.loc 1 727 0
 962 0002 89B2     		uxth	r1, r1
 963              	.LVL84:
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg |= lowLimit  & SAR_RANGE_THRES_RANGE_LOW_Msk;
 964              		.loc 1 726 0
 965 0004 1B0C     		lsrs	r3, r3, #16
 966 0006 1B04     		lsls	r3, r3, #16
 967              	.LVL85:
 968              		.loc 1 727 0
 969 0008 1943     		orrs	r1, r3
 970              	.LVL86:
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_RANGE_THRES(base) = rangeThresReg;
 971              		.loc 1 728 0
 972 000a 8161     		str	r1, [r0, #24]
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 68


 729:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 973              		.loc 1 729 0
 974              		@ sp needed
 975 000c 7047     		bx	lr
 976              		.cfi_endproc
 977              	.LFE118:
 978              		.size	Cy_SAR_SetLowLimit, .-Cy_SAR_SetLowLimit
 979              		.section	.text.Cy_SAR_SetHighLimit,"ax",%progbits
 980              		.align	1
 981              		.global	Cy_SAR_SetHighLimit
 982              		.code	16
 983              		.thumb_func
 984              		.type	Cy_SAR_SetHighLimit, %function
 985              	Cy_SAR_SetHighLimit:
 986              	.LFB119:
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetHighLimit
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Set the high threshold for range detection. The values are interpreted
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * as signed or unsigned according to the channel configuration. Range
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * detection is done on the value stored in the result register. That is, after
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging, shifting sign extension, and left/right alignment.
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param highLimit
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The high threshold for range detection
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_LOWHIGH_LIMIT
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit)
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 987              		.loc 1 755 0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 992              	.LVL87:
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_RANGE_LIMIT(highLimit));
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t rangeThresReg;
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg = SAR_RANGE_THRES(base) & ~SAR_RANGE_THRES_RANGE_HIGH_Msk;
 993              		.loc 1 760 0
 994 0000 8369     		ldr	r3, [r0, #24]
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg |= (highLimit << SAR_RANGE_THRES_RANGE_HIGH_Pos) & SAR_RANGE_THRES_RANGE_HIGH_Msk
 995              		.loc 1 761 0
 996 0002 0904     		lsls	r1, r1, #16
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 69


 997              	.LVL88:
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     rangeThresReg |= (highLimit << SAR_RANGE_THRES_RANGE_HIGH_Pos) & SAR_RANGE_THRES_RANGE_HIGH_Msk
 998              		.loc 1 760 0
 999 0004 9BB2     		uxth	r3, r3
 1000              	.LVL89:
 1001              		.loc 1 761 0
 1002 0006 1943     		orrs	r1, r3
 1003              	.LVL90:
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     SAR_RANGE_THRES(base) = rangeThresReg;
 1004              		.loc 1 762 0
 1005 0008 8161     		str	r1, [r0, #24]
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1006              		.loc 1 763 0
 1007              		@ sp needed
 1008 000a 7047     		bx	lr
 1009              		.cfi_endproc
 1010              	.LFE119:
 1011              		.size	Cy_SAR_SetHighLimit, .-Cy_SAR_SetHighLimit
 1012              		.section	.text.Cy_SAR_SetOffset,"ax",%progbits
 1013              		.align	1
 1014              		.global	Cy_SAR_SetOffset
 1015              		.code	16
 1016              		.thumb_func
 1017              		.type	Cy_SAR_SetOffset, %function
 1018              	Cy_SAR_SetOffset:
 1019              	.LFB120:
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetOffset
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Override the channel offset stored in the \ref Cy_SAR_offset array
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * for the voltage conversion functions.
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Offset is applied to counts before unit scaling and gain.
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref Cy_SAR_CountsTo_Volts for more about this formula.
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * To change channel 0's offset based on a known V_offset_mV, use:
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Cy_SAR_SetOffset(0uL, -1 * V_offset_mV * (1uL << Resolution) / (2 * V_ref_mV));
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1.
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param offset
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The count value measured when the inputs are shorted or
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * connected to the same input voltage.
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : offset was set successfully
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : channel number is equal to or greater than \ref CY_SAR_MAX_NUM_CHANNELS
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset)
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1020              		.loc 1 793 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 70


 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 0
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 1024              		@ link register save eliminated.
 1025              	.LVL91:
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result = CY_SAR_BAD_PARAM;
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1026              		.loc 1 798 0
 1027 0000 0F28     		cmp	r0, #15
 1028 0002 04D8     		bhi	.L106
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_offset[chan] = offset;
 1029              		.loc 1 800 0
 1030 0004 034B     		ldr	r3, .L107
 1031 0006 4000     		lsls	r0, r0, #1
 1032              	.LVL92:
 1033 0008 C152     		strh	r1, [r0, r3]
 1034              	.LVL93:
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 1035              		.loc 1 801 0
 1036 000a 0020     		movs	r0, #0
 1037 000c 00E0     		b	.L105
 1038              	.LVL94:
 1039              	.L106:
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 1040              		.loc 1 796 0
 1041 000e 0248     		ldr	r0, .L107+4
 1042              	.LVL95:
 1043              	.L105:
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1044              		.loc 1 805 0
 1045              		@ sp needed
 1046 0010 7047     		bx	lr
 1047              	.L108:
 1048 0012 C046     		.align	2
 1049              	.L107:
 1050 0014 00000000 		.word	Cy_SAR_offset
 1051 0018 01000600 		.word	393217
 1052              		.cfi_endproc
 1053              	.LFE120:
 1054              		.size	Cy_SAR_SetOffset, .-Cy_SAR_SetOffset
 1055              		.section	.text.Cy_SAR_SetGain,"ax",%progbits
 1056              		.align	1
 1057              		.global	Cy_SAR_SetGain
 1058              		.code	16
 1059              		.thumb_func
 1060              		.type	Cy_SAR_SetGain, %function
 1061              	Cy_SAR_SetGain:
 1062              	.LFB121:
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 71


 808:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetGain
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Override the gain stored in the \ref Cy_SAR_countsPer10Volt array for the voltage conversion func
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The gain is configured at initialization in \ref Cy_SAR_Init
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * based on the SARADC resolution and voltage reference.
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Gain is applied after offset and unit scaling.
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref Cy_SAR_CountsTo_Volts for more about this formula.
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * To change channel 0's gain based on a known V_ref_mV, use:
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Cy_SAR_SetGain(0uL, 10000 * (1uL << Resolution) / (2 * V_ref_mV));
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1.
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcGain
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The gain in counts per 10 volt.
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_SUCCESS : gain was set successfully
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - \ref CY_SAR_BAD_PARAM : channel number is equal to or greater than \ref CY_SAR_MAX_NUM_CHANNELS
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain)
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1063              		.loc 1 835 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 1067              		@ link register save eliminated.
 1068              	.LVL96:
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_sar_status_t result = CY_SAR_BAD_PARAM;
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1069              		.loc 1 840 0
 1070 0000 0F28     		cmp	r0, #15
 1071 0002 04D8     		bhi	.L111
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_countsPer10Volt[chan] = adcGain;
 1072              		.loc 1 842 0
 1073 0004 034B     		ldr	r3, .L112
 1074 0006 8000     		lsls	r0, r0, #2
 1075              	.LVL97:
 1076 0008 C150     		str	r1, [r0, r3]
 1077              	.LVL98:
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         result = CY_SAR_SUCCESS;
 1078              		.loc 1 843 0
 1079 000a 0020     		movs	r0, #0
 1080 000c 00E0     		b	.L110
 1081              	.LVL99:
 1082              	.L111:
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 72


 1083              		.loc 1 838 0
 1084 000e 0248     		ldr	r0, .L112+4
 1085              	.LVL100:
 1086              	.L110:
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result;
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1087              		.loc 1 847 0
 1088              		@ sp needed
 1089 0010 7047     		bx	lr
 1090              	.L113:
 1091 0012 C046     		.align	2
 1092              	.L112:
 1093 0014 00000000 		.word	Cy_SAR_countsPer10Volt
 1094 0018 01000600 		.word	393217
 1095              		.cfi_endproc
 1096              	.LFE121:
 1097              		.size	Cy_SAR_SetGain, .-Cy_SAR_SetGain
 1098              		.global	__aeabi_uidiv
 1099              		.section	.text.Cy_SAR_RawCounts2Counts,"ax",%progbits
 1100              		.align	1
 1101              		.global	Cy_SAR_RawCounts2Counts
 1102              		.code	16
 1103              		.thumb_func
 1104              		.type	Cy_SAR_RawCounts2Counts, %function
 1105              	Cy_SAR_RawCounts2Counts:
 1106              	.LFB122:
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_RawCounts2Counts
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the channel result to a consistent result after accounting for
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * averaging and subtracting the offset.
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     Counts = (RawCounts/AvgDivider - Offset)
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 73


 877:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * adcCounts after averaging and offset adjustments.
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If channel number is invalid, adcCounts is returned unmodified.
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This function is used by \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and \ref Cy_SAR_CountsTo_uVolts. Calling this function directly is usually
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * not needed.
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1107              		.loc 1 890 0
 1108              		.cfi_startproc
 1109              		@ args = 0, pretend = 0, frame = 0
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
 1111              	.LVL101:
 1112 0000 70B5     		push	{r4, r5, r6, lr}
 1113              		.cfi_def_cfa_offset 16
 1114              		.cfi_offset 4, -16
 1115              		.cfi_offset 5, -12
 1116              		.cfi_offset 6, -8
 1117              		.cfi_offset 14, -4
 1118              		.loc 1 890 0
 1119 0002 0D00     		movs	r5, r1
 1120 0004 1400     		movs	r4, r2
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t temp;
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     uint32_t averageAdcSamplesDiv;
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1121              		.loc 1 896 0
 1122 0006 0F29     		cmp	r1, #15
 1123 0008 28D8     		bhi	.L115
 1124              	.LVL102:
 1125              	.LBB28:
 1126              	.LBB29:
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_AVG_SHIFT_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_SHIFT_Msk
 1127              		.loc 1 900 0
 1128 000a 4368     		ldr	r3, [r0, #4]
 1129 000c 1B06     		lsls	r3, r3, #24
 1130 000e 20D4     		bmi	.L116
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         { /* If Average mode != fixed */
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (SAR_CHAN_CONFIG_AVG_EN_Msk == (SAR_CHAN_CONFIG(base, chan) & SAR_CHAN_CONFIG_AVG_EN
 1131              		.loc 1 903 0
 1132 0010 0B00     		movs	r3, r1
 1133 0012 2033     		adds	r3, r3, #32
 1134 0014 9B00     		lsls	r3, r3, #2
 1135 0016 1B58     		ldr	r3, [r3, r0]
 1136 0018 5B05     		lsls	r3, r3, #21
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 74


 1137 001a 1AD5     		bpl	.L116
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             { /* If channel uses averaging */
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* Divide by 2^(AVG_CNT + 1) */
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 averageAdcSamplesDiv = (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_CNT_Msk) >> SAR
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 1138              		.loc 1 908 0
 1139 001c 0126     		movs	r6, #1
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 1140              		.loc 1 907 0
 1141 001e 4368     		ldr	r3, [r0, #4]
 1142              	.LVL103:
 1143              		.loc 1 908 0
 1144 0020 5B06     		lsls	r3, r3, #25
 1145              	.LVL104:
 1146 0022 5B0F     		lsrs	r3, r3, #29
 1147 0024 0133     		adds	r3, r3, #1
 1148 0026 9E40     		lsls	r6, r6, r3
 1149              	.LVL105:
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* If averaging mode is ACCUNDUMP (channel will be sampled back to back and average
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 * divider limit is 16 */
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 if (SAR_SAMPLE_CTRL_AVG_MODE_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_AVG_MO
 1150              		.loc 1 912 0
 1151 0028 4368     		ldr	r3, [r0, #4]
 1152 002a DB05     		lsls	r3, r3, #23
 1153 002c 02D4     		bmi	.L117
 1154 002e 102E     		cmp	r6, #16
 1155 0030 00D9     		bls	.L117
 1156 0032 1026     		movs	r6, #16
 1157              	.LVL106:
 1158              	.L117:
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     if (averageAdcSamplesDiv > 16uL)
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     {
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                         averageAdcSamplesDiv = 16uL;
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     }
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 /* If unsigned format, prevent sign extension */
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 if (false == Cy_SAR_IsChannelSigned(base, chan))
 1159              		.loc 1 921 0
 1160 0034 2900     		movs	r1, r5
 1161              	.LVL107:
 1162 0036 FFF7FEFF 		bl	Cy_SAR_IsChannelSigned
 1163              	.LVL108:
 1164 003a 0028     		cmp	r0, #0
 1165 003c 04D1     		bne	.L119
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 1166              		.loc 1 923 0
 1167 003e A0B2     		uxth	r0, r4
 1168 0040 3100     		movs	r1, r6
 1169 0042 FFF7FEFF 		bl	__aeabi_uidiv
 1170              	.LVL109:
 1171 0046 03E0     		b	.L123
 1172              	.LVL110:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 75


 1173              	.L119:
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     adcCounts = (int16_t) temp;
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 else
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 {
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                     adcCounts /= (int16_t) averageAdcSamplesDiv;
 1174              		.loc 1 928 0
 1175 0048 3100     		movs	r1, r6
 1176 004a 2000     		movs	r0, r4
 1177 004c FFF7FEFF 		bl	__aeabi_idiv
 1178              	.LVL111:
 1179              	.L123:
 1180 0050 04B2     		sxth	r4, r0
 1181              	.LVL112:
 1182              	.L116:
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 }
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Subtract ADC offset */
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         adcCounts -= Cy_SAR_offset[chan];
 1183              		.loc 1 934 0
 1184 0052 034B     		ldr	r3, .L124
 1185 0054 6D00     		lsls	r5, r5, #1
 1186              	.LVL113:
 1187 0056 E85A     		ldrh	r0, [r5, r3]
 1188 0058 241A     		subs	r4, r4, r0
 1189              	.LVL114:
 1190 005a 24B2     		sxth	r4, r4
 1191              	.LVL115:
 1192              	.L115:
 1193              	.LBE29:
 1194              	.LBE28:
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return adcCounts;
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1195              		.loc 1 938 0
 1196 005c 2000     		movs	r0, r4
 1197              		@ sp needed
 1198              	.LVL116:
 1199 005e 70BD     		pop	{r4, r5, r6, pc}
 1200              	.L125:
 1201              		.align	2
 1202              	.L124:
 1203 0060 00000000 		.word	Cy_SAR_offset
 1204              		.cfi_endproc
 1205              	.LFE122:
 1206              		.size	Cy_SAR_RawCounts2Counts, .-Cy_SAR_RawCounts2Counts
 1207              		.global	__aeabi_i2f
 1208              		.global	__aeabi_fmul
 1209              		.global	__aeabi_fdiv
 1210              		.section	.text.Cy_SAR_CountsTo_Volts,"ax",%progbits
 1211              		.align	1
 1212              		.global	Cy_SAR_CountsTo_Volts
 1213              		.code	16
 1214              		.thumb_func
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 76


 1215              		.type	Cy_SAR_CountsTo_Volts, %function
 1216              	Cy_SAR_CountsTo_Volts:
 1217              	.LFB123:
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_Volts
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to Volts as a float32. For example, if the ADC
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 0.534.
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in Volts.
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is invalid, 0 is returned.
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_VOLTS
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1218              		.loc 1 987 0
 1219              		.cfi_startproc
 1220              		@ args = 0, pretend = 0, frame = 0
 1221              		@ frame_needed = 0, uses_anonymous_args = 0
 1222              	.LVL117:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 77


 1223 0000 70B5     		push	{r4, r5, r6, lr}
 1224              		.cfi_def_cfa_offset 16
 1225              		.cfi_offset 4, -16
 1226              		.cfi_offset 5, -12
 1227              		.cfi_offset 6, -8
 1228              		.cfi_offset 14, -4
 1229              		.loc 1 987 0
 1230 0002 0C00     		movs	r4, r1
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     float32_t result_Volts = 0.0f;
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1231              		.loc 1 992 0
 1232 0004 0F29     		cmp	r1, #15
 1233 0006 14D8     		bhi	.L129
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 1234              		.loc 1 994 0
 1235 0008 4368     		ldr	r3, [r0, #4]
 1236 000a 9B07     		lsls	r3, r3, #30
 1237 000c 11D4     		bmi	.L129
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 1238              		.loc 1 996 0
 1239 000e FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 1240              	.LVL118:
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts = (float32_t)adcCounts * CY_SAR_10V_COUNTS;
 1241              		.loc 1 998 0
 1242 0012 FFF7FEFF 		bl	__aeabi_i2f
 1243              	.LVL119:
 1244 0016 0849     		ldr	r1, .L130
 1245 0018 FFF7FEFF 		bl	__aeabi_fmul
 1246              	.LVL120:
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts /= (float32_t)Cy_SAR_countsPer10Volt[chan];
 1247              		.loc 1 999 0
 1248 001c 074B     		ldr	r3, .L130+4
 1249 001e A400     		lsls	r4, r4, #2
 1250              	.LVL121:
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_Volts /= (float32_t)Cy_SAR_countsPer10Volt[chan];
 1251              		.loc 1 998 0
 1252 0020 051C     		adds	r5, r0, #0
 1253              	.LVL122:
 1254              		.loc 1 999 0
 1255 0022 E058     		ldr	r0, [r4, r3]
 1256              	.LVL123:
 1257 0024 FFF7FEFF 		bl	__aeabi_i2f
 1258              	.LVL124:
 1259 0028 011C     		adds	r1, r0, #0
 1260 002a 281C     		adds	r0, r5, #0
 1261 002c FFF7FEFF 		bl	__aeabi_fdiv
 1262              	.LVL125:
 1263 0030 00E0     		b	.L127
 1264              	.LVL126:
 1265              	.L129:
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 78


 1266              		.loc 1 990 0
 1267 0032 0020     		movs	r0, #0
 1268              	.LVL127:
 1269              	.L127:
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return result_Volts;
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1270              		.loc 1 1004 0
 1271              		@ sp needed
 1272 0034 70BD     		pop	{r4, r5, r6, pc}
 1273              	.L131:
 1274 0036 C046     		.align	2
 1275              	.L130:
 1276 0038 00002041 		.word	1092616192
 1277 003c 00000000 		.word	Cy_SAR_countsPer10Volt
 1278              		.cfi_endproc
 1279              	.LFE123:
 1280              		.size	Cy_SAR_CountsTo_Volts, .-Cy_SAR_CountsTo_Volts
 1281              		.section	.text.Cy_SAR_CountsTo_mVolts,"ax",%progbits
 1282              		.align	1
 1283              		.global	Cy_SAR_CountsTo_mVolts
 1284              		.code	16
 1285              		.thumb_func
 1286              		.type	Cy_SAR_CountsTo_mVolts, %function
 1287              	Cy_SAR_CountsTo_mVolts:
 1288              	.LFB124:
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_mVolts
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to millivolts as an int16. For example, if the ADC
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 534.
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     mV = V * 1000
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 79


1034:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in millivolts.
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is invalid, 0 is returned.
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_MVOLTS
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1289              		.loc 1 1054 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 0
 1292              		@ frame_needed = 0, uses_anonymous_args = 0
 1293              	.LVL128:
 1294 0000 70B5     		push	{r4, r5, r6, lr}
 1295              		.cfi_def_cfa_offset 16
 1296              		.cfi_offset 4, -16
 1297              		.cfi_offset 5, -12
 1298              		.cfi_offset 6, -8
 1299              		.cfi_offset 14, -4
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int32_t result_mVolts = 0;
 1300              		.loc 1 1057 0
 1301 0002 0023     		movs	r3, #0
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1302              		.loc 1 1054 0
 1303 0004 0E00     		movs	r6, r1
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1304              		.loc 1 1059 0
 1305 0006 0F29     		cmp	r1, #15
 1306 0008 1AD8     		bhi	.L133
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 1307              		.loc 1 1061 0
 1308 000a 4168     		ldr	r1, [r0, #4]
 1309              	.LVL129:
 1310 000c 8907     		lsls	r1, r1, #30
 1311 000e 17D4     		bmi	.L133
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 1312              		.loc 1 1063 0
 1313 0010 3100     		movs	r1, r6
 1314 0012 FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 80


 1315              	.LVL130:
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_mVolts = ((int32_t)adcCounts * CY_SAR_10MV_COUNTS);
 1316              		.loc 1 1065 0
 1317 0016 0B4D     		ldr	r5, .L138
 1318 0018 0B4C     		ldr	r4, .L138+4
 1319 001a 4543     		muls	r5, r0
 1320              	.LVL131:
 1321 001c B100     		lsls	r1, r6, #2
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             if (adcCounts > 0)
 1322              		.loc 1 1066 0
 1323 001e 0028     		cmp	r0, #0
 1324 0020 05DD     		ble	.L134
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 result_mVolts += Cy_SAR_countsPer10Volt[chan] / 2;
 1325              		.loc 1 1068 0
 1326 0022 6258     		ldr	r2, [r4, r1]
 1327 0024 D30F     		lsrs	r3, r2, #31
 1328 0026 9A18     		adds	r2, r3, r2
 1329 0028 5210     		asrs	r2, r2, #1
 1330 002a 5019     		adds	r0, r2, r5
 1331              	.LVL132:
 1332 002c 04E0     		b	.L135
 1333              	.LVL133:
 1334              	.L134:
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             else
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             {
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****                 result_mVolts -= Cy_SAR_countsPer10Volt[chan] / 2;
 1335              		.loc 1 1072 0
 1336 002e 6358     		ldr	r3, [r4, r1]
 1337 0030 D80F     		lsrs	r0, r3, #31
 1338              	.LVL134:
 1339 0032 C318     		adds	r3, r0, r3
 1340 0034 5B10     		asrs	r3, r3, #1
 1341 0036 E81A     		subs	r0, r5, r3
 1342              	.LVL135:
 1343              	.L135:
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             }
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_mVolts /= Cy_SAR_countsPer10Volt[chan];
 1344              		.loc 1 1074 0
 1345 0038 6158     		ldr	r1, [r4, r1]
 1346 003a FFF7FEFF 		bl	__aeabi_idiv
 1347              	.LVL136:
 1348 003e 0300     		movs	r3, r0
 1349              	.LVL137:
 1350              	.L133:
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int16_t) result_mVolts;
 1351              		.loc 1 1078 0
 1352 0040 18B2     		sxth	r0, r3
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1353              		.loc 1 1079 0
 1354              		@ sp needed
 1355              	.LVL138:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 81


 1356 0042 70BD     		pop	{r4, r5, r6, pc}
 1357              	.L139:
 1358              		.align	2
 1359              	.L138:
 1360 0044 10270000 		.word	10000
 1361 0048 00000000 		.word	Cy_SAR_countsPer10Volt
 1362              		.cfi_endproc
 1363              	.LFE124:
 1364              		.size	Cy_SAR_CountsTo_mVolts, .-Cy_SAR_CountsTo_mVolts
 1365              		.global	__aeabi_lmul
 1366              		.global	__aeabi_ldivmod
 1367              		.section	.text.Cy_SAR_CountsTo_uVolts,"ax",%progbits
 1368              		.align	1
 1369              		.global	Cy_SAR_CountsTo_uVolts
 1370              		.code	16
 1371              		.thumb_func
 1372              		.type	Cy_SAR_CountsTo_uVolts, %function
 1373              	Cy_SAR_CountsTo_uVolts:
 1374              	.LFB125:
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_CountsTo_uVolts
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Convert the ADC output to microvolts as a int32. For example, if the ADC
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * measured 0.534 volts, the return value would be 534000.
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The calculation of voltage depends on the contents of \ref Cy_SAR_offset,
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \ref Cy_SAR_countsPer10Volt, and other parameters.
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The equation used is:
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     V = (RawCounts/AvgDivider - Offset)*TEN_VOLT/Gain
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *     uV = V * 1000000
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * where,
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - RawCounts: Raw counts from SAR 16-bit CHAN_RESULT register
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - AvgDivider: divider based on averaging mode (\ref cy_en_sar_sample_ctrl_avg_mode_t) and number 
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   (\ref cy_en_sar_sample_ctrl_avg_cnt_t)
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM : AvgDivider is the number of samples averaged or 16, w
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_SEQUENTIAL_FIXED : AvgDivider is 1
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *   - \ref CY_SAR_AVG_MODE_INTERLEAVED : AvgDivider is the number of samples averaged
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Offset: Value from \ref Cy_SAR_offset
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - TEN_VOLT: 10 V constant since the gain is in counts per 10 volts.
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - Gain: Value from \ref Cy_SAR_countsPer10Volt
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \note
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * This funtion is only valid when result alignment is right aligned.
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param chan
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The channel number, between 0 and \ref CY_SAR_MAX_NUM_CHANNELS - 1
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param adcCounts
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Conversion result from \ref Cy_SAR_GetResult16
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 82


1118:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Result in microvolts.
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel number is valid, 0 is returned.
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * - If channel is left aligned, 0 is returned.
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_COUNTSTO_UVOLTS
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts)
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1375              		.loc 1 1129 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379              	.LVL139:
 1380 0000 10B5     		push	{r4, lr}
 1381              		.cfi_def_cfa_offset 8
 1382              		.cfi_offset 4, -8
 1383              		.cfi_offset 14, -4
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     int64_t result_uVolts = 0;
 1384              		.loc 1 1132 0
 1385 0002 0023     		movs	r3, #0
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_CHANNUM(chan));
 1386              		.loc 1 1129 0
 1387 0004 0C00     		movs	r4, r1
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (chan < CY_SAR_MAX_NUM_CHANNELS)
 1388              		.loc 1 1134 0
 1389 0006 0F29     		cmp	r1, #15
 1390 0008 11D8     		bhi	.L141
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         if (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk != (SAR_SAMPLE_CTRL(base) & SAR_SAMPLE_CTRL_LEFT_ALIGN_M
 1391              		.loc 1 1136 0
 1392 000a 4168     		ldr	r1, [r0, #4]
 1393              	.LVL140:
 1394 000c 8907     		lsls	r1, r1, #30
 1395 000e 0ED4     		bmi	.L141
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         {
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             adcCounts = Cy_SAR_RawCounts2Counts(base, chan, adcCounts);
 1396              		.loc 1 1138 0
 1397 0010 2100     		movs	r1, r4
 1398 0012 FFF7FEFF 		bl	Cy_SAR_RawCounts2Counts
 1399              	.LVL141:
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_uVolts = (int64_t)adcCounts * CY_SAR_10UV_COUNTS;
 1400              		.loc 1 1139 0
 1401 0016 074A     		ldr	r2, .L144
 1402 0018 0023     		movs	r3, #0
 1403 001a C117     		asrs	r1, r0, #31
 1404 001c FFF7FEFF 		bl	__aeabi_lmul
 1405              	.LVL142:
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****             result_uVolts /= Cy_SAR_countsPer10Volt[chan];
 1406              		.loc 1 1140 0
 1407 0020 054B     		ldr	r3, .L144+4
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 83


 1408 0022 A400     		lsls	r4, r4, #2
 1409              	.LVL143:
 1410 0024 E258     		ldr	r2, [r4, r3]
 1411 0026 D317     		asrs	r3, r2, #31
 1412 0028 FFF7FEFF 		bl	__aeabi_ldivmod
 1413              	.LVL144:
 1414 002c 0300     		movs	r3, r0
 1415              	.LVL145:
 1416              	.L141:
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         }
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return (int32_t)result_uVolts;
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1417              		.loc 1 1145 0
 1418 002e 1800     		movs	r0, r3
 1419              		@ sp needed
 1420 0030 10BD     		pop	{r4, pc}
 1421              	.L145:
 1422 0032 C046     		.align	2
 1423              	.L144:
 1424 0034 80969800 		.word	10000000
 1425 0038 00000000 		.word	Cy_SAR_countsPer10Volt
 1426              		.cfi_endproc
 1427              	.LFE125:
 1428              		.size	Cy_SAR_CountsTo_uVolts, .-Cy_SAR_CountsTo_uVolts
 1429              		.section	.text.Cy_SAR_SetAnalogSwitch,"ax",%progbits
 1430              		.align	1
 1431              		.global	Cy_SAR_SetAnalogSwitch
 1432              		.code	16
 1433              		.thumb_func
 1434              		.type	Cy_SAR_SetAnalogSwitch, %function
 1435              	Cy_SAR_SetAnalogSwitch:
 1436              	.LFB126:
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetAnalogSwitch
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Provide firmware control of the SARMUX switches for firmware sequencing.
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Each call to this function can open or close a set of switches.
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Previously configured switches are untouched.
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * If the SARSEQ is enabled, there is no need to use this function.
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchSelect
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The switch register that contains the desired switches. Select a value
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * from \ref cy_en_sar_switch_register_sel_t.
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchMask
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The mask of the switches to either open or close.
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Select one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and "OR" them together.
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 84


1169:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param state
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Open or close the desired swithces. Select a value from \ref cy_en_sar_switch_state_t.
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_ANALOG_SWITCH
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1437              		.loc 1 1181 0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441              		@ link register save eliminated.
 1442              	.LVL146:
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSELECT(switchSelect));
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_SWITCHMASK(switchMask));
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSTATE(state));
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     __IOM uint32_t *switchReg;
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     __IOM uint32_t *switchClearReg;
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switchReg = &SAR_MUX_SWITCH0(base);
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switchClearReg = &SAR_MUX_SWITCH_CLEAR0(base);
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(state)
 1443              		.loc 1 1192 0
 1444 0000 012B     		cmp	r3, #1
 1445 0002 04D1     		bne	.L150
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_CLOSE:
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         *switchReg |= switchMask;
 1446              		.loc 1 1195 0
 1447 0004 C023     		movs	r3, #192
 1448              	.LVL147:
 1449 0006 9B00     		lsls	r3, r3, #2
 1450 0008 C158     		ldr	r1, [r0, r3]
 1451              	.LVL148:
 1452 000a 0A43     		orrs	r2, r1
 1453              	.LVL149:
 1454 000c 01E0     		b	.L151
 1455              	.LVL150:
 1456              	.L150:
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_OPEN:
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         /* Unlike the close case, we are not OR'ing the register. Set 1 to clear.*/
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         *switchClearReg = switchMask;
 1457              		.loc 1 1201 0
 1458 000e C123     		movs	r3, #193
 1459              	.LVL151:
 1460 0010 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 85


 1461              	.LVL152:
 1462              	.L151:
 1463 0012 C250     		str	r2, [r0, r3]
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1464              		.loc 1 1204 0
 1465              		@ sp needed
 1466 0014 7047     		bx	lr
 1467              		.cfi_endproc
 1468              	.LFE126:
 1469              		.size	Cy_SAR_SetAnalogSwitch, .-Cy_SAR_SetAnalogSwitch
 1470              		.section	.text.Cy_SAR_GetAnalogSwitch,"ax",%progbits
 1471              		.align	1
 1472              		.global	Cy_SAR_GetAnalogSwitch
 1473              		.code	16
 1474              		.thumb_func
 1475              		.type	Cy_SAR_GetAnalogSwitch, %function
 1476              	Cy_SAR_GetAnalogSwitch:
 1477              	.LFB127:
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_GetAnalogSwitch
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Return the state (open or close) of SARMUX switches.
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchSelect
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The switch register that contains the desired switches. Select a value
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * from \ref cy_en_sar_switch_register_sel_t.
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Each bit corresponds to a single switch, where a bit value of 0 is open
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and 1 is closed.
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Compare this value to the switch masks in \ref cy_en_sar_mux_switch_fw_ctrl_t.
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1478              		.loc 1 1227 0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 0
 1481              		@ frame_needed = 0, uses_anonymous_args = 0
 1482              		@ link register save eliminated.
 1483              	.LVL153:
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SWITCHSELECT(switchSelect));
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return SAR_MUX_SWITCH0(base);
 1484              		.loc 1 1230 0
 1485 0000 C023     		movs	r3, #192
 1486 0002 9B00     		lsls	r3, r3, #2
 1487 0004 C058     		ldr	r0, [r0, r3]
 1488              	.LVL154:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 86


1231:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1489              		.loc 1 1231 0
 1490              		@ sp needed
 1491 0006 7047     		bx	lr
 1492              		.cfi_endproc
 1493              	.LFE127:
 1494              		.size	Cy_SAR_GetAnalogSwitch, .-Cy_SAR_GetAnalogSwitch
 1495              		.section	.text.Cy_SAR_SetSwitchSarSeqCtrl,"ax",%progbits
 1496              		.align	1
 1497              		.global	Cy_SAR_SetSwitchSarSeqCtrl
 1498              		.code	16
 1499              		.thumb_func
 1500              		.type	Cy_SAR_SetSwitchSarSeqCtrl, %function
 1501              	Cy_SAR_SetSwitchSarSeqCtrl:
 1502              	.LFB128:
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_SetSwitchSarSeqCtrl
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Enable or disable SARSEQ control of one or more switches.
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Previously configured switches are untouched.
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param base
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure describing registers
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param switchMask
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * The mask of the switches.
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Select one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and "OR" them together.
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param ctrl
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Enable or disable SARSEQ control. Select a value from \ref cy_en_sar_switch_sar_seq_ctrl_t.
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return None
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_SET_SWITCH_SAR_SEQ_CTRL
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1503              		.loc 1 1260 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 0
 1506              		@ frame_needed = 0, uses_anonymous_args = 0
 1507              		@ link register save eliminated.
 1508              	.LVL155:
 1509 0000 D123     		movs	r3, #209
 1510 0002 9B00     		lsls	r3, r3, #2
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L2(CY_SAR_SQMASK(switchMask));
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     CY_ASSERT_L3(CY_SAR_SQCTRL(ctrl));
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     switch(ctrl)
 1511              		.loc 1 1264 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 87


 1512 0004 012A     		cmp	r2, #1
 1513 0006 03D1     		bne	.L157
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     {
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_SEQ_CTRL_ENABLE:
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_MUX_SWITCH_SQ_CTRL(base) |= switchMask;
 1514              		.loc 1 1267 0
 1515 0008 C258     		ldr	r2, [r0, r3]
 1516              	.LVL156:
 1517 000a 1143     		orrs	r1, r2
 1518              	.LVL157:
 1519 000c C150     		str	r1, [r0, r3]
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
 1520              		.loc 1 1268 0
 1521 000e 02E0     		b	.L153
 1522              	.LVL158:
 1523              	.L157:
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     case CY_SAR_SWITCH_SEQ_CTRL_DISABLE:
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     default:
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         SAR_MUX_SWITCH_SQ_CTRL(base) &= ~switchMask;
 1524              		.loc 1 1271 0
 1525 0010 C258     		ldr	r2, [r0, r3]
 1526              	.LVL159:
 1527 0012 8A43     		bics	r2, r1
 1528 0014 C250     		str	r2, [r0, r3]
 1529              	.LVL160:
 1530              	.L153:
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         break;
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1531              		.loc 1 1274 0
 1532              		@ sp needed
 1533 0016 7047     		bx	lr
 1534              		.cfi_endproc
 1535              	.LFE128:
 1536              		.size	Cy_SAR_SetSwitchSarSeqCtrl, .-Cy_SAR_SetSwitchSarSeqCtrl
 1537              		.section	.text.Cy_SAR_DeepSleepCallback,"ax",%progbits
 1538              		.align	1
 1539              		.global	Cy_SAR_DeepSleepCallback
 1540              		.code	16
 1541              		.thumb_func
 1542              		.type	Cy_SAR_DeepSleepCallback, %function
 1543              	Cy_SAR_DeepSleepCallback:
 1544              	.LFB129:
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** /*******************************************************************************
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Function Name: Cy_SAR_DeepSleepCallback
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** ****************************************************************************//**
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Callback to prepare the SAR before entering Deep Sleep
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * and to re-enable the SAR after exiting Deep Sleep.
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param callbackParams
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Pointer to structure of type \ref cy_stc_syspm_callback_params_t
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \param mode
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * Callback mode, see \ref cy_en_syspm_callback_mode_t
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 88


1289:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \return
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * See \ref cy_en_syspm_status_t
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \funcusage
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_DEEPSLEEP_CALLBACK
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** *******************************************************************************/
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** {
 1545              		.loc 1 1299 0
 1546              		.cfi_startproc
 1547              		@ args = 0, pretend = 0, frame = 0
 1548              		@ frame_needed = 0, uses_anonymous_args = 0
 1549              	.LVL161:
 1550 0000 10B5     		push	{r4, lr}
 1551              		.cfi_def_cfa_offset 8
 1552              		.cfi_offset 4, -8
 1553              		.cfi_offset 14, -4
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     cy_en_syspm_status_t returnValue = CY_SYSPM_SUCCESS;
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     if (CY_SYSPM_BEFORE_TRANSITION == mode)
 1554              		.loc 1 1302 0
 1555 0002 0429     		cmp	r1, #4
 1556 0004 03D1     		bne	.L159
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Actions that should be done before entering the Deep Sleep mode */
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_DeepSleep((SAR_V1_Type *)callbackParams->base);
 1557              		.loc 1 1304 0
 1558 0006 0068     		ldr	r0, [r0]
 1559              	.LVL162:
 1560 0008 FFF7FEFF 		bl	Cy_SAR_DeepSleep
 1561              	.LVL163:
 1562 000c 04E0     		b	.L160
 1563              	.LVL164:
 1564              	.L159:
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else if (CY_SYSPM_AFTER_TRANSITION == mode)
 1565              		.loc 1 1306 0
 1566 000e 0829     		cmp	r1, #8
 1567 0010 02D1     		bne	.L160
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Actions that should be done after exiting the Deep Sleep mode */
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****         Cy_SAR_Wakeup((SAR_V1_Type *)callbackParams->base);
 1568              		.loc 1 1308 0
 1569 0012 0068     		ldr	r0, [r0]
 1570              	.LVL165:
 1571 0014 FFF7FEFF 		bl	Cy_SAR_Wakeup
 1572              	.LVL166:
 1573              	.L160:
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     else
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     { /* Does nothing in other modes */
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     }
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** 
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c ****     return returnValue;
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\sar/cy_sar.c **** }
 1574              		.loc 1 1315 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 89


 1575 0018 0020     		movs	r0, #0
 1576              		@ sp needed
 1577 001a 10BD     		pop	{r4, pc}
 1578              		.cfi_endproc
 1579              	.LFE129:
 1580              		.size	Cy_SAR_DeepSleepCallback, .-Cy_SAR_DeepSleepCallback
 1581              		.comm	Cy_SAR_countsPer10Volt,64,4
 1582              		.comm	Cy_SAR_offset,32,2
 1583              		.bss
 1584              		.align	2
 1585              		.set	.LANCHOR0,. + 0
 1586              		.type	enabledBeforeSleep, %object
 1587              		.size	enabledBeforeSleep, 8
 1588              	enabledBeforeSleep:
 1589 0000 00000000 		.space	8
 1589      00000000 
 1590              		.text
 1591              	.Letext0:
 1592              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1593              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1594              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 1595              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 1596              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 1597              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 1598              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syspm/cy_syspm.h"
 1599              		.section	.debug_info,"",%progbits
 1600              	.Ldebug_info0:
 1601 0000 BC160000 		.4byte	0x16bc
 1602 0004 0400     		.2byte	0x4
 1603 0006 00000000 		.4byte	.Ldebug_abbrev0
 1604 000a 04       		.byte	0x4
 1605 000b 01       		.uleb128 0x1
 1606 000c CD0E0000 		.4byte	.LASF303
 1607 0010 0C       		.byte	0xc
 1608 0011 280E0000 		.4byte	.LASF304
 1609 0015 51020000 		.4byte	.LASF305
 1610 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1611 001d 00000000 		.4byte	0
 1612 0021 00000000 		.4byte	.Ldebug_line0
 1613 0025 02       		.uleb128 0x2
 1614 0026 01       		.byte	0x1
 1615 0027 06       		.byte	0x6
 1616 0028 C9110000 		.4byte	.LASF0
 1617 002c 03       		.uleb128 0x3
 1618 002d 1E0E0000 		.4byte	.LASF2
 1619 0031 03       		.byte	0x3
 1620 0032 1D       		.byte	0x1d
 1621 0033 37000000 		.4byte	0x37
 1622 0037 02       		.uleb128 0x2
 1623 0038 01       		.byte	0x1
 1624 0039 08       		.byte	0x8
 1625 003a 47100000 		.4byte	.LASF1
 1626 003e 03       		.uleb128 0x3
 1627 003f DD090000 		.4byte	.LASF3
 1628 0043 03       		.byte	0x3
 1629 0044 29       		.byte	0x29
 1630 0045 49000000 		.4byte	0x49
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 90


 1631 0049 02       		.uleb128 0x2
 1632 004a 02       		.byte	0x2
 1633 004b 05       		.byte	0x5
 1634 004c 39020000 		.4byte	.LASF4
 1635 0050 03       		.uleb128 0x3
 1636 0051 66050000 		.4byte	.LASF5
 1637 0055 03       		.byte	0x3
 1638 0056 2B       		.byte	0x2b
 1639 0057 5B000000 		.4byte	0x5b
 1640 005b 02       		.uleb128 0x2
 1641 005c 02       		.byte	0x2
 1642 005d 07       		.byte	0x7
 1643 005e 410B0000 		.4byte	.LASF6
 1644 0062 03       		.uleb128 0x3
 1645 0063 9D010000 		.4byte	.LASF7
 1646 0067 03       		.byte	0x3
 1647 0068 3F       		.byte	0x3f
 1648 0069 6D000000 		.4byte	0x6d
 1649 006d 02       		.uleb128 0x2
 1650 006e 04       		.byte	0x4
 1651 006f 05       		.byte	0x5
 1652 0070 B30C0000 		.4byte	.LASF8
 1653 0074 03       		.uleb128 0x3
 1654 0075 69100000 		.4byte	.LASF9
 1655 0079 03       		.byte	0x3
 1656 007a 41       		.byte	0x41
 1657 007b 7F000000 		.4byte	0x7f
 1658 007f 02       		.uleb128 0x2
 1659 0080 04       		.byte	0x4
 1660 0081 07       		.byte	0x7
 1661 0082 7A0F0000 		.4byte	.LASF10
 1662 0086 03       		.uleb128 0x3
 1663 0087 2D0B0000 		.4byte	.LASF11
 1664 008b 03       		.byte	0x3
 1665 008c 59       		.byte	0x59
 1666 008d 91000000 		.4byte	0x91
 1667 0091 02       		.uleb128 0x2
 1668 0092 08       		.byte	0x8
 1669 0093 05       		.byte	0x5
 1670 0094 49090000 		.4byte	.LASF12
 1671 0098 02       		.uleb128 0x2
 1672 0099 08       		.byte	0x8
 1673 009a 07       		.byte	0x7
 1674 009b DD040000 		.4byte	.LASF13
 1675 009f 04       		.uleb128 0x4
 1676 00a0 04       		.byte	0x4
 1677 00a1 05       		.byte	0x5
 1678 00a2 696E7400 		.ascii	"int\000"
 1679 00a6 02       		.uleb128 0x2
 1680 00a7 04       		.byte	0x4
 1681 00a8 07       		.byte	0x7
 1682 00a9 2C010000 		.4byte	.LASF14
 1683 00ad 03       		.uleb128 0x3
 1684 00ae 75080000 		.4byte	.LASF15
 1685 00b2 04       		.byte	0x4
 1686 00b3 18       		.byte	0x18
 1687 00b4 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 91


 1688 00b8 03       		.uleb128 0x3
 1689 00b9 BB040000 		.4byte	.LASF16
 1690 00bd 04       		.byte	0x4
 1691 00be 20       		.byte	0x20
 1692 00bf 3E000000 		.4byte	0x3e
 1693 00c3 03       		.uleb128 0x3
 1694 00c4 600B0000 		.4byte	.LASF17
 1695 00c8 04       		.byte	0x4
 1696 00c9 24       		.byte	0x24
 1697 00ca 50000000 		.4byte	0x50
 1698 00ce 03       		.uleb128 0x3
 1699 00cf AB0F0000 		.4byte	.LASF18
 1700 00d3 04       		.byte	0x4
 1701 00d4 2C       		.byte	0x2c
 1702 00d5 62000000 		.4byte	0x62
 1703 00d9 03       		.uleb128 0x3
 1704 00da 63040000 		.4byte	.LASF19
 1705 00de 04       		.byte	0x4
 1706 00df 30       		.byte	0x30
 1707 00e0 74000000 		.4byte	0x74
 1708 00e4 03       		.uleb128 0x3
 1709 00e5 2F060000 		.4byte	.LASF20
 1710 00e9 04       		.byte	0x4
 1711 00ea 38       		.byte	0x38
 1712 00eb 86000000 		.4byte	0x86
 1713 00ef 02       		.uleb128 0x2
 1714 00f0 08       		.byte	0x8
 1715 00f1 04       		.byte	0x4
 1716 00f2 540B0000 		.4byte	.LASF21
 1717 00f6 02       		.uleb128 0x2
 1718 00f7 04       		.byte	0x4
 1719 00f8 07       		.byte	0x7
 1720 00f9 E10B0000 		.4byte	.LASF22
 1721 00fd 05       		.uleb128 0x5
 1722 00fe D9000000 		.4byte	0xd9
 1723 0102 06       		.uleb128 0x6
 1724 0103 FD000000 		.4byte	0xfd
 1725 0107 07       		.uleb128 0x7
 1726 0108 02010000 		.4byte	0x102
 1727 010c 17010000 		.4byte	0x117
 1728 0110 08       		.uleb128 0x8
 1729 0111 F6000000 		.4byte	0xf6
 1730 0115 01       		.byte	0x1
 1731 0116 00       		.byte	0
 1732 0117 07       		.uleb128 0x7
 1733 0118 FD000000 		.4byte	0xfd
 1734 011c 27010000 		.4byte	0x127
 1735 0120 08       		.uleb128 0x8
 1736 0121 F6000000 		.4byte	0xf6
 1737 0125 0F       		.byte	0xf
 1738 0126 00       		.byte	0
 1739 0127 07       		.uleb128 0x7
 1740 0128 02010000 		.4byte	0x102
 1741 012c 37010000 		.4byte	0x137
 1742 0130 08       		.uleb128 0x8
 1743 0131 F6000000 		.4byte	0xf6
 1744 0135 0F       		.byte	0xf
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 92


 1745 0136 00       		.byte	0
 1746 0137 07       		.uleb128 0x7
 1747 0138 02010000 		.4byte	0x102
 1748 013c 47010000 		.4byte	0x147
 1749 0140 08       		.uleb128 0x8
 1750 0141 F6000000 		.4byte	0xf6
 1751 0145 02       		.byte	0x2
 1752 0146 00       		.byte	0
 1753 0147 07       		.uleb128 0x7
 1754 0148 02010000 		.4byte	0x102
 1755 014c 57010000 		.4byte	0x157
 1756 0150 08       		.uleb128 0x8
 1757 0151 F6000000 		.4byte	0xf6
 1758 0155 0E       		.byte	0xe
 1759 0156 00       		.byte	0
 1760 0157 09       		.uleb128 0x9
 1761 0158 080F     		.2byte	0xf08
 1762 015a 05       		.byte	0x5
 1763 015b 21       		.byte	0x21
 1764 015c DF030000 		.4byte	0x3df
 1765 0160 0A       		.uleb128 0xa
 1766 0161 93130000 		.4byte	.LASF23
 1767 0165 05       		.byte	0x5
 1768 0166 22       		.byte	0x22
 1769 0167 FD000000 		.4byte	0xfd
 1770 016b 00       		.byte	0
 1771 016c 0A       		.uleb128 0xa
 1772 016d 4F0A0000 		.4byte	.LASF24
 1773 0171 05       		.byte	0x5
 1774 0172 23       		.byte	0x23
 1775 0173 FD000000 		.4byte	0xfd
 1776 0177 04       		.byte	0x4
 1777 0178 0A       		.uleb128 0xa
 1778 0179 2B000000 		.4byte	.LASF25
 1779 017d 05       		.byte	0x5
 1780 017e 24       		.byte	0x24
 1781 017f E4030000 		.4byte	0x3e4
 1782 0183 08       		.byte	0x8
 1783 0184 0A       		.uleb128 0xa
 1784 0185 B9020000 		.4byte	.LASF26
 1785 0189 05       		.byte	0x5
 1786 018a 25       		.byte	0x25
 1787 018b FD000000 		.4byte	0xfd
 1788 018f 10       		.byte	0x10
 1789 0190 0A       		.uleb128 0xa
 1790 0191 4D050000 		.4byte	.LASF27
 1791 0195 05       		.byte	0x5
 1792 0196 26       		.byte	0x26
 1793 0197 FD000000 		.4byte	0xfd
 1794 019b 14       		.byte	0x14
 1795 019c 0A       		.uleb128 0xa
 1796 019d 4E0D0000 		.4byte	.LASF28
 1797 01a1 05       		.byte	0x5
 1798 01a2 27       		.byte	0x27
 1799 01a3 FD000000 		.4byte	0xfd
 1800 01a7 18       		.byte	0x18
 1801 01a8 0A       		.uleb128 0xa
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 93


 1802 01a9 73060000 		.4byte	.LASF29
 1803 01ad 05       		.byte	0x5
 1804 01ae 28       		.byte	0x28
 1805 01af FD000000 		.4byte	0xfd
 1806 01b3 1C       		.byte	0x1c
 1807 01b4 0A       		.uleb128 0xa
 1808 01b5 BF000000 		.4byte	.LASF30
 1809 01b9 05       		.byte	0x5
 1810 01ba 29       		.byte	0x29
 1811 01bb FD000000 		.4byte	0xfd
 1812 01bf 20       		.byte	0x20
 1813 01c0 0A       		.uleb128 0xa
 1814 01c1 E40A0000 		.4byte	.LASF31
 1815 01c5 05       		.byte	0x5
 1816 01c6 2A       		.byte	0x2a
 1817 01c7 FD000000 		.4byte	0xfd
 1818 01cb 24       		.byte	0x24
 1819 01cc 0A       		.uleb128 0xa
 1820 01cd 88120000 		.4byte	.LASF32
 1821 01d1 05       		.byte	0x5
 1822 01d2 2B       		.byte	0x2b
 1823 01d3 FE030000 		.4byte	0x3fe
 1824 01d7 28       		.byte	0x28
 1825 01d8 0A       		.uleb128 0xa
 1826 01d9 10100000 		.4byte	.LASF33
 1827 01dd 05       		.byte	0x5
 1828 01de 2C       		.byte	0x2c
 1829 01df 03040000 		.4byte	0x403
 1830 01e3 80       		.byte	0x80
 1831 01e4 0A       		.uleb128 0xa
 1832 01e5 340C0000 		.4byte	.LASF34
 1833 01e9 05       		.byte	0x5
 1834 01ea 2D       		.byte	0x2d
 1835 01eb 0D040000 		.4byte	0x40d
 1836 01ef C0       		.byte	0xc0
 1837 01f0 0B       		.uleb128 0xb
 1838 01f1 B40D0000 		.4byte	.LASF35
 1839 01f5 05       		.byte	0x5
 1840 01f6 2E       		.byte	0x2e
 1841 01f7 17040000 		.4byte	0x417
 1842 01fb 0001     		.2byte	0x100
 1843 01fd 0B       		.uleb128 0xb
 1844 01fe 3E0C0000 		.4byte	.LASF36
 1845 0202 05       		.byte	0x5
 1846 0203 2F       		.byte	0x2f
 1847 0204 21040000 		.4byte	0x421
 1848 0208 4001     		.2byte	0x140
 1849 020a 0B       		.uleb128 0xb
 1850 020b 050A0000 		.4byte	.LASF37
 1851 020f 05       		.byte	0x5
 1852 0210 30       		.byte	0x30
 1853 0211 2B040000 		.4byte	0x42b
 1854 0215 8001     		.2byte	0x180
 1855 0217 0B       		.uleb128 0xb
 1856 0218 480C0000 		.4byte	.LASF38
 1857 021c 05       		.byte	0x5
 1858 021d 31       		.byte	0x31
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 94


 1859 021e 35040000 		.4byte	0x435
 1860 0222 C001     		.2byte	0x1c0
 1861 0224 0B       		.uleb128 0xb
 1862 0225 46000000 		.4byte	.LASF39
 1863 0229 05       		.byte	0x5
 1864 022a 32       		.byte	0x32
 1865 022b 02010000 		.4byte	0x102
 1866 022f 0002     		.2byte	0x200
 1867 0231 0B       		.uleb128 0xb
 1868 0232 BF0F0000 		.4byte	.LASF40
 1869 0236 05       		.byte	0x5
 1870 0237 33       		.byte	0x33
 1871 0238 02010000 		.4byte	0x102
 1872 023c 0402     		.2byte	0x204
 1873 023e 0B       		.uleb128 0xb
 1874 023f A7010000 		.4byte	.LASF41
 1875 0243 05       		.byte	0x5
 1876 0244 34       		.byte	0x34
 1877 0245 02010000 		.4byte	0x102
 1878 0249 0802     		.2byte	0x208
 1879 024b 0B       		.uleb128 0xb
 1880 024c 1F080000 		.4byte	.LASF42
 1881 0250 05       		.byte	0x5
 1882 0251 35       		.byte	0x35
 1883 0252 02010000 		.4byte	0x102
 1884 0256 0C02     		.2byte	0x20c
 1885 0258 0B       		.uleb128 0xb
 1886 0259 80040000 		.4byte	.LASF43
 1887 025d 05       		.byte	0x5
 1888 025e 36       		.byte	0x36
 1889 025f FD000000 		.4byte	0xfd
 1890 0263 1002     		.2byte	0x210
 1891 0265 0B       		.uleb128 0xb
 1892 0266 0E030000 		.4byte	.LASF44
 1893 026a 05       		.byte	0x5
 1894 026b 37       		.byte	0x37
 1895 026c FD000000 		.4byte	0xfd
 1896 0270 1402     		.2byte	0x214
 1897 0272 0B       		.uleb128 0xb
 1898 0273 450A0000 		.4byte	.LASF45
 1899 0277 05       		.byte	0x5
 1900 0278 38       		.byte	0x38
 1901 0279 FD000000 		.4byte	0xfd
 1902 027d 1802     		.2byte	0x218
 1903 027f 0B       		.uleb128 0xb
 1904 0280 9E0E0000 		.4byte	.LASF46
 1905 0284 05       		.byte	0x5
 1906 0285 39       		.byte	0x39
 1907 0286 02010000 		.4byte	0x102
 1908 028a 1C02     		.2byte	0x21c
 1909 028c 0B       		.uleb128 0xb
 1910 028d 43020000 		.4byte	.LASF47
 1911 0291 05       		.byte	0x5
 1912 0292 3A       		.byte	0x3a
 1913 0293 FD000000 		.4byte	0xfd
 1914 0297 2002     		.2byte	0x220
 1915 0299 0B       		.uleb128 0xb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 95


 1916 029a 94070000 		.4byte	.LASF48
 1917 029e 05       		.byte	0x5
 1918 029f 3B       		.byte	0x3b
 1919 02a0 FD000000 		.4byte	0xfd
 1920 02a4 2402     		.2byte	0x224
 1921 02a6 0B       		.uleb128 0xb
 1922 02a7 C6100000 		.4byte	.LASF49
 1923 02ab 05       		.byte	0x5
 1924 02ac 3C       		.byte	0x3c
 1925 02ad FD000000 		.4byte	0xfd
 1926 02b1 2802     		.2byte	0x228
 1927 02b3 0B       		.uleb128 0xb
 1928 02b4 6D070000 		.4byte	.LASF50
 1929 02b8 05       		.byte	0x5
 1930 02b9 3D       		.byte	0x3d
 1931 02ba 02010000 		.4byte	0x102
 1932 02be 2C02     		.2byte	0x22c
 1933 02c0 0B       		.uleb128 0xb
 1934 02c1 2E0A0000 		.4byte	.LASF51
 1935 02c5 05       		.byte	0x5
 1936 02c6 3E       		.byte	0x3e
 1937 02c7 FD000000 		.4byte	0xfd
 1938 02cb 3002     		.2byte	0x230
 1939 02cd 0B       		.uleb128 0xb
 1940 02ce 12090000 		.4byte	.LASF52
 1941 02d2 05       		.byte	0x5
 1942 02d3 3F       		.byte	0x3f
 1943 02d4 FD000000 		.4byte	0xfd
 1944 02d8 3402     		.2byte	0x234
 1945 02da 0B       		.uleb128 0xb
 1946 02db 49060000 		.4byte	.LASF53
 1947 02df 05       		.byte	0x5
 1948 02e0 40       		.byte	0x40
 1949 02e1 FD000000 		.4byte	0xfd
 1950 02e5 3802     		.2byte	0x238
 1951 02e7 0B       		.uleb128 0xb
 1952 02e8 34000000 		.4byte	.LASF54
 1953 02ec 05       		.byte	0x5
 1954 02ed 41       		.byte	0x41
 1955 02ee 02010000 		.4byte	0x102
 1956 02f2 3C02     		.2byte	0x23c
 1957 02f4 0B       		.uleb128 0xb
 1958 02f5 39010000 		.4byte	.LASF55
 1959 02f9 05       		.byte	0x5
 1960 02fa 42       		.byte	0x42
 1961 02fb 02010000 		.4byte	0x102
 1962 02ff 4002     		.2byte	0x240
 1963 0301 0B       		.uleb128 0xb
 1964 0302 520C0000 		.4byte	.LASF56
 1965 0306 05       		.byte	0x5
 1966 0307 43       		.byte	0x43
 1967 0308 3F040000 		.4byte	0x43f
 1968 030c 4402     		.2byte	0x244
 1969 030e 0B       		.uleb128 0xb
 1970 030f 34080000 		.4byte	.LASF57
 1971 0313 05       		.byte	0x5
 1972 0314 44       		.byte	0x44
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 96


 1973 0315 FD000000 		.4byte	0xfd
 1974 0319 8002     		.2byte	0x280
 1975 031b 0B       		.uleb128 0xb
 1976 031c 5C0C0000 		.4byte	.LASF58
 1977 0320 05       		.byte	0x5
 1978 0321 45       		.byte	0x45
 1979 0322 49040000 		.4byte	0x449
 1980 0326 8402     		.2byte	0x284
 1981 0328 0B       		.uleb128 0xb
 1982 0329 DE020000 		.4byte	.LASF59
 1983 032d 05       		.byte	0x5
 1984 032e 46       		.byte	0x46
 1985 032f 02010000 		.4byte	0x102
 1986 0333 9002     		.2byte	0x290
 1987 0335 0B       		.uleb128 0xb
 1988 0336 660C0000 		.4byte	.LASF60
 1989 033a 05       		.byte	0x5
 1990 033b 47       		.byte	0x47
 1991 033c 53040000 		.4byte	0x453
 1992 0340 9402     		.2byte	0x294
 1993 0342 0B       		.uleb128 0xb
 1994 0343 A1120000 		.4byte	.LASF61
 1995 0347 05       		.byte	0x5
 1996 0348 48       		.byte	0x48
 1997 0349 02010000 		.4byte	0x102
 1998 034d A002     		.2byte	0x2a0
 1999 034f 0B       		.uleb128 0xb
 2000 0350 5B080000 		.4byte	.LASF62
 2001 0354 05       		.byte	0x5
 2002 0355 49       		.byte	0x49
 2003 0356 02010000 		.4byte	0x102
 2004 035a A402     		.2byte	0x2a4
 2005 035c 0B       		.uleb128 0xb
 2006 035d 700C0000 		.4byte	.LASF63
 2007 0361 05       		.byte	0x5
 2008 0362 4A       		.byte	0x4a
 2009 0363 5D040000 		.4byte	0x45d
 2010 0367 A802     		.2byte	0x2a8
 2011 0369 0B       		.uleb128 0xb
 2012 036a B30F0000 		.4byte	.LASF64
 2013 036e 05       		.byte	0x5
 2014 036f 4B       		.byte	0x4b
 2015 0370 FD000000 		.4byte	0xfd
 2016 0374 0003     		.2byte	0x300
 2017 0376 0B       		.uleb128 0xb
 2018 0377 700A0000 		.4byte	.LASF65
 2019 037b 05       		.byte	0x5
 2020 037c 4C       		.byte	0x4c
 2021 037d FD000000 		.4byte	0xfd
 2022 0381 0403     		.2byte	0x304
 2023 0383 0B       		.uleb128 0xb
 2024 0384 7A0C0000 		.4byte	.LASF66
 2025 0388 05       		.byte	0x5
 2026 0389 4D       		.byte	0x4d
 2027 038a 77040000 		.4byte	0x477
 2028 038e 0803     		.2byte	0x308
 2029 0390 0B       		.uleb128 0xb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 97


 2030 0391 92060000 		.4byte	.LASF67
 2031 0395 05       		.byte	0x5
 2032 0396 4E       		.byte	0x4e
 2033 0397 FD000000 		.4byte	0xfd
 2034 039b 4003     		.2byte	0x340
 2035 039d 0B       		.uleb128 0xb
 2036 039e A00C0000 		.4byte	.LASF68
 2037 03a2 05       		.byte	0x5
 2038 03a3 4F       		.byte	0x4f
 2039 03a4 FD000000 		.4byte	0xfd
 2040 03a8 4403     		.2byte	0x344
 2041 03aa 0B       		.uleb128 0xb
 2042 03ab 37120000 		.4byte	.LASF69
 2043 03af 05       		.byte	0x5
 2044 03b0 50       		.byte	0x50
 2045 03b1 02010000 		.4byte	0x102
 2046 03b5 4803     		.2byte	0x348
 2047 03b7 0B       		.uleb128 0xb
 2048 03b8 E1100000 		.4byte	.LASF70
 2049 03bc 05       		.byte	0x5
 2050 03bd 51       		.byte	0x51
 2051 03be 92040000 		.4byte	0x492
 2052 03c2 4C03     		.2byte	0x34c
 2053 03c4 0B       		.uleb128 0xb
 2054 03c5 55100000 		.4byte	.LASF71
 2055 03c9 05       		.byte	0x5
 2056 03ca 52       		.byte	0x52
 2057 03cb FD000000 		.4byte	0xfd
 2058 03cf 000F     		.2byte	0xf00
 2059 03d1 0B       		.uleb128 0xb
 2060 03d2 5F100000 		.4byte	.LASF72
 2061 03d6 05       		.byte	0x5
 2062 03d7 53       		.byte	0x53
 2063 03d8 FD000000 		.4byte	0xfd
 2064 03dc 040F     		.2byte	0xf04
 2065 03de 00       		.byte	0
 2066 03df 05       		.uleb128 0x5
 2067 03e0 07010000 		.4byte	0x107
 2068 03e4 06       		.uleb128 0x6
 2069 03e5 DF030000 		.4byte	0x3df
 2070 03e9 07       		.uleb128 0x7
 2071 03ea 02010000 		.4byte	0x102
 2072 03ee F9030000 		.4byte	0x3f9
 2073 03f2 08       		.uleb128 0x8
 2074 03f3 F6000000 		.4byte	0xf6
 2075 03f7 15       		.byte	0x15
 2076 03f8 00       		.byte	0
 2077 03f9 05       		.uleb128 0x5
 2078 03fa E9030000 		.4byte	0x3e9
 2079 03fe 06       		.uleb128 0x6
 2080 03ff F9030000 		.4byte	0x3f9
 2081 0403 05       		.uleb128 0x5
 2082 0404 17010000 		.4byte	0x117
 2083 0408 05       		.uleb128 0x5
 2084 0409 27010000 		.4byte	0x127
 2085 040d 06       		.uleb128 0x6
 2086 040e 08040000 		.4byte	0x408
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 98


 2087 0412 05       		.uleb128 0x5
 2088 0413 27010000 		.4byte	0x127
 2089 0417 06       		.uleb128 0x6
 2090 0418 12040000 		.4byte	0x412
 2091 041c 05       		.uleb128 0x5
 2092 041d 27010000 		.4byte	0x127
 2093 0421 06       		.uleb128 0x6
 2094 0422 1C040000 		.4byte	0x41c
 2095 0426 05       		.uleb128 0x5
 2096 0427 27010000 		.4byte	0x127
 2097 042b 06       		.uleb128 0x6
 2098 042c 26040000 		.4byte	0x426
 2099 0430 05       		.uleb128 0x5
 2100 0431 27010000 		.4byte	0x127
 2101 0435 06       		.uleb128 0x6
 2102 0436 30040000 		.4byte	0x430
 2103 043a 05       		.uleb128 0x5
 2104 043b 47010000 		.4byte	0x147
 2105 043f 06       		.uleb128 0x6
 2106 0440 3A040000 		.4byte	0x43a
 2107 0444 05       		.uleb128 0x5
 2108 0445 37010000 		.4byte	0x137
 2109 0449 06       		.uleb128 0x6
 2110 044a 44040000 		.4byte	0x444
 2111 044e 05       		.uleb128 0x5
 2112 044f 37010000 		.4byte	0x137
 2113 0453 06       		.uleb128 0x6
 2114 0454 4E040000 		.4byte	0x44e
 2115 0458 05       		.uleb128 0x5
 2116 0459 E9030000 		.4byte	0x3e9
 2117 045d 06       		.uleb128 0x6
 2118 045e 58040000 		.4byte	0x458
 2119 0462 07       		.uleb128 0x7
 2120 0463 02010000 		.4byte	0x102
 2121 0467 72040000 		.4byte	0x472
 2122 046b 08       		.uleb128 0x8
 2123 046c F6000000 		.4byte	0xf6
 2124 0470 0D       		.byte	0xd
 2125 0471 00       		.byte	0
 2126 0472 05       		.uleb128 0x5
 2127 0473 62040000 		.4byte	0x462
 2128 0477 06       		.uleb128 0x6
 2129 0478 72040000 		.4byte	0x472
 2130 047c 07       		.uleb128 0x7
 2131 047d 02010000 		.4byte	0x102
 2132 0481 8D040000 		.4byte	0x48d
 2133 0485 0C       		.uleb128 0xc
 2134 0486 F6000000 		.4byte	0xf6
 2135 048a EC02     		.2byte	0x2ec
 2136 048c 00       		.byte	0
 2137 048d 05       		.uleb128 0x5
 2138 048e 7C040000 		.4byte	0x47c
 2139 0492 06       		.uleb128 0x6
 2140 0493 8D040000 		.4byte	0x48d
 2141 0497 03       		.uleb128 0x3
 2142 0498 2D070000 		.4byte	.LASF73
 2143 049c 05       		.byte	0x5
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 99


 2144 049d 54       		.byte	0x54
 2145 049e 57010000 		.4byte	0x157
 2146 04a2 0D       		.uleb128 0xd
 2147 04a3 B8030000 		.4byte	.LASF74
 2148 04a7 06       		.byte	0x6
 2149 04a8 5206     		.2byte	0x652
 2150 04aa 97040000 		.4byte	0x497
 2151 04ae 0E       		.uleb128 0xe
 2152 04af B8       		.byte	0xb8
 2153 04b0 07       		.byte	0x7
 2154 04b1 34       		.byte	0x34
 2155 04b2 BF080000 		.4byte	0x8bf
 2156 04b6 0A       		.uleb128 0xa
 2157 04b7 CC010000 		.4byte	.LASF75
 2158 04bb 07       		.byte	0x7
 2159 04bc 37       		.byte	0x37
 2160 04bd D9000000 		.4byte	0xd9
 2161 04c1 00       		.byte	0
 2162 04c2 0A       		.uleb128 0xa
 2163 04c3 B0040000 		.4byte	.LASF76
 2164 04c7 07       		.byte	0x7
 2165 04c8 38       		.byte	0x38
 2166 04c9 D9000000 		.4byte	0xd9
 2167 04cd 04       		.byte	0x4
 2168 04ce 0A       		.uleb128 0xa
 2169 04cf DC000000 		.4byte	.LASF77
 2170 04d3 07       		.byte	0x7
 2171 04d4 39       		.byte	0x39
 2172 04d5 D9000000 		.4byte	0xd9
 2173 04d9 08       		.byte	0x8
 2174 04da 0A       		.uleb128 0xa
 2175 04db B7000000 		.4byte	.LASF78
 2176 04df 07       		.byte	0x7
 2177 04e0 3A       		.byte	0x3a
 2178 04e1 D9000000 		.4byte	0xd9
 2179 04e5 0C       		.byte	0xc
 2180 04e6 0A       		.uleb128 0xa
 2181 04e7 690B0000 		.4byte	.LASF79
 2182 04eb 07       		.byte	0x7
 2183 04ec 3B       		.byte	0x3b
 2184 04ed D9000000 		.4byte	0xd9
 2185 04f1 10       		.byte	0x10
 2186 04f2 0A       		.uleb128 0xa
 2187 04f3 E7090000 		.4byte	.LASF80
 2188 04f7 07       		.byte	0x7
 2189 04f8 3C       		.byte	0x3c
 2190 04f9 D9000000 		.4byte	0xd9
 2191 04fd 14       		.byte	0x14
 2192 04fe 0A       		.uleb128 0xa
 2193 04ff A5060000 		.4byte	.LASF81
 2194 0503 07       		.byte	0x7
 2195 0504 3D       		.byte	0x3d
 2196 0505 D9000000 		.4byte	0xd9
 2197 0509 18       		.byte	0x18
 2198 050a 0A       		.uleb128 0xa
 2199 050b 7F120000 		.4byte	.LASF82
 2200 050f 07       		.byte	0x7
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 100


 2201 0510 3E       		.byte	0x3e
 2202 0511 D9000000 		.4byte	0xd9
 2203 0515 1C       		.byte	0x1c
 2204 0516 0A       		.uleb128 0xa
 2205 0517 57090000 		.4byte	.LASF83
 2206 051b 07       		.byte	0x7
 2207 051c 3F       		.byte	0x3f
 2208 051d D9000000 		.4byte	0xd9
 2209 0521 20       		.byte	0x20
 2210 0522 0A       		.uleb128 0xa
 2211 0523 6E090000 		.4byte	.LASF84
 2212 0527 07       		.byte	0x7
 2213 0528 40       		.byte	0x40
 2214 0529 D9000000 		.4byte	0xd9
 2215 052d 24       		.byte	0x24
 2216 052e 0A       		.uleb128 0xa
 2217 052f D60C0000 		.4byte	.LASF85
 2218 0533 07       		.byte	0x7
 2219 0534 43       		.byte	0x43
 2220 0535 AD000000 		.4byte	0xad
 2221 0539 28       		.byte	0x28
 2222 053a 0A       		.uleb128 0xa
 2223 053b 8B040000 		.4byte	.LASF86
 2224 053f 07       		.byte	0x7
 2225 0540 44       		.byte	0x44
 2226 0541 AD000000 		.4byte	0xad
 2227 0545 29       		.byte	0x29
 2228 0546 0A       		.uleb128 0xa
 2229 0547 9F0B0000 		.4byte	.LASF87
 2230 054b 07       		.byte	0x7
 2231 054c 45       		.byte	0x45
 2232 054d AD000000 		.4byte	0xad
 2233 0551 2A       		.byte	0x2a
 2234 0552 0A       		.uleb128 0xa
 2235 0553 040D0000 		.4byte	.LASF88
 2236 0557 07       		.byte	0x7
 2237 0558 46       		.byte	0x46
 2238 0559 AD000000 		.4byte	0xad
 2239 055d 2B       		.byte	0x2b
 2240 055e 0A       		.uleb128 0xa
 2241 055f F80C0000 		.4byte	.LASF89
 2242 0563 07       		.byte	0x7
 2243 0564 47       		.byte	0x47
 2244 0565 AD000000 		.4byte	0xad
 2245 0569 2C       		.byte	0x2c
 2246 056a 0A       		.uleb128 0xa
 2247 056b 6D0F0000 		.4byte	.LASF90
 2248 056f 07       		.byte	0x7
 2249 0570 48       		.byte	0x48
 2250 0571 AD000000 		.4byte	0xad
 2251 0575 2D       		.byte	0x2d
 2252 0576 0A       		.uleb128 0xa
 2253 0577 58130000 		.4byte	.LASF91
 2254 057b 07       		.byte	0x7
 2255 057c 49       		.byte	0x49
 2256 057d AD000000 		.4byte	0xad
 2257 0581 2E       		.byte	0x2e
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 101


 2258 0582 0A       		.uleb128 0xa
 2259 0583 49120000 		.4byte	.LASF92
 2260 0587 07       		.byte	0x7
 2261 0588 4A       		.byte	0x4a
 2262 0589 AD000000 		.4byte	0xad
 2263 058d 2F       		.byte	0x2f
 2264 058e 0A       		.uleb128 0xa
 2265 058f 8B030000 		.4byte	.LASF93
 2266 0593 07       		.byte	0x7
 2267 0594 4B       		.byte	0x4b
 2268 0595 AD000000 		.4byte	0xad
 2269 0599 30       		.byte	0x30
 2270 059a 0A       		.uleb128 0xa
 2271 059b 650A0000 		.4byte	.LASF94
 2272 059f 07       		.byte	0x7
 2273 05a0 4E       		.byte	0x4e
 2274 05a1 AD000000 		.4byte	0xad
 2275 05a5 31       		.byte	0x31
 2276 05a6 0A       		.uleb128 0xa
 2277 05a7 E0110000 		.4byte	.LASF95
 2278 05ab 07       		.byte	0x7
 2279 05ac 4F       		.byte	0x4f
 2280 05ad AD000000 		.4byte	0xad
 2281 05b1 32       		.byte	0x32
 2282 05b2 0A       		.uleb128 0xa
 2283 05b3 390A0000 		.4byte	.LASF96
 2284 05b7 07       		.byte	0x7
 2285 05b8 50       		.byte	0x50
 2286 05b9 AD000000 		.4byte	0xad
 2287 05bd 33       		.byte	0x33
 2288 05be 0A       		.uleb128 0xa
 2289 05bf 73010000 		.4byte	.LASF97
 2290 05c3 07       		.byte	0x7
 2291 05c4 51       		.byte	0x51
 2292 05c5 AD000000 		.4byte	0xad
 2293 05c9 34       		.byte	0x34
 2294 05ca 0A       		.uleb128 0xa
 2295 05cb E30C0000 		.4byte	.LASF98
 2296 05cf 07       		.byte	0x7
 2297 05d0 52       		.byte	0x52
 2298 05d1 B8000000 		.4byte	0xb8
 2299 05d5 36       		.byte	0x36
 2300 05d6 0A       		.uleb128 0xa
 2301 05d7 FA010000 		.4byte	.LASF99
 2302 05db 07       		.byte	0x7
 2303 05dc 53       		.byte	0x53
 2304 05dd B8000000 		.4byte	0xb8
 2305 05e1 38       		.byte	0x38
 2306 05e2 0A       		.uleb128 0xa
 2307 05e3 24020000 		.4byte	.LASF100
 2308 05e7 07       		.byte	0x7
 2309 05e8 54       		.byte	0x54
 2310 05e9 B8000000 		.4byte	0xb8
 2311 05ed 3A       		.byte	0x3a
 2312 05ee 0A       		.uleb128 0xa
 2313 05ef 92120000 		.4byte	.LASF101
 2314 05f3 07       		.byte	0x7
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 102


 2315 05f4 55       		.byte	0x55
 2316 05f5 AD000000 		.4byte	0xad
 2317 05f9 3C       		.byte	0x3c
 2318 05fa 0A       		.uleb128 0xa
 2319 05fb 03060000 		.4byte	.LASF102
 2320 05ff 07       		.byte	0x7
 2321 0600 56       		.byte	0x56
 2322 0601 AD000000 		.4byte	0xad
 2323 0605 3D       		.byte	0x3d
 2324 0606 0A       		.uleb128 0xa
 2325 0607 910B0000 		.4byte	.LASF103
 2326 060b 07       		.byte	0x7
 2327 060c 57       		.byte	0x57
 2328 060d AD000000 		.4byte	0xad
 2329 0611 3E       		.byte	0x3e
 2330 0612 0A       		.uleb128 0xa
 2331 0613 A6000000 		.4byte	.LASF104
 2332 0617 07       		.byte	0x7
 2333 0618 58       		.byte	0x58
 2334 0619 AD000000 		.4byte	0xad
 2335 061d 3F       		.byte	0x3f
 2336 061e 0A       		.uleb128 0xa
 2337 061f 44010000 		.4byte	.LASF105
 2338 0623 07       		.byte	0x7
 2339 0624 59       		.byte	0x59
 2340 0625 AD000000 		.4byte	0xad
 2341 0629 40       		.byte	0x40
 2342 062a 0A       		.uleb128 0xa
 2343 062b 820A0000 		.4byte	.LASF106
 2344 062f 07       		.byte	0x7
 2345 0630 5A       		.byte	0x5a
 2346 0631 AD000000 		.4byte	0xad
 2347 0635 41       		.byte	0x41
 2348 0636 0A       		.uleb128 0xa
 2349 0637 9B110000 		.4byte	.LASF107
 2350 063b 07       		.byte	0x7
 2351 063c 5B       		.byte	0x5b
 2352 063d AD000000 		.4byte	0xad
 2353 0641 42       		.byte	0x42
 2354 0642 0A       		.uleb128 0xa
 2355 0643 EC060000 		.4byte	.LASF108
 2356 0647 07       		.byte	0x7
 2357 0648 5C       		.byte	0x5c
 2358 0649 AD000000 		.4byte	0xad
 2359 064d 43       		.byte	0x43
 2360 064e 0A       		.uleb128 0xa
 2361 064f 0E080000 		.4byte	.LASF109
 2362 0653 07       		.byte	0x7
 2363 0654 5D       		.byte	0x5d
 2364 0655 AD000000 		.4byte	0xad
 2365 0659 44       		.byte	0x44
 2366 065a 0A       		.uleb128 0xa
 2367 065b 120D0000 		.4byte	.LASF110
 2368 065f 07       		.byte	0x7
 2369 0660 5E       		.byte	0x5e
 2370 0661 D9000000 		.4byte	0xd9
 2371 0665 48       		.byte	0x48
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 103


 2372 0666 0A       		.uleb128 0xa
 2373 0667 17030000 		.4byte	.LASF111
 2374 066b 07       		.byte	0x7
 2375 066c 5F       		.byte	0x5f
 2376 066d D9000000 		.4byte	0xd9
 2377 0671 4C       		.byte	0x4c
 2378 0672 0A       		.uleb128 0xa
 2379 0673 79110000 		.4byte	.LASF112
 2380 0677 07       		.byte	0x7
 2381 0678 60       		.byte	0x60
 2382 0679 AD000000 		.4byte	0xad
 2383 067d 50       		.byte	0x50
 2384 067e 0A       		.uleb128 0xa
 2385 067f 37060000 		.4byte	.LASF113
 2386 0683 07       		.byte	0x7
 2387 0684 61       		.byte	0x61
 2388 0685 AD000000 		.4byte	0xad
 2389 0689 51       		.byte	0x51
 2390 068a 0A       		.uleb128 0xa
 2391 068b A3090000 		.4byte	.LASF114
 2392 068f 07       		.byte	0x7
 2393 0690 62       		.byte	0x62
 2394 0691 AD000000 		.4byte	0xad
 2395 0695 52       		.byte	0x52
 2396 0696 0A       		.uleb128 0xa
 2397 0697 99040000 		.4byte	.LASF115
 2398 069b 07       		.byte	0x7
 2399 069c 63       		.byte	0x63
 2400 069d AD000000 		.4byte	0xad
 2401 06a1 53       		.byte	0x53
 2402 06a2 0A       		.uleb128 0xa
 2403 06a3 FA100000 		.4byte	.LASF116
 2404 06a7 07       		.byte	0x7
 2405 06a8 64       		.byte	0x64
 2406 06a9 AD000000 		.4byte	0xad
 2407 06ad 54       		.byte	0x54
 2408 06ae 0A       		.uleb128 0xa
 2409 06af 7E060000 		.4byte	.LASF117
 2410 06b3 07       		.byte	0x7
 2411 06b4 65       		.byte	0x65
 2412 06b5 AD000000 		.4byte	0xad
 2413 06b9 55       		.byte	0x55
 2414 06ba 0A       		.uleb128 0xa
 2415 06bb 00000000 		.4byte	.LASF118
 2416 06bf 07       		.byte	0x7
 2417 06c0 66       		.byte	0x66
 2418 06c1 AD000000 		.4byte	0xad
 2419 06c5 56       		.byte	0x56
 2420 06c6 0A       		.uleb128 0xa
 2421 06c7 A90B0000 		.4byte	.LASF119
 2422 06cb 07       		.byte	0x7
 2423 06cc 67       		.byte	0x67
 2424 06cd AD000000 		.4byte	0xad
 2425 06d1 57       		.byte	0x57
 2426 06d2 0A       		.uleb128 0xa
 2427 06d3 EF050000 		.4byte	.LASF120
 2428 06d7 07       		.byte	0x7
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 104


 2429 06d8 68       		.byte	0x68
 2430 06d9 AD000000 		.4byte	0xad
 2431 06dd 58       		.byte	0x58
 2432 06de 0A       		.uleb128 0xa
 2433 06df B9120000 		.4byte	.LASF121
 2434 06e3 07       		.byte	0x7
 2435 06e4 69       		.byte	0x69
 2436 06e5 AD000000 		.4byte	0xad
 2437 06e9 59       		.byte	0x59
 2438 06ea 0A       		.uleb128 0xa
 2439 06eb D5110000 		.4byte	.LASF122
 2440 06ef 07       		.byte	0x7
 2441 06f0 6E       		.byte	0x6e
 2442 06f1 C3000000 		.4byte	0xc3
 2443 06f5 5A       		.byte	0x5a
 2444 06f6 0A       		.uleb128 0xa
 2445 06f7 07010000 		.4byte	.LASF123
 2446 06fb 07       		.byte	0x7
 2447 06fc 6F       		.byte	0x6f
 2448 06fd C3000000 		.4byte	0xc3
 2449 0701 5C       		.byte	0x5c
 2450 0702 0A       		.uleb128 0xa
 2451 0703 5F090000 		.4byte	.LASF124
 2452 0707 07       		.byte	0x7
 2453 0708 70       		.byte	0x70
 2454 0709 AD000000 		.4byte	0xad
 2455 070d 5E       		.byte	0x5e
 2456 070e 0A       		.uleb128 0xa
 2457 070f EE110000 		.4byte	.LASF125
 2458 0713 07       		.byte	0x7
 2459 0714 71       		.byte	0x71
 2460 0715 AD000000 		.4byte	0xad
 2461 0719 5F       		.byte	0x5f
 2462 071a 0A       		.uleb128 0xa
 2463 071b 12070000 		.4byte	.LASF126
 2464 071f 07       		.byte	0x7
 2465 0720 72       		.byte	0x72
 2466 0721 AD000000 		.4byte	0xad
 2467 0725 60       		.byte	0x60
 2468 0726 0A       		.uleb128 0xa
 2469 0727 64080000 		.4byte	.LASF127
 2470 072b 07       		.byte	0x7
 2471 072c 73       		.byte	0x73
 2472 072d D9000000 		.4byte	0xd9
 2473 0731 64       		.byte	0x64
 2474 0732 0A       		.uleb128 0xa
 2475 0733 6C130000 		.4byte	.LASF128
 2476 0737 07       		.byte	0x7
 2477 0738 76       		.byte	0x76
 2478 0739 C3000000 		.4byte	0xc3
 2479 073d 68       		.byte	0x68
 2480 073e 0A       		.uleb128 0xa
 2481 073f 720B0000 		.4byte	.LASF129
 2482 0743 07       		.byte	0x7
 2483 0744 77       		.byte	0x77
 2484 0745 C3000000 		.4byte	0xc3
 2485 0749 6A       		.byte	0x6a
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 105


 2486 074a 0A       		.uleb128 0xa
 2487 074b 1F0A0000 		.4byte	.LASF130
 2488 074f 07       		.byte	0x7
 2489 0750 78       		.byte	0x78
 2490 0751 C3000000 		.4byte	0xc3
 2491 0755 6C       		.byte	0x6c
 2492 0756 0A       		.uleb128 0xa
 2493 0757 5D030000 		.4byte	.LASF131
 2494 075b 07       		.byte	0x7
 2495 075c 79       		.byte	0x79
 2496 075d C3000000 		.4byte	0xc3
 2497 0761 6E       		.byte	0x6e
 2498 0762 0A       		.uleb128 0xa
 2499 0763 D7080000 		.4byte	.LASF132
 2500 0767 07       		.byte	0x7
 2501 0768 7B       		.byte	0x7b
 2502 0769 AD000000 		.4byte	0xad
 2503 076d 70       		.byte	0x70
 2504 076e 0A       		.uleb128 0xa
 2505 076f E9030000 		.4byte	.LASF133
 2506 0773 07       		.byte	0x7
 2507 0774 7C       		.byte	0x7c
 2508 0775 AD000000 		.4byte	0xad
 2509 0779 71       		.byte	0x71
 2510 077a 0A       		.uleb128 0xa
 2511 077b E9020000 		.4byte	.LASF134
 2512 077f 07       		.byte	0x7
 2513 0780 7D       		.byte	0x7d
 2514 0781 AD000000 		.4byte	0xad
 2515 0785 72       		.byte	0x72
 2516 0786 0A       		.uleb128 0xa
 2517 0787 1F050000 		.4byte	.LASF135
 2518 078b 07       		.byte	0x7
 2519 078c 7E       		.byte	0x7e
 2520 078d AD000000 		.4byte	0xad
 2521 0791 73       		.byte	0x73
 2522 0792 0A       		.uleb128 0xa
 2523 0793 220C0000 		.4byte	.LASF136
 2524 0797 07       		.byte	0x7
 2525 0798 80       		.byte	0x80
 2526 0799 C3000000 		.4byte	0xc3
 2527 079d 74       		.byte	0x74
 2528 079e 0A       		.uleb128 0xa
 2529 079f 050B0000 		.4byte	.LASF137
 2530 07a3 07       		.byte	0x7
 2531 07a4 81       		.byte	0x81
 2532 07a5 C3000000 		.4byte	0xc3
 2533 07a9 76       		.byte	0x76
 2534 07aa 0A       		.uleb128 0xa
 2535 07ab F9070000 		.4byte	.LASF138
 2536 07af 07       		.byte	0x7
 2537 07b0 82       		.byte	0x82
 2538 07b1 C3000000 		.4byte	0xc3
 2539 07b5 78       		.byte	0x78
 2540 07b6 0A       		.uleb128 0xa
 2541 07b7 87090000 		.4byte	.LASF139
 2542 07bb 07       		.byte	0x7
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 106


 2543 07bc 83       		.byte	0x83
 2544 07bd C3000000 		.4byte	0xc3
 2545 07c1 7A       		.byte	0x7a
 2546 07c2 0A       		.uleb128 0xa
 2547 07c3 720E0000 		.4byte	.LASF140
 2548 07c7 07       		.byte	0x7
 2549 07c8 86       		.byte	0x86
 2550 07c9 AD000000 		.4byte	0xad
 2551 07cd 7C       		.byte	0x7c
 2552 07ce 0A       		.uleb128 0xa
 2553 07cf 8A110000 		.4byte	.LASF141
 2554 07d3 07       		.byte	0x7
 2555 07d4 87       		.byte	0x87
 2556 07d5 AD000000 		.4byte	0xad
 2557 07d9 7D       		.byte	0x7d
 2558 07da 0A       		.uleb128 0xa
 2559 07db C3040000 		.4byte	.LASF142
 2560 07df 07       		.byte	0x7
 2561 07e0 88       		.byte	0x88
 2562 07e1 AD000000 		.4byte	0xad
 2563 07e5 7E       		.byte	0x7e
 2564 07e6 0A       		.uleb128 0xa
 2565 07e7 6C040000 		.4byte	.LASF143
 2566 07eb 07       		.byte	0x7
 2567 07ec 89       		.byte	0x89
 2568 07ed AD000000 		.4byte	0xad
 2569 07f1 7F       		.byte	0x7f
 2570 07f2 0A       		.uleb128 0xa
 2571 07f3 04050000 		.4byte	.LASF144
 2572 07f7 07       		.byte	0x7
 2573 07f8 8A       		.byte	0x8a
 2574 07f9 AD000000 		.4byte	0xad
 2575 07fd 80       		.byte	0x80
 2576 07fe 0A       		.uleb128 0xa
 2577 07ff 56110000 		.4byte	.LASF145
 2578 0803 07       		.byte	0x7
 2579 0804 8D       		.byte	0x8d
 2580 0805 D9000000 		.4byte	0xd9
 2581 0809 84       		.byte	0x84
 2582 080a 0A       		.uleb128 0xa
 2583 080b 870E0000 		.4byte	.LASF146
 2584 080f 07       		.byte	0x7
 2585 0810 8E       		.byte	0x8e
 2586 0811 D9000000 		.4byte	0xd9
 2587 0815 88       		.byte	0x88
 2588 0816 0A       		.uleb128 0xa
 2589 0817 17120000 		.4byte	.LASF147
 2590 081b 07       		.byte	0x7
 2591 081c 8F       		.byte	0x8f
 2592 081d D9000000 		.4byte	0xd9
 2593 0821 8C       		.byte	0x8c
 2594 0822 0A       		.uleb128 0xa
 2595 0823 0D0C0000 		.4byte	.LASF148
 2596 0827 07       		.byte	0x7
 2597 0828 90       		.byte	0x90
 2598 0829 D9000000 		.4byte	0xd9
 2599 082d 90       		.byte	0x90
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 107


 2600 082e 0A       		.uleb128 0xa
 2601 082f 090E0000 		.4byte	.LASF149
 2602 0833 07       		.byte	0x7
 2603 0834 91       		.byte	0x91
 2604 0835 D9000000 		.4byte	0xd9
 2605 0839 94       		.byte	0x94
 2606 083a 0A       		.uleb128 0xa
 2607 083b 10040000 		.4byte	.LASF150
 2608 083f 07       		.byte	0x7
 2609 0840 92       		.byte	0x92
 2610 0841 D9000000 		.4byte	0xd9
 2611 0845 98       		.byte	0x98
 2612 0846 0A       		.uleb128 0xa
 2613 0847 AA0E0000 		.4byte	.LASF151
 2614 084b 07       		.byte	0x7
 2615 084c 93       		.byte	0x93
 2616 084d D9000000 		.4byte	0xd9
 2617 0851 9C       		.byte	0x9c
 2618 0852 0A       		.uleb128 0xa
 2619 0853 D6060000 		.4byte	.LASF152
 2620 0857 07       		.byte	0x7
 2621 0858 94       		.byte	0x94
 2622 0859 D9000000 		.4byte	0xd9
 2623 085d A0       		.byte	0xa0
 2624 085e 0A       		.uleb128 0xa
 2625 085f F2000000 		.4byte	.LASF153
 2626 0863 07       		.byte	0x7
 2627 0864 95       		.byte	0x95
 2628 0865 C3000000 		.4byte	0xc3
 2629 0869 A4       		.byte	0xa4
 2630 086a 0A       		.uleb128 0xa
 2631 086b B1100000 		.4byte	.LASF154
 2632 086f 07       		.byte	0x7
 2633 0870 96       		.byte	0x96
 2634 0871 C3000000 		.4byte	0xc3
 2635 0875 A6       		.byte	0xa6
 2636 0876 0A       		.uleb128 0xa
 2637 0877 8C0F0000 		.4byte	.LASF155
 2638 087b 07       		.byte	0x7
 2639 087c 97       		.byte	0x97
 2640 087d C3000000 		.4byte	0xc3
 2641 0881 A8       		.byte	0xa8
 2642 0882 0A       		.uleb128 0xa
 2643 0883 3B090000 		.4byte	.LASF156
 2644 0887 07       		.byte	0x7
 2645 0888 98       		.byte	0x98
 2646 0889 C3000000 		.4byte	0xc3
 2647 088d AA       		.byte	0xaa
 2648 088e 0A       		.uleb128 0xa
 2649 088f 110A0000 		.4byte	.LASF157
 2650 0893 07       		.byte	0x7
 2651 0894 99       		.byte	0x99
 2652 0895 C3000000 		.4byte	0xc3
 2653 0899 AC       		.byte	0xac
 2654 089a 0A       		.uleb128 0xa
 2655 089b 920A0000 		.4byte	.LASF158
 2656 089f 07       		.byte	0x7
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 108


 2657 08a0 9A       		.byte	0x9a
 2658 08a1 C3000000 		.4byte	0xc3
 2659 08a5 AE       		.byte	0xae
 2660 08a6 0A       		.uleb128 0xa
 2661 08a7 6A030000 		.4byte	.LASF159
 2662 08ab 07       		.byte	0x7
 2663 08ac 9D       		.byte	0x9d
 2664 08ad C3000000 		.4byte	0xc3
 2665 08b1 B0       		.byte	0xb0
 2666 08b2 0A       		.uleb128 0xa
 2667 08b3 8A100000 		.4byte	.LASF160
 2668 08b7 07       		.byte	0x7
 2669 08b8 9E       		.byte	0x9e
 2670 08b9 D9000000 		.4byte	0xd9
 2671 08bd B4       		.byte	0xb4
 2672 08be 00       		.byte	0
 2673 08bf 03       		.uleb128 0x3
 2674 08c0 53040000 		.4byte	.LASF161
 2675 08c4 07       		.byte	0x7
 2676 08c5 9F       		.byte	0x9f
 2677 08c6 AE040000 		.4byte	0x4ae
 2678 08ca 02       		.uleb128 0x2
 2679 08cb 01       		.byte	0x1
 2680 08cc 08       		.byte	0x8
 2681 08cd B2000000 		.4byte	.LASF162
 2682 08d1 0D       		.uleb128 0xd
 2683 08d2 88050000 		.4byte	.LASF163
 2684 08d6 08       		.byte	0x8
 2685 08d7 F701     		.2byte	0x1f7
 2686 08d9 DD080000 		.4byte	0x8dd
 2687 08dd 02       		.uleb128 0x2
 2688 08de 04       		.byte	0x4
 2689 08df 04       		.byte	0x4
 2690 08e0 85040000 		.4byte	.LASF164
 2691 08e4 02       		.uleb128 0x2
 2692 08e5 08       		.byte	0x8
 2693 08e6 04       		.byte	0x4
 2694 08e7 59060000 		.4byte	.LASF165
 2695 08eb 0D       		.uleb128 0xd
 2696 08ec 9C090000 		.4byte	.LASF166
 2697 08f0 08       		.byte	0x8
 2698 08f1 EB03     		.2byte	0x3eb
 2699 08f3 C3000000 		.4byte	0xc3
 2700 08f7 0F       		.uleb128 0xf
 2701 08f8 04       		.byte	0x4
 2702 08f9 A6000000 		.4byte	0xa6
 2703 08fd 09       		.byte	0x9
 2704 08fe 1405     		.2byte	0x514
 2705 0900 38090000 		.4byte	0x938
 2706 0904 10       		.uleb128 0x10
 2707 0905 DE050000 		.4byte	.LASF167
 2708 0909 00       		.byte	0
 2709 090a 11       		.uleb128 0x11
 2710 090b A7110000 		.4byte	.LASF168
 2711 090f 01004200 		.4byte	0x420001
 2712 0913 11       		.uleb128 0x11
 2713 0914 39070000 		.4byte	.LASF169
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 109


 2714 0918 02004200 		.4byte	0x420002
 2715 091c 11       		.uleb128 0x11
 2716 091d 56070000 		.4byte	.LASF170
 2717 0921 03004200 		.4byte	0x420003
 2718 0925 11       		.uleb128 0x11
 2719 0926 82070000 		.4byte	.LASF171
 2720 092a 04004200 		.4byte	0x420004
 2721 092e 11       		.uleb128 0x11
 2722 092f EC100000 		.4byte	.LASF172
 2723 0933 FF004200 		.4byte	0x4200ff
 2724 0937 00       		.byte	0
 2725 0938 0D       		.uleb128 0xd
 2726 0939 C7000000 		.4byte	.LASF173
 2727 093d 09       		.byte	0x9
 2728 093e 1C05     		.2byte	0x51c
 2729 0940 F7080000 		.4byte	0x8f7
 2730 0944 0F       		.uleb128 0xf
 2731 0945 01       		.byte	0x1
 2732 0946 37000000 		.4byte	0x37
 2733 094a 09       		.byte	0x9
 2734 094b BC05     		.2byte	0x5bc
 2735 094d 6A090000 		.4byte	0x96a
 2736 0951 10       		.uleb128 0x10
 2737 0952 CD130000 		.4byte	.LASF174
 2738 0956 01       		.byte	0x1
 2739 0957 10       		.uleb128 0x10
 2740 0958 3F040000 		.4byte	.LASF175
 2741 095c 02       		.byte	0x2
 2742 095d 10       		.uleb128 0x10
 2743 095e 98130000 		.4byte	.LASF176
 2744 0962 04       		.byte	0x4
 2745 0963 10       		.uleb128 0x10
 2746 0964 B3130000 		.4byte	.LASF177
 2747 0968 08       		.byte	0x8
 2748 0969 00       		.byte	0
 2749 096a 0D       		.uleb128 0xd
 2750 096b 840C0000 		.4byte	.LASF178
 2751 096f 09       		.byte	0x9
 2752 0970 CB05     		.2byte	0x5cb
 2753 0972 44090000 		.4byte	0x944
 2754 0976 12       		.uleb128 0x12
 2755 0977 08       		.byte	0x8
 2756 0978 09       		.byte	0x9
 2757 0979 E705     		.2byte	0x5e7
 2758 097b 9A090000 		.4byte	0x99a
 2759 097f 13       		.uleb128 0x13
 2760 0980 AB040000 		.4byte	.LASF179
 2761 0984 09       		.byte	0x9
 2762 0985 E905     		.2byte	0x5e9
 2763 0987 9A090000 		.4byte	0x99a
 2764 098b 00       		.byte	0
 2765 098c 13       		.uleb128 0x13
 2766 098d D5090000 		.4byte	.LASF180
 2767 0991 09       		.byte	0x9
 2768 0992 EC05     		.2byte	0x5ec
 2769 0994 9A090000 		.4byte	0x99a
 2770 0998 04       		.byte	0x4
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 110


 2771 0999 00       		.byte	0
 2772 099a 14       		.uleb128 0x14
 2773 099b 04       		.byte	0x4
 2774 099c 0D       		.uleb128 0xd
 2775 099d 58000000 		.4byte	.LASF181
 2776 09a1 09       		.byte	0x9
 2777 09a2 EF05     		.2byte	0x5ef
 2778 09a4 76090000 		.4byte	0x976
 2779 09a8 15       		.uleb128 0x15
 2780 09a9 04       		.byte	0x4
 2781 09aa 9C090000 		.4byte	0x99c
 2782 09ae 0F       		.uleb128 0xf
 2783 09af 04       		.byte	0x4
 2784 09b0 A6000000 		.4byte	0xa6
 2785 09b4 02       		.byte	0x2
 2786 09b5 FE02     		.2byte	0x2fe
 2787 09b7 DD090000 		.4byte	0x9dd
 2788 09bb 10       		.uleb128 0x10
 2789 09bc 03090000 		.4byte	.LASF182
 2790 09c0 00       		.byte	0
 2791 09c1 11       		.uleb128 0x11
 2792 09c2 AE060000 		.4byte	.LASF183
 2793 09c6 01000600 		.4byte	0x60001
 2794 09ca 11       		.uleb128 0x11
 2795 09cb EF0A0000 		.4byte	.LASF184
 2796 09cf 02000600 		.4byte	0x60002
 2797 09d3 11       		.uleb128 0x11
 2798 09d4 05020000 		.4byte	.LASF185
 2799 09d8 03000600 		.4byte	0x60003
 2800 09dc 00       		.byte	0
 2801 09dd 0D       		.uleb128 0xd
 2802 09de AE080000 		.4byte	.LASF186
 2803 09e2 02       		.byte	0x2
 2804 09e3 0303     		.2byte	0x303
 2805 09e5 AE090000 		.4byte	0x9ae
 2806 09e9 0F       		.uleb128 0xf
 2807 09ea 01       		.byte	0x1
 2808 09eb 37000000 		.4byte	0x37
 2809 09ef 02       		.byte	0x2
 2810 09f0 0703     		.2byte	0x307
 2811 09f2 030A0000 		.4byte	0xa03
 2812 09f6 10       		.uleb128 0x10
 2813 09f7 B70A0000 		.4byte	.LASF187
 2814 09fb 00       		.byte	0
 2815 09fc 10       		.uleb128 0x10
 2816 09fd 25130000 		.4byte	.LASF188
 2817 0a01 01       		.byte	0x1
 2818 0a02 00       		.byte	0
 2819 0a03 0D       		.uleb128 0xd
 2820 0a04 3F030000 		.4byte	.LASF189
 2821 0a08 02       		.byte	0x2
 2822 0a09 0A03     		.2byte	0x30a
 2823 0a0b E9090000 		.4byte	0x9e9
 2824 0a0f 0F       		.uleb128 0xf
 2825 0a10 01       		.byte	0x1
 2826 0a11 37000000 		.4byte	0x37
 2827 0a15 02       		.byte	0x2
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 111


 2828 0a16 0E03     		.2byte	0x30e
 2829 0a18 290A0000 		.4byte	0xa29
 2830 0a1c 10       		.uleb128 0x10
 2831 0a1d EA0B0000 		.4byte	.LASF190
 2832 0a21 00       		.byte	0
 2833 0a22 10       		.uleb128 0x10
 2834 0a23 C7020000 		.4byte	.LASF191
 2835 0a27 01       		.byte	0x1
 2836 0a28 00       		.byte	0
 2837 0a29 0D       		.uleb128 0xd
 2838 0a2a D30F0000 		.4byte	.LASF192
 2839 0a2e 02       		.byte	0x2
 2840 0a2f 1103     		.2byte	0x311
 2841 0a31 0F0A0000 		.4byte	0xa0f
 2842 0a35 0F       		.uleb128 0xf
 2843 0a36 01       		.byte	0x1
 2844 0a37 37000000 		.4byte	0x37
 2845 0a3b 02       		.byte	0x2
 2846 0a3c 1503     		.2byte	0x315
 2847 0a3e 4F0A0000 		.4byte	0xa4f
 2848 0a42 10       		.uleb128 0x10
 2849 0a43 9E100000 		.4byte	.LASF193
 2850 0a47 00       		.byte	0
 2851 0a48 10       		.uleb128 0x10
 2852 0a49 DB120000 		.4byte	.LASF194
 2853 0a4d 01       		.byte	0x1
 2854 0a4e 00       		.byte	0
 2855 0a4f 0D       		.uleb128 0xd
 2856 0a50 84010000 		.4byte	.LASF195
 2857 0a54 02       		.byte	0x2
 2858 0a55 1803     		.2byte	0x318
 2859 0a57 350A0000 		.4byte	0xa35
 2860 0a5b 0F       		.uleb128 0xf
 2861 0a5c 01       		.byte	0x1
 2862 0a5d 37000000 		.4byte	0x37
 2863 0a61 02       		.byte	0x2
 2864 0a62 1C03     		.2byte	0x31c
 2865 0a64 750A0000 		.4byte	0xa75
 2866 0a68 10       		.uleb128 0x10
 2867 0a69 37110000 		.4byte	.LASF196
 2868 0a6d 00       		.byte	0
 2869 0a6e 10       		.uleb128 0x10
 2870 0a6f 650D0000 		.4byte	.LASF197
 2871 0a73 01       		.byte	0x1
 2872 0a74 00       		.byte	0
 2873 0a75 0D       		.uleb128 0xd
 2874 0a76 BE070000 		.4byte	.LASF198
 2875 0a7a 02       		.byte	0x2
 2876 0a7b 1F03     		.2byte	0x31f
 2877 0a7d 5B0A0000 		.4byte	0xa5b
 2878 0a81 0F       		.uleb128 0xf
 2879 0a82 01       		.byte	0x1
 2880 0a83 37000000 		.4byte	0x37
 2881 0a87 02       		.byte	0x2
 2882 0a88 2303     		.2byte	0x323
 2883 0a8a 950A0000 		.4byte	0xa95
 2884 0a8e 10       		.uleb128 0x10
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 112


 2885 0a8f 0E060000 		.4byte	.LASF199
 2886 0a93 00       		.byte	0
 2887 0a94 00       		.byte	0
 2888 0a95 0D       		.uleb128 0xd
 2889 0a96 BE0D0000 		.4byte	.LASF200
 2890 0a9a 02       		.byte	0x2
 2891 0a9b 2503     		.2byte	0x325
 2892 0a9d 810A0000 		.4byte	0xa81
 2893 0aa1 0F       		.uleb128 0xf
 2894 0aa2 02       		.byte	0x2
 2895 0aa3 5B000000 		.4byte	0x5b
 2896 0aa7 02       		.byte	0x2
 2897 0aa8 5703     		.2byte	0x357
 2898 0aaa DF0A0000 		.4byte	0xadf
 2899 0aae 10       		.uleb128 0x10
 2900 0aaf F50F0000 		.4byte	.LASF201
 2901 0ab3 00       		.byte	0
 2902 0ab4 16       		.uleb128 0x16
 2903 0ab5 BA010000 		.4byte	.LASF202
 2904 0ab9 0004     		.2byte	0x400
 2905 0abb 16       		.uleb128 0x16
 2906 0abc FE030000 		.4byte	.LASF203
 2907 0ac0 0006     		.2byte	0x600
 2908 0ac2 16       		.uleb128 0x16
 2909 0ac3 D6010000 		.4byte	.LASF204
 2910 0ac7 0008     		.2byte	0x800
 2911 0ac9 16       		.uleb128 0x16
 2912 0aca E8010000 		.4byte	.LASF205
 2913 0ace 000A     		.2byte	0xa00
 2914 0ad0 16       		.uleb128 0x16
 2915 0ad1 180B0000 		.4byte	.LASF206
 2916 0ad5 000C     		.2byte	0xc00
 2917 0ad7 16       		.uleb128 0x16
 2918 0ad8 92000000 		.4byte	.LASF207
 2919 0adc 000E     		.2byte	0xe00
 2920 0ade 00       		.byte	0
 2921 0adf 0F       		.uleb128 0xf
 2922 0ae0 04       		.byte	0x4
 2923 0ae1 A6000000 		.4byte	0xa6
 2924 0ae5 02       		.byte	0x2
 2925 0ae6 E403     		.2byte	0x3e4
 2926 0ae8 050B0000 		.4byte	0xb05
 2927 0aec 10       		.uleb128 0x10
 2928 0aed 980D0000 		.4byte	.LASF208
 2929 0af1 00       		.byte	0
 2930 0af2 11       		.uleb128 0x11
 2931 0af3 B3090000 		.4byte	.LASF209
 2932 0af7 00000200 		.4byte	0x20000
 2933 0afb 11       		.uleb128 0x11
 2934 0afc 7D080000 		.4byte	.LASF210
 2935 0b00 00000600 		.4byte	0x60000
 2936 0b04 00       		.byte	0
 2937 0b05 0D       		.uleb128 0xd
 2938 0b06 240D0000 		.4byte	.LASF211
 2939 0b0a 02       		.byte	0x2
 2940 0b0b E803     		.2byte	0x3e8
 2941 0b0d DF0A0000 		.4byte	0xadf
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 113


 2942 0b11 0F       		.uleb128 0xf
 2943 0b12 01       		.byte	0x1
 2944 0b13 37000000 		.4byte	0x37
 2945 0b17 02       		.byte	0x2
 2946 0b18 1304     		.2byte	0x413
 2947 0b1a 370B0000 		.4byte	0xb37
 2948 0b1e 10       		.uleb128 0x10
 2949 0b1f 97030000 		.4byte	.LASF212
 2950 0b23 00       		.byte	0
 2951 0b24 10       		.uleb128 0x10
 2952 0b25 C5050000 		.4byte	.LASF213
 2953 0b29 01       		.byte	0x1
 2954 0b2a 10       		.uleb128 0x10
 2955 0b2b A6070000 		.4byte	.LASF214
 2956 0b2f 02       		.byte	0x2
 2957 0b30 10       		.uleb128 0x10
 2958 0b31 51010000 		.4byte	.LASF215
 2959 0b35 03       		.byte	0x3
 2960 0b36 00       		.byte	0
 2961 0b37 0D       		.uleb128 0xd
 2962 0b38 EF120000 		.4byte	.LASF216
 2963 0b3c 02       		.byte	0x2
 2964 0b3d 1804     		.2byte	0x418
 2965 0b3f 110B0000 		.4byte	0xb11
 2966 0b43 12       		.uleb128 0x12
 2967 0b44 78       		.byte	0x78
 2968 0b45 02       		.byte	0x2
 2969 0b46 0205     		.2byte	0x502
 2970 0b48 100C0000 		.4byte	0xc10
 2971 0b4c 13       		.uleb128 0x13
 2972 0b4d A6050000 		.4byte	.LASF217
 2973 0b51 02       		.byte	0x2
 2974 0b52 0405     		.2byte	0x504
 2975 0b54 D9000000 		.4byte	0xd9
 2976 0b58 00       		.byte	0
 2977 0b59 13       		.uleb128 0x13
 2978 0b5a 2E100000 		.4byte	.LASF218
 2979 0b5e 02       		.byte	0x2
 2980 0b5f 0505     		.2byte	0x505
 2981 0b61 D9000000 		.4byte	0xd9
 2982 0b65 04       		.byte	0x4
 2983 0b66 13       		.uleb128 0x13
 2984 0b67 840B0000 		.4byte	.LASF219
 2985 0b6b 02       		.byte	0x2
 2986 0b6c 0605     		.2byte	0x506
 2987 0b6e D9000000 		.4byte	0xd9
 2988 0b72 08       		.byte	0x8
 2989 0b73 13       		.uleb128 0x13
 2990 0b74 C00E0000 		.4byte	.LASF220
 2991 0b78 02       		.byte	0x2
 2992 0b79 0705     		.2byte	0x507
 2993 0b7b D9000000 		.4byte	0xd9
 2994 0b7f 0C       		.byte	0xc
 2995 0b80 13       		.uleb128 0x13
 2996 0b81 5B050000 		.4byte	.LASF221
 2997 0b85 02       		.byte	0x2
 2998 0b86 0805     		.2byte	0x508
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 114


 2999 0b88 D9000000 		.4byte	0xd9
 3000 0b8c 10       		.byte	0x10
 3001 0b8d 13       		.uleb128 0x13
 3002 0b8e 31090000 		.4byte	.LASF222
 3003 0b92 02       		.byte	0x2
 3004 0b93 0905     		.2byte	0x509
 3005 0b95 370B0000 		.4byte	0xb37
 3006 0b99 14       		.byte	0x14
 3007 0b9a 13       		.uleb128 0x13
 3008 0b9b F2070000 		.4byte	.LASF223
 3009 0b9f 02       		.byte	0x2
 3010 0ba0 0A05     		.2byte	0x50a
 3011 0ba2 D9000000 		.4byte	0xd9
 3012 0ba6 18       		.byte	0x18
 3013 0ba7 13       		.uleb128 0x13
 3014 0ba8 2C120000 		.4byte	.LASF224
 3015 0bac 02       		.byte	0x2
 3016 0bad 0B05     		.2byte	0x50b
 3017 0baf 100C0000 		.4byte	0xc10
 3018 0bb3 1C       		.byte	0x1c
 3019 0bb4 13       		.uleb128 0x13
 3020 0bb5 63130000 		.4byte	.LASF225
 3021 0bb9 02       		.byte	0x2
 3022 0bba 0C05     		.2byte	0x50c
 3023 0bbc D9000000 		.4byte	0xd9
 3024 0bc0 5C       		.byte	0x5c
 3025 0bc1 13       		.uleb128 0x13
 3026 0bc2 33030000 		.4byte	.LASF226
 3027 0bc6 02       		.byte	0x2
 3028 0bc7 0D05     		.2byte	0x50d
 3029 0bc9 D9000000 		.4byte	0xd9
 3030 0bcd 60       		.byte	0x60
 3031 0bce 13       		.uleb128 0x13
 3032 0bcf CD120000 		.4byte	.LASF227
 3033 0bd3 02       		.byte	0x2
 3034 0bd4 0E05     		.2byte	0x50e
 3035 0bd6 D9000000 		.4byte	0xd9
 3036 0bda 64       		.byte	0x64
 3037 0bdb 13       		.uleb128 0x13
 3038 0bdc 370B0000 		.4byte	.LASF228
 3039 0be0 02       		.byte	0x2
 3040 0be1 0F05     		.2byte	0x50f
 3041 0be3 D9000000 		.4byte	0xd9
 3042 0be7 68       		.byte	0x68
 3043 0be8 13       		.uleb128 0x13
 3044 0be9 21090000 		.4byte	.LASF229
 3045 0bed 02       		.byte	0x2
 3046 0bee 1005     		.2byte	0x510
 3047 0bf0 D9000000 		.4byte	0xd9
 3048 0bf4 6C       		.byte	0x6c
 3049 0bf5 13       		.uleb128 0x13
 3050 0bf6 71120000 		.4byte	.LASF230
 3051 0bfa 02       		.byte	0x2
 3052 0bfb 1105     		.2byte	0x511
 3053 0bfd 200C0000 		.4byte	0xc20
 3054 0c01 70       		.byte	0x70
 3055 0c02 13       		.uleb128 0x13
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 115


 3056 0c03 4A070000 		.4byte	.LASF231
 3057 0c07 02       		.byte	0x2
 3058 0c08 1205     		.2byte	0x512
 3059 0c0a D9000000 		.4byte	0xd9
 3060 0c0e 74       		.byte	0x74
 3061 0c0f 00       		.byte	0
 3062 0c10 07       		.uleb128 0x7
 3063 0c11 D9000000 		.4byte	0xd9
 3064 0c15 200C0000 		.4byte	0xc20
 3065 0c19 08       		.uleb128 0x8
 3066 0c1a F6000000 		.4byte	0xf6
 3067 0c1e 0F       		.byte	0xf
 3068 0c1f 00       		.byte	0
 3069 0c20 02       		.uleb128 0x2
 3070 0c21 01       		.byte	0x1
 3071 0c22 02       		.byte	0x2
 3072 0c23 6D060000 		.4byte	.LASF232
 3073 0c27 0D       		.uleb128 0xd
 3074 0c28 92050000 		.4byte	.LASF233
 3075 0c2c 02       		.byte	0x2
 3076 0c2d 1305     		.2byte	0x513
 3077 0c2f 430B0000 		.4byte	0xb43
 3078 0c33 12       		.uleb128 0x12
 3079 0c34 08       		.byte	0x8
 3080 0c35 02       		.byte	0x2
 3081 0c36 1705     		.2byte	0x517
 3082 0c38 570C0000 		.4byte	0xc57
 3083 0c3c 13       		.uleb128 0x13
 3084 0c3d 23070000 		.4byte	.LASF234
 3085 0c41 02       		.byte	0x2
 3086 0c42 1905     		.2byte	0x519
 3087 0c44 D9000000 		.4byte	0xd9
 3088 0c48 00       		.byte	0
 3089 0c49 13       		.uleb128 0x13
 3090 0c4a FE0D0000 		.4byte	.LASF235
 3091 0c4e 02       		.byte	0x2
 3092 0c4f 1A05     		.2byte	0x51a
 3093 0c51 D9000000 		.4byte	0xd9
 3094 0c55 04       		.byte	0x4
 3095 0c56 00       		.byte	0
 3096 0c57 0D       		.uleb128 0xd
 3097 0c58 BC0C0000 		.4byte	.LASF236
 3098 0c5c 02       		.byte	0x2
 3099 0c5d 1B05     		.2byte	0x51b
 3100 0c5f 330C0000 		.4byte	0xc33
 3101 0c63 17       		.uleb128 0x17
 3102 0c64 5F0F0000 		.4byte	.LASF237
 3103 0c68 01       		.byte	0x1
 3104 0c69 E8       		.byte	0xe8
 3105 0c6a 01       		.byte	0x1
 3106 0c6b 7B0C0000 		.4byte	0xc7b
 3107 0c6f 18       		.uleb128 0x18
 3108 0c70 AB040000 		.4byte	.LASF179
 3109 0c74 01       		.byte	0x1
 3110 0c75 E8       		.byte	0xe8
 3111 0c76 7B0C0000 		.4byte	0xc7b
 3112 0c7a 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 116


 3113 0c7b 15       		.uleb128 0x15
 3114 0c7c 04       		.byte	0x4
 3115 0c7d A2040000 		.4byte	0x4a2
 3116 0c81 19       		.uleb128 0x19
 3117 0c82 F1090000 		.4byte	.LASF238
 3118 0c86 01       		.byte	0x1
 3119 0c87 6F01     		.2byte	0x16f
 3120 0c89 01       		.byte	0x1
 3121 0c8a A70C0000 		.4byte	0xca7
 3122 0c8e 1A       		.uleb128 0x1a
 3123 0c8f AB040000 		.4byte	.LASF179
 3124 0c93 01       		.byte	0x1
 3125 0c94 6F01     		.2byte	0x16f
 3126 0c96 7B0C0000 		.4byte	0xc7b
 3127 0c9a 1A       		.uleb128 0x1a
 3128 0c9b AB050000 		.4byte	.LASF239
 3129 0c9f 01       		.byte	0x1
 3130 0ca0 6F01     		.2byte	0x16f
 3131 0ca2 030A0000 		.4byte	0xa03
 3132 0ca6 00       		.byte	0
 3133 0ca7 19       		.uleb128 0x19
 3134 0ca8 25030000 		.4byte	.LASF240
 3135 0cac 01       		.byte	0x1
 3136 0cad 4901     		.2byte	0x149
 3137 0caf 01       		.byte	0x1
 3138 0cb0 C10C0000 		.4byte	0xcc1
 3139 0cb4 1A       		.uleb128 0x1a
 3140 0cb5 AB040000 		.4byte	.LASF179
 3141 0cb9 01       		.byte	0x1
 3142 0cba 4901     		.2byte	0x149
 3143 0cbc 7B0C0000 		.4byte	0xc7b
 3144 0cc0 00       		.byte	0
 3145 0cc1 1B       		.uleb128 0x1b
 3146 0cc2 71050000 		.4byte	.LASF242
 3147 0cc6 01       		.byte	0x1
 3148 0cc7 2002     		.2byte	0x220
 3149 0cc9 200C0000 		.4byte	0xc20
 3150 0ccd 01       		.byte	0x1
 3151 0cce F70C0000 		.4byte	0xcf7
 3152 0cd2 1A       		.uleb128 0x1a
 3153 0cd3 AB040000 		.4byte	.LASF179
 3154 0cd7 01       		.byte	0x1
 3155 0cd8 2002     		.2byte	0x220
 3156 0cda F70C0000 		.4byte	0xcf7
 3157 0cde 1A       		.uleb128 0x1a
 3158 0cdf 81000000 		.4byte	.LASF241
 3159 0ce3 01       		.byte	0x1
 3160 0ce4 2002     		.2byte	0x220
 3161 0ce6 D9000000 		.4byte	0xd9
 3162 0cea 1C       		.uleb128 0x1c
 3163 0ceb AF030000 		.4byte	.LASF245
 3164 0cef 01       		.byte	0x1
 3165 0cf0 2402     		.2byte	0x224
 3166 0cf2 200C0000 		.4byte	0xc20
 3167 0cf6 00       		.byte	0
 3168 0cf7 15       		.uleb128 0x15
 3169 0cf8 04       		.byte	0x4
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 117


 3170 0cf9 FD0C0000 		.4byte	0xcfd
 3171 0cfd 06       		.uleb128 0x6
 3172 0cfe A2040000 		.4byte	0x4a2
 3173 0d02 1B       		.uleb128 0x1b
 3174 0d03 EB080000 		.4byte	.LASF243
 3175 0d07 01       		.byte	0x1
 3176 0d08 7903     		.2byte	0x379
 3177 0d0a B8000000 		.4byte	0xb8
 3178 0d0e 01       		.byte	0x1
 3179 0d0f 500D0000 		.4byte	0xd50
 3180 0d13 1A       		.uleb128 0x1a
 3181 0d14 AB040000 		.4byte	.LASF179
 3182 0d18 01       		.byte	0x1
 3183 0d19 7903     		.2byte	0x379
 3184 0d1b F70C0000 		.4byte	0xcf7
 3185 0d1f 1A       		.uleb128 0x1a
 3186 0d20 81000000 		.4byte	.LASF241
 3187 0d24 01       		.byte	0x1
 3188 0d25 7903     		.2byte	0x379
 3189 0d27 D9000000 		.4byte	0xd9
 3190 0d2b 1A       		.uleb128 0x1a
 3191 0d2c 10010000 		.4byte	.LASF244
 3192 0d30 01       		.byte	0x1
 3193 0d31 7903     		.2byte	0x379
 3194 0d33 B8000000 		.4byte	0xb8
 3195 0d37 1C       		.uleb128 0x1c
 3196 0d38 490D0000 		.4byte	.LASF246
 3197 0d3c 01       		.byte	0x1
 3198 0d3d 7D03     		.2byte	0x37d
 3199 0d3f D9000000 		.4byte	0xd9
 3200 0d43 1C       		.uleb128 0x1c
 3201 0d44 830D0000 		.4byte	.LASF247
 3202 0d48 01       		.byte	0x1
 3203 0d49 7E03     		.2byte	0x37e
 3204 0d4b D9000000 		.4byte	0xd9
 3205 0d4f 00       		.byte	0
 3206 0d50 1D       		.uleb128 0x1d
 3207 0d51 6D110000 		.4byte	.LASF254
 3208 0d55 01       		.byte	0x1
 3209 0d56 38       		.byte	0x38
 3210 0d57 DD090000 		.4byte	0x9dd
 3211 0d5b 00000000 		.4byte	.LFB105
 3212 0d5f 14010000 		.4byte	.LFE105-.LFB105
 3213 0d63 01       		.uleb128 0x1
 3214 0d64 9C       		.byte	0x9c
 3215 0d65 E20D0000 		.4byte	0xde2
 3216 0d69 1E       		.uleb128 0x1e
 3217 0d6a AB040000 		.4byte	.LASF179
 3218 0d6e 01       		.byte	0x1
 3219 0d6f 38       		.byte	0x38
 3220 0d70 7B0C0000 		.4byte	0xc7b
 3221 0d74 00000000 		.4byte	.LLST0
 3222 0d78 1E       		.uleb128 0x1e
 3223 0d79 BD0B0000 		.4byte	.LASF248
 3224 0d7d 01       		.byte	0x1
 3225 0d7e 38       		.byte	0x38
 3226 0d7f E20D0000 		.4byte	0xde2
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 118


 3227 0d83 42000000 		.4byte	.LLST1
 3228 0d87 1F       		.uleb128 0x1f
 3229 0d88 D6040000 		.4byte	.LASF249
 3230 0d8c 01       		.byte	0x1
 3231 0d8d 3D       		.byte	0x3d
 3232 0d8e DD090000 		.4byte	0x9dd
 3233 0d92 84000000 		.4byte	.LLST2
 3234 0d96 1F       		.uleb128 0x1f
 3235 0d97 81000000 		.4byte	.LASF241
 3236 0d9b 01       		.byte	0x1
 3237 0d9c 3E       		.byte	0x3e
 3238 0d9d AD000000 		.4byte	0xad
 3239 0da1 A3000000 		.4byte	.LLST3
 3240 0da5 1F       		.uleb128 0x1f
 3241 0da6 FE0A0000 		.4byte	.LASF250
 3242 0daa 01       		.byte	0x1
 3243 0dab 3F       		.byte	0x3f
 3244 0dac CE000000 		.4byte	0xce
 3245 0db0 C2000000 		.4byte	.LLST4
 3246 0db4 1F       		.uleb128 0x1f
 3247 0db5 39100000 		.4byte	.LASF251
 3248 0db9 01       		.byte	0x1
 3249 0dba 40       		.byte	0x40
 3250 0dbb 200C0000 		.4byte	0xc20
 3251 0dbf D8000000 		.4byte	.LLST5
 3252 0dc3 1F       		.uleb128 0x1f
 3253 0dc4 1A010000 		.4byte	.LASF252
 3254 0dc8 01       		.byte	0x1
 3255 0dc9 41       		.byte	0x41
 3256 0dca 200C0000 		.4byte	0xc20
 3257 0dce 03010000 		.4byte	.LLST6
 3258 0dd2 1F       		.uleb128 0x1f
 3259 0dd3 F4040000 		.4byte	.LASF253
 3260 0dd7 01       		.byte	0x1
 3261 0dd8 42       		.byte	0x42
 3262 0dd9 200C0000 		.4byte	0xc20
 3263 0ddd 2A010000 		.4byte	.LLST7
 3264 0de1 00       		.byte	0
 3265 0de2 15       		.uleb128 0x15
 3266 0de3 04       		.byte	0x4
 3267 0de4 E80D0000 		.4byte	0xde8
 3268 0de8 06       		.uleb128 0x6
 3269 0de9 270C0000 		.4byte	0xc27
 3270 0ded 20       		.uleb128 0x20
 3271 0dee 21060000 		.4byte	.LASF255
 3272 0df2 01       		.byte	0x1
 3273 0df3 B3       		.byte	0xb3
 3274 0df4 DD090000 		.4byte	0x9dd
 3275 0df8 00000000 		.4byte	.LFB106
 3276 0dfc 5C000000 		.4byte	.LFE106-.LFB106
 3277 0e00 01       		.uleb128 0x1
 3278 0e01 9C       		.byte	0x9c
 3279 0e02 410E0000 		.4byte	0xe41
 3280 0e06 1E       		.uleb128 0x1e
 3281 0e07 AB040000 		.4byte	.LASF179
 3282 0e0b 01       		.byte	0x1
 3283 0e0c B3       		.byte	0xb3
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 119


 3284 0e0d 7B0C0000 		.4byte	0xc7b
 3285 0e11 62010000 		.4byte	.LLST8
 3286 0e15 1E       		.uleb128 0x1e
 3287 0e16 63120000 		.4byte	.LASF256
 3288 0e1a 01       		.byte	0x1
 3289 0e1b B3       		.byte	0xb3
 3290 0e1c 200C0000 		.4byte	0xc20
 3291 0e20 96010000 		.4byte	.LLST9
 3292 0e24 21       		.uleb128 0x21
 3293 0e25 D6040000 		.4byte	.LASF249
 3294 0e29 01       		.byte	0x1
 3295 0e2a B7       		.byte	0xb7
 3296 0e2b DD090000 		.4byte	0x9dd
 3297 0e2f 01       		.uleb128 0x1
 3298 0e30 50       		.byte	0x50
 3299 0e31 1F       		.uleb128 0x1f
 3300 0e32 81000000 		.4byte	.LASF241
 3301 0e36 01       		.byte	0x1
 3302 0e37 B8       		.byte	0xb8
 3303 0e38 AD000000 		.4byte	0xad
 3304 0e3c D0010000 		.4byte	.LLST10
 3305 0e40 00       		.byte	0
 3306 0e41 22       		.uleb128 0x22
 3307 0e42 630C0000 		.4byte	0xc63
 3308 0e46 00000000 		.4byte	.LFB107
 3309 0e4a 24000000 		.4byte	.LFE107-.LFB107
 3310 0e4e 01       		.uleb128 0x1
 3311 0e4f 9C       		.byte	0x9c
 3312 0e50 7C0E0000 		.4byte	0xe7c
 3313 0e54 23       		.uleb128 0x23
 3314 0e55 6F0C0000 		.4byte	0xc6f
 3315 0e59 E3010000 		.4byte	.LLST11
 3316 0e5d 24       		.uleb128 0x24
 3317 0e5e 08000000 		.4byte	.LBB8
 3318 0e62 1A000000 		.4byte	.LBE8-.LBB8
 3319 0e66 25       		.uleb128 0x25
 3320 0e67 6F0C0000 		.4byte	0xc6f
 3321 0e6b 26       		.uleb128 0x26
 3322 0e6c 22000000 		.4byte	.LVL26
 3323 0e70 B3160000 		.4byte	0x16b3
 3324 0e74 27       		.uleb128 0x27
 3325 0e75 01       		.uleb128 0x1
 3326 0e76 50       		.byte	0x50
 3327 0e77 01       		.uleb128 0x1
 3328 0e78 32       		.byte	0x32
 3329 0e79 00       		.byte	0
 3330 0e7a 00       		.byte	0
 3331 0e7b 00       		.byte	0
 3332 0e7c 22       		.uleb128 0x22
 3333 0e7d A70C0000 		.4byte	0xca7
 3334 0e81 00000000 		.4byte	.LFB109
 3335 0e85 34000000 		.4byte	.LFE109-.LFB109
 3336 0e89 01       		.uleb128 0x1
 3337 0e8a 9C       		.byte	0x9c
 3338 0e8b E30E0000 		.4byte	0xee3
 3339 0e8f 23       		.uleb128 0x23
 3340 0e90 B40C0000 		.4byte	0xcb4
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 120


 3341 0e94 04020000 		.4byte	.LLST12
 3342 0e98 24       		.uleb128 0x24
 3343 0e99 1A000000 		.4byte	.LBB14
 3344 0e9d 14000000 		.4byte	.LBE14-.LBB14
 3345 0ea1 23       		.uleb128 0x23
 3346 0ea2 B40C0000 		.4byte	0xcb4
 3347 0ea6 30020000 		.4byte	.LLST13
 3348 0eaa 28       		.uleb128 0x28
 3349 0eab 810C0000 		.4byte	0xc81
 3350 0eaf 28000000 		.4byte	.LBB16
 3351 0eb3 06000000 		.4byte	.LBE16-.LBB16
 3352 0eb7 01       		.byte	0x1
 3353 0eb8 5401     		.2byte	0x154
 3354 0eba D10E0000 		.4byte	0xed1
 3355 0ebe 23       		.uleb128 0x23
 3356 0ebf 9A0C0000 		.4byte	0xc9a
 3357 0ec3 4E020000 		.4byte	.LLST14
 3358 0ec7 23       		.uleb128 0x23
 3359 0ec8 8E0C0000 		.4byte	0xc8e
 3360 0ecc 62020000 		.4byte	.LLST15
 3361 0ed0 00       		.byte	0
 3362 0ed1 26       		.uleb128 0x26
 3363 0ed2 1E000000 		.4byte	.LVL29
 3364 0ed6 630C0000 		.4byte	0xc63
 3365 0eda 27       		.uleb128 0x27
 3366 0edb 01       		.uleb128 0x1
 3367 0edc 50       		.byte	0x50
 3368 0edd 02       		.uleb128 0x2
 3369 0ede 74       		.byte	0x74
 3370 0edf 00       		.sleb128 0
 3371 0ee0 00       		.byte	0
 3372 0ee1 00       		.byte	0
 3373 0ee2 00       		.byte	0
 3374 0ee3 22       		.uleb128 0x22
 3375 0ee4 810C0000 		.4byte	0xc81
 3376 0ee8 00000000 		.4byte	.LFB110
 3377 0eec 16000000 		.4byte	.LFE110-.LFB110
 3378 0ef0 01       		.uleb128 0x1
 3379 0ef1 9C       		.byte	0x9c
 3380 0ef2 050F0000 		.4byte	0xf05
 3381 0ef6 29       		.uleb128 0x29
 3382 0ef7 8E0C0000 		.4byte	0xc8e
 3383 0efb 01       		.uleb128 0x1
 3384 0efc 50       		.byte	0x50
 3385 0efd 29       		.uleb128 0x29
 3386 0efe 9A0C0000 		.4byte	0xc9a
 3387 0f02 01       		.uleb128 0x1
 3388 0f03 51       		.byte	0x51
 3389 0f04 00       		.byte	0
 3390 0f05 2A       		.uleb128 0x2a
 3391 0f06 12130000 		.4byte	.LASF257
 3392 0f0a 01       		.byte	0x1
 3393 0f0b 9301     		.2byte	0x193
 3394 0f0d 00000000 		.4byte	.LFB111
 3395 0f11 14000000 		.4byte	.LFE111-.LFB111
 3396 0f15 01       		.uleb128 0x1
 3397 0f16 9C       		.byte	0x9c
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 121


 3398 0f17 2A0F0000 		.4byte	0xf2a
 3399 0f1b 2B       		.uleb128 0x2b
 3400 0f1c AB040000 		.4byte	.LASF179
 3401 0f20 01       		.byte	0x1
 3402 0f21 9301     		.2byte	0x193
 3403 0f23 7B0C0000 		.4byte	0xc7b
 3404 0f27 01       		.uleb128 0x1
 3405 0f28 50       		.byte	0x50
 3406 0f29 00       		.byte	0
 3407 0f2a 2A       		.uleb128 0x2a
 3408 0f2b E30D0000 		.4byte	.LASF258
 3409 0f2f 01       		.byte	0x1
 3410 0f30 0F01     		.2byte	0x10f
 3411 0f32 00000000 		.4byte	.LFB108
 3412 0f36 48000000 		.4byte	.LFE108-.LFB108
 3413 0f3a 01       		.uleb128 0x1
 3414 0f3b 9C       		.byte	0x9c
 3415 0f3c 710F0000 		.4byte	0xf71
 3416 0f40 2C       		.uleb128 0x2c
 3417 0f41 AB040000 		.4byte	.LASF179
 3418 0f45 01       		.byte	0x1
 3419 0f46 0F01     		.2byte	0x10f
 3420 0f48 7B0C0000 		.4byte	0xc7b
 3421 0f4c 75020000 		.4byte	.LLST16
 3422 0f50 2D       		.uleb128 0x2d
 3423 0f51 F00C0000 		.4byte	.LASF259
 3424 0f55 01       		.byte	0x1
 3425 0f56 1101     		.2byte	0x111
 3426 0f58 D9000000 		.4byte	0xd9
 3427 0f5c A1020000 		.4byte	.LLST17
 3428 0f60 26       		.uleb128 0x26
 3429 0f61 24000000 		.4byte	.LVL38
 3430 0f65 050F0000 		.4byte	0xf05
 3431 0f69 27       		.uleb128 0x27
 3432 0f6a 01       		.uleb128 0x1
 3433 0f6b 50       		.byte	0x50
 3434 0f6c 02       		.uleb128 0x2
 3435 0f6d 74       		.byte	0x74
 3436 0f6e 00       		.sleb128 0
 3437 0f6f 00       		.byte	0
 3438 0f70 00       		.byte	0
 3439 0f71 2A       		.uleb128 0x2a
 3440 0f72 C1080000 		.4byte	.LASF260
 3441 0f76 01       		.byte	0x1
 3442 0f77 B701     		.2byte	0x1b7
 3443 0f79 00000000 		.4byte	.LFB112
 3444 0f7d 10000000 		.4byte	.LFE112-.LFB112
 3445 0f81 01       		.uleb128 0x1
 3446 0f82 9C       		.byte	0x9c
 3447 0f83 B60F0000 		.4byte	0xfb6
 3448 0f87 2B       		.uleb128 0x2b
 3449 0f88 AB040000 		.4byte	.LASF179
 3450 0f8c 01       		.byte	0x1
 3451 0f8d B701     		.2byte	0x1b7
 3452 0f8f 7B0C0000 		.4byte	0xc7b
 3453 0f93 01       		.uleb128 0x1
 3454 0f94 50       		.byte	0x50
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 122


 3455 0f95 2C       		.uleb128 0x2c
 3456 0f96 DE0D0000 		.4byte	.LASF261
 3457 0f9a 01       		.byte	0x1
 3458 0f9b B701     		.2byte	0x1b7
 3459 0f9d 050B0000 		.4byte	0xb05
 3460 0fa1 DF020000 		.4byte	.LLST18
 3461 0fa5 2D       		.uleb128 0x2d
 3462 0fa6 55120000 		.4byte	.LASF262
 3463 0faa 01       		.byte	0x1
 3464 0fab BC01     		.2byte	0x1bc
 3465 0fad D9000000 		.4byte	0xd9
 3466 0fb1 00030000 		.4byte	.LLST19
 3467 0fb5 00       		.byte	0
 3468 0fb6 2E       		.uleb128 0x2e
 3469 0fb7 7C130000 		.4byte	.LASF263
 3470 0fbb 01       		.byte	0x1
 3471 0fbc DE01     		.2byte	0x1de
 3472 0fbe DD090000 		.4byte	0x9dd
 3473 0fc2 00000000 		.4byte	.LFB113
 3474 0fc6 44000000 		.4byte	.LFE113-.LFB113
 3475 0fca 01       		.uleb128 0x1
 3476 0fcb 9C       		.byte	0x9c
 3477 0fcc 1F100000 		.4byte	0x101f
 3478 0fd0 2C       		.uleb128 0x2c
 3479 0fd1 AB040000 		.4byte	.LASF179
 3480 0fd5 01       		.byte	0x1
 3481 0fd6 DE01     		.2byte	0x1de
 3482 0fd8 7B0C0000 		.4byte	0xc7b
 3483 0fdc 25030000 		.4byte	.LLST20
 3484 0fe0 2B       		.uleb128 0x2b
 3485 0fe1 D9100000 		.4byte	.LASF264
 3486 0fe5 01       		.byte	0x1
 3487 0fe6 DE01     		.2byte	0x1de
 3488 0fe8 290A0000 		.4byte	0xa29
 3489 0fec 01       		.uleb128 0x1
 3490 0fed 51       		.byte	0x51
 3491 0fee 2D       		.uleb128 0x2d
 3492 0fef D6040000 		.4byte	.LASF249
 3493 0ff3 01       		.byte	0x1
 3494 0ff4 E201     		.2byte	0x1e2
 3495 0ff6 DD090000 		.4byte	0x9dd
 3496 0ffa 78030000 		.4byte	.LLST21
 3497 0ffe 2D       		.uleb128 0x2d
 3498 0fff 27110000 		.4byte	.LASF265
 3499 1003 01       		.byte	0x1
 3500 1004 E401     		.2byte	0x1e4
 3501 1006 D9000000 		.4byte	0xd9
 3502 100a 8C030000 		.4byte	.LLST22
 3503 100e 2F       		.uleb128 0x2f
 3504 100f 77647400 		.ascii	"wdt\000"
 3505 1013 01       		.byte	0x1
 3506 1014 E501     		.2byte	0x1e5
 3507 1016 D9000000 		.4byte	0xd9
 3508 101a B5030000 		.4byte	.LLST23
 3509 101e 00       		.byte	0
 3510 101f 2E       		.uleb128 0x2e
 3511 1020 CD030000 		.4byte	.LASF266
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 123


 3512 1024 01       		.byte	0x1
 3513 1025 5202     		.2byte	0x252
 3514 1027 200C0000 		.4byte	0xc20
 3515 102b 00000000 		.4byte	.LFB115
 3516 102f 20000000 		.4byte	.LFE115-.LFB115
 3517 1033 01       		.uleb128 0x1
 3518 1034 9C       		.byte	0x9c
 3519 1035 6A100000 		.4byte	0x106a
 3520 1039 2C       		.uleb128 0x2c
 3521 103a AB040000 		.4byte	.LASF179
 3522 103e 01       		.byte	0x1
 3523 103f 5202     		.2byte	0x252
 3524 1041 F70C0000 		.4byte	0xcf7
 3525 1045 0D040000 		.4byte	.LLST24
 3526 1049 2C       		.uleb128 0x2c
 3527 104a 81000000 		.4byte	.LASF241
 3528 104e 01       		.byte	0x1
 3529 104f 5202     		.2byte	0x252
 3530 1051 D9000000 		.4byte	0xd9
 3531 1055 39040000 		.4byte	.LLST25
 3532 1059 2D       		.uleb128 0x2d
 3533 105a B7050000 		.4byte	.LASF267
 3534 105e 01       		.byte	0x1
 3535 105f 5602     		.2byte	0x256
 3536 1061 200C0000 		.4byte	0xc20
 3537 1065 67040000 		.4byte	.LLST26
 3538 1069 00       		.byte	0
 3539 106a 30       		.uleb128 0x30
 3540 106b C40B0000 		.4byte	.LASF306
 3541 106f 02       		.byte	0x2
 3542 1070 FD07     		.2byte	0x7fd
 3543 1072 200C0000 		.4byte	0xc20
 3544 1076 03       		.byte	0x3
 3545 1077 94100000 		.4byte	0x1094
 3546 107b 1A       		.uleb128 0x1a
 3547 107c AB040000 		.4byte	.LASF179
 3548 1080 02       		.byte	0x2
 3549 1081 FD07     		.2byte	0x7fd
 3550 1083 F70C0000 		.4byte	0xcf7
 3551 1087 1A       		.uleb128 0x1a
 3552 1088 81000000 		.4byte	.LASF241
 3553 108c 02       		.byte	0x2
 3554 108d FD07     		.2byte	0x7fd
 3555 108f D9000000 		.4byte	0xd9
 3556 1093 00       		.byte	0
 3557 1094 22       		.uleb128 0x22
 3558 1095 C10C0000 		.4byte	0xcc1
 3559 1099 00000000 		.4byte	.LFB114
 3560 109d 24000000 		.4byte	.LFE114-.LFB114
 3561 10a1 01       		.uleb128 0x1
 3562 10a2 9C       		.byte	0x9c
 3563 10a3 2C110000 		.4byte	0x112c
 3564 10a7 23       		.uleb128 0x23
 3565 10a8 D20C0000 		.4byte	0xcd2
 3566 10ac 86040000 		.4byte	.LLST27
 3567 10b0 23       		.uleb128 0x23
 3568 10b1 DE0C0000 		.4byte	0xcde
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 124


 3569 10b5 B2040000 		.4byte	.LLST28
 3570 10b9 31       		.uleb128 0x31
 3571 10ba EA0C0000 		.4byte	0xcea
 3572 10be D3040000 		.4byte	.LLST29
 3573 10c2 28       		.uleb128 0x28
 3574 10c3 6A100000 		.4byte	0x106a
 3575 10c7 0A000000 		.4byte	.LBB22
 3576 10cb 08000000 		.4byte	.LBE22-.LBB22
 3577 10cf 01       		.byte	0x1
 3578 10d0 2A02     		.2byte	0x22a
 3579 10d2 00110000 		.4byte	0x1100
 3580 10d6 23       		.uleb128 0x23
 3581 10d7 87100000 		.4byte	0x1087
 3582 10db F2040000 		.4byte	.LLST30
 3583 10df 23       		.uleb128 0x23
 3584 10e0 7B100000 		.4byte	0x107b
 3585 10e4 13050000 		.4byte	.LLST31
 3586 10e8 26       		.uleb128 0x26
 3587 10e9 10000000 		.4byte	.LVL68
 3588 10ed 1F100000 		.4byte	0x101f
 3589 10f1 27       		.uleb128 0x27
 3590 10f2 01       		.uleb128 0x1
 3591 10f3 50       		.byte	0x50
 3592 10f4 02       		.uleb128 0x2
 3593 10f5 74       		.byte	0x74
 3594 10f6 00       		.sleb128 0
 3595 10f7 27       		.uleb128 0x27
 3596 10f8 01       		.uleb128 0x1
 3597 10f9 51       		.byte	0x51
 3598 10fa 03       		.uleb128 0x3
 3599 10fb F3       		.byte	0xf3
 3600 10fc 01       		.uleb128 0x1
 3601 10fd 51       		.byte	0x51
 3602 10fe 00       		.byte	0
 3603 10ff 00       		.byte	0
 3604 1100 24       		.uleb128 0x24
 3605 1101 16000000 		.4byte	.LBB24
 3606 1105 06000000 		.4byte	.LBE24-.LBB24
 3607 1109 23       		.uleb128 0x23
 3608 110a DE0C0000 		.4byte	0xcde
 3609 110e 26050000 		.4byte	.LLST32
 3610 1112 23       		.uleb128 0x23
 3611 1113 D20C0000 		.4byte	0xcd2
 3612 1117 3C050000 		.4byte	.LLST33
 3613 111b 24       		.uleb128 0x24
 3614 111c 16000000 		.4byte	.LBB25
 3615 1120 06000000 		.4byte	.LBE25-.LBB25
 3616 1124 32       		.uleb128 0x32
 3617 1125 EA0C0000 		.4byte	0xcea
 3618 1129 00       		.byte	0
 3619 112a 00       		.byte	0
 3620 112b 00       		.byte	0
 3621 112c 2E       		.uleb128 0x2e
 3622 112d 980F0000 		.4byte	.LASF268
 3623 1131 01       		.byte	0x1
 3624 1132 7902     		.2byte	0x279
 3625 1134 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 125


 3626 1138 00000000 		.4byte	.LFB116
 3627 113c 12000000 		.4byte	.LFE116-.LFB116
 3628 1140 01       		.uleb128 0x1
 3629 1141 9C       		.byte	0x9c
 3630 1142 77110000 		.4byte	0x1177
 3631 1146 2C       		.uleb128 0x2c
 3632 1147 AB040000 		.4byte	.LASF179
 3633 114b 01       		.byte	0x1
 3634 114c 7902     		.2byte	0x279
 3635 114e F70C0000 		.4byte	0xcf7
 3636 1152 4F050000 		.4byte	.LLST34
 3637 1156 2C       		.uleb128 0x2c
 3638 1157 81000000 		.4byte	.LASF241
 3639 115b 01       		.byte	0x1
 3640 115c 7902     		.2byte	0x279
 3641 115e D9000000 		.4byte	0xd9
 3642 1162 70050000 		.4byte	.LLST35
 3643 1166 2D       		.uleb128 0x2d
 3644 1167 EB0F0000 		.4byte	.LASF269
 3645 116b 01       		.byte	0x1
 3646 116c 7D02     		.2byte	0x27d
 3647 116e D9000000 		.4byte	0xd9
 3648 1172 9F050000 		.4byte	.LLST36
 3649 1176 00       		.byte	0
 3650 1177 2E       		.uleb128 0x2e
 3651 1178 04120000 		.4byte	.LASF270
 3652 117c 01       		.byte	0x1
 3653 117d 9E02     		.2byte	0x29e
 3654 117f CE000000 		.4byte	0xce
 3655 1183 00000000 		.4byte	.LFB117
 3656 1187 22000000 		.4byte	.LFE117-.LFB117
 3657 118b 01       		.uleb128 0x1
 3658 118c 9C       		.byte	0x9c
 3659 118d E5110000 		.4byte	0x11e5
 3660 1191 2C       		.uleb128 0x2c
 3661 1192 AB040000 		.4byte	.LASF179
 3662 1196 01       		.byte	0x1
 3663 1197 9E02     		.2byte	0x29e
 3664 1199 F70C0000 		.4byte	0xcf7
 3665 119d BE050000 		.4byte	.LLST37
 3666 11a1 2C       		.uleb128 0x2c
 3667 11a2 81000000 		.4byte	.LASF241
 3668 11a6 01       		.byte	0x1
 3669 11a7 9E02     		.2byte	0x29e
 3670 11a9 D9000000 		.4byte	0xd9
 3671 11ad DF050000 		.4byte	.LLST38
 3672 11b1 2D       		.uleb128 0x2d
 3673 11b2 EB0F0000 		.4byte	.LASF269
 3674 11b6 01       		.byte	0x1
 3675 11b7 A202     		.2byte	0x2a2
 3676 11b9 D9000000 		.4byte	0xd9
 3677 11bd 00060000 		.4byte	.LLST39
 3678 11c1 1C       		.uleb128 0x1c
 3679 11c2 C1030000 		.4byte	.LASF271
 3680 11c6 01       		.byte	0x1
 3681 11c7 A302     		.2byte	0x2a3
 3682 11c9 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 126


 3683 11cd 33       		.uleb128 0x33
 3684 11ce 86000000 		.4byte	.LASF272
 3685 11d2 01       		.byte	0x1
 3686 11d3 A402     		.2byte	0x2a4
 3687 11d5 CE000000 		.4byte	0xce
 3688 11d9 01       		.uleb128 0x1
 3689 11da 50       		.byte	0x50
 3690 11db 34       		.uleb128 0x34
 3691 11dc 16000000 		.4byte	.LVL80
 3692 11e0 C10C0000 		.4byte	0xcc1
 3693 11e4 00       		.byte	0
 3694 11e5 2A       		.uleb128 0x2a
 3695 11e6 78030000 		.4byte	.LASF273
 3696 11ea 01       		.byte	0x1
 3697 11eb CF02     		.2byte	0x2cf
 3698 11ed 00000000 		.4byte	.LFB118
 3699 11f1 0E000000 		.4byte	.LFE118-.LFB118
 3700 11f5 01       		.uleb128 0x1
 3701 11f6 9C       		.byte	0x9c
 3702 11f7 2A120000 		.4byte	0x122a
 3703 11fb 2B       		.uleb128 0x2b
 3704 11fc AB040000 		.4byte	.LASF179
 3705 1200 01       		.byte	0x1
 3706 1201 CF02     		.2byte	0x2cf
 3707 1203 7B0C0000 		.4byte	0xc7b
 3708 1207 01       		.uleb128 0x1
 3709 1208 50       		.byte	0x50
 3710 1209 2C       		.uleb128 0x2c
 3711 120a 22000000 		.4byte	.LASF274
 3712 120e 01       		.byte	0x1
 3713 120f CF02     		.2byte	0x2cf
 3714 1211 D9000000 		.4byte	0xd9
 3715 1215 14060000 		.4byte	.LLST40
 3716 1219 2D       		.uleb128 0x2d
 3717 121a 14000000 		.4byte	.LASF275
 3718 121e 01       		.byte	0x1
 3719 121f D302     		.2byte	0x2d3
 3720 1221 D9000000 		.4byte	0xd9
 3721 1225 35060000 		.4byte	.LLST41
 3722 1229 00       		.byte	0
 3723 122a 2A       		.uleb128 0x2a
 3724 122b DE070000 		.4byte	.LASF276
 3725 122f 01       		.byte	0x1
 3726 1230 F202     		.2byte	0x2f2
 3727 1232 00000000 		.4byte	.LFB119
 3728 1236 0C000000 		.4byte	.LFE119-.LFB119
 3729 123a 01       		.uleb128 0x1
 3730 123b 9C       		.byte	0x9c
 3731 123c 6F120000 		.4byte	0x126f
 3732 1240 2B       		.uleb128 0x2b
 3733 1241 AB040000 		.4byte	.LASF179
 3734 1245 01       		.byte	0x1
 3735 1246 F202     		.2byte	0x2f2
 3736 1248 7B0C0000 		.4byte	0xc7b
 3737 124c 01       		.uleb128 0x1
 3738 124d 50       		.byte	0x50
 3739 124e 2C       		.uleb128 0x2c
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 127


 3740 124f F40D0000 		.4byte	.LASF277
 3741 1253 01       		.byte	0x1
 3742 1254 F202     		.2byte	0x2f2
 3743 1256 D9000000 		.4byte	0xd9
 3744 125a 53060000 		.4byte	.LLST42
 3745 125e 2D       		.uleb128 0x2d
 3746 125f 14000000 		.4byte	.LASF275
 3747 1263 01       		.byte	0x1
 3748 1264 F602     		.2byte	0x2f6
 3749 1266 D9000000 		.4byte	0xd9
 3750 126a 74060000 		.4byte	.LLST43
 3751 126e 00       		.byte	0
 3752 126f 2E       		.uleb128 0x2e
 3753 1270 A8120000 		.4byte	.LASF278
 3754 1274 01       		.byte	0x1
 3755 1275 1803     		.2byte	0x318
 3756 1277 DD090000 		.4byte	0x9dd
 3757 127b 00000000 		.4byte	.LFB120
 3758 127f 1C000000 		.4byte	.LFE120-.LFB120
 3759 1283 01       		.uleb128 0x1
 3760 1284 9C       		.byte	0x9c
 3761 1285 B8120000 		.4byte	0x12b8
 3762 1289 2C       		.uleb128 0x2c
 3763 128a 81000000 		.4byte	.LASF241
 3764 128e 01       		.byte	0x1
 3765 128f 1803     		.2byte	0x318
 3766 1291 D9000000 		.4byte	0xd9
 3767 1295 92060000 		.4byte	.LLST44
 3768 1299 2B       		.uleb128 0x2b
 3769 129a 18050000 		.4byte	.LASF279
 3770 129e 01       		.byte	0x1
 3771 129f 1803     		.2byte	0x318
 3772 12a1 B8000000 		.4byte	0xb8
 3773 12a5 01       		.uleb128 0x1
 3774 12a6 51       		.byte	0x51
 3775 12a7 2D       		.uleb128 0x2d
 3776 12a8 D6040000 		.4byte	.LASF249
 3777 12ac 01       		.byte	0x1
 3778 12ad 1C03     		.2byte	0x31c
 3779 12af DD090000 		.4byte	0x9dd
 3780 12b3 CC060000 		.4byte	.LLST45
 3781 12b7 00       		.byte	0
 3782 12b8 2E       		.uleb128 0x2e
 3783 12b9 630E0000 		.4byte	.LASF280
 3784 12bd 01       		.byte	0x1
 3785 12be 4203     		.2byte	0x342
 3786 12c0 DD090000 		.4byte	0x9dd
 3787 12c4 00000000 		.4byte	.LFB121
 3788 12c8 1C000000 		.4byte	.LFE121-.LFB121
 3789 12cc 01       		.uleb128 0x1
 3790 12cd 9C       		.byte	0x9c
 3791 12ce 01130000 		.4byte	0x1301
 3792 12d2 2C       		.uleb128 0x2c
 3793 12d3 81000000 		.4byte	.LASF241
 3794 12d7 01       		.byte	0x1
 3795 12d8 4203     		.2byte	0x342
 3796 12da D9000000 		.4byte	0xd9
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 128


 3797 12de 0B070000 		.4byte	.LLST46
 3798 12e2 2B       		.uleb128 0x2b
 3799 12e3 6B010000 		.4byte	.LASF281
 3800 12e7 01       		.byte	0x1
 3801 12e8 4203     		.2byte	0x342
 3802 12ea CE000000 		.4byte	0xce
 3803 12ee 01       		.uleb128 0x1
 3804 12ef 51       		.byte	0x51
 3805 12f0 2D       		.uleb128 0x2d
 3806 12f1 D6040000 		.4byte	.LASF249
 3807 12f5 01       		.byte	0x1
 3808 12f6 4603     		.2byte	0x346
 3809 12f8 DD090000 		.4byte	0x9dd
 3810 12fc 45070000 		.4byte	.LLST47
 3811 1300 00       		.byte	0
 3812 1301 35       		.uleb128 0x35
 3813 1302 020D0000 		.4byte	0xd02
 3814 1306 00000000 		.4byte	.LFB122
 3815 130a 64000000 		.4byte	.LFE122-.LFB122
 3816 130e 01       		.uleb128 0x1
 3817 130f 9C       		.byte	0x9c
 3818 1310 8B130000 		.4byte	0x138b
 3819 1314 23       		.uleb128 0x23
 3820 1315 130D0000 		.4byte	0xd13
 3821 1319 84070000 		.4byte	.LLST48
 3822 131d 23       		.uleb128 0x23
 3823 131e 1F0D0000 		.4byte	0xd1f
 3824 1322 A5070000 		.4byte	.LLST49
 3825 1326 23       		.uleb128 0x23
 3826 1327 2B0D0000 		.4byte	0xd2b
 3827 132b D1070000 		.4byte	.LLST50
 3828 132f 32       		.uleb128 0x32
 3829 1330 370D0000 		.4byte	0xd37
 3830 1334 32       		.uleb128 0x32
 3831 1335 430D0000 		.4byte	0xd43
 3832 1339 24       		.uleb128 0x24
 3833 133a 0A000000 		.4byte	.LBB28
 3834 133e 52000000 		.4byte	.LBE28-.LBB28
 3835 1342 23       		.uleb128 0x23
 3836 1343 2B0D0000 		.4byte	0xd2b
 3837 1347 FD070000 		.4byte	.LLST51
 3838 134b 23       		.uleb128 0x23
 3839 134c 1F0D0000 		.4byte	0xd1f
 3840 1350 10080000 		.4byte	.LLST52
 3841 1354 23       		.uleb128 0x23
 3842 1355 130D0000 		.4byte	0xd13
 3843 1359 3C080000 		.4byte	.LLST53
 3844 135d 24       		.uleb128 0x24
 3845 135e 0A000000 		.4byte	.LBB29
 3846 1362 52000000 		.4byte	.LBE29-.LBB29
 3847 1366 31       		.uleb128 0x31
 3848 1367 370D0000 		.4byte	0xd37
 3849 136b 5D080000 		.4byte	.LLST54
 3850 136f 31       		.uleb128 0x31
 3851 1370 430D0000 		.4byte	0xd43
 3852 1374 70080000 		.4byte	.LLST55
 3853 1378 26       		.uleb128 0x26
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 129


 3854 1379 3A000000 		.4byte	.LVL108
 3855 137d C10C0000 		.4byte	0xcc1
 3856 1381 27       		.uleb128 0x27
 3857 1382 01       		.uleb128 0x1
 3858 1383 51       		.byte	0x51
 3859 1384 02       		.uleb128 0x2
 3860 1385 75       		.byte	0x75
 3861 1386 00       		.sleb128 0
 3862 1387 00       		.byte	0
 3863 1388 00       		.byte	0
 3864 1389 00       		.byte	0
 3865 138a 00       		.byte	0
 3866 138b 36       		.uleb128 0x36
 3867 138c 74100000 		.4byte	.LASF282
 3868 1390 01       		.byte	0x1
 3869 1391 DA03     		.2byte	0x3da
 3870 1393 D1080000 		.4byte	0x8d1
 3871 1397 00000000 		.4byte	.LFB123
 3872 139b 40000000 		.4byte	.LFE123-.LFB123
 3873 139f 01       		.uleb128 0x1
 3874 13a0 9C       		.byte	0x9c
 3875 13a1 FD130000 		.4byte	0x13fd
 3876 13a5 2C       		.uleb128 0x2c
 3877 13a6 AB040000 		.4byte	.LASF179
 3878 13aa 01       		.byte	0x1
 3879 13ab DA03     		.2byte	0x3da
 3880 13ad F70C0000 		.4byte	0xcf7
 3881 13b1 94080000 		.4byte	.LLST56
 3882 13b5 2C       		.uleb128 0x2c
 3883 13b6 81000000 		.4byte	.LASF241
 3884 13ba 01       		.byte	0x1
 3885 13bb DA03     		.2byte	0x3da
 3886 13bd D9000000 		.4byte	0xd9
 3887 13c1 CE080000 		.4byte	.LLST57
 3888 13c5 2C       		.uleb128 0x2c
 3889 13c6 10010000 		.4byte	.LASF244
 3890 13ca 01       		.byte	0x1
 3891 13cb DA03     		.2byte	0x3da
 3892 13cd B8000000 		.4byte	0xb8
 3893 13d1 13090000 		.4byte	.LLST58
 3894 13d5 2D       		.uleb128 0x2d
 3895 13d6 60060000 		.4byte	.LASF283
 3896 13da 01       		.byte	0x1
 3897 13db DE03     		.2byte	0x3de
 3898 13dd D1080000 		.4byte	0x8d1
 3899 13e1 4A090000 		.4byte	.LLST59
 3900 13e5 26       		.uleb128 0x26
 3901 13e6 12000000 		.4byte	.LVL118
 3902 13ea 020D0000 		.4byte	0xd02
 3903 13ee 27       		.uleb128 0x27
 3904 13ef 01       		.uleb128 0x1
 3905 13f0 50       		.byte	0x50
 3906 13f1 03       		.uleb128 0x3
 3907 13f2 F3       		.byte	0xf3
 3908 13f3 01       		.uleb128 0x1
 3909 13f4 50       		.byte	0x50
 3910 13f5 27       		.uleb128 0x27
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 130


 3911 13f6 01       		.uleb128 0x1
 3912 13f7 51       		.byte	0x51
 3913 13f8 02       		.uleb128 0x2
 3914 13f9 74       		.byte	0x74
 3915 13fa 00       		.sleb128 0
 3916 13fb 00       		.byte	0
 3917 13fc 00       		.byte	0
 3918 13fd 36       		.uleb128 0x36
 3919 13fe BF060000 		.4byte	.LASF284
 3920 1402 01       		.byte	0x1
 3921 1403 1D04     		.2byte	0x41d
 3922 1405 B8000000 		.4byte	0xb8
 3923 1409 00000000 		.4byte	.LFB124
 3924 140d 4C000000 		.4byte	.LFE124-.LFB124
 3925 1411 01       		.uleb128 0x1
 3926 1412 9C       		.byte	0x9c
 3927 1413 6F140000 		.4byte	0x146f
 3928 1417 2C       		.uleb128 0x2c
 3929 1418 AB040000 		.4byte	.LASF179
 3930 141c 01       		.byte	0x1
 3931 141d 1D04     		.2byte	0x41d
 3932 141f F70C0000 		.4byte	0xcf7
 3933 1423 9E090000 		.4byte	.LLST60
 3934 1427 2C       		.uleb128 0x2c
 3935 1428 81000000 		.4byte	.LASF241
 3936 142c 01       		.byte	0x1
 3937 142d 1D04     		.2byte	0x41d
 3938 142f D9000000 		.4byte	0xd9
 3939 1433 BF090000 		.4byte	.LLST61
 3940 1437 2C       		.uleb128 0x2c
 3941 1438 10010000 		.4byte	.LASF244
 3942 143c 01       		.byte	0x1
 3943 143d 1D04     		.2byte	0x41d
 3944 143f B8000000 		.4byte	0xb8
 3945 1443 EB090000 		.4byte	.LLST62
 3946 1447 2D       		.uleb128 0x2d
 3947 1448 FF0B0000 		.4byte	.LASF285
 3948 144c 01       		.byte	0x1
 3949 144d 2104     		.2byte	0x421
 3950 144f CE000000 		.4byte	0xce
 3951 1453 220A0000 		.4byte	.LLST63
 3952 1457 26       		.uleb128 0x26
 3953 1458 16000000 		.4byte	.LVL130
 3954 145c 020D0000 		.4byte	0xd02
 3955 1460 27       		.uleb128 0x27
 3956 1461 01       		.uleb128 0x1
 3957 1462 50       		.byte	0x50
 3958 1463 03       		.uleb128 0x3
 3959 1464 F3       		.byte	0xf3
 3960 1465 01       		.uleb128 0x1
 3961 1466 50       		.byte	0x50
 3962 1467 27       		.uleb128 0x27
 3963 1468 01       		.uleb128 0x1
 3964 1469 51       		.byte	0x51
 3965 146a 02       		.uleb128 0x2
 3966 146b 76       		.byte	0x76
 3967 146c 00       		.sleb128 0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 131


 3968 146d 00       		.byte	0
 3969 146e 00       		.byte	0
 3970 146f 36       		.uleb128 0x36
 3971 1470 36050000 		.4byte	.LASF286
 3972 1474 01       		.byte	0x1
 3973 1475 6804     		.2byte	0x468
 3974 1477 CE000000 		.4byte	0xce
 3975 147b 00000000 		.4byte	.LFB125
 3976 147f 3C000000 		.4byte	.LFE125-.LFB125
 3977 1483 01       		.uleb128 0x1
 3978 1484 9C       		.byte	0x9c
 3979 1485 E1140000 		.4byte	0x14e1
 3980 1489 2C       		.uleb128 0x2c
 3981 148a AB040000 		.4byte	.LASF179
 3982 148e 01       		.byte	0x1
 3983 148f 6804     		.2byte	0x468
 3984 1491 F70C0000 		.4byte	0xcf7
 3985 1495 6D0A0000 		.4byte	.LLST64
 3986 1499 2C       		.uleb128 0x2c
 3987 149a 81000000 		.4byte	.LASF241
 3988 149e 01       		.byte	0x1
 3989 149f 6804     		.2byte	0x468
 3990 14a1 D9000000 		.4byte	0xd9
 3991 14a5 8E0A0000 		.4byte	.LLST65
 3992 14a9 2C       		.uleb128 0x2c
 3993 14aa 10010000 		.4byte	.LASF244
 3994 14ae 01       		.byte	0x1
 3995 14af 6804     		.2byte	0x468
 3996 14b1 B8000000 		.4byte	0xb8
 3997 14b5 BA0A0000 		.4byte	.LLST66
 3998 14b9 2D       		.uleb128 0x2d
 3999 14ba A0080000 		.4byte	.LASF287
 4000 14be 01       		.byte	0x1
 4001 14bf 6C04     		.2byte	0x46c
 4002 14c1 E4000000 		.4byte	0xe4
 4003 14c5 E60A0000 		.4byte	.LLST67
 4004 14c9 26       		.uleb128 0x26
 4005 14ca 16000000 		.4byte	.LVL141
 4006 14ce 020D0000 		.4byte	0xd02
 4007 14d2 27       		.uleb128 0x27
 4008 14d3 01       		.uleb128 0x1
 4009 14d4 50       		.byte	0x50
 4010 14d5 03       		.uleb128 0x3
 4011 14d6 F3       		.byte	0xf3
 4012 14d7 01       		.uleb128 0x1
 4013 14d8 50       		.byte	0x50
 4014 14d9 27       		.uleb128 0x27
 4015 14da 01       		.uleb128 0x1
 4016 14db 51       		.byte	0x51
 4017 14dc 02       		.uleb128 0x2
 4018 14dd 74       		.byte	0x74
 4019 14de 00       		.sleb128 0
 4020 14df 00       		.byte	0
 4021 14e0 00       		.byte	0
 4022 14e1 2A       		.uleb128 0x2a
 4023 14e2 0A110000 		.4byte	.LASF288
 4024 14e6 01       		.byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 132


 4025 14e7 9C04     		.2byte	0x49c
 4026 14e9 00000000 		.4byte	.LFB126
 4027 14ed 16000000 		.4byte	.LFE126-.LFB126
 4028 14f1 01       		.uleb128 0x1
 4029 14f2 9C       		.byte	0x9c
 4030 14f3 58150000 		.4byte	0x1558
 4031 14f7 2B       		.uleb128 0x2b
 4032 14f8 AB040000 		.4byte	.LASF179
 4033 14fc 01       		.byte	0x1
 4034 14fd 9C04     		.2byte	0x49c
 4035 14ff 7B0C0000 		.4byte	0xc7b
 4036 1503 01       		.uleb128 0x1
 4037 1504 50       		.byte	0x50
 4038 1505 2C       		.uleb128 0x2c
 4039 1506 E5000000 		.4byte	.LASF289
 4040 150a 01       		.byte	0x1
 4041 150b 9C04     		.2byte	0x49c
 4042 150d 950A0000 		.4byte	0xa95
 4043 1511 120B0000 		.4byte	.LLST68
 4044 1515 2C       		.uleb128 0x2c
 4045 1516 5A0D0000 		.4byte	.LASF290
 4046 151a 01       		.byte	0x1
 4047 151b 9C04     		.2byte	0x49c
 4048 151d D9000000 		.4byte	0xd9
 4049 1521 4C0B0000 		.4byte	.LLST69
 4050 1525 2C       		.uleb128 0x2c
 4051 1526 21110000 		.4byte	.LASF291
 4052 152a 01       		.byte	0x1
 4053 152b 9C04     		.2byte	0x49c
 4054 152d 4F0A0000 		.4byte	0xa4f
 4055 1531 860B0000 		.4byte	.LLST70
 4056 1535 33       		.uleb128 0x33
 4057 1536 5B0A0000 		.4byte	.LASF292
 4058 153a 01       		.byte	0x1
 4059 153b A204     		.2byte	0x4a2
 4060 153d 58150000 		.4byte	0x1558
 4061 1541 04       		.uleb128 0x4
 4062 1542 70       		.byte	0x70
 4063 1543 8006     		.sleb128 768
 4064 1545 9F       		.byte	0x9f
 4065 1546 33       		.uleb128 0x33
 4066 1547 FF020000 		.4byte	.LASF293
 4067 154b 01       		.byte	0x1
 4068 154c A304     		.2byte	0x4a3
 4069 154e 58150000 		.4byte	0x1558
 4070 1552 04       		.uleb128 0x4
 4071 1553 70       		.byte	0x70
 4072 1554 8406     		.sleb128 772
 4073 1556 9F       		.byte	0x9f
 4074 1557 00       		.byte	0
 4075 1558 15       		.uleb128 0x15
 4076 1559 04       		.byte	0x4
 4077 155a FD000000 		.4byte	0xfd
 4078 155e 2E       		.uleb128 0x2e
 4079 155f 44080000 		.4byte	.LASF294
 4080 1563 01       		.byte	0x1
 4081 1564 CA04     		.2byte	0x4ca
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 133


 4082 1566 D9000000 		.4byte	0xd9
 4083 156a 00000000 		.4byte	.LFB127
 4084 156e 08000000 		.4byte	.LFE127-.LFB127
 4085 1572 01       		.uleb128 0x1
 4086 1573 9C       		.byte	0x9c
 4087 1574 97150000 		.4byte	0x1597
 4088 1578 2C       		.uleb128 0x2c
 4089 1579 AB040000 		.4byte	.LASF179
 4090 157d 01       		.byte	0x1
 4091 157e CA04     		.2byte	0x4ca
 4092 1580 F70C0000 		.4byte	0xcf7
 4093 1584 C00B0000 		.4byte	.LLST71
 4094 1588 2B       		.uleb128 0x2b
 4095 1589 E5000000 		.4byte	.LASF289
 4096 158d 01       		.byte	0x1
 4097 158e CA04     		.2byte	0x4ca
 4098 1590 950A0000 		.4byte	0xa95
 4099 1594 01       		.uleb128 0x1
 4100 1595 51       		.byte	0x51
 4101 1596 00       		.byte	0
 4102 1597 2A       		.uleb128 0x2a
 4103 1598 F7060000 		.4byte	.LASF295
 4104 159c 01       		.byte	0x1
 4105 159d EB04     		.2byte	0x4eb
 4106 159f 00000000 		.4byte	.LFB128
 4107 15a3 18000000 		.4byte	.LFE128-.LFB128
 4108 15a7 01       		.uleb128 0x1
 4109 15a8 9C       		.byte	0x9c
 4110 15a9 DC150000 		.4byte	0x15dc
 4111 15ad 2B       		.uleb128 0x2b
 4112 15ae AB040000 		.4byte	.LASF179
 4113 15b2 01       		.byte	0x1
 4114 15b3 EB04     		.2byte	0x4eb
 4115 15b5 7B0C0000 		.4byte	0xc7b
 4116 15b9 01       		.uleb128 0x1
 4117 15ba 50       		.byte	0x50
 4118 15bb 2C       		.uleb128 0x2c
 4119 15bc 5A0D0000 		.4byte	.LASF290
 4120 15c0 01       		.byte	0x1
 4121 15c1 EB04     		.2byte	0x4eb
 4122 15c3 D9000000 		.4byte	0xd9
 4123 15c7 E10B0000 		.4byte	.LLST72
 4124 15cb 2C       		.uleb128 0x2c
 4125 15cc A6050000 		.4byte	.LASF217
 4126 15d0 01       		.byte	0x1
 4127 15d1 EB04     		.2byte	0x4eb
 4128 15d3 750A0000 		.4byte	0xa75
 4129 15d7 1B0C0000 		.4byte	.LLST73
 4130 15db 00       		.byte	0
 4131 15dc 2E       		.uleb128 0x2e
 4132 15dd 26040000 		.4byte	.LASF296
 4133 15e1 01       		.byte	0x1
 4134 15e2 1205     		.2byte	0x512
 4135 15e4 38090000 		.4byte	0x938
 4136 15e8 00000000 		.4byte	.LFB129
 4137 15ec 1C000000 		.4byte	.LFE129-.LFB129
 4138 15f0 01       		.uleb128 0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 134


 4139 15f1 9C       		.byte	0x9c
 4140 15f2 36160000 		.4byte	0x1636
 4141 15f6 2C       		.uleb128 0x2c
 4142 15f7 BA110000 		.4byte	.LASF297
 4143 15fb 01       		.byte	0x1
 4144 15fc 1205     		.2byte	0x512
 4145 15fe A8090000 		.4byte	0x9a8
 4146 1602 550C0000 		.4byte	.LLST74
 4147 1606 2C       		.uleb128 0x2c
 4148 1607 DE0D0000 		.4byte	.LASF261
 4149 160b 01       		.byte	0x1
 4150 160c 1205     		.2byte	0x512
 4151 160e 6A090000 		.4byte	0x96a
 4152 1612 8F0C0000 		.4byte	.LLST75
 4153 1616 37       		.uleb128 0x37
 4154 1617 D80A0000 		.4byte	.LASF298
 4155 161b 01       		.byte	0x1
 4156 161c 1405     		.2byte	0x514
 4157 161e 38090000 		.4byte	0x938
 4158 1622 00       		.byte	0
 4159 1623 34       		.uleb128 0x34
 4160 1624 0C000000 		.4byte	.LVL163
 4161 1628 2A0F0000 		.4byte	0xf2a
 4162 162c 34       		.uleb128 0x34
 4163 162d 18000000 		.4byte	.LVL166
 4164 1631 A70C0000 		.4byte	0xca7
 4165 1635 00       		.byte	0
 4166 1636 21       		.uleb128 0x21
 4167 1637 45130000 		.4byte	.LASF299
 4168 163b 01       		.byte	0x1
 4169 163c 16       		.byte	0x16
 4170 163d 570C0000 		.4byte	0xc57
 4171 1641 05       		.uleb128 0x5
 4172 1642 03       		.byte	0x3
 4173 1643 00000000 		.4byte	enabledBeforeSleep
 4174 1647 38       		.uleb128 0x38
 4175 1648 77000000 		.4byte	.LASF300
 4176 164c 07       		.byte	0x7
 4177 164d A7       		.byte	0xa7
 4178 164e 52160000 		.4byte	0x1652
 4179 1652 15       		.uleb128 0x15
 4180 1653 04       		.byte	0x4
 4181 1654 58160000 		.4byte	0x1658
 4182 1658 06       		.uleb128 0x6
 4183 1659 BF080000 		.4byte	0x8bf
 4184 165d 07       		.uleb128 0x7
 4185 165e 6D160000 		.4byte	0x166d
 4186 1662 6D160000 		.4byte	0x166d
 4187 1666 08       		.uleb128 0x8
 4188 1667 F6000000 		.4byte	0xf6
 4189 166b 0F       		.byte	0xf
 4190 166c 00       		.byte	0
 4191 166d 05       		.uleb128 0x5
 4192 166e B8000000 		.4byte	0xb8
 4193 1672 39       		.uleb128 0x39
 4194 1673 79090000 		.4byte	.LASF301
 4195 1677 01       		.byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 135


 4196 1678 1C       		.byte	0x1c
 4197 1679 83160000 		.4byte	0x1683
 4198 167d 05       		.uleb128 0x5
 4199 167e 03       		.byte	0x3
 4200 167f 00000000 		.4byte	Cy_SAR_offset
 4201 1683 05       		.uleb128 0x5
 4202 1684 5D160000 		.4byte	0x165d
 4203 1688 07       		.uleb128 0x7
 4204 1689 98160000 		.4byte	0x1698
 4205 168d 98160000 		.4byte	0x1698
 4206 1691 08       		.uleb128 0x8
 4207 1692 F6000000 		.4byte	0xf6
 4208 1696 0F       		.byte	0xf
 4209 1697 00       		.byte	0
 4210 1698 05       		.uleb128 0x5
 4211 1699 CE000000 		.4byte	0xce
 4212 169d 39       		.uleb128 0x39
 4213 169e A00A0000 		.4byte	.LASF302
 4214 16a2 01       		.byte	0x1
 4215 16a3 1D       		.byte	0x1d
 4216 16a4 AE160000 		.4byte	0x16ae
 4217 16a8 05       		.uleb128 0x5
 4218 16a9 03       		.byte	0x3
 4219 16aa 00000000 		.4byte	Cy_SAR_countsPer10Volt
 4220 16ae 05       		.uleb128 0x5
 4221 16af 88160000 		.4byte	0x1688
 4222 16b3 3A       		.uleb128 0x3a
 4223 16b4 1C100000 		.4byte	.LASF307
 4224 16b8 1C100000 		.4byte	.LASF307
 4225 16bc 08       		.byte	0x8
 4226 16bd 8A03     		.2byte	0x38a
 4227 16bf 00       		.byte	0
 4228              		.section	.debug_abbrev,"",%progbits
 4229              	.Ldebug_abbrev0:
 4230 0000 01       		.uleb128 0x1
 4231 0001 11       		.uleb128 0x11
 4232 0002 01       		.byte	0x1
 4233 0003 25       		.uleb128 0x25
 4234 0004 0E       		.uleb128 0xe
 4235 0005 13       		.uleb128 0x13
 4236 0006 0B       		.uleb128 0xb
 4237 0007 03       		.uleb128 0x3
 4238 0008 0E       		.uleb128 0xe
 4239 0009 1B       		.uleb128 0x1b
 4240 000a 0E       		.uleb128 0xe
 4241 000b 55       		.uleb128 0x55
 4242 000c 17       		.uleb128 0x17
 4243 000d 11       		.uleb128 0x11
 4244 000e 01       		.uleb128 0x1
 4245 000f 10       		.uleb128 0x10
 4246 0010 17       		.uleb128 0x17
 4247 0011 00       		.byte	0
 4248 0012 00       		.byte	0
 4249 0013 02       		.uleb128 0x2
 4250 0014 24       		.uleb128 0x24
 4251 0015 00       		.byte	0
 4252 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 136


 4253 0017 0B       		.uleb128 0xb
 4254 0018 3E       		.uleb128 0x3e
 4255 0019 0B       		.uleb128 0xb
 4256 001a 03       		.uleb128 0x3
 4257 001b 0E       		.uleb128 0xe
 4258 001c 00       		.byte	0
 4259 001d 00       		.byte	0
 4260 001e 03       		.uleb128 0x3
 4261 001f 16       		.uleb128 0x16
 4262 0020 00       		.byte	0
 4263 0021 03       		.uleb128 0x3
 4264 0022 0E       		.uleb128 0xe
 4265 0023 3A       		.uleb128 0x3a
 4266 0024 0B       		.uleb128 0xb
 4267 0025 3B       		.uleb128 0x3b
 4268 0026 0B       		.uleb128 0xb
 4269 0027 49       		.uleb128 0x49
 4270 0028 13       		.uleb128 0x13
 4271 0029 00       		.byte	0
 4272 002a 00       		.byte	0
 4273 002b 04       		.uleb128 0x4
 4274 002c 24       		.uleb128 0x24
 4275 002d 00       		.byte	0
 4276 002e 0B       		.uleb128 0xb
 4277 002f 0B       		.uleb128 0xb
 4278 0030 3E       		.uleb128 0x3e
 4279 0031 0B       		.uleb128 0xb
 4280 0032 03       		.uleb128 0x3
 4281 0033 08       		.uleb128 0x8
 4282 0034 00       		.byte	0
 4283 0035 00       		.byte	0
 4284 0036 05       		.uleb128 0x5
 4285 0037 35       		.uleb128 0x35
 4286 0038 00       		.byte	0
 4287 0039 49       		.uleb128 0x49
 4288 003a 13       		.uleb128 0x13
 4289 003b 00       		.byte	0
 4290 003c 00       		.byte	0
 4291 003d 06       		.uleb128 0x6
 4292 003e 26       		.uleb128 0x26
 4293 003f 00       		.byte	0
 4294 0040 49       		.uleb128 0x49
 4295 0041 13       		.uleb128 0x13
 4296 0042 00       		.byte	0
 4297 0043 00       		.byte	0
 4298 0044 07       		.uleb128 0x7
 4299 0045 01       		.uleb128 0x1
 4300 0046 01       		.byte	0x1
 4301 0047 49       		.uleb128 0x49
 4302 0048 13       		.uleb128 0x13
 4303 0049 01       		.uleb128 0x1
 4304 004a 13       		.uleb128 0x13
 4305 004b 00       		.byte	0
 4306 004c 00       		.byte	0
 4307 004d 08       		.uleb128 0x8
 4308 004e 21       		.uleb128 0x21
 4309 004f 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 137


 4310 0050 49       		.uleb128 0x49
 4311 0051 13       		.uleb128 0x13
 4312 0052 2F       		.uleb128 0x2f
 4313 0053 0B       		.uleb128 0xb
 4314 0054 00       		.byte	0
 4315 0055 00       		.byte	0
 4316 0056 09       		.uleb128 0x9
 4317 0057 13       		.uleb128 0x13
 4318 0058 01       		.byte	0x1
 4319 0059 0B       		.uleb128 0xb
 4320 005a 05       		.uleb128 0x5
 4321 005b 3A       		.uleb128 0x3a
 4322 005c 0B       		.uleb128 0xb
 4323 005d 3B       		.uleb128 0x3b
 4324 005e 0B       		.uleb128 0xb
 4325 005f 01       		.uleb128 0x1
 4326 0060 13       		.uleb128 0x13
 4327 0061 00       		.byte	0
 4328 0062 00       		.byte	0
 4329 0063 0A       		.uleb128 0xa
 4330 0064 0D       		.uleb128 0xd
 4331 0065 00       		.byte	0
 4332 0066 03       		.uleb128 0x3
 4333 0067 0E       		.uleb128 0xe
 4334 0068 3A       		.uleb128 0x3a
 4335 0069 0B       		.uleb128 0xb
 4336 006a 3B       		.uleb128 0x3b
 4337 006b 0B       		.uleb128 0xb
 4338 006c 49       		.uleb128 0x49
 4339 006d 13       		.uleb128 0x13
 4340 006e 38       		.uleb128 0x38
 4341 006f 0B       		.uleb128 0xb
 4342 0070 00       		.byte	0
 4343 0071 00       		.byte	0
 4344 0072 0B       		.uleb128 0xb
 4345 0073 0D       		.uleb128 0xd
 4346 0074 00       		.byte	0
 4347 0075 03       		.uleb128 0x3
 4348 0076 0E       		.uleb128 0xe
 4349 0077 3A       		.uleb128 0x3a
 4350 0078 0B       		.uleb128 0xb
 4351 0079 3B       		.uleb128 0x3b
 4352 007a 0B       		.uleb128 0xb
 4353 007b 49       		.uleb128 0x49
 4354 007c 13       		.uleb128 0x13
 4355 007d 38       		.uleb128 0x38
 4356 007e 05       		.uleb128 0x5
 4357 007f 00       		.byte	0
 4358 0080 00       		.byte	0
 4359 0081 0C       		.uleb128 0xc
 4360 0082 21       		.uleb128 0x21
 4361 0083 00       		.byte	0
 4362 0084 49       		.uleb128 0x49
 4363 0085 13       		.uleb128 0x13
 4364 0086 2F       		.uleb128 0x2f
 4365 0087 05       		.uleb128 0x5
 4366 0088 00       		.byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 138


 4367 0089 00       		.byte	0
 4368 008a 0D       		.uleb128 0xd
 4369 008b 16       		.uleb128 0x16
 4370 008c 00       		.byte	0
 4371 008d 03       		.uleb128 0x3
 4372 008e 0E       		.uleb128 0xe
 4373 008f 3A       		.uleb128 0x3a
 4374 0090 0B       		.uleb128 0xb
 4375 0091 3B       		.uleb128 0x3b
 4376 0092 05       		.uleb128 0x5
 4377 0093 49       		.uleb128 0x49
 4378 0094 13       		.uleb128 0x13
 4379 0095 00       		.byte	0
 4380 0096 00       		.byte	0
 4381 0097 0E       		.uleb128 0xe
 4382 0098 13       		.uleb128 0x13
 4383 0099 01       		.byte	0x1
 4384 009a 0B       		.uleb128 0xb
 4385 009b 0B       		.uleb128 0xb
 4386 009c 3A       		.uleb128 0x3a
 4387 009d 0B       		.uleb128 0xb
 4388 009e 3B       		.uleb128 0x3b
 4389 009f 0B       		.uleb128 0xb
 4390 00a0 01       		.uleb128 0x1
 4391 00a1 13       		.uleb128 0x13
 4392 00a2 00       		.byte	0
 4393 00a3 00       		.byte	0
 4394 00a4 0F       		.uleb128 0xf
 4395 00a5 04       		.uleb128 0x4
 4396 00a6 01       		.byte	0x1
 4397 00a7 0B       		.uleb128 0xb
 4398 00a8 0B       		.uleb128 0xb
 4399 00a9 49       		.uleb128 0x49
 4400 00aa 13       		.uleb128 0x13
 4401 00ab 3A       		.uleb128 0x3a
 4402 00ac 0B       		.uleb128 0xb
 4403 00ad 3B       		.uleb128 0x3b
 4404 00ae 05       		.uleb128 0x5
 4405 00af 01       		.uleb128 0x1
 4406 00b0 13       		.uleb128 0x13
 4407 00b1 00       		.byte	0
 4408 00b2 00       		.byte	0
 4409 00b3 10       		.uleb128 0x10
 4410 00b4 28       		.uleb128 0x28
 4411 00b5 00       		.byte	0
 4412 00b6 03       		.uleb128 0x3
 4413 00b7 0E       		.uleb128 0xe
 4414 00b8 1C       		.uleb128 0x1c
 4415 00b9 0B       		.uleb128 0xb
 4416 00ba 00       		.byte	0
 4417 00bb 00       		.byte	0
 4418 00bc 11       		.uleb128 0x11
 4419 00bd 28       		.uleb128 0x28
 4420 00be 00       		.byte	0
 4421 00bf 03       		.uleb128 0x3
 4422 00c0 0E       		.uleb128 0xe
 4423 00c1 1C       		.uleb128 0x1c
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 139


 4424 00c2 06       		.uleb128 0x6
 4425 00c3 00       		.byte	0
 4426 00c4 00       		.byte	0
 4427 00c5 12       		.uleb128 0x12
 4428 00c6 13       		.uleb128 0x13
 4429 00c7 01       		.byte	0x1
 4430 00c8 0B       		.uleb128 0xb
 4431 00c9 0B       		.uleb128 0xb
 4432 00ca 3A       		.uleb128 0x3a
 4433 00cb 0B       		.uleb128 0xb
 4434 00cc 3B       		.uleb128 0x3b
 4435 00cd 05       		.uleb128 0x5
 4436 00ce 01       		.uleb128 0x1
 4437 00cf 13       		.uleb128 0x13
 4438 00d0 00       		.byte	0
 4439 00d1 00       		.byte	0
 4440 00d2 13       		.uleb128 0x13
 4441 00d3 0D       		.uleb128 0xd
 4442 00d4 00       		.byte	0
 4443 00d5 03       		.uleb128 0x3
 4444 00d6 0E       		.uleb128 0xe
 4445 00d7 3A       		.uleb128 0x3a
 4446 00d8 0B       		.uleb128 0xb
 4447 00d9 3B       		.uleb128 0x3b
 4448 00da 05       		.uleb128 0x5
 4449 00db 49       		.uleb128 0x49
 4450 00dc 13       		.uleb128 0x13
 4451 00dd 38       		.uleb128 0x38
 4452 00de 0B       		.uleb128 0xb
 4453 00df 00       		.byte	0
 4454 00e0 00       		.byte	0
 4455 00e1 14       		.uleb128 0x14
 4456 00e2 0F       		.uleb128 0xf
 4457 00e3 00       		.byte	0
 4458 00e4 0B       		.uleb128 0xb
 4459 00e5 0B       		.uleb128 0xb
 4460 00e6 00       		.byte	0
 4461 00e7 00       		.byte	0
 4462 00e8 15       		.uleb128 0x15
 4463 00e9 0F       		.uleb128 0xf
 4464 00ea 00       		.byte	0
 4465 00eb 0B       		.uleb128 0xb
 4466 00ec 0B       		.uleb128 0xb
 4467 00ed 49       		.uleb128 0x49
 4468 00ee 13       		.uleb128 0x13
 4469 00ef 00       		.byte	0
 4470 00f0 00       		.byte	0
 4471 00f1 16       		.uleb128 0x16
 4472 00f2 28       		.uleb128 0x28
 4473 00f3 00       		.byte	0
 4474 00f4 03       		.uleb128 0x3
 4475 00f5 0E       		.uleb128 0xe
 4476 00f6 1C       		.uleb128 0x1c
 4477 00f7 05       		.uleb128 0x5
 4478 00f8 00       		.byte	0
 4479 00f9 00       		.byte	0
 4480 00fa 17       		.uleb128 0x17
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 140


 4481 00fb 2E       		.uleb128 0x2e
 4482 00fc 01       		.byte	0x1
 4483 00fd 3F       		.uleb128 0x3f
 4484 00fe 19       		.uleb128 0x19
 4485 00ff 03       		.uleb128 0x3
 4486 0100 0E       		.uleb128 0xe
 4487 0101 3A       		.uleb128 0x3a
 4488 0102 0B       		.uleb128 0xb
 4489 0103 3B       		.uleb128 0x3b
 4490 0104 0B       		.uleb128 0xb
 4491 0105 27       		.uleb128 0x27
 4492 0106 19       		.uleb128 0x19
 4493 0107 20       		.uleb128 0x20
 4494 0108 0B       		.uleb128 0xb
 4495 0109 01       		.uleb128 0x1
 4496 010a 13       		.uleb128 0x13
 4497 010b 00       		.byte	0
 4498 010c 00       		.byte	0
 4499 010d 18       		.uleb128 0x18
 4500 010e 05       		.uleb128 0x5
 4501 010f 00       		.byte	0
 4502 0110 03       		.uleb128 0x3
 4503 0111 0E       		.uleb128 0xe
 4504 0112 3A       		.uleb128 0x3a
 4505 0113 0B       		.uleb128 0xb
 4506 0114 3B       		.uleb128 0x3b
 4507 0115 0B       		.uleb128 0xb
 4508 0116 49       		.uleb128 0x49
 4509 0117 13       		.uleb128 0x13
 4510 0118 00       		.byte	0
 4511 0119 00       		.byte	0
 4512 011a 19       		.uleb128 0x19
 4513 011b 2E       		.uleb128 0x2e
 4514 011c 01       		.byte	0x1
 4515 011d 3F       		.uleb128 0x3f
 4516 011e 19       		.uleb128 0x19
 4517 011f 03       		.uleb128 0x3
 4518 0120 0E       		.uleb128 0xe
 4519 0121 3A       		.uleb128 0x3a
 4520 0122 0B       		.uleb128 0xb
 4521 0123 3B       		.uleb128 0x3b
 4522 0124 05       		.uleb128 0x5
 4523 0125 27       		.uleb128 0x27
 4524 0126 19       		.uleb128 0x19
 4525 0127 20       		.uleb128 0x20
 4526 0128 0B       		.uleb128 0xb
 4527 0129 01       		.uleb128 0x1
 4528 012a 13       		.uleb128 0x13
 4529 012b 00       		.byte	0
 4530 012c 00       		.byte	0
 4531 012d 1A       		.uleb128 0x1a
 4532 012e 05       		.uleb128 0x5
 4533 012f 00       		.byte	0
 4534 0130 03       		.uleb128 0x3
 4535 0131 0E       		.uleb128 0xe
 4536 0132 3A       		.uleb128 0x3a
 4537 0133 0B       		.uleb128 0xb
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 141


 4538 0134 3B       		.uleb128 0x3b
 4539 0135 05       		.uleb128 0x5
 4540 0136 49       		.uleb128 0x49
 4541 0137 13       		.uleb128 0x13
 4542 0138 00       		.byte	0
 4543 0139 00       		.byte	0
 4544 013a 1B       		.uleb128 0x1b
 4545 013b 2E       		.uleb128 0x2e
 4546 013c 01       		.byte	0x1
 4547 013d 3F       		.uleb128 0x3f
 4548 013e 19       		.uleb128 0x19
 4549 013f 03       		.uleb128 0x3
 4550 0140 0E       		.uleb128 0xe
 4551 0141 3A       		.uleb128 0x3a
 4552 0142 0B       		.uleb128 0xb
 4553 0143 3B       		.uleb128 0x3b
 4554 0144 05       		.uleb128 0x5
 4555 0145 27       		.uleb128 0x27
 4556 0146 19       		.uleb128 0x19
 4557 0147 49       		.uleb128 0x49
 4558 0148 13       		.uleb128 0x13
 4559 0149 20       		.uleb128 0x20
 4560 014a 0B       		.uleb128 0xb
 4561 014b 01       		.uleb128 0x1
 4562 014c 13       		.uleb128 0x13
 4563 014d 00       		.byte	0
 4564 014e 00       		.byte	0
 4565 014f 1C       		.uleb128 0x1c
 4566 0150 34       		.uleb128 0x34
 4567 0151 00       		.byte	0
 4568 0152 03       		.uleb128 0x3
 4569 0153 0E       		.uleb128 0xe
 4570 0154 3A       		.uleb128 0x3a
 4571 0155 0B       		.uleb128 0xb
 4572 0156 3B       		.uleb128 0x3b
 4573 0157 05       		.uleb128 0x5
 4574 0158 49       		.uleb128 0x49
 4575 0159 13       		.uleb128 0x13
 4576 015a 00       		.byte	0
 4577 015b 00       		.byte	0
 4578 015c 1D       		.uleb128 0x1d
 4579 015d 2E       		.uleb128 0x2e
 4580 015e 01       		.byte	0x1
 4581 015f 3F       		.uleb128 0x3f
 4582 0160 19       		.uleb128 0x19
 4583 0161 03       		.uleb128 0x3
 4584 0162 0E       		.uleb128 0xe
 4585 0163 3A       		.uleb128 0x3a
 4586 0164 0B       		.uleb128 0xb
 4587 0165 3B       		.uleb128 0x3b
 4588 0166 0B       		.uleb128 0xb
 4589 0167 27       		.uleb128 0x27
 4590 0168 19       		.uleb128 0x19
 4591 0169 49       		.uleb128 0x49
 4592 016a 13       		.uleb128 0x13
 4593 016b 11       		.uleb128 0x11
 4594 016c 01       		.uleb128 0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 142


 4595 016d 12       		.uleb128 0x12
 4596 016e 06       		.uleb128 0x6
 4597 016f 40       		.uleb128 0x40
 4598 0170 18       		.uleb128 0x18
 4599 0171 9642     		.uleb128 0x2116
 4600 0173 19       		.uleb128 0x19
 4601 0174 01       		.uleb128 0x1
 4602 0175 13       		.uleb128 0x13
 4603 0176 00       		.byte	0
 4604 0177 00       		.byte	0
 4605 0178 1E       		.uleb128 0x1e
 4606 0179 05       		.uleb128 0x5
 4607 017a 00       		.byte	0
 4608 017b 03       		.uleb128 0x3
 4609 017c 0E       		.uleb128 0xe
 4610 017d 3A       		.uleb128 0x3a
 4611 017e 0B       		.uleb128 0xb
 4612 017f 3B       		.uleb128 0x3b
 4613 0180 0B       		.uleb128 0xb
 4614 0181 49       		.uleb128 0x49
 4615 0182 13       		.uleb128 0x13
 4616 0183 02       		.uleb128 0x2
 4617 0184 17       		.uleb128 0x17
 4618 0185 00       		.byte	0
 4619 0186 00       		.byte	0
 4620 0187 1F       		.uleb128 0x1f
 4621 0188 34       		.uleb128 0x34
 4622 0189 00       		.byte	0
 4623 018a 03       		.uleb128 0x3
 4624 018b 0E       		.uleb128 0xe
 4625 018c 3A       		.uleb128 0x3a
 4626 018d 0B       		.uleb128 0xb
 4627 018e 3B       		.uleb128 0x3b
 4628 018f 0B       		.uleb128 0xb
 4629 0190 49       		.uleb128 0x49
 4630 0191 13       		.uleb128 0x13
 4631 0192 02       		.uleb128 0x2
 4632 0193 17       		.uleb128 0x17
 4633 0194 00       		.byte	0
 4634 0195 00       		.byte	0
 4635 0196 20       		.uleb128 0x20
 4636 0197 2E       		.uleb128 0x2e
 4637 0198 01       		.byte	0x1
 4638 0199 3F       		.uleb128 0x3f
 4639 019a 19       		.uleb128 0x19
 4640 019b 03       		.uleb128 0x3
 4641 019c 0E       		.uleb128 0xe
 4642 019d 3A       		.uleb128 0x3a
 4643 019e 0B       		.uleb128 0xb
 4644 019f 3B       		.uleb128 0x3b
 4645 01a0 0B       		.uleb128 0xb
 4646 01a1 27       		.uleb128 0x27
 4647 01a2 19       		.uleb128 0x19
 4648 01a3 49       		.uleb128 0x49
 4649 01a4 13       		.uleb128 0x13
 4650 01a5 11       		.uleb128 0x11
 4651 01a6 01       		.uleb128 0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 143


 4652 01a7 12       		.uleb128 0x12
 4653 01a8 06       		.uleb128 0x6
 4654 01a9 40       		.uleb128 0x40
 4655 01aa 18       		.uleb128 0x18
 4656 01ab 9742     		.uleb128 0x2117
 4657 01ad 19       		.uleb128 0x19
 4658 01ae 01       		.uleb128 0x1
 4659 01af 13       		.uleb128 0x13
 4660 01b0 00       		.byte	0
 4661 01b1 00       		.byte	0
 4662 01b2 21       		.uleb128 0x21
 4663 01b3 34       		.uleb128 0x34
 4664 01b4 00       		.byte	0
 4665 01b5 03       		.uleb128 0x3
 4666 01b6 0E       		.uleb128 0xe
 4667 01b7 3A       		.uleb128 0x3a
 4668 01b8 0B       		.uleb128 0xb
 4669 01b9 3B       		.uleb128 0x3b
 4670 01ba 0B       		.uleb128 0xb
 4671 01bb 49       		.uleb128 0x49
 4672 01bc 13       		.uleb128 0x13
 4673 01bd 02       		.uleb128 0x2
 4674 01be 18       		.uleb128 0x18
 4675 01bf 00       		.byte	0
 4676 01c0 00       		.byte	0
 4677 01c1 22       		.uleb128 0x22
 4678 01c2 2E       		.uleb128 0x2e
 4679 01c3 01       		.byte	0x1
 4680 01c4 31       		.uleb128 0x31
 4681 01c5 13       		.uleb128 0x13
 4682 01c6 11       		.uleb128 0x11
 4683 01c7 01       		.uleb128 0x1
 4684 01c8 12       		.uleb128 0x12
 4685 01c9 06       		.uleb128 0x6
 4686 01ca 40       		.uleb128 0x40
 4687 01cb 18       		.uleb128 0x18
 4688 01cc 9742     		.uleb128 0x2117
 4689 01ce 19       		.uleb128 0x19
 4690 01cf 01       		.uleb128 0x1
 4691 01d0 13       		.uleb128 0x13
 4692 01d1 00       		.byte	0
 4693 01d2 00       		.byte	0
 4694 01d3 23       		.uleb128 0x23
 4695 01d4 05       		.uleb128 0x5
 4696 01d5 00       		.byte	0
 4697 01d6 31       		.uleb128 0x31
 4698 01d7 13       		.uleb128 0x13
 4699 01d8 02       		.uleb128 0x2
 4700 01d9 17       		.uleb128 0x17
 4701 01da 00       		.byte	0
 4702 01db 00       		.byte	0
 4703 01dc 24       		.uleb128 0x24
 4704 01dd 0B       		.uleb128 0xb
 4705 01de 01       		.byte	0x1
 4706 01df 11       		.uleb128 0x11
 4707 01e0 01       		.uleb128 0x1
 4708 01e1 12       		.uleb128 0x12
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 144


 4709 01e2 06       		.uleb128 0x6
 4710 01e3 00       		.byte	0
 4711 01e4 00       		.byte	0
 4712 01e5 25       		.uleb128 0x25
 4713 01e6 05       		.uleb128 0x5
 4714 01e7 00       		.byte	0
 4715 01e8 31       		.uleb128 0x31
 4716 01e9 13       		.uleb128 0x13
 4717 01ea 00       		.byte	0
 4718 01eb 00       		.byte	0
 4719 01ec 26       		.uleb128 0x26
 4720 01ed 898201   		.uleb128 0x4109
 4721 01f0 01       		.byte	0x1
 4722 01f1 11       		.uleb128 0x11
 4723 01f2 01       		.uleb128 0x1
 4724 01f3 31       		.uleb128 0x31
 4725 01f4 13       		.uleb128 0x13
 4726 01f5 00       		.byte	0
 4727 01f6 00       		.byte	0
 4728 01f7 27       		.uleb128 0x27
 4729 01f8 8A8201   		.uleb128 0x410a
 4730 01fb 00       		.byte	0
 4731 01fc 02       		.uleb128 0x2
 4732 01fd 18       		.uleb128 0x18
 4733 01fe 9142     		.uleb128 0x2111
 4734 0200 18       		.uleb128 0x18
 4735 0201 00       		.byte	0
 4736 0202 00       		.byte	0
 4737 0203 28       		.uleb128 0x28
 4738 0204 1D       		.uleb128 0x1d
 4739 0205 01       		.byte	0x1
 4740 0206 31       		.uleb128 0x31
 4741 0207 13       		.uleb128 0x13
 4742 0208 11       		.uleb128 0x11
 4743 0209 01       		.uleb128 0x1
 4744 020a 12       		.uleb128 0x12
 4745 020b 06       		.uleb128 0x6
 4746 020c 58       		.uleb128 0x58
 4747 020d 0B       		.uleb128 0xb
 4748 020e 59       		.uleb128 0x59
 4749 020f 05       		.uleb128 0x5
 4750 0210 01       		.uleb128 0x1
 4751 0211 13       		.uleb128 0x13
 4752 0212 00       		.byte	0
 4753 0213 00       		.byte	0
 4754 0214 29       		.uleb128 0x29
 4755 0215 05       		.uleb128 0x5
 4756 0216 00       		.byte	0
 4757 0217 31       		.uleb128 0x31
 4758 0218 13       		.uleb128 0x13
 4759 0219 02       		.uleb128 0x2
 4760 021a 18       		.uleb128 0x18
 4761 021b 00       		.byte	0
 4762 021c 00       		.byte	0
 4763 021d 2A       		.uleb128 0x2a
 4764 021e 2E       		.uleb128 0x2e
 4765 021f 01       		.byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 145


 4766 0220 3F       		.uleb128 0x3f
 4767 0221 19       		.uleb128 0x19
 4768 0222 03       		.uleb128 0x3
 4769 0223 0E       		.uleb128 0xe
 4770 0224 3A       		.uleb128 0x3a
 4771 0225 0B       		.uleb128 0xb
 4772 0226 3B       		.uleb128 0x3b
 4773 0227 05       		.uleb128 0x5
 4774 0228 27       		.uleb128 0x27
 4775 0229 19       		.uleb128 0x19
 4776 022a 11       		.uleb128 0x11
 4777 022b 01       		.uleb128 0x1
 4778 022c 12       		.uleb128 0x12
 4779 022d 06       		.uleb128 0x6
 4780 022e 40       		.uleb128 0x40
 4781 022f 18       		.uleb128 0x18
 4782 0230 9742     		.uleb128 0x2117
 4783 0232 19       		.uleb128 0x19
 4784 0233 01       		.uleb128 0x1
 4785 0234 13       		.uleb128 0x13
 4786 0235 00       		.byte	0
 4787 0236 00       		.byte	0
 4788 0237 2B       		.uleb128 0x2b
 4789 0238 05       		.uleb128 0x5
 4790 0239 00       		.byte	0
 4791 023a 03       		.uleb128 0x3
 4792 023b 0E       		.uleb128 0xe
 4793 023c 3A       		.uleb128 0x3a
 4794 023d 0B       		.uleb128 0xb
 4795 023e 3B       		.uleb128 0x3b
 4796 023f 05       		.uleb128 0x5
 4797 0240 49       		.uleb128 0x49
 4798 0241 13       		.uleb128 0x13
 4799 0242 02       		.uleb128 0x2
 4800 0243 18       		.uleb128 0x18
 4801 0244 00       		.byte	0
 4802 0245 00       		.byte	0
 4803 0246 2C       		.uleb128 0x2c
 4804 0247 05       		.uleb128 0x5
 4805 0248 00       		.byte	0
 4806 0249 03       		.uleb128 0x3
 4807 024a 0E       		.uleb128 0xe
 4808 024b 3A       		.uleb128 0x3a
 4809 024c 0B       		.uleb128 0xb
 4810 024d 3B       		.uleb128 0x3b
 4811 024e 05       		.uleb128 0x5
 4812 024f 49       		.uleb128 0x49
 4813 0250 13       		.uleb128 0x13
 4814 0251 02       		.uleb128 0x2
 4815 0252 17       		.uleb128 0x17
 4816 0253 00       		.byte	0
 4817 0254 00       		.byte	0
 4818 0255 2D       		.uleb128 0x2d
 4819 0256 34       		.uleb128 0x34
 4820 0257 00       		.byte	0
 4821 0258 03       		.uleb128 0x3
 4822 0259 0E       		.uleb128 0xe
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 146


 4823 025a 3A       		.uleb128 0x3a
 4824 025b 0B       		.uleb128 0xb
 4825 025c 3B       		.uleb128 0x3b
 4826 025d 05       		.uleb128 0x5
 4827 025e 49       		.uleb128 0x49
 4828 025f 13       		.uleb128 0x13
 4829 0260 02       		.uleb128 0x2
 4830 0261 17       		.uleb128 0x17
 4831 0262 00       		.byte	0
 4832 0263 00       		.byte	0
 4833 0264 2E       		.uleb128 0x2e
 4834 0265 2E       		.uleb128 0x2e
 4835 0266 01       		.byte	0x1
 4836 0267 3F       		.uleb128 0x3f
 4837 0268 19       		.uleb128 0x19
 4838 0269 03       		.uleb128 0x3
 4839 026a 0E       		.uleb128 0xe
 4840 026b 3A       		.uleb128 0x3a
 4841 026c 0B       		.uleb128 0xb
 4842 026d 3B       		.uleb128 0x3b
 4843 026e 05       		.uleb128 0x5
 4844 026f 27       		.uleb128 0x27
 4845 0270 19       		.uleb128 0x19
 4846 0271 49       		.uleb128 0x49
 4847 0272 13       		.uleb128 0x13
 4848 0273 11       		.uleb128 0x11
 4849 0274 01       		.uleb128 0x1
 4850 0275 12       		.uleb128 0x12
 4851 0276 06       		.uleb128 0x6
 4852 0277 40       		.uleb128 0x40
 4853 0278 18       		.uleb128 0x18
 4854 0279 9742     		.uleb128 0x2117
 4855 027b 19       		.uleb128 0x19
 4856 027c 01       		.uleb128 0x1
 4857 027d 13       		.uleb128 0x13
 4858 027e 00       		.byte	0
 4859 027f 00       		.byte	0
 4860 0280 2F       		.uleb128 0x2f
 4861 0281 34       		.uleb128 0x34
 4862 0282 00       		.byte	0
 4863 0283 03       		.uleb128 0x3
 4864 0284 08       		.uleb128 0x8
 4865 0285 3A       		.uleb128 0x3a
 4866 0286 0B       		.uleb128 0xb
 4867 0287 3B       		.uleb128 0x3b
 4868 0288 05       		.uleb128 0x5
 4869 0289 49       		.uleb128 0x49
 4870 028a 13       		.uleb128 0x13
 4871 028b 02       		.uleb128 0x2
 4872 028c 17       		.uleb128 0x17
 4873 028d 00       		.byte	0
 4874 028e 00       		.byte	0
 4875 028f 30       		.uleb128 0x30
 4876 0290 2E       		.uleb128 0x2e
 4877 0291 01       		.byte	0x1
 4878 0292 03       		.uleb128 0x3
 4879 0293 0E       		.uleb128 0xe
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 147


 4880 0294 3A       		.uleb128 0x3a
 4881 0295 0B       		.uleb128 0xb
 4882 0296 3B       		.uleb128 0x3b
 4883 0297 05       		.uleb128 0x5
 4884 0298 27       		.uleb128 0x27
 4885 0299 19       		.uleb128 0x19
 4886 029a 49       		.uleb128 0x49
 4887 029b 13       		.uleb128 0x13
 4888 029c 20       		.uleb128 0x20
 4889 029d 0B       		.uleb128 0xb
 4890 029e 01       		.uleb128 0x1
 4891 029f 13       		.uleb128 0x13
 4892 02a0 00       		.byte	0
 4893 02a1 00       		.byte	0
 4894 02a2 31       		.uleb128 0x31
 4895 02a3 34       		.uleb128 0x34
 4896 02a4 00       		.byte	0
 4897 02a5 31       		.uleb128 0x31
 4898 02a6 13       		.uleb128 0x13
 4899 02a7 02       		.uleb128 0x2
 4900 02a8 17       		.uleb128 0x17
 4901 02a9 00       		.byte	0
 4902 02aa 00       		.byte	0
 4903 02ab 32       		.uleb128 0x32
 4904 02ac 34       		.uleb128 0x34
 4905 02ad 00       		.byte	0
 4906 02ae 31       		.uleb128 0x31
 4907 02af 13       		.uleb128 0x13
 4908 02b0 00       		.byte	0
 4909 02b1 00       		.byte	0
 4910 02b2 33       		.uleb128 0x33
 4911 02b3 34       		.uleb128 0x34
 4912 02b4 00       		.byte	0
 4913 02b5 03       		.uleb128 0x3
 4914 02b6 0E       		.uleb128 0xe
 4915 02b7 3A       		.uleb128 0x3a
 4916 02b8 0B       		.uleb128 0xb
 4917 02b9 3B       		.uleb128 0x3b
 4918 02ba 05       		.uleb128 0x5
 4919 02bb 49       		.uleb128 0x49
 4920 02bc 13       		.uleb128 0x13
 4921 02bd 02       		.uleb128 0x2
 4922 02be 18       		.uleb128 0x18
 4923 02bf 00       		.byte	0
 4924 02c0 00       		.byte	0
 4925 02c1 34       		.uleb128 0x34
 4926 02c2 898201   		.uleb128 0x4109
 4927 02c5 00       		.byte	0
 4928 02c6 11       		.uleb128 0x11
 4929 02c7 01       		.uleb128 0x1
 4930 02c8 31       		.uleb128 0x31
 4931 02c9 13       		.uleb128 0x13
 4932 02ca 00       		.byte	0
 4933 02cb 00       		.byte	0
 4934 02cc 35       		.uleb128 0x35
 4935 02cd 2E       		.uleb128 0x2e
 4936 02ce 01       		.byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 148


 4937 02cf 31       		.uleb128 0x31
 4938 02d0 13       		.uleb128 0x13
 4939 02d1 11       		.uleb128 0x11
 4940 02d2 01       		.uleb128 0x1
 4941 02d3 12       		.uleb128 0x12
 4942 02d4 06       		.uleb128 0x6
 4943 02d5 40       		.uleb128 0x40
 4944 02d6 18       		.uleb128 0x18
 4945 02d7 9642     		.uleb128 0x2116
 4946 02d9 19       		.uleb128 0x19
 4947 02da 01       		.uleb128 0x1
 4948 02db 13       		.uleb128 0x13
 4949 02dc 00       		.byte	0
 4950 02dd 00       		.byte	0
 4951 02de 36       		.uleb128 0x36
 4952 02df 2E       		.uleb128 0x2e
 4953 02e0 01       		.byte	0x1
 4954 02e1 3F       		.uleb128 0x3f
 4955 02e2 19       		.uleb128 0x19
 4956 02e3 03       		.uleb128 0x3
 4957 02e4 0E       		.uleb128 0xe
 4958 02e5 3A       		.uleb128 0x3a
 4959 02e6 0B       		.uleb128 0xb
 4960 02e7 3B       		.uleb128 0x3b
 4961 02e8 05       		.uleb128 0x5
 4962 02e9 27       		.uleb128 0x27
 4963 02ea 19       		.uleb128 0x19
 4964 02eb 49       		.uleb128 0x49
 4965 02ec 13       		.uleb128 0x13
 4966 02ed 11       		.uleb128 0x11
 4967 02ee 01       		.uleb128 0x1
 4968 02ef 12       		.uleb128 0x12
 4969 02f0 06       		.uleb128 0x6
 4970 02f1 40       		.uleb128 0x40
 4971 02f2 18       		.uleb128 0x18
 4972 02f3 9642     		.uleb128 0x2116
 4973 02f5 19       		.uleb128 0x19
 4974 02f6 01       		.uleb128 0x1
 4975 02f7 13       		.uleb128 0x13
 4976 02f8 00       		.byte	0
 4977 02f9 00       		.byte	0
 4978 02fa 37       		.uleb128 0x37
 4979 02fb 34       		.uleb128 0x34
 4980 02fc 00       		.byte	0
 4981 02fd 03       		.uleb128 0x3
 4982 02fe 0E       		.uleb128 0xe
 4983 02ff 3A       		.uleb128 0x3a
 4984 0300 0B       		.uleb128 0xb
 4985 0301 3B       		.uleb128 0x3b
 4986 0302 05       		.uleb128 0x5
 4987 0303 49       		.uleb128 0x49
 4988 0304 13       		.uleb128 0x13
 4989 0305 1C       		.uleb128 0x1c
 4990 0306 0B       		.uleb128 0xb
 4991 0307 00       		.byte	0
 4992 0308 00       		.byte	0
 4993 0309 38       		.uleb128 0x38
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 149


 4994 030a 34       		.uleb128 0x34
 4995 030b 00       		.byte	0
 4996 030c 03       		.uleb128 0x3
 4997 030d 0E       		.uleb128 0xe
 4998 030e 3A       		.uleb128 0x3a
 4999 030f 0B       		.uleb128 0xb
 5000 0310 3B       		.uleb128 0x3b
 5001 0311 0B       		.uleb128 0xb
 5002 0312 49       		.uleb128 0x49
 5003 0313 13       		.uleb128 0x13
 5004 0314 3F       		.uleb128 0x3f
 5005 0315 19       		.uleb128 0x19
 5006 0316 3C       		.uleb128 0x3c
 5007 0317 19       		.uleb128 0x19
 5008 0318 00       		.byte	0
 5009 0319 00       		.byte	0
 5010 031a 39       		.uleb128 0x39
 5011 031b 34       		.uleb128 0x34
 5012 031c 00       		.byte	0
 5013 031d 03       		.uleb128 0x3
 5014 031e 0E       		.uleb128 0xe
 5015 031f 3A       		.uleb128 0x3a
 5016 0320 0B       		.uleb128 0xb
 5017 0321 3B       		.uleb128 0x3b
 5018 0322 0B       		.uleb128 0xb
 5019 0323 49       		.uleb128 0x49
 5020 0324 13       		.uleb128 0x13
 5021 0325 3F       		.uleb128 0x3f
 5022 0326 19       		.uleb128 0x19
 5023 0327 02       		.uleb128 0x2
 5024 0328 18       		.uleb128 0x18
 5025 0329 00       		.byte	0
 5026 032a 00       		.byte	0
 5027 032b 3A       		.uleb128 0x3a
 5028 032c 2E       		.uleb128 0x2e
 5029 032d 00       		.byte	0
 5030 032e 3F       		.uleb128 0x3f
 5031 032f 19       		.uleb128 0x19
 5032 0330 3C       		.uleb128 0x3c
 5033 0331 19       		.uleb128 0x19
 5034 0332 6E       		.uleb128 0x6e
 5035 0333 0E       		.uleb128 0xe
 5036 0334 03       		.uleb128 0x3
 5037 0335 0E       		.uleb128 0xe
 5038 0336 3A       		.uleb128 0x3a
 5039 0337 0B       		.uleb128 0xb
 5040 0338 3B       		.uleb128 0x3b
 5041 0339 05       		.uleb128 0x5
 5042 033a 00       		.byte	0
 5043 033b 00       		.byte	0
 5044 033c 00       		.byte	0
 5045              		.section	.debug_loc,"",%progbits
 5046              	.Ldebug_loc0:
 5047              	.LLST0:
 5048 0000 00000000 		.4byte	.LVL0
 5049 0004 48000000 		.4byte	.LVL5
 5050 0008 0100     		.2byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 150


 5051 000a 50       		.byte	0x50
 5052 000b 48000000 		.4byte	.LVL5
 5053 000f F2000000 		.4byte	.LVL13
 5054 0013 0100     		.2byte	0x1
 5055 0015 54       		.byte	0x54
 5056 0016 F2000000 		.4byte	.LVL13
 5057 001a F4000000 		.4byte	.LVL14
 5058 001e 0100     		.2byte	0x1
 5059 0020 50       		.byte	0x50
 5060 0021 F4000000 		.4byte	.LVL14
 5061 0025 F6000000 		.4byte	.LVL15
 5062 0029 0100     		.2byte	0x1
 5063 002b 54       		.byte	0x54
 5064 002c F6000000 		.4byte	.LVL15
 5065 0030 14010000 		.4byte	.LFE105
 5066 0034 0400     		.2byte	0x4
 5067 0036 F3       		.byte	0xf3
 5068 0037 01       		.uleb128 0x1
 5069 0038 50       		.byte	0x50
 5070 0039 9F       		.byte	0x9f
 5071 003a 00000000 		.4byte	0
 5072 003e 00000000 		.4byte	0
 5073              	.LLST1:
 5074 0042 00000000 		.4byte	.LVL0
 5075 0046 36000000 		.4byte	.LVL1
 5076 004a 0100     		.2byte	0x1
 5077 004c 51       		.byte	0x51
 5078 004d 36000000 		.4byte	.LVL1
 5079 0051 F2000000 		.4byte	.LVL13
 5080 0055 0100     		.2byte	0x1
 5081 0057 55       		.byte	0x55
 5082 0058 F2000000 		.4byte	.LVL13
 5083 005c F4000000 		.4byte	.LVL14
 5084 0060 0100     		.2byte	0x1
 5085 0062 51       		.byte	0x51
 5086 0063 F4000000 		.4byte	.LVL14
 5087 0067 F6000000 		.4byte	.LVL16
 5088 006b 0100     		.2byte	0x1
 5089 006d 55       		.byte	0x55
 5090 006e F6000000 		.4byte	.LVL16
 5091 0072 14010000 		.4byte	.LFE105
 5092 0076 0400     		.2byte	0x4
 5093 0078 F3       		.byte	0xf3
 5094 0079 01       		.uleb128 0x1
 5095 007a 51       		.byte	0x51
 5096 007b 9F       		.byte	0x9f
 5097 007c 00000000 		.4byte	0
 5098 0080 00000000 		.4byte	0
 5099              	.LLST2:
 5100 0084 EE000000 		.4byte	.LVL12
 5101 0088 F2000000 		.4byte	.LVL13
 5102 008c 0200     		.2byte	0x2
 5103 008e 30       		.byte	0x30
 5104 008f 9F       		.byte	0x9f
 5105 0090 F4000000 		.4byte	.LVL14
 5106 0094 14010000 		.4byte	.LFE105
 5107 0098 0100     		.2byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 151


 5108 009a 50       		.byte	0x50
 5109 009b 00000000 		.4byte	0
 5110 009f 00000000 		.4byte	0
 5111              	.LLST3:
 5112 00a3 46000000 		.4byte	.LVL4
 5113 00a7 5A000000 		.4byte	.LVL7
 5114 00ab 0200     		.2byte	0x2
 5115 00ad 30       		.byte	0x30
 5116 00ae 9F       		.byte	0x9f
 5117 00af 5A000000 		.4byte	.LVL7
 5118 00b3 8E000000 		.4byte	.LVL11
 5119 00b7 0100     		.2byte	0x1
 5120 00b9 53       		.byte	0x53
 5121 00ba 00000000 		.4byte	0
 5122 00be 00000000 		.4byte	0
 5123              	.LLST4:
 5124 00c2 6A000000 		.4byte	.LVL8
 5125 00c6 F2000000 		.4byte	.LVL13
 5126 00ca 0400     		.2byte	0x4
 5127 00cc 0A       		.byte	0xa
 5128 00cd 0010     		.2byte	0x1000
 5129 00cf 9F       		.byte	0x9f
 5130 00d0 00000000 		.4byte	0
 5131 00d4 00000000 		.4byte	0
 5132              	.LLST5:
 5133 00d8 3E000000 		.4byte	.LVL2
 5134 00dc 40000000 		.4byte	.LVL3
 5135 00e0 0700     		.2byte	0x7
 5136 00e2 73       		.byte	0x73
 5137 00e3 00       		.sleb128 0
 5138 00e4 0A       		.byte	0xa
 5139 00e5 000E     		.2byte	0xe00
 5140 00e7 29       		.byte	0x29
 5141 00e8 9F       		.byte	0x9f
 5142 00e9 40000000 		.4byte	.LVL3
 5143 00ed F2000000 		.4byte	.LVL13
 5144 00f1 0800     		.2byte	0x8
 5145 00f3 7D       		.byte	0x7d
 5146 00f4 00       		.sleb128 0
 5147 00f5 06       		.byte	0x6
 5148 00f6 0A       		.byte	0xa
 5149 00f7 000E     		.2byte	0xe00
 5150 00f9 29       		.byte	0x29
 5151 00fa 9F       		.byte	0x9f
 5152 00fb 00000000 		.4byte	0
 5153 00ff 00000000 		.4byte	0
 5154              	.LLST6:
 5155 0103 46000000 		.4byte	.LVL4
 5156 0107 4D000000 		.4byte	.LVL6-1
 5157 010b 0500     		.2byte	0x5
 5158 010d 72       		.byte	0x72
 5159 010e 00       		.sleb128 0
 5160 010f 30       		.byte	0x30
 5161 0110 2E       		.byte	0x2e
 5162 0111 9F       		.byte	0x9f
 5163 0112 4D000000 		.4byte	.LVL6-1
 5164 0116 F2000000 		.4byte	.LVL13
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 152


 5165 011a 0600     		.2byte	0x6
 5166 011c 91       		.byte	0x91
 5167 011d 5C       		.sleb128 -36
 5168 011e 06       		.byte	0x6
 5169 011f 30       		.byte	0x30
 5170 0120 2E       		.byte	0x2e
 5171 0121 9F       		.byte	0x9f
 5172 0122 00000000 		.4byte	0
 5173 0126 00000000 		.4byte	0
 5174              	.LLST7:
 5175 012a 6A000000 		.4byte	.LVL8
 5176 012e 72000000 		.4byte	.LVL9
 5177 0132 0B00     		.2byte	0xb
 5178 0134 70       		.byte	0x70
 5179 0135 00       		.sleb128 0
 5180 0136 0C       		.byte	0xc
 5181 0137 00010001 		.4byte	0x1000100
 5182 013b 1A       		.byte	0x1a
 5183 013c 30       		.byte	0x30
 5184 013d 29       		.byte	0x29
 5185 013e 9F       		.byte	0x9f
 5186 013f 72000000 		.4byte	.LVL9
 5187 0143 86000000 		.4byte	.LVL10
 5188 0147 1100     		.2byte	0x11
 5189 0149 73       		.byte	0x73
 5190 014a 20       		.sleb128 32
 5191 014b 32       		.byte	0x32
 5192 014c 24       		.byte	0x24
 5193 014d 74       		.byte	0x74
 5194 014e 00       		.sleb128 0
 5195 014f 22       		.byte	0x22
 5196 0150 06       		.byte	0x6
 5197 0151 0C       		.byte	0xc
 5198 0152 00010001 		.4byte	0x1000100
 5199 0156 1A       		.byte	0x1a
 5200 0157 30       		.byte	0x30
 5201 0158 29       		.byte	0x29
 5202 0159 9F       		.byte	0x9f
 5203 015a 00000000 		.4byte	0
 5204 015e 00000000 		.4byte	0
 5205              	.LLST8:
 5206 0162 00000000 		.4byte	.LVL17
 5207 0166 10000000 		.4byte	.LVL18
 5208 016a 0100     		.2byte	0x1
 5209 016c 50       		.byte	0x50
 5210 016d 10000000 		.4byte	.LVL18
 5211 0171 4C000000 		.4byte	.LVL22
 5212 0175 0100     		.2byte	0x1
 5213 0177 53       		.byte	0x53
 5214 0178 4C000000 		.4byte	.LVL22
 5215 017c 4E000000 		.4byte	.LVL23
 5216 0180 0100     		.2byte	0x1
 5217 0182 50       		.byte	0x50
 5218 0183 4E000000 		.4byte	.LVL23
 5219 0187 5C000000 		.4byte	.LFE106
 5220 018b 0100     		.2byte	0x1
 5221 018d 53       		.byte	0x53
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 153


 5222 018e 00000000 		.4byte	0
 5223 0192 00000000 		.4byte	0
 5224              	.LLST9:
 5225 0196 00000000 		.4byte	.LVL17
 5226 019a 3E000000 		.4byte	.LVL21
 5227 019e 0100     		.2byte	0x1
 5228 01a0 51       		.byte	0x51
 5229 01a1 3E000000 		.4byte	.LVL21
 5230 01a5 4C000000 		.4byte	.LVL22
 5231 01a9 0400     		.2byte	0x4
 5232 01ab F3       		.byte	0xf3
 5233 01ac 01       		.uleb128 0x1
 5234 01ad 51       		.byte	0x51
 5235 01ae 9F       		.byte	0x9f
 5236 01af 4C000000 		.4byte	.LVL22
 5237 01b3 4E000000 		.4byte	.LVL23
 5238 01b7 0100     		.2byte	0x1
 5239 01b9 51       		.byte	0x51
 5240 01ba 4E000000 		.4byte	.LVL23
 5241 01be 5C000000 		.4byte	.LFE106
 5242 01c2 0400     		.2byte	0x4
 5243 01c4 F3       		.byte	0xf3
 5244 01c5 01       		.uleb128 0x1
 5245 01c6 51       		.byte	0x51
 5246 01c7 9F       		.byte	0x9f
 5247 01c8 00000000 		.4byte	0
 5248 01cc 00000000 		.4byte	0
 5249              	.LLST10:
 5250 01d0 1A000000 		.4byte	.LVL19
 5251 01d4 22000000 		.4byte	.LVL20
 5252 01d8 0100     		.2byte	0x1
 5253 01da 52       		.byte	0x52
 5254 01db 00000000 		.4byte	0
 5255 01df 00000000 		.4byte	0
 5256              	.LLST11:
 5257 01e3 00000000 		.4byte	.LVL24
 5258 01e7 1E000000 		.4byte	.LVL25
 5259 01eb 0100     		.2byte	0x1
 5260 01ed 50       		.byte	0x50
 5261 01ee 1E000000 		.4byte	.LVL25
 5262 01f2 24000000 		.4byte	.LFE107
 5263 01f6 0400     		.2byte	0x4
 5264 01f8 F3       		.byte	0xf3
 5265 01f9 01       		.uleb128 0x1
 5266 01fa 50       		.byte	0x50
 5267 01fb 9F       		.byte	0x9f
 5268 01fc 00000000 		.4byte	0
 5269 0200 00000000 		.4byte	0
 5270              	.LLST12:
 5271 0204 00000000 		.4byte	.LVL27
 5272 0208 1D000000 		.4byte	.LVL29-1
 5273 020c 0100     		.2byte	0x1
 5274 020e 50       		.byte	0x50
 5275 020f 1D000000 		.4byte	.LVL29-1
 5276 0213 2E000000 		.4byte	.LVL32
 5277 0217 0100     		.2byte	0x1
 5278 0219 54       		.byte	0x54
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 154


 5279 021a 2E000000 		.4byte	.LVL32
 5280 021e 34000000 		.4byte	.LFE109
 5281 0222 0400     		.2byte	0x4
 5282 0224 F3       		.byte	0xf3
 5283 0225 01       		.uleb128 0x1
 5284 0226 50       		.byte	0x50
 5285 0227 9F       		.byte	0x9f
 5286 0228 00000000 		.4byte	0
 5287 022c 00000000 		.4byte	0
 5288              	.LLST13:
 5289 0230 1A000000 		.4byte	.LVL28
 5290 0234 1D000000 		.4byte	.LVL29-1
 5291 0238 0100     		.2byte	0x1
 5292 023a 50       		.byte	0x50
 5293 023b 1D000000 		.4byte	.LVL29-1
 5294 023f 2E000000 		.4byte	.LVL31
 5295 0243 0100     		.2byte	0x1
 5296 0245 54       		.byte	0x54
 5297 0246 00000000 		.4byte	0
 5298 024a 00000000 		.4byte	0
 5299              	.LLST14:
 5300 024e 28000000 		.4byte	.LVL30
 5301 0252 2E000000 		.4byte	.LVL31
 5302 0256 0200     		.2byte	0x2
 5303 0258 31       		.byte	0x31
 5304 0259 9F       		.byte	0x9f
 5305 025a 00000000 		.4byte	0
 5306 025e 00000000 		.4byte	0
 5307              	.LLST15:
 5308 0262 28000000 		.4byte	.LVL30
 5309 0266 2E000000 		.4byte	.LVL31
 5310 026a 0100     		.2byte	0x1
 5311 026c 54       		.byte	0x54
 5312 026d 00000000 		.4byte	0
 5313 0271 00000000 		.4byte	0
 5314              	.LLST16:
 5315 0275 00000000 		.4byte	.LVL35
 5316 0279 23000000 		.4byte	.LVL38-1
 5317 027d 0100     		.2byte	0x1
 5318 027f 50       		.byte	0x50
 5319 0280 23000000 		.4byte	.LVL38-1
 5320 0284 3C000000 		.4byte	.LVL39
 5321 0288 0100     		.2byte	0x1
 5322 028a 54       		.byte	0x54
 5323 028b 3C000000 		.4byte	.LVL39
 5324 028f 48000000 		.4byte	.LFE108
 5325 0293 0400     		.2byte	0x4
 5326 0295 F3       		.byte	0xf3
 5327 0296 01       		.uleb128 0x1
 5328 0297 50       		.byte	0x50
 5329 0298 9F       		.byte	0x9f
 5330 0299 00000000 		.4byte	0
 5331 029d 00000000 		.4byte	0
 5332              	.LLST17:
 5333 02a1 04000000 		.4byte	.LVL36
 5334 02a5 12000000 		.4byte	.LVL37
 5335 02a9 0100     		.2byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 155


 5336 02ab 56       		.byte	0x56
 5337 02ac 12000000 		.4byte	.LVL37
 5338 02b0 3C000000 		.4byte	.LVL40
 5339 02b4 0100     		.2byte	0x1
 5340 02b6 55       		.byte	0x55
 5341 02b7 3C000000 		.4byte	.LVL40
 5342 02bb 3C000000 		.4byte	.LVL41
 5343 02bf 0900     		.2byte	0x9
 5344 02c1 76       		.byte	0x76
 5345 02c2 00       		.sleb128 0
 5346 02c3 11       		.byte	0x11
 5347 02c4 FFFFFF7E 		.sleb128 -2097153
 5348 02c8 1A       		.byte	0x1a
 5349 02c9 9F       		.byte	0x9f
 5350 02ca 3C000000 		.4byte	.LVL41
 5351 02ce 48000000 		.4byte	.LFE108
 5352 02d2 0300     		.2byte	0x3
 5353 02d4 F3       		.byte	0xf3
 5354 02d5 01       		.uleb128 0x1
 5355 02d6 50       		.byte	0x50
 5356 02d7 00000000 		.4byte	0
 5357 02db 00000000 		.4byte	0
 5358              	.LLST18:
 5359 02df 00000000 		.4byte	.LVL42
 5360 02e3 08000000 		.4byte	.LVL45
 5361 02e7 0100     		.2byte	0x1
 5362 02e9 51       		.byte	0x51
 5363 02ea 08000000 		.4byte	.LVL45
 5364 02ee 10000000 		.4byte	.LFE112
 5365 02f2 0400     		.2byte	0x4
 5366 02f4 F3       		.byte	0xf3
 5367 02f5 01       		.uleb128 0x1
 5368 02f6 51       		.byte	0x51
 5369 02f7 9F       		.byte	0x9f
 5370 02f8 00000000 		.4byte	0
 5371 02fc 00000000 		.4byte	0
 5372              	.LLST19:
 5373 0300 02000000 		.4byte	.LVL43
 5374 0304 06000000 		.4byte	.LVL44
 5375 0308 0800     		.2byte	0x8
 5376 030a 72       		.byte	0x72
 5377 030b 00       		.sleb128 0
 5378 030c 11       		.byte	0x11
 5379 030d FFFF67   		.sleb128 -393217
 5380 0310 1A       		.byte	0x1a
 5381 0311 9F       		.byte	0x9f
 5382 0312 06000000 		.4byte	.LVL44
 5383 0316 10000000 		.4byte	.LFE112
 5384 031a 0100     		.2byte	0x1
 5385 031c 53       		.byte	0x53
 5386 031d 00000000 		.4byte	0
 5387 0321 00000000 		.4byte	0
 5388              	.LLST20:
 5389 0325 00000000 		.4byte	.LVL46
 5390 0329 24000000 		.4byte	.LVL53
 5391 032d 0100     		.2byte	0x1
 5392 032f 50       		.byte	0x50
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 156


 5393 0330 24000000 		.4byte	.LVL53
 5394 0334 26000000 		.4byte	.LVL54
 5395 0338 0400     		.2byte	0x4
 5396 033a F3       		.byte	0xf3
 5397 033b 01       		.uleb128 0x1
 5398 033c 50       		.byte	0x50
 5399 033d 9F       		.byte	0x9f
 5400 033e 26000000 		.4byte	.LVL54
 5401 0342 2E000000 		.4byte	.LVL55
 5402 0346 0100     		.2byte	0x1
 5403 0348 50       		.byte	0x50
 5404 0349 2E000000 		.4byte	.LVL55
 5405 034d 30000000 		.4byte	.LVL56
 5406 0351 0400     		.2byte	0x4
 5407 0353 F3       		.byte	0xf3
 5408 0354 01       		.uleb128 0x1
 5409 0355 50       		.byte	0x50
 5410 0356 9F       		.byte	0x9f
 5411 0357 30000000 		.4byte	.LVL56
 5412 035b 36000000 		.4byte	.LVL57
 5413 035f 0100     		.2byte	0x1
 5414 0361 50       		.byte	0x50
 5415 0362 36000000 		.4byte	.LVL57
 5416 0366 44000000 		.4byte	.LFE113
 5417 036a 0400     		.2byte	0x4
 5418 036c F3       		.byte	0xf3
 5419 036d 01       		.uleb128 0x1
 5420 036e 50       		.byte	0x50
 5421 036f 9F       		.byte	0x9f
 5422 0370 00000000 		.4byte	0
 5423 0374 00000000 		.4byte	0
 5424              	.LLST21:
 5425 0378 26000000 		.4byte	.LVL54
 5426 037c 30000000 		.4byte	.LVL56
 5427 0380 0200     		.2byte	0x2
 5428 0382 30       		.byte	0x30
 5429 0383 9F       		.byte	0x9f
 5430 0384 00000000 		.4byte	0
 5431 0388 00000000 		.4byte	0
 5432              	.LLST22:
 5433 038c 0C000000 		.4byte	.LVL47
 5434 0390 1E000000 		.4byte	.LVL50
 5435 0394 0100     		.2byte	0x1
 5436 0396 53       		.byte	0x53
 5437 0397 20000000 		.4byte	.LVL51
 5438 039b 26000000 		.4byte	.LVL54
 5439 039f 0100     		.2byte	0x1
 5440 03a1 53       		.byte	0x53
 5441 03a2 30000000 		.4byte	.LVL56
 5442 03a6 36000000 		.4byte	.LVL57
 5443 03aa 0100     		.2byte	0x1
 5444 03ac 53       		.byte	0x53
 5445 03ad 00000000 		.4byte	0
 5446 03b1 00000000 		.4byte	0
 5447              	.LLST23:
 5448 03b5 0C000000 		.4byte	.LVL47
 5449 03b9 12000000 		.4byte	.LVL48
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 157


 5450 03bd 0600     		.2byte	0x6
 5451 03bf 0C       		.byte	0xc
 5452 03c0 55555501 		.4byte	0x1555555
 5453 03c4 9F       		.byte	0x9f
 5454 03c5 12000000 		.4byte	.LVL48
 5455 03c9 18000000 		.4byte	.LVL49
 5456 03cd 0300     		.2byte	0x3
 5457 03cf 74       		.byte	0x74
 5458 03d0 7F       		.sleb128 -1
 5459 03d1 9F       		.byte	0x9f
 5460 03d2 18000000 		.4byte	.LVL49
 5461 03d6 20000000 		.4byte	.LVL51
 5462 03da 0100     		.2byte	0x1
 5463 03dc 54       		.byte	0x54
 5464 03dd 20000000 		.4byte	.LVL51
 5465 03e1 22000000 		.4byte	.LVL52
 5466 03e5 0300     		.2byte	0x3
 5467 03e7 74       		.byte	0x74
 5468 03e8 7F       		.sleb128 -1
 5469 03e9 9F       		.byte	0x9f
 5470 03ea 22000000 		.4byte	.LVL52
 5471 03ee 26000000 		.4byte	.LVL54
 5472 03f2 0100     		.2byte	0x1
 5473 03f4 54       		.byte	0x54
 5474 03f5 30000000 		.4byte	.LVL56
 5475 03f9 36000000 		.4byte	.LVL57
 5476 03fd 0600     		.2byte	0x6
 5477 03ff 0C       		.byte	0xc
 5478 0400 55555501 		.4byte	0x1555555
 5479 0404 9F       		.byte	0x9f
 5480 0405 00000000 		.4byte	0
 5481 0409 00000000 		.4byte	0
 5482              	.LLST24:
 5483 040d 00000000 		.4byte	.LVL58
 5484 0411 04000000 		.4byte	.LVL59
 5485 0415 0100     		.2byte	0x1
 5486 0417 50       		.byte	0x50
 5487 0418 04000000 		.4byte	.LVL59
 5488 041c 10000000 		.4byte	.LVL62
 5489 0420 0100     		.2byte	0x1
 5490 0422 53       		.byte	0x53
 5491 0423 10000000 		.4byte	.LVL62
 5492 0427 20000000 		.4byte	.LFE115
 5493 042b 0400     		.2byte	0x4
 5494 042d F3       		.byte	0xf3
 5495 042e 01       		.uleb128 0x1
 5496 042f 50       		.byte	0x50
 5497 0430 9F       		.byte	0x9f
 5498 0431 00000000 		.4byte	0
 5499 0435 00000000 		.4byte	0
 5500              	.LLST25:
 5501 0439 00000000 		.4byte	.LVL58
 5502 043d 0A000000 		.4byte	.LVL60
 5503 0441 0100     		.2byte	0x1
 5504 0443 51       		.byte	0x51
 5505 0444 0A000000 		.4byte	.LVL60
 5506 0448 0C000000 		.4byte	.LVL61
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 158


 5507 044c 0300     		.2byte	0x3
 5508 044e 71       		.byte	0x71
 5509 044f 60       		.sleb128 -32
 5510 0450 9F       		.byte	0x9f
 5511 0451 0C000000 		.4byte	.LVL61
 5512 0455 20000000 		.4byte	.LFE115
 5513 0459 0400     		.2byte	0x4
 5514 045b F3       		.byte	0xf3
 5515 045c 01       		.uleb128 0x1
 5516 045d 51       		.byte	0x51
 5517 045e 9F       		.byte	0x9f
 5518 045f 00000000 		.4byte	0
 5519 0463 00000000 		.4byte	0
 5520              	.LLST26:
 5521 0467 00000000 		.4byte	.LVL58
 5522 046b 18000000 		.4byte	.LVL63
 5523 046f 0200     		.2byte	0x2
 5524 0471 30       		.byte	0x30
 5525 0472 9F       		.byte	0x9f
 5526 0473 18000000 		.4byte	.LVL63
 5527 0477 20000000 		.4byte	.LFE115
 5528 047b 0100     		.2byte	0x1
 5529 047d 50       		.byte	0x50
 5530 047e 00000000 		.4byte	0
 5531 0482 00000000 		.4byte	0
 5532              	.LLST27:
 5533 0486 00000000 		.4byte	.LVL64
 5534 048a 06000000 		.4byte	.LVL66
 5535 048e 0100     		.2byte	0x1
 5536 0490 50       		.byte	0x50
 5537 0491 06000000 		.4byte	.LVL66
 5538 0495 22000000 		.4byte	.LVL72
 5539 0499 0100     		.2byte	0x1
 5540 049b 54       		.byte	0x54
 5541 049c 22000000 		.4byte	.LVL72
 5542 04a0 24000000 		.4byte	.LFE114
 5543 04a4 0400     		.2byte	0x4
 5544 04a6 F3       		.byte	0xf3
 5545 04a7 01       		.uleb128 0x1
 5546 04a8 50       		.byte	0x50
 5547 04a9 9F       		.byte	0x9f
 5548 04aa 00000000 		.4byte	0
 5549 04ae 00000000 		.4byte	0
 5550              	.LLST28:
 5551 04b2 00000000 		.4byte	.LVL64
 5552 04b6 0F000000 		.4byte	.LVL68-1
 5553 04ba 0100     		.2byte	0x1
 5554 04bc 51       		.byte	0x51
 5555 04bd 0F000000 		.4byte	.LVL68-1
 5556 04c1 24000000 		.4byte	.LFE114
 5557 04c5 0400     		.2byte	0x4
 5558 04c7 F3       		.byte	0xf3
 5559 04c8 01       		.uleb128 0x1
 5560 04c9 51       		.byte	0x51
 5561 04ca 9F       		.byte	0x9f
 5562 04cb 00000000 		.4byte	0
 5563 04cf 00000000 		.4byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 159


 5564              	.LLST29:
 5565 04d3 04000000 		.4byte	.LVL65
 5566 04d7 22000000 		.4byte	.LVL71
 5567 04db 0200     		.2byte	0x2
 5568 04dd 30       		.byte	0x30
 5569 04de 9F       		.byte	0x9f
 5570 04df 22000000 		.4byte	.LVL71
 5571 04e3 24000000 		.4byte	.LFE114
 5572 04e7 0100     		.2byte	0x1
 5573 04e9 50       		.byte	0x50
 5574 04ea 00000000 		.4byte	0
 5575 04ee 00000000 		.4byte	0
 5576              	.LLST30:
 5577 04f2 0A000000 		.4byte	.LVL67
 5578 04f6 0F000000 		.4byte	.LVL68-1
 5579 04fa 0100     		.2byte	0x1
 5580 04fc 51       		.byte	0x51
 5581 04fd 0F000000 		.4byte	.LVL68-1
 5582 0501 10000000 		.4byte	.LVL68
 5583 0505 0400     		.2byte	0x4
 5584 0507 F3       		.byte	0xf3
 5585 0508 01       		.uleb128 0x1
 5586 0509 51       		.byte	0x51
 5587 050a 9F       		.byte	0x9f
 5588 050b 00000000 		.4byte	0
 5589 050f 00000000 		.4byte	0
 5590              	.LLST31:
 5591 0513 0A000000 		.4byte	.LVL67
 5592 0517 10000000 		.4byte	.LVL68
 5593 051b 0100     		.2byte	0x1
 5594 051d 54       		.byte	0x54
 5595 051e 00000000 		.4byte	0
 5596 0522 00000000 		.4byte	0
 5597              	.LLST32:
 5598 0526 16000000 		.4byte	.LVL69
 5599 052a 1C000000 		.4byte	.LVL70
 5600 052e 0400     		.2byte	0x4
 5601 0530 F3       		.byte	0xf3
 5602 0531 01       		.uleb128 0x1
 5603 0532 51       		.byte	0x51
 5604 0533 9F       		.byte	0x9f
 5605 0534 00000000 		.4byte	0
 5606 0538 00000000 		.4byte	0
 5607              	.LLST33:
 5608 053c 16000000 		.4byte	.LVL69
 5609 0540 1C000000 		.4byte	.LVL70
 5610 0544 0100     		.2byte	0x1
 5611 0546 54       		.byte	0x54
 5612 0547 00000000 		.4byte	0
 5613 054b 00000000 		.4byte	0
 5614              	.LLST34:
 5615 054f 00000000 		.4byte	.LVL73
 5616 0553 10000000 		.4byte	.LVL77
 5617 0557 0100     		.2byte	0x1
 5618 0559 50       		.byte	0x50
 5619 055a 10000000 		.4byte	.LVL77
 5620 055e 12000000 		.4byte	.LFE116
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 160


 5621 0562 0400     		.2byte	0x4
 5622 0564 F3       		.byte	0xf3
 5623 0565 01       		.uleb128 0x1
 5624 0566 50       		.byte	0x50
 5625 0567 9F       		.byte	0x9f
 5626 0568 00000000 		.4byte	0
 5627 056c 00000000 		.4byte	0
 5628              	.LLST35:
 5629 0570 00000000 		.4byte	.LVL73
 5630 0574 08000000 		.4byte	.LVL74
 5631 0578 0100     		.2byte	0x1
 5632 057a 51       		.byte	0x51
 5633 057b 08000000 		.4byte	.LVL74
 5634 057f 0A000000 		.4byte	.LVL75
 5635 0583 0400     		.2byte	0x4
 5636 0585 71       		.byte	0x71
 5637 0586 A07F     		.sleb128 -96
 5638 0588 9F       		.byte	0x9f
 5639 0589 0A000000 		.4byte	.LVL75
 5640 058d 12000000 		.4byte	.LFE116
 5641 0591 0400     		.2byte	0x4
 5642 0593 F3       		.byte	0xf3
 5643 0594 01       		.uleb128 0x1
 5644 0595 51       		.byte	0x51
 5645 0596 9F       		.byte	0x9f
 5646 0597 00000000 		.4byte	0
 5647 059b 00000000 		.4byte	0
 5648              	.LLST36:
 5649 059f 00000000 		.4byte	.LVL73
 5650 05a3 0E000000 		.4byte	.LVL76
 5651 05a7 0200     		.2byte	0x2
 5652 05a9 30       		.byte	0x30
 5653 05aa 9F       		.byte	0x9f
 5654 05ab 0E000000 		.4byte	.LVL76
 5655 05af 12000000 		.4byte	.LFE116
 5656 05b3 0100     		.2byte	0x1
 5657 05b5 53       		.byte	0x53
 5658 05b6 00000000 		.4byte	0
 5659 05ba 00000000 		.4byte	0
 5660              	.LLST37:
 5661 05be 00000000 		.4byte	.LVL78
 5662 05c2 15000000 		.4byte	.LVL80-1
 5663 05c6 0100     		.2byte	0x1
 5664 05c8 50       		.byte	0x50
 5665 05c9 15000000 		.4byte	.LVL80-1
 5666 05cd 22000000 		.4byte	.LFE117
 5667 05d1 0400     		.2byte	0x4
 5668 05d3 F3       		.byte	0xf3
 5669 05d4 01       		.uleb128 0x1
 5670 05d5 50       		.byte	0x50
 5671 05d6 9F       		.byte	0x9f
 5672 05d7 00000000 		.4byte	0
 5673 05db 00000000 		.4byte	0
 5674              	.LLST38:
 5675 05df 00000000 		.4byte	.LVL78
 5676 05e3 15000000 		.4byte	.LVL80-1
 5677 05e7 0100     		.2byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 161


 5678 05e9 51       		.byte	0x51
 5679 05ea 15000000 		.4byte	.LVL80-1
 5680 05ee 22000000 		.4byte	.LFE117
 5681 05f2 0400     		.2byte	0x4
 5682 05f4 F3       		.byte	0xf3
 5683 05f5 01       		.uleb128 0x1
 5684 05f6 51       		.byte	0x51
 5685 05f7 9F       		.byte	0x9f
 5686 05f8 00000000 		.4byte	0
 5687 05fc 00000000 		.4byte	0
 5688              	.LLST39:
 5689 0600 00000000 		.4byte	.LVL78
 5690 0604 12000000 		.4byte	.LVL79
 5691 0608 0200     		.2byte	0x2
 5692 060a 30       		.byte	0x30
 5693 060b 9F       		.byte	0x9f
 5694 060c 00000000 		.4byte	0
 5695 0610 00000000 		.4byte	0
 5696              	.LLST40:
 5697 0614 00000000 		.4byte	.LVL83
 5698 0618 04000000 		.4byte	.LVL84
 5699 061c 0100     		.2byte	0x1
 5700 061e 51       		.byte	0x51
 5701 061f 04000000 		.4byte	.LVL84
 5702 0623 0E000000 		.4byte	.LFE118
 5703 0627 0400     		.2byte	0x4
 5704 0629 F3       		.byte	0xf3
 5705 062a 01       		.uleb128 0x1
 5706 062b 51       		.byte	0x51
 5707 062c 9F       		.byte	0x9f
 5708 062d 00000000 		.4byte	0
 5709 0631 00000000 		.4byte	0
 5710              	.LLST41:
 5711 0635 08000000 		.4byte	.LVL85
 5712 0639 0A000000 		.4byte	.LVL86
 5713 063d 0100     		.2byte	0x1
 5714 063f 53       		.byte	0x53
 5715 0640 0A000000 		.4byte	.LVL86
 5716 0644 0E000000 		.4byte	.LFE118
 5717 0648 0100     		.2byte	0x1
 5718 064a 51       		.byte	0x51
 5719 064b 00000000 		.4byte	0
 5720 064f 00000000 		.4byte	0
 5721              	.LLST42:
 5722 0653 00000000 		.4byte	.LVL87
 5723 0657 04000000 		.4byte	.LVL88
 5724 065b 0100     		.2byte	0x1
 5725 065d 51       		.byte	0x51
 5726 065e 04000000 		.4byte	.LVL88
 5727 0662 0C000000 		.4byte	.LFE119
 5728 0666 0400     		.2byte	0x4
 5729 0668 F3       		.byte	0xf3
 5730 0669 01       		.uleb128 0x1
 5731 066a 51       		.byte	0x51
 5732 066b 9F       		.byte	0x9f
 5733 066c 00000000 		.4byte	0
 5734 0670 00000000 		.4byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 162


 5735              	.LLST43:
 5736 0674 06000000 		.4byte	.LVL89
 5737 0678 08000000 		.4byte	.LVL90
 5738 067c 0100     		.2byte	0x1
 5739 067e 53       		.byte	0x53
 5740 067f 08000000 		.4byte	.LVL90
 5741 0683 0C000000 		.4byte	.LFE119
 5742 0687 0100     		.2byte	0x1
 5743 0689 51       		.byte	0x51
 5744 068a 00000000 		.4byte	0
 5745 068e 00000000 		.4byte	0
 5746              	.LLST44:
 5747 0692 00000000 		.4byte	.LVL91
 5748 0696 08000000 		.4byte	.LVL92
 5749 069a 0100     		.2byte	0x1
 5750 069c 50       		.byte	0x50
 5751 069d 08000000 		.4byte	.LVL92
 5752 06a1 0E000000 		.4byte	.LVL94
 5753 06a5 0400     		.2byte	0x4
 5754 06a7 F3       		.byte	0xf3
 5755 06a8 01       		.uleb128 0x1
 5756 06a9 50       		.byte	0x50
 5757 06aa 9F       		.byte	0x9f
 5758 06ab 0E000000 		.4byte	.LVL94
 5759 06af 10000000 		.4byte	.LVL95
 5760 06b3 0100     		.2byte	0x1
 5761 06b5 50       		.byte	0x50
 5762 06b6 10000000 		.4byte	.LVL95
 5763 06ba 1C000000 		.4byte	.LFE120
 5764 06be 0400     		.2byte	0x4
 5765 06c0 F3       		.byte	0xf3
 5766 06c1 01       		.uleb128 0x1
 5767 06c2 50       		.byte	0x50
 5768 06c3 9F       		.byte	0x9f
 5769 06c4 00000000 		.4byte	0
 5770 06c8 00000000 		.4byte	0
 5771              	.LLST45:
 5772 06cc 00000000 		.4byte	.LVL91
 5773 06d0 0A000000 		.4byte	.LVL93
 5774 06d4 0600     		.2byte	0x6
 5775 06d6 0C       		.byte	0xc
 5776 06d7 01000600 		.4byte	0x60001
 5777 06db 9F       		.byte	0x9f
 5778 06dc 0A000000 		.4byte	.LVL93
 5779 06e0 0E000000 		.4byte	.LVL94
 5780 06e4 0200     		.2byte	0x2
 5781 06e6 30       		.byte	0x30
 5782 06e7 9F       		.byte	0x9f
 5783 06e8 0E000000 		.4byte	.LVL94
 5784 06ec 10000000 		.4byte	.LVL95
 5785 06f0 0600     		.2byte	0x6
 5786 06f2 0C       		.byte	0xc
 5787 06f3 01000600 		.4byte	0x60001
 5788 06f7 9F       		.byte	0x9f
 5789 06f8 10000000 		.4byte	.LVL95
 5790 06fc 1C000000 		.4byte	.LFE120
 5791 0700 0100     		.2byte	0x1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 163


 5792 0702 50       		.byte	0x50
 5793 0703 00000000 		.4byte	0
 5794 0707 00000000 		.4byte	0
 5795              	.LLST46:
 5796 070b 00000000 		.4byte	.LVL96
 5797 070f 08000000 		.4byte	.LVL97
 5798 0713 0100     		.2byte	0x1
 5799 0715 50       		.byte	0x50
 5800 0716 08000000 		.4byte	.LVL97
 5801 071a 0E000000 		.4byte	.LVL99
 5802 071e 0400     		.2byte	0x4
 5803 0720 F3       		.byte	0xf3
 5804 0721 01       		.uleb128 0x1
 5805 0722 50       		.byte	0x50
 5806 0723 9F       		.byte	0x9f
 5807 0724 0E000000 		.4byte	.LVL99
 5808 0728 10000000 		.4byte	.LVL100
 5809 072c 0100     		.2byte	0x1
 5810 072e 50       		.byte	0x50
 5811 072f 10000000 		.4byte	.LVL100
 5812 0733 1C000000 		.4byte	.LFE121
 5813 0737 0400     		.2byte	0x4
 5814 0739 F3       		.byte	0xf3
 5815 073a 01       		.uleb128 0x1
 5816 073b 50       		.byte	0x50
 5817 073c 9F       		.byte	0x9f
 5818 073d 00000000 		.4byte	0
 5819 0741 00000000 		.4byte	0
 5820              	.LLST47:
 5821 0745 00000000 		.4byte	.LVL96
 5822 0749 0A000000 		.4byte	.LVL98
 5823 074d 0600     		.2byte	0x6
 5824 074f 0C       		.byte	0xc
 5825 0750 01000600 		.4byte	0x60001
 5826 0754 9F       		.byte	0x9f
 5827 0755 0A000000 		.4byte	.LVL98
 5828 0759 0E000000 		.4byte	.LVL99
 5829 075d 0200     		.2byte	0x2
 5830 075f 30       		.byte	0x30
 5831 0760 9F       		.byte	0x9f
 5832 0761 0E000000 		.4byte	.LVL99
 5833 0765 10000000 		.4byte	.LVL100
 5834 0769 0600     		.2byte	0x6
 5835 076b 0C       		.byte	0xc
 5836 076c 01000600 		.4byte	0x60001
 5837 0770 9F       		.byte	0x9f
 5838 0771 10000000 		.4byte	.LVL100
 5839 0775 1C000000 		.4byte	.LFE121
 5840 0779 0100     		.2byte	0x1
 5841 077b 50       		.byte	0x50
 5842 077c 00000000 		.4byte	0
 5843 0780 00000000 		.4byte	0
 5844              	.LLST48:
 5845 0784 00000000 		.4byte	.LVL101
 5846 0788 39000000 		.4byte	.LVL108-1
 5847 078c 0100     		.2byte	0x1
 5848 078e 50       		.byte	0x50
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 164


 5849 078f 39000000 		.4byte	.LVL108-1
 5850 0793 64000000 		.4byte	.LFE122
 5851 0797 0400     		.2byte	0x4
 5852 0799 F3       		.byte	0xf3
 5853 079a 01       		.uleb128 0x1
 5854 079b 50       		.byte	0x50
 5855 079c 9F       		.byte	0x9f
 5856 079d 00000000 		.4byte	0
 5857 07a1 00000000 		.4byte	0
 5858              	.LLST49:
 5859 07a5 00000000 		.4byte	.LVL101
 5860 07a9 36000000 		.4byte	.LVL107
 5861 07ad 0100     		.2byte	0x1
 5862 07af 51       		.byte	0x51
 5863 07b0 36000000 		.4byte	.LVL107
 5864 07b4 56000000 		.4byte	.LVL113
 5865 07b8 0100     		.2byte	0x1
 5866 07ba 55       		.byte	0x55
 5867 07bb 56000000 		.4byte	.LVL113
 5868 07bf 64000000 		.4byte	.LFE122
 5869 07c3 0400     		.2byte	0x4
 5870 07c5 F3       		.byte	0xf3
 5871 07c6 01       		.uleb128 0x1
 5872 07c7 51       		.byte	0x51
 5873 07c8 9F       		.byte	0x9f
 5874 07c9 00000000 		.4byte	0
 5875 07cd 00000000 		.4byte	0
 5876              	.LLST50:
 5877 07d1 00000000 		.4byte	.LVL101
 5878 07d5 39000000 		.4byte	.LVL108-1
 5879 07d9 0100     		.2byte	0x1
 5880 07db 52       		.byte	0x52
 5881 07dc 39000000 		.4byte	.LVL108-1
 5882 07e0 5C000000 		.4byte	.LVL115
 5883 07e4 0400     		.2byte	0x4
 5884 07e6 F3       		.byte	0xf3
 5885 07e7 01       		.uleb128 0x1
 5886 07e8 52       		.byte	0x52
 5887 07e9 9F       		.byte	0x9f
 5888 07ea 5C000000 		.4byte	.LVL115
 5889 07ee 5E000000 		.4byte	.LVL116
 5890 07f2 0100     		.2byte	0x1
 5891 07f4 54       		.byte	0x54
 5892 07f5 00000000 		.4byte	0
 5893 07f9 00000000 		.4byte	0
 5894              	.LLST51:
 5895 07fd 0A000000 		.4byte	.LVL102
 5896 0801 5A000000 		.4byte	.LVL114
 5897 0805 0100     		.2byte	0x1
 5898 0807 54       		.byte	0x54
 5899 0808 00000000 		.4byte	0
 5900 080c 00000000 		.4byte	0
 5901              	.LLST52:
 5902 0810 0A000000 		.4byte	.LVL102
 5903 0814 36000000 		.4byte	.LVL107
 5904 0818 0100     		.2byte	0x1
 5905 081a 51       		.byte	0x51
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 165


 5906 081b 36000000 		.4byte	.LVL107
 5907 081f 56000000 		.4byte	.LVL113
 5908 0823 0100     		.2byte	0x1
 5909 0825 55       		.byte	0x55
 5910 0826 56000000 		.4byte	.LVL113
 5911 082a 5C000000 		.4byte	.LVL115
 5912 082e 0400     		.2byte	0x4
 5913 0830 F3       		.byte	0xf3
 5914 0831 01       		.uleb128 0x1
 5915 0832 51       		.byte	0x51
 5916 0833 9F       		.byte	0x9f
 5917 0834 00000000 		.4byte	0
 5918 0838 00000000 		.4byte	0
 5919              	.LLST53:
 5920 083c 0A000000 		.4byte	.LVL102
 5921 0840 39000000 		.4byte	.LVL108-1
 5922 0844 0100     		.2byte	0x1
 5923 0846 50       		.byte	0x50
 5924 0847 39000000 		.4byte	.LVL108-1
 5925 084b 5C000000 		.4byte	.LVL115
 5926 084f 0400     		.2byte	0x4
 5927 0851 F3       		.byte	0xf3
 5928 0852 01       		.uleb128 0x1
 5929 0853 50       		.byte	0x50
 5930 0854 9F       		.byte	0x9f
 5931 0855 00000000 		.4byte	0
 5932 0859 00000000 		.4byte	0
 5933              	.LLST54:
 5934 085d 46000000 		.4byte	.LVL109
 5935 0861 48000000 		.4byte	.LVL110
 5936 0865 0100     		.2byte	0x1
 5937 0867 50       		.byte	0x50
 5938 0868 00000000 		.4byte	0
 5939 086c 00000000 		.4byte	0
 5940              	.LLST55:
 5941 0870 20000000 		.4byte	.LVL103
 5942 0874 22000000 		.4byte	.LVL104
 5943 0878 0700     		.2byte	0x7
 5944 087a 73       		.byte	0x73
 5945 087b 00       		.sleb128 0
 5946 087c 34       		.byte	0x34
 5947 087d 25       		.byte	0x25
 5948 087e 37       		.byte	0x37
 5949 087f 1A       		.byte	0x1a
 5950 0880 9F       		.byte	0x9f
 5951 0881 28000000 		.4byte	.LVL105
 5952 0885 52000000 		.4byte	.LVL112
 5953 0889 0100     		.2byte	0x1
 5954 088b 56       		.byte	0x56
 5955 088c 00000000 		.4byte	0
 5956 0890 00000000 		.4byte	0
 5957              	.LLST56:
 5958 0894 00000000 		.4byte	.LVL117
 5959 0898 11000000 		.4byte	.LVL118-1
 5960 089c 0100     		.2byte	0x1
 5961 089e 50       		.byte	0x50
 5962 089f 11000000 		.4byte	.LVL118-1
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 166


 5963 08a3 32000000 		.4byte	.LVL126
 5964 08a7 0400     		.2byte	0x4
 5965 08a9 F3       		.byte	0xf3
 5966 08aa 01       		.uleb128 0x1
 5967 08ab 50       		.byte	0x50
 5968 08ac 9F       		.byte	0x9f
 5969 08ad 32000000 		.4byte	.LVL126
 5970 08b1 34000000 		.4byte	.LVL127
 5971 08b5 0100     		.2byte	0x1
 5972 08b7 50       		.byte	0x50
 5973 08b8 34000000 		.4byte	.LVL127
 5974 08bc 40000000 		.4byte	.LFE123
 5975 08c0 0400     		.2byte	0x4
 5976 08c2 F3       		.byte	0xf3
 5977 08c3 01       		.uleb128 0x1
 5978 08c4 50       		.byte	0x50
 5979 08c5 9F       		.byte	0x9f
 5980 08c6 00000000 		.4byte	0
 5981 08ca 00000000 		.4byte	0
 5982              	.LLST57:
 5983 08ce 00000000 		.4byte	.LVL117
 5984 08d2 11000000 		.4byte	.LVL118-1
 5985 08d6 0100     		.2byte	0x1
 5986 08d8 51       		.byte	0x51
 5987 08d9 11000000 		.4byte	.LVL118-1
 5988 08dd 20000000 		.4byte	.LVL121
 5989 08e1 0100     		.2byte	0x1
 5990 08e3 54       		.byte	0x54
 5991 08e4 20000000 		.4byte	.LVL121
 5992 08e8 32000000 		.4byte	.LVL126
 5993 08ec 0400     		.2byte	0x4
 5994 08ee F3       		.byte	0xf3
 5995 08ef 01       		.uleb128 0x1
 5996 08f0 51       		.byte	0x51
 5997 08f1 9F       		.byte	0x9f
 5998 08f2 32000000 		.4byte	.LVL126
 5999 08f6 34000000 		.4byte	.LVL127
 6000 08fa 0100     		.2byte	0x1
 6001 08fc 51       		.byte	0x51
 6002 08fd 34000000 		.4byte	.LVL127
 6003 0901 40000000 		.4byte	.LFE123
 6004 0905 0400     		.2byte	0x4
 6005 0907 F3       		.byte	0xf3
 6006 0908 01       		.uleb128 0x1
 6007 0909 51       		.byte	0x51
 6008 090a 9F       		.byte	0x9f
 6009 090b 00000000 		.4byte	0
 6010 090f 00000000 		.4byte	0
 6011              	.LLST58:
 6012 0913 00000000 		.4byte	.LVL117
 6013 0917 11000000 		.4byte	.LVL118-1
 6014 091b 0100     		.2byte	0x1
 6015 091d 52       		.byte	0x52
 6016 091e 11000000 		.4byte	.LVL118-1
 6017 0922 12000000 		.4byte	.LVL118
 6018 0926 0400     		.2byte	0x4
 6019 0928 F3       		.byte	0xf3
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 167


 6020 0929 01       		.uleb128 0x1
 6021 092a 52       		.byte	0x52
 6022 092b 9F       		.byte	0x9f
 6023 092c 12000000 		.4byte	.LVL118
 6024 0930 15000000 		.4byte	.LVL119-1
 6025 0934 0100     		.2byte	0x1
 6026 0936 50       		.byte	0x50
 6027 0937 32000000 		.4byte	.LVL126
 6028 093b 34000000 		.4byte	.LVL127
 6029 093f 0100     		.2byte	0x1
 6030 0941 52       		.byte	0x52
 6031 0942 00000000 		.4byte	0
 6032 0946 00000000 		.4byte	0
 6033              	.LLST59:
 6034 094a 00000000 		.4byte	.LVL117
 6035 094e 22000000 		.4byte	.LVL122
 6036 0952 0600     		.2byte	0x6
 6037 0954 9E       		.byte	0x9e
 6038 0955 04       		.uleb128 0x4
 6039 0956 00000000 		.4byte	0
 6040 095a 22000000 		.4byte	.LVL122
 6041 095e 24000000 		.4byte	.LVL123
 6042 0962 0100     		.2byte	0x1
 6043 0964 50       		.byte	0x50
 6044 0965 24000000 		.4byte	.LVL123
 6045 0969 30000000 		.4byte	.LVL125
 6046 096d 0100     		.2byte	0x1
 6047 096f 55       		.byte	0x55
 6048 0970 30000000 		.4byte	.LVL125
 6049 0974 32000000 		.4byte	.LVL126
 6050 0978 0100     		.2byte	0x1
 6051 097a 50       		.byte	0x50
 6052 097b 32000000 		.4byte	.LVL126
 6053 097f 34000000 		.4byte	.LVL127
 6054 0983 0600     		.2byte	0x6
 6055 0985 9E       		.byte	0x9e
 6056 0986 04       		.uleb128 0x4
 6057 0987 00000000 		.4byte	0
 6058 098b 34000000 		.4byte	.LVL127
 6059 098f 40000000 		.4byte	.LFE123
 6060 0993 0100     		.2byte	0x1
 6061 0995 50       		.byte	0x50
 6062 0996 00000000 		.4byte	0
 6063 099a 00000000 		.4byte	0
 6064              	.LLST60:
 6065 099e 00000000 		.4byte	.LVL128
 6066 09a2 15000000 		.4byte	.LVL130-1
 6067 09a6 0100     		.2byte	0x1
 6068 09a8 50       		.byte	0x50
 6069 09a9 15000000 		.4byte	.LVL130-1
 6070 09ad 4C000000 		.4byte	.LFE124
 6071 09b1 0400     		.2byte	0x4
 6072 09b3 F3       		.byte	0xf3
 6073 09b4 01       		.uleb128 0x1
 6074 09b5 50       		.byte	0x50
 6075 09b6 9F       		.byte	0x9f
 6076 09b7 00000000 		.4byte	0
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 168


 6077 09bb 00000000 		.4byte	0
 6078              	.LLST61:
 6079 09bf 00000000 		.4byte	.LVL128
 6080 09c3 0C000000 		.4byte	.LVL129
 6081 09c7 0100     		.2byte	0x1
 6082 09c9 51       		.byte	0x51
 6083 09ca 0C000000 		.4byte	.LVL129
 6084 09ce 42000000 		.4byte	.LVL138
 6085 09d2 0100     		.2byte	0x1
 6086 09d4 56       		.byte	0x56
 6087 09d5 42000000 		.4byte	.LVL138
 6088 09d9 4C000000 		.4byte	.LFE124
 6089 09dd 0400     		.2byte	0x4
 6090 09df F3       		.byte	0xf3
 6091 09e0 01       		.uleb128 0x1
 6092 09e1 51       		.byte	0x51
 6093 09e2 9F       		.byte	0x9f
 6094 09e3 00000000 		.4byte	0
 6095 09e7 00000000 		.4byte	0
 6096              	.LLST62:
 6097 09eb 00000000 		.4byte	.LVL128
 6098 09ef 15000000 		.4byte	.LVL130-1
 6099 09f3 0100     		.2byte	0x1
 6100 09f5 52       		.byte	0x52
 6101 09f6 15000000 		.4byte	.LVL130-1
 6102 09fa 16000000 		.4byte	.LVL130
 6103 09fe 0400     		.2byte	0x4
 6104 0a00 F3       		.byte	0xf3
 6105 0a01 01       		.uleb128 0x1
 6106 0a02 52       		.byte	0x52
 6107 0a03 9F       		.byte	0x9f
 6108 0a04 16000000 		.4byte	.LVL130
 6109 0a08 2C000000 		.4byte	.LVL132
 6110 0a0c 0100     		.2byte	0x1
 6111 0a0e 50       		.byte	0x50
 6112 0a0f 2E000000 		.4byte	.LVL133
 6113 0a13 32000000 		.4byte	.LVL134
 6114 0a17 0100     		.2byte	0x1
 6115 0a19 50       		.byte	0x50
 6116 0a1a 00000000 		.4byte	0
 6117 0a1e 00000000 		.4byte	0
 6118              	.LLST63:
 6119 0a22 00000000 		.4byte	.LVL128
 6120 0a26 1C000000 		.4byte	.LVL131
 6121 0a2a 0200     		.2byte	0x2
 6122 0a2c 30       		.byte	0x30
 6123 0a2d 9F       		.byte	0x9f
 6124 0a2e 1C000000 		.4byte	.LVL131
 6125 0a32 2C000000 		.4byte	.LVL132
 6126 0a36 0100     		.2byte	0x1
 6127 0a38 55       		.byte	0x55
 6128 0a39 2C000000 		.4byte	.LVL132
 6129 0a3d 2E000000 		.4byte	.LVL133
 6130 0a41 0100     		.2byte	0x1
 6131 0a43 50       		.byte	0x50
 6132 0a44 2E000000 		.4byte	.LVL133
 6133 0a48 38000000 		.4byte	.LVL135
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 169


 6134 0a4c 0100     		.2byte	0x1
 6135 0a4e 55       		.byte	0x55
 6136 0a4f 38000000 		.4byte	.LVL135
 6137 0a53 3D000000 		.4byte	.LVL136-1
 6138 0a57 0100     		.2byte	0x1
 6139 0a59 50       		.byte	0x50
 6140 0a5a 40000000 		.4byte	.LVL137
 6141 0a5e 4C000000 		.4byte	.LFE124
 6142 0a62 0100     		.2byte	0x1
 6143 0a64 53       		.byte	0x53
 6144 0a65 00000000 		.4byte	0
 6145 0a69 00000000 		.4byte	0
 6146              	.LLST64:
 6147 0a6d 00000000 		.4byte	.LVL139
 6148 0a71 15000000 		.4byte	.LVL141-1
 6149 0a75 0100     		.2byte	0x1
 6150 0a77 50       		.byte	0x50
 6151 0a78 15000000 		.4byte	.LVL141-1
 6152 0a7c 3C000000 		.4byte	.LFE125
 6153 0a80 0400     		.2byte	0x4
 6154 0a82 F3       		.byte	0xf3
 6155 0a83 01       		.uleb128 0x1
 6156 0a84 50       		.byte	0x50
 6157 0a85 9F       		.byte	0x9f
 6158 0a86 00000000 		.4byte	0
 6159 0a8a 00000000 		.4byte	0
 6160              	.LLST65:
 6161 0a8e 00000000 		.4byte	.LVL139
 6162 0a92 0C000000 		.4byte	.LVL140
 6163 0a96 0100     		.2byte	0x1
 6164 0a98 51       		.byte	0x51
 6165 0a99 0C000000 		.4byte	.LVL140
 6166 0a9d 24000000 		.4byte	.LVL143
 6167 0aa1 0100     		.2byte	0x1
 6168 0aa3 54       		.byte	0x54
 6169 0aa4 24000000 		.4byte	.LVL143
 6170 0aa8 3C000000 		.4byte	.LFE125
 6171 0aac 0400     		.2byte	0x4
 6172 0aae F3       		.byte	0xf3
 6173 0aaf 01       		.uleb128 0x1
 6174 0ab0 51       		.byte	0x51
 6175 0ab1 9F       		.byte	0x9f
 6176 0ab2 00000000 		.4byte	0
 6177 0ab6 00000000 		.4byte	0
 6178              	.LLST66:
 6179 0aba 00000000 		.4byte	.LVL139
 6180 0abe 15000000 		.4byte	.LVL141-1
 6181 0ac2 0100     		.2byte	0x1
 6182 0ac4 52       		.byte	0x52
 6183 0ac5 15000000 		.4byte	.LVL141-1
 6184 0ac9 16000000 		.4byte	.LVL141
 6185 0acd 0400     		.2byte	0x4
 6186 0acf F3       		.byte	0xf3
 6187 0ad0 01       		.uleb128 0x1
 6188 0ad1 52       		.byte	0x52
 6189 0ad2 9F       		.byte	0x9f
 6190 0ad3 16000000 		.4byte	.LVL141
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 170


 6191 0ad7 1F000000 		.4byte	.LVL142-1
 6192 0adb 0100     		.2byte	0x1
 6193 0add 50       		.byte	0x50
 6194 0ade 00000000 		.4byte	0
 6195 0ae2 00000000 		.4byte	0
 6196              	.LLST67:
 6197 0ae6 00000000 		.4byte	.LVL139
 6198 0aea 20000000 		.4byte	.LVL142
 6199 0aee 0A00     		.2byte	0xa
 6200 0af0 9E       		.byte	0x9e
 6201 0af1 08       		.uleb128 0x8
 6202 0af2 00000000 		.8byte	0
 6202      00000000 
 6203 0afa 20000000 		.4byte	.LVL142
 6204 0afe 2B000000 		.4byte	.LVL144-1
 6205 0b02 0600     		.2byte	0x6
 6206 0b04 50       		.byte	0x50
 6207 0b05 93       		.byte	0x93
 6208 0b06 04       		.uleb128 0x4
 6209 0b07 51       		.byte	0x51
 6210 0b08 93       		.byte	0x93
 6211 0b09 04       		.uleb128 0x4
 6212 0b0a 00000000 		.4byte	0
 6213 0b0e 00000000 		.4byte	0
 6214              	.LLST68:
 6215 0b12 00000000 		.4byte	.LVL146
 6216 0b16 0A000000 		.4byte	.LVL148
 6217 0b1a 0100     		.2byte	0x1
 6218 0b1c 51       		.byte	0x51
 6219 0b1d 0A000000 		.4byte	.LVL148
 6220 0b21 0E000000 		.4byte	.LVL150
 6221 0b25 0400     		.2byte	0x4
 6222 0b27 F3       		.byte	0xf3
 6223 0b28 01       		.uleb128 0x1
 6224 0b29 51       		.byte	0x51
 6225 0b2a 9F       		.byte	0x9f
 6226 0b2b 0E000000 		.4byte	.LVL150
 6227 0b2f 12000000 		.4byte	.LVL152
 6228 0b33 0100     		.2byte	0x1
 6229 0b35 51       		.byte	0x51
 6230 0b36 12000000 		.4byte	.LVL152
 6231 0b3a 16000000 		.4byte	.LFE126
 6232 0b3e 0400     		.2byte	0x4
 6233 0b40 F3       		.byte	0xf3
 6234 0b41 01       		.uleb128 0x1
 6235 0b42 51       		.byte	0x51
 6236 0b43 9F       		.byte	0x9f
 6237 0b44 00000000 		.4byte	0
 6238 0b48 00000000 		.4byte	0
 6239              	.LLST69:
 6240 0b4c 00000000 		.4byte	.LVL146
 6241 0b50 0C000000 		.4byte	.LVL149
 6242 0b54 0100     		.2byte	0x1
 6243 0b56 52       		.byte	0x52
 6244 0b57 0C000000 		.4byte	.LVL149
 6245 0b5b 0E000000 		.4byte	.LVL150
 6246 0b5f 0400     		.2byte	0x4
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 171


 6247 0b61 F3       		.byte	0xf3
 6248 0b62 01       		.uleb128 0x1
 6249 0b63 52       		.byte	0x52
 6250 0b64 9F       		.byte	0x9f
 6251 0b65 0E000000 		.4byte	.LVL150
 6252 0b69 12000000 		.4byte	.LVL152
 6253 0b6d 0100     		.2byte	0x1
 6254 0b6f 52       		.byte	0x52
 6255 0b70 12000000 		.4byte	.LVL152
 6256 0b74 16000000 		.4byte	.LFE126
 6257 0b78 0400     		.2byte	0x4
 6258 0b7a F3       		.byte	0xf3
 6259 0b7b 01       		.uleb128 0x1
 6260 0b7c 52       		.byte	0x52
 6261 0b7d 9F       		.byte	0x9f
 6262 0b7e 00000000 		.4byte	0
 6263 0b82 00000000 		.4byte	0
 6264              	.LLST70:
 6265 0b86 00000000 		.4byte	.LVL146
 6266 0b8a 06000000 		.4byte	.LVL147
 6267 0b8e 0100     		.2byte	0x1
 6268 0b90 53       		.byte	0x53
 6269 0b91 06000000 		.4byte	.LVL147
 6270 0b95 0E000000 		.4byte	.LVL150
 6271 0b99 0400     		.2byte	0x4
 6272 0b9b F3       		.byte	0xf3
 6273 0b9c 01       		.uleb128 0x1
 6274 0b9d 53       		.byte	0x53
 6275 0b9e 9F       		.byte	0x9f
 6276 0b9f 0E000000 		.4byte	.LVL150
 6277 0ba3 10000000 		.4byte	.LVL151
 6278 0ba7 0100     		.2byte	0x1
 6279 0ba9 53       		.byte	0x53
 6280 0baa 10000000 		.4byte	.LVL151
 6281 0bae 16000000 		.4byte	.LFE126
 6282 0bb2 0400     		.2byte	0x4
 6283 0bb4 F3       		.byte	0xf3
 6284 0bb5 01       		.uleb128 0x1
 6285 0bb6 53       		.byte	0x53
 6286 0bb7 9F       		.byte	0x9f
 6287 0bb8 00000000 		.4byte	0
 6288 0bbc 00000000 		.4byte	0
 6289              	.LLST71:
 6290 0bc0 00000000 		.4byte	.LVL153
 6291 0bc4 06000000 		.4byte	.LVL154
 6292 0bc8 0100     		.2byte	0x1
 6293 0bca 50       		.byte	0x50
 6294 0bcb 06000000 		.4byte	.LVL154
 6295 0bcf 08000000 		.4byte	.LFE127
 6296 0bd3 0400     		.2byte	0x4
 6297 0bd5 F3       		.byte	0xf3
 6298 0bd6 01       		.uleb128 0x1
 6299 0bd7 50       		.byte	0x50
 6300 0bd8 9F       		.byte	0x9f
 6301 0bd9 00000000 		.4byte	0
 6302 0bdd 00000000 		.4byte	0
 6303              	.LLST72:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 172


 6304 0be1 00000000 		.4byte	.LVL155
 6305 0be5 0C000000 		.4byte	.LVL157
 6306 0be9 0100     		.2byte	0x1
 6307 0beb 51       		.byte	0x51
 6308 0bec 0C000000 		.4byte	.LVL157
 6309 0bf0 10000000 		.4byte	.LVL158
 6310 0bf4 0400     		.2byte	0x4
 6311 0bf6 F3       		.byte	0xf3
 6312 0bf7 01       		.uleb128 0x1
 6313 0bf8 51       		.byte	0x51
 6314 0bf9 9F       		.byte	0x9f
 6315 0bfa 10000000 		.4byte	.LVL158
 6316 0bfe 16000000 		.4byte	.LVL160
 6317 0c02 0100     		.2byte	0x1
 6318 0c04 51       		.byte	0x51
 6319 0c05 16000000 		.4byte	.LVL160
 6320 0c09 18000000 		.4byte	.LFE128
 6321 0c0d 0400     		.2byte	0x4
 6322 0c0f F3       		.byte	0xf3
 6323 0c10 01       		.uleb128 0x1
 6324 0c11 51       		.byte	0x51
 6325 0c12 9F       		.byte	0x9f
 6326 0c13 00000000 		.4byte	0
 6327 0c17 00000000 		.4byte	0
 6328              	.LLST73:
 6329 0c1b 00000000 		.4byte	.LVL155
 6330 0c1f 0A000000 		.4byte	.LVL156
 6331 0c23 0100     		.2byte	0x1
 6332 0c25 52       		.byte	0x52
 6333 0c26 0A000000 		.4byte	.LVL156
 6334 0c2a 10000000 		.4byte	.LVL158
 6335 0c2e 0400     		.2byte	0x4
 6336 0c30 F3       		.byte	0xf3
 6337 0c31 01       		.uleb128 0x1
 6338 0c32 52       		.byte	0x52
 6339 0c33 9F       		.byte	0x9f
 6340 0c34 10000000 		.4byte	.LVL158
 6341 0c38 12000000 		.4byte	.LVL159
 6342 0c3c 0100     		.2byte	0x1
 6343 0c3e 52       		.byte	0x52
 6344 0c3f 12000000 		.4byte	.LVL159
 6345 0c43 18000000 		.4byte	.LFE128
 6346 0c47 0400     		.2byte	0x4
 6347 0c49 F3       		.byte	0xf3
 6348 0c4a 01       		.uleb128 0x1
 6349 0c4b 52       		.byte	0x52
 6350 0c4c 9F       		.byte	0x9f
 6351 0c4d 00000000 		.4byte	0
 6352 0c51 00000000 		.4byte	0
 6353              	.LLST74:
 6354 0c55 00000000 		.4byte	.LVL161
 6355 0c59 08000000 		.4byte	.LVL162
 6356 0c5d 0100     		.2byte	0x1
 6357 0c5f 50       		.byte	0x50
 6358 0c60 08000000 		.4byte	.LVL162
 6359 0c64 0E000000 		.4byte	.LVL164
 6360 0c68 0400     		.2byte	0x4
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 173


 6361 0c6a F3       		.byte	0xf3
 6362 0c6b 01       		.uleb128 0x1
 6363 0c6c 50       		.byte	0x50
 6364 0c6d 9F       		.byte	0x9f
 6365 0c6e 0E000000 		.4byte	.LVL164
 6366 0c72 14000000 		.4byte	.LVL165
 6367 0c76 0100     		.2byte	0x1
 6368 0c78 50       		.byte	0x50
 6369 0c79 14000000 		.4byte	.LVL165
 6370 0c7d 1C000000 		.4byte	.LFE129
 6371 0c81 0400     		.2byte	0x4
 6372 0c83 F3       		.byte	0xf3
 6373 0c84 01       		.uleb128 0x1
 6374 0c85 50       		.byte	0x50
 6375 0c86 9F       		.byte	0x9f
 6376 0c87 00000000 		.4byte	0
 6377 0c8b 00000000 		.4byte	0
 6378              	.LLST75:
 6379 0c8f 00000000 		.4byte	.LVL161
 6380 0c93 0B000000 		.4byte	.LVL163-1
 6381 0c97 0100     		.2byte	0x1
 6382 0c99 51       		.byte	0x51
 6383 0c9a 0B000000 		.4byte	.LVL163-1
 6384 0c9e 0E000000 		.4byte	.LVL164
 6385 0ca2 0400     		.2byte	0x4
 6386 0ca4 F3       		.byte	0xf3
 6387 0ca5 01       		.uleb128 0x1
 6388 0ca6 51       		.byte	0x51
 6389 0ca7 9F       		.byte	0x9f
 6390 0ca8 0E000000 		.4byte	.LVL164
 6391 0cac 17000000 		.4byte	.LVL166-1
 6392 0cb0 0100     		.2byte	0x1
 6393 0cb2 51       		.byte	0x51
 6394 0cb3 17000000 		.4byte	.LVL166-1
 6395 0cb7 1C000000 		.4byte	.LFE129
 6396 0cbb 0400     		.2byte	0x4
 6397 0cbd F3       		.byte	0xf3
 6398 0cbe 01       		.uleb128 0x1
 6399 0cbf 51       		.byte	0x51
 6400 0cc0 9F       		.byte	0x9f
 6401 0cc1 00000000 		.4byte	0
 6402 0cc5 00000000 		.4byte	0
 6403              		.section	.debug_aranges,"",%progbits
 6404 0000 DC000000 		.4byte	0xdc
 6405 0004 0200     		.2byte	0x2
 6406 0006 00000000 		.4byte	.Ldebug_info0
 6407 000a 04       		.byte	0x4
 6408 000b 00       		.byte	0
 6409 000c 0000     		.2byte	0
 6410 000e 0000     		.2byte	0
 6411 0010 00000000 		.4byte	.LFB105
 6412 0014 14010000 		.4byte	.LFE105-.LFB105
 6413 0018 00000000 		.4byte	.LFB106
 6414 001c 5C000000 		.4byte	.LFE106-.LFB106
 6415 0020 00000000 		.4byte	.LFB107
 6416 0024 24000000 		.4byte	.LFE107-.LFB107
 6417 0028 00000000 		.4byte	.LFB109
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 174


 6418 002c 34000000 		.4byte	.LFE109-.LFB109
 6419 0030 00000000 		.4byte	.LFB110
 6420 0034 16000000 		.4byte	.LFE110-.LFB110
 6421 0038 00000000 		.4byte	.LFB111
 6422 003c 14000000 		.4byte	.LFE111-.LFB111
 6423 0040 00000000 		.4byte	.LFB108
 6424 0044 48000000 		.4byte	.LFE108-.LFB108
 6425 0048 00000000 		.4byte	.LFB112
 6426 004c 10000000 		.4byte	.LFE112-.LFB112
 6427 0050 00000000 		.4byte	.LFB113
 6428 0054 44000000 		.4byte	.LFE113-.LFB113
 6429 0058 00000000 		.4byte	.LFB115
 6430 005c 20000000 		.4byte	.LFE115-.LFB115
 6431 0060 00000000 		.4byte	.LFB114
 6432 0064 24000000 		.4byte	.LFE114-.LFB114
 6433 0068 00000000 		.4byte	.LFB116
 6434 006c 12000000 		.4byte	.LFE116-.LFB116
 6435 0070 00000000 		.4byte	.LFB117
 6436 0074 22000000 		.4byte	.LFE117-.LFB117
 6437 0078 00000000 		.4byte	.LFB118
 6438 007c 0E000000 		.4byte	.LFE118-.LFB118
 6439 0080 00000000 		.4byte	.LFB119
 6440 0084 0C000000 		.4byte	.LFE119-.LFB119
 6441 0088 00000000 		.4byte	.LFB120
 6442 008c 1C000000 		.4byte	.LFE120-.LFB120
 6443 0090 00000000 		.4byte	.LFB121
 6444 0094 1C000000 		.4byte	.LFE121-.LFB121
 6445 0098 00000000 		.4byte	.LFB122
 6446 009c 64000000 		.4byte	.LFE122-.LFB122
 6447 00a0 00000000 		.4byte	.LFB123
 6448 00a4 40000000 		.4byte	.LFE123-.LFB123
 6449 00a8 00000000 		.4byte	.LFB124
 6450 00ac 4C000000 		.4byte	.LFE124-.LFB124
 6451 00b0 00000000 		.4byte	.LFB125
 6452 00b4 3C000000 		.4byte	.LFE125-.LFB125
 6453 00b8 00000000 		.4byte	.LFB126
 6454 00bc 16000000 		.4byte	.LFE126-.LFB126
 6455 00c0 00000000 		.4byte	.LFB127
 6456 00c4 08000000 		.4byte	.LFE127-.LFB127
 6457 00c8 00000000 		.4byte	.LFB128
 6458 00cc 18000000 		.4byte	.LFE128-.LFB128
 6459 00d0 00000000 		.4byte	.LFB129
 6460 00d4 1C000000 		.4byte	.LFE129-.LFB129
 6461 00d8 00000000 		.4byte	0
 6462 00dc 00000000 		.4byte	0
 6463              		.section	.debug_ranges,"",%progbits
 6464              	.Ldebug_ranges0:
 6465 0000 00000000 		.4byte	.LFB105
 6466 0004 14010000 		.4byte	.LFE105
 6467 0008 00000000 		.4byte	.LFB106
 6468 000c 5C000000 		.4byte	.LFE106
 6469 0010 00000000 		.4byte	.LFB107
 6470 0014 24000000 		.4byte	.LFE107
 6471 0018 00000000 		.4byte	.LFB109
 6472 001c 34000000 		.4byte	.LFE109
 6473 0020 00000000 		.4byte	.LFB110
 6474 0024 16000000 		.4byte	.LFE110
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 175


 6475 0028 00000000 		.4byte	.LFB111
 6476 002c 14000000 		.4byte	.LFE111
 6477 0030 00000000 		.4byte	.LFB108
 6478 0034 48000000 		.4byte	.LFE108
 6479 0038 00000000 		.4byte	.LFB112
 6480 003c 10000000 		.4byte	.LFE112
 6481 0040 00000000 		.4byte	.LFB113
 6482 0044 44000000 		.4byte	.LFE113
 6483 0048 00000000 		.4byte	.LFB115
 6484 004c 20000000 		.4byte	.LFE115
 6485 0050 00000000 		.4byte	.LFB114
 6486 0054 24000000 		.4byte	.LFE114
 6487 0058 00000000 		.4byte	.LFB116
 6488 005c 12000000 		.4byte	.LFE116
 6489 0060 00000000 		.4byte	.LFB117
 6490 0064 22000000 		.4byte	.LFE117
 6491 0068 00000000 		.4byte	.LFB118
 6492 006c 0E000000 		.4byte	.LFE118
 6493 0070 00000000 		.4byte	.LFB119
 6494 0074 0C000000 		.4byte	.LFE119
 6495 0078 00000000 		.4byte	.LFB120
 6496 007c 1C000000 		.4byte	.LFE120
 6497 0080 00000000 		.4byte	.LFB121
 6498 0084 1C000000 		.4byte	.LFE121
 6499 0088 00000000 		.4byte	.LFB122
 6500 008c 64000000 		.4byte	.LFE122
 6501 0090 00000000 		.4byte	.LFB123
 6502 0094 40000000 		.4byte	.LFE123
 6503 0098 00000000 		.4byte	.LFB124
 6504 009c 4C000000 		.4byte	.LFE124
 6505 00a0 00000000 		.4byte	.LFB125
 6506 00a4 3C000000 		.4byte	.LFE125
 6507 00a8 00000000 		.4byte	.LFB126
 6508 00ac 16000000 		.4byte	.LFE126
 6509 00b0 00000000 		.4byte	.LFB127
 6510 00b4 08000000 		.4byte	.LFE127
 6511 00b8 00000000 		.4byte	.LFB128
 6512 00bc 18000000 		.4byte	.LFE128
 6513 00c0 00000000 		.4byte	.LFB129
 6514 00c4 1C000000 		.4byte	.LFE129
 6515 00c8 00000000 		.4byte	0
 6516 00cc 00000000 		.4byte	0
 6517              		.section	.debug_line,"",%progbits
 6518              	.Ldebug_line0:
 6519 0000 A7050000 		.section	.debug_str,"MS",%progbits,1
 6519      0200AC02 
 6519      00000201 
 6519      FB0E0D00 
 6519      01010101 
 6520              	.LASF118:
 6521 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 6521      6843746C 
 6521      4D61696E 
 6521      57733146 
 6521      72657100 
 6522              	.LASF275:
 6523 0014 72616E67 		.ascii	"rangeThresReg\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 176


 6523      65546872 
 6523      65735265 
 6523      6700
 6524              	.LASF274:
 6525 0022 6C6F774C 		.ascii	"lowLimit\000"
 6525      696D6974 
 6525      00
 6526              	.LASF25:
 6527 002b 52455345 		.ascii	"RESERVED\000"
 6527      52564544 
 6527      00
 6528              	.LASF54:
 6529 0034 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 6529      455F494E 
 6529      54525F4D 
 6529      41534B45 
 6529      4400
 6530              	.LASF39:
 6531 0046 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 6531      5F574F52 
 6531      4B5F5550 
 6531      44415445 
 6531      4400
 6532              	.LASF181:
 6533 0058 63795F73 		.ascii	"cy_stc_syspm_callback_params_t\000"
 6533      74635F73 
 6533      7973706D 
 6533      5F63616C 
 6533      6C626163 
 6534              	.LASF300:
 6535 0077 63795F64 		.ascii	"cy_device\000"
 6535      65766963 
 6535      6500
 6536              	.LASF241:
 6537 0081 6368616E 		.ascii	"chan\000"
 6537      00
 6538              	.LASF272:
 6539 0086 66696E61 		.ascii	"finalResult\000"
 6539      6C526573 
 6539      756C7400 
 6540              	.LASF207:
 6541 0092 43595F53 		.ascii	"CY_SAR_NEG_SEL_VREF\000"
 6541      41525F4E 
 6541      45475F53 
 6541      454C5F56 
 6541      52454600 
 6542              	.LASF104:
 6543 00a6 70657269 		.ascii	"periClockNr\000"
 6543      436C6F63 
 6543      6B4E7200 
 6544              	.LASF162:
 6545 00b2 63686172 		.ascii	"char\000"
 6545      00
 6546              	.LASF78:
 6547 00b7 75646242 		.ascii	"udbBase\000"
 6547      61736500 
 6548              	.LASF30:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 177


 6549 00bf 4348414E 		.ascii	"CHAN_EN\000"
 6549      5F454E00 
 6550              	.LASF173:
 6551 00c7 63795F65 		.ascii	"cy_en_syspm_status_t\000"
 6551      6E5F7379 
 6551      73706D5F 
 6551      73746174 
 6551      75735F74 
 6552              	.LASF77:
 6553 00dc 70657269 		.ascii	"periBase\000"
 6553      42617365 
 6553      00
 6554              	.LASF289:
 6555 00e5 73776974 		.ascii	"switchSelect\000"
 6555      63685365 
 6555      6C656374 
 6555      00
 6556              	.LASF153:
 6557 00f2 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 6557      73436D30 
 6557      4E6D6943 
 6557      746C4F66 
 6557      66736574 
 6558              	.LASF123:
 6559 0107 64774368 		.ascii	"dwChSize\000"
 6559      53697A65 
 6559      00
 6560              	.LASF244:
 6561 0110 61646343 		.ascii	"adcCounts\000"
 6561      6F756E74 
 6561      7300
 6562              	.LASF252:
 6563 011a 73696E67 		.ascii	"singleEndedSigned\000"
 6563      6C65456E 
 6563      64656453 
 6563      69676E65 
 6563      6400
 6564              	.LASF14:
 6565 012c 756E7369 		.ascii	"unsigned int\000"
 6565      676E6564 
 6565      20696E74 
 6565      00
 6566              	.LASF55:
 6567 0139 494E5452 		.ascii	"INTR_CAUSE\000"
 6567      5F434155 
 6567      534500
 6568              	.LASF105:
 6569 0144 736D6966 		.ascii	"smifDeviceNr\000"
 6569      44657669 
 6569      63654E72 
 6569      00
 6570              	.LASF215:
 6571 0151 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 6571      41525F52 
 6571      414E4745 
 6571      5F434F4E 
 6571      445F4F55 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 178


 6572              	.LASF281:
 6573 016b 61646347 		.ascii	"adcGain\000"
 6573      61696E00 
 6574              	.LASF97:
 6575 0173 63707573 		.ascii	"cpussFlashPaSize\000"
 6575      73466C61 
 6575      73685061 
 6575      53697A65 
 6575      00
 6576              	.LASF195:
 6577 0184 63795F65 		.ascii	"cy_en_sar_switch_state_t\000"
 6577      6E5F7361 
 6577      725F7377 
 6577      69746368 
 6577      5F737461 
 6578              	.LASF7:
 6579 019d 5F5F696E 		.ascii	"__int32_t\000"
 6579      7433325F 
 6579      7400
 6580              	.LASF41:
 6581 01a7 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 6581      5F574F52 
 6581      4B5F4E45 
 6581      5756414C 
 6581      554500
 6582              	.LASF202:
 6583 01ba 43595F53 		.ascii	"CY_SAR_NEG_SEL_P1\000"
 6583      41525F4E 
 6583      45475F53 
 6583      454C5F50 
 6583      3100
 6584              	.LASF75:
 6585 01cc 63707573 		.ascii	"cpussBase\000"
 6585      73426173 
 6585      6500
 6586              	.LASF204:
 6587 01d6 43595F53 		.ascii	"CY_SAR_NEG_SEL_P5\000"
 6587      41525F4E 
 6587      45475F53 
 6587      454C5F50 
 6587      3500
 6588              	.LASF205:
 6589 01e8 43595F53 		.ascii	"CY_SAR_NEG_SEL_P7\000"
 6589      41525F4E 
 6589      45475F53 
 6589      454C5F50 
 6589      3700
 6590              	.LASF99:
 6591 01fa 63707573 		.ascii	"cpussFmIrq\000"
 6591      73466D49 
 6591      727100
 6592              	.LASF185:
 6593 0205 43595F53 		.ascii	"CY_SAR_CONVERSION_NOT_COMPLETE\000"
 6593      41525F43 
 6593      4F4E5645 
 6593      5253494F 
 6593      4E5F4E4F 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 179


 6594              	.LASF100:
 6595 0224 63707573 		.ascii	"cpussNotConnectedIrq\000"
 6595      734E6F74 
 6595      436F6E6E 
 6595      65637465 
 6595      64497271 
 6596              	.LASF4:
 6597 0239 73686F72 		.ascii	"short int\000"
 6597      7420696E 
 6597      7400
 6598              	.LASF47:
 6599 0243 53415455 		.ascii	"SATURATE_INTR\000"
 6599      52415445 
 6599      5F494E54 
 6599      5200
 6600              	.LASF305:
 6601 0251 433A5C55 		.ascii	"C:\\Users\\mcfdo\\OneDrive\\Documents\\PSoC Creator"
 6601      73657273 
 6601      5C6D6366 
 6601      646F5C4F 
 6601      6E654472 
 6602 027f 5C576F72 		.ascii	"\\Workspace_prog1\\Mario_mobile_robot_Copy_01_Copy_"
 6602      6B737061 
 6602      63655F70 
 6602      726F6731 
 6602      5C4D6172 
 6603 02b0 30312E63 		.ascii	"01.cydsn\000"
 6603      7964736E 
 6603      00
 6604              	.LASF26:
 6605 02b9 53414D50 		.ascii	"SAMPLE_TIME01\000"
 6605      4C455F54 
 6605      494D4530 
 6605      3100
 6606              	.LASF191:
 6607 02c7 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 6607      41525F57 
 6607      4149545F 
 6607      464F525F 
 6607      52455355 
 6608              	.LASF59:
 6609 02de 494E4A5F 		.ascii	"INJ_RESULT\000"
 6609      52455355 
 6609      4C5400
 6610              	.LASF134:
 6611 02e9 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 6611      44697643 
 6611      6D645061 
 6611      44697653 
 6611      656C506F 
 6612              	.LASF293:
 6613 02ff 73776974 		.ascii	"switchClearReg\000"
 6613      6368436C 
 6613      65617252 
 6613      656700
 6614              	.LASF44:
 6615 030e 494E5452 		.ascii	"INTR_SET\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 180


 6615      5F534554 
 6615      00
 6616              	.LASF111:
 6617 0317 63727970 		.ascii	"cryptoMemSize\000"
 6617      746F4D65 
 6617      6D53697A 
 6617      6500
 6618              	.LASF240:
 6619 0325 43795F53 		.ascii	"Cy_SAR_Wakeup\000"
 6619      41525F57 
 6619      616B6575 
 6619      7000
 6620              	.LASF226:
 6621 0333 73617449 		.ascii	"satIntrMask\000"
 6621      6E74724D 
 6621      61736B00 
 6622              	.LASF189:
 6623 033f 63795F65 		.ascii	"cy_en_sar_start_convert_sel_t\000"
 6623      6E5F7361 
 6623      725F7374 
 6623      6172745F 
 6623      636F6E76 
 6624              	.LASF131:
 6625 035d 70657269 		.ascii	"periTrGrSize\000"
 6625      54724772 
 6625      53697A65 
 6625      00
 6626              	.LASF159:
 6627 036a 69706353 		.ascii	"ipcStructSize\000"
 6627      74727563 
 6627      7453697A 
 6627      6500
 6628              	.LASF273:
 6629 0378 43795F53 		.ascii	"Cy_SAR_SetLowLimit\000"
 6629      41525F53 
 6629      65744C6F 
 6629      774C696D 
 6629      697400
 6630              	.LASF93:
 6631 038b 70726F74 		.ascii	"protVersion\000"
 6631      56657273 
 6631      696F6E00 
 6632              	.LASF212:
 6633 0397 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 6633      41525F52 
 6633      414E4745 
 6633      5F434F4E 
 6633      445F4245 
 6634              	.LASF245:
 6635 03af 69735369 		.ascii	"isSigned\000"
 6635      676E6564 
 6635      00
 6636              	.LASF74:
 6637 03b8 5341525F 		.ascii	"SAR_Type\000"
 6637      54797065 
 6637      00
 6638              	.LASF271:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 181


 6639 03c1 61646352 		.ascii	"adcResult16\000"
 6639      6573756C 
 6639      74313600 
 6640              	.LASF266:
 6641 03cd 43795F53 		.ascii	"Cy_SAR_IsChannelSingleEnded\000"
 6641      41525F49 
 6641      73436861 
 6641      6E6E656C 
 6641      53696E67 
 6642              	.LASF133:
 6643 03e9 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 6643      44697643 
 6643      6D645479 
 6643      70655365 
 6643      6C506F73 
 6644              	.LASF203:
 6645 03fe 43595F53 		.ascii	"CY_SAR_NEG_SEL_P3\000"
 6645      41525F4E 
 6645      45475F53 
 6645      454C5F50 
 6645      3300
 6646              	.LASF150:
 6647 0410 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 6647      73547269 
 6647      6D52616D 
 6647      43746C4F 
 6647      66667365 
 6648              	.LASF296:
 6649 0426 43795F53 		.ascii	"Cy_SAR_DeepSleepCallback\000"
 6649      41525F44 
 6649      65657053 
 6649      6C656570 
 6649      43616C6C 
 6650              	.LASF175:
 6651 043f 43595F53 		.ascii	"CY_SYSPM_CHECK_FAIL\000"
 6651      5953504D 
 6651      5F434845 
 6651      434B5F46 
 6651      41494C00 
 6652              	.LASF161:
 6653 0453 63795F73 		.ascii	"cy_stc_device_t\000"
 6653      74635F64 
 6653      65766963 
 6653      655F7400 
 6654              	.LASF19:
 6655 0463 75696E74 		.ascii	"uint32_t\000"
 6655      33325F74 
 6655      00
 6656              	.LASF143:
 6657 046c 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 6657      50727443 
 6657      66674F75 
 6657      744F6666 
 6657      73657400 
 6658              	.LASF43:
 6659 0480 494E5452 		.ascii	"INTR\000"
 6659      00
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 182


 6660              	.LASF164:
 6661 0485 666C6F61 		.ascii	"float\000"
 6661      7400
 6662              	.LASF86:
 6663 048b 63727970 		.ascii	"cryptoVersion\000"
 6663      746F5665 
 6663      7273696F 
 6663      6E00
 6664              	.LASF115:
 6665 0499 666C6173 		.ascii	"flashProgramDelay\000"
 6665      6850726F 
 6665      6772616D 
 6665      44656C61 
 6665      7900
 6666              	.LASF179:
 6667 04ab 62617365 		.ascii	"base\000"
 6667      00
 6668              	.LASF76:
 6669 04b0 666C6173 		.ascii	"flashcBase\000"
 6669      68634261 
 6669      736500
 6670              	.LASF16:
 6671 04bb 696E7431 		.ascii	"int16_t\000"
 6671      365F7400 
 6672              	.LASF142:
 6673 04c3 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 6673      50727443 
 6673      6667496E 
 6673      4F666673 
 6673      657400
 6674              	.LASF249:
 6675 04d6 72657375 		.ascii	"result\000"
 6675      6C7400
 6676              	.LASF13:
 6677 04dd 6C6F6E67 		.ascii	"long long unsigned int\000"
 6677      206C6F6E 
 6677      6720756E 
 6677      7369676E 
 6677      65642069 
 6678              	.LASF253:
 6679 04f4 6368616E 		.ascii	"chanSingleEnded\000"
 6679      53696E67 
 6679      6C65456E 
 6679      64656400 
 6680              	.LASF144:
 6681 0504 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 6681      50727443 
 6681      66675369 
 6681      6F4F6666 
 6681      73657400 
 6682              	.LASF279:
 6683 0518 6F666673 		.ascii	"offset\000"
 6683      657400
 6684              	.LASF135:
 6685 051f 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 6685      44697643 
 6685      6D645061 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 183


 6685      54797065 
 6685      53656C50 
 6686              	.LASF286:
 6687 0536 43795F53 		.ascii	"Cy_SAR_CountsTo_uVolts\000"
 6687      41525F43 
 6687      6F756E74 
 6687      73546F5F 
 6687      75566F6C 
 6688              	.LASF27:
 6689 054d 53414D50 		.ascii	"SAMPLE_TIME23\000"
 6689      4C455F54 
 6689      494D4532 
 6689      3300
 6690              	.LASF221:
 6691 055b 72616E67 		.ascii	"rangeThres\000"
 6691      65546872 
 6691      657300
 6692              	.LASF5:
 6693 0566 5F5F7569 		.ascii	"__uint16_t\000"
 6693      6E743136 
 6693      5F7400
 6694              	.LASF242:
 6695 0571 43795F53 		.ascii	"Cy_SAR_IsChannelSigned\000"
 6695      41525F49 
 6695      73436861 
 6695      6E6E656C 
 6695      5369676E 
 6696              	.LASF163:
 6697 0588 666C6F61 		.ascii	"float32_t\000"
 6697      7433325F 
 6697      7400
 6698              	.LASF233:
 6699 0592 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 6699      74635F73 
 6699      61725F63 
 6699      6F6E6669 
 6699      675F7400 
 6700              	.LASF217:
 6701 05a6 6374726C 		.ascii	"ctrl\000"
 6701      00
 6702              	.LASF239:
 6703 05ab 73746172 		.ascii	"startSelect\000"
 6703      7453656C 
 6703      65637400 
 6704              	.LASF267:
 6705 05b7 69735369 		.ascii	"isSingleEnded\000"
 6705      6E676C65 
 6705      456E6465 
 6705      6400
 6706              	.LASF213:
 6707 05c5 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 6707      41525F52 
 6707      414E4745 
 6707      5F434F4E 
 6707      445F494E 
 6708              	.LASF167:
 6709 05de 43595F53 		.ascii	"CY_SYSPM_SUCCESS\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 184


 6709      5953504D 
 6709      5F535543 
 6709      43455353 
 6709      00
 6710              	.LASF120:
 6711 05ef 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 6711      6843746C 
 6711      4D61696E 
 6711      57733346 
 6711      72657100 
 6712              	.LASF102:
 6713 0603 73727373 		.ascii	"srssNumPll\000"
 6713      4E756D50 
 6713      6C6C00
 6714              	.LASF199:
 6715 060e 43595F53 		.ascii	"CY_SAR_MUX_SWITCH0\000"
 6715      41525F4D 
 6715      55585F53 
 6715      57495443 
 6715      483000
 6716              	.LASF255:
 6717 0621 43795F53 		.ascii	"Cy_SAR_DeInit\000"
 6717      41525F44 
 6717      65496E69 
 6717      7400
 6718              	.LASF20:
 6719 062f 696E7436 		.ascii	"int64_t\000"
 6719      345F7400 
 6720              	.LASF113:
 6721 0637 666C6173 		.ascii	"flashPipeRequired\000"
 6721      68506970 
 6721      65526571 
 6721      75697265 
 6721      6400
 6722              	.LASF53:
 6723 0649 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 6723      455F494E 
 6723      54525F4D 
 6723      41534B00 
 6724              	.LASF165:
 6725 0659 646F7562 		.ascii	"double\000"
 6725      6C6500
 6726              	.LASF283:
 6727 0660 72657375 		.ascii	"result_Volts\000"
 6727      6C745F56 
 6727      6F6C7473 
 6727      00
 6728              	.LASF232:
 6729 066d 5F426F6F 		.ascii	"_Bool\000"
 6729      6C00
 6730              	.LASF29:
 6731 0673 52414E47 		.ascii	"RANGE_COND\000"
 6731      455F434F 
 6731      4E4400
 6732              	.LASF117:
 6733 067e 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 6733      6843746C 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 185


 6733      4D61696E 
 6733      57733046 
 6733      72657100 
 6734              	.LASF67:
 6735 0692 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 6735      53574954 
 6735      43485F44 
 6735      535F4354 
 6735      524C00
 6736              	.LASF81:
 6737 06a5 6770696F 		.ascii	"gpioBase\000"
 6737      42617365 
 6737      00
 6738              	.LASF183:
 6739 06ae 43595F53 		.ascii	"CY_SAR_BAD_PARAM\000"
 6739      41525F42 
 6739      41445F50 
 6739      4152414D 
 6739      00
 6740              	.LASF284:
 6741 06bf 43795F53 		.ascii	"Cy_SAR_CountsTo_mVolts\000"
 6741      41525F43 
 6741      6F756E74 
 6741      73546F5F 
 6741      6D566F6C 
 6742              	.LASF152:
 6743 06d6 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 6743      73537973 
 6743      5469636B 
 6743      43746C4F 
 6743      66667365 
 6744              	.LASF108:
 6745 06ec 75646250 		.ascii	"udbPresent\000"
 6745      72657365 
 6745      6E7400
 6746              	.LASF295:
 6747 06f7 43795F53 		.ascii	"Cy_SAR_SetSwitchSarSeqCtrl\000"
 6747      41525F53 
 6747      65745377 
 6747      69746368 
 6747      53617253 
 6748              	.LASF126:
 6749 0712 64775374 		.ascii	"dwStatusChIdxPos\000"
 6749      61747573 
 6749      43684964 
 6749      78506F73 
 6749      00
 6750              	.LASF234:
 6751 0723 6877456E 		.ascii	"hwEnabled\000"
 6751      61626C65 
 6751      6400
 6752              	.LASF73:
 6753 072d 5341525F 		.ascii	"SAR_V1_Type\000"
 6753      56315F54 
 6753      79706500 
 6754              	.LASF169:
 6755 0739 43595F53 		.ascii	"CY_SYSPM_TIMEOUT\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 186


 6755      5953504D 
 6755      5F54494D 
 6755      454F5554 
 6755      00
 6756              	.LASF231:
 6757 074a 76726566 		.ascii	"vrefMvValue\000"
 6757      4D765661 
 6757      6C756500 
 6758              	.LASF170:
 6759 0756 43595F53 		.ascii	"CY_SYSPM_INVALID_STATE\000"
 6759      5953504D 
 6759      5F494E56 
 6759      414C4944 
 6759      5F535441 
 6760              	.LASF50:
 6761 076d 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 6761      52415445 
 6761      5F494E54 
 6761      525F4D41 
 6761      534B4544 
 6762              	.LASF171:
 6763 0782 43595F53 		.ascii	"CY_SYSPM_CANCELED\000"
 6763      5953504D 
 6763      5F43414E 
 6763      43454C45 
 6763      4400
 6764              	.LASF48:
 6765 0794 53415455 		.ascii	"SATURATE_INTR_SET\000"
 6765      52415445 
 6765      5F494E54 
 6765      525F5345 
 6765      5400
 6766              	.LASF214:
 6767 07a6 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 6767      41525F52 
 6767      414E4745 
 6767      5F434F4E 
 6767      445F4142 
 6768              	.LASF198:
 6769 07be 63795F65 		.ascii	"cy_en_sar_switch_sar_seq_ctrl_t\000"
 6769      6E5F7361 
 6769      725F7377 
 6769      69746368 
 6769      5F736172 
 6770              	.LASF276:
 6771 07de 43795F53 		.ascii	"Cy_SAR_SetHighLimit\000"
 6771      41525F53 
 6771      65744869 
 6771      67684C69 
 6771      6D697400 
 6772              	.LASF223:
 6773 07f2 6368616E 		.ascii	"chanEn\000"
 6773      456E00
 6774              	.LASF138:
 6775 07f9 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 6775      44697631 
 6775      365F3543 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 187


 6775      746C4F66 
 6775      66736574 
 6776              	.LASF109:
 6777 080e 73797350 		.ascii	"sysPmSimoPresent\000"
 6777      6D53696D 
 6777      6F507265 
 6777      73656E74 
 6777      00
 6778              	.LASF42:
 6779 081f 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 6779      5F524553 
 6779      554C545F 
 6779      4E455756 
 6779      414C5545 
 6780              	.LASF57:
 6781 0834 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 6781      4348414E 
 6781      5F434F4E 
 6781      46494700 
 6782              	.LASF294:
 6783 0844 43795F53 		.ascii	"Cy_SAR_GetAnalogSwitch\000"
 6783      41525F47 
 6783      6574416E 
 6783      616C6F67 
 6783      53776974 
 6784              	.LASF62:
 6785 085b 4156475F 		.ascii	"AVG_STAT\000"
 6785      53544154 
 6785      00
 6786              	.LASF127:
 6787 0864 64775374 		.ascii	"dwStatusChIdxMsk\000"
 6787      61747573 
 6787      43684964 
 6787      784D736B 
 6787      00
 6788              	.LASF15:
 6789 0875 75696E74 		.ascii	"uint8_t\000"
 6789      385F7400 
 6790              	.LASF210:
 6791 087d 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL\000"
 6791      41525F54 
 6791      52494747 
 6791      45525F4D 
 6791      4F44455F 
 6792              	.LASF287:
 6793 08a0 72657375 		.ascii	"result_uVolts\000"
 6793      6C745F75 
 6793      566F6C74 
 6793      7300
 6794              	.LASF186:
 6795 08ae 63795F65 		.ascii	"cy_en_sar_status_t\000"
 6795      6E5F7361 
 6795      725F7374 
 6795      61747573 
 6795      5F7400
 6796              	.LASF260:
 6797 08c1 43795F53 		.ascii	"Cy_SAR_SetConvertMode\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 188


 6797      41525F53 
 6797      6574436F 
 6797      6E766572 
 6797      744D6F64 
 6798              	.LASF132:
 6799 08d7 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 6799      44697643 
 6799      6D644469 
 6799      7653656C 
 6799      4D736B00 
 6800              	.LASF243:
 6801 08eb 43795F53 		.ascii	"Cy_SAR_RawCounts2Counts\000"
 6801      41525F52 
 6801      6177436F 
 6801      756E7473 
 6801      32436F75 
 6802              	.LASF182:
 6803 0903 43595F53 		.ascii	"CY_SAR_SUCCESS\000"
 6803      41525F53 
 6803      55434345 
 6803      535300
 6804              	.LASF52:
 6805 0912 52414E47 		.ascii	"RANGE_INTR_SET\000"
 6805      455F494E 
 6805      54525F53 
 6805      455400
 6806              	.LASF229:
 6807 0921 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 6807      77697463 
 6807      68537143 
 6807      74726C00 
 6808              	.LASF222:
 6809 0931 72616E67 		.ascii	"rangeCond\000"
 6809      65436F6E 
 6809      6400
 6810              	.LASF156:
 6811 093b 63707573 		.ascii	"cpussRam0Ctl0\000"
 6811      7352616D 
 6811      3043746C 
 6811      3000
 6812              	.LASF12:
 6813 0949 6C6F6E67 		.ascii	"long long int\000"
 6813      206C6F6E 
 6813      6720696E 
 6813      7400
 6814              	.LASF83:
 6815 0957 69706342 		.ascii	"ipcBase\000"
 6815      61736500 
 6816              	.LASF124:
 6817 095f 64774368 		.ascii	"dwChCtlPrioPos\000"
 6817      43746C50 
 6817      72696F50 
 6817      6F7300
 6818              	.LASF84:
 6819 096e 63727970 		.ascii	"cryptoBase\000"
 6819      746F4261 
 6819      736500
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 189


 6820              	.LASF301:
 6821 0979 43795F53 		.ascii	"Cy_SAR_offset\000"
 6821      41525F6F 
 6821      66667365 
 6821      7400
 6822              	.LASF139:
 6823 0987 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 6823      44697632 
 6823      345F3543 
 6823      746C4F66 
 6823      66736574 
 6824              	.LASF166:
 6825 099c 75696E74 		.ascii	"uint16\000"
 6825      313600
 6826              	.LASF114:
 6827 09a3 666C6173 		.ascii	"flashWriteDelay\000"
 6827      68577269 
 6827      74654465 
 6827      6C617900 
 6828              	.LASF209:
 6829 09b3 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE\000"
 6829      41525F54 
 6829      52494747 
 6829      45525F4D 
 6829      4F44455F 
 6830              	.LASF180:
 6831 09d5 636F6E74 		.ascii	"context\000"
 6831      65787400 
 6832              	.LASF3:
 6833 09dd 5F5F696E 		.ascii	"__int16_t\000"
 6833      7431365F 
 6833      7400
 6834              	.LASF80:
 6835 09e7 6873696F 		.ascii	"hsiomBase\000"
 6835      6D426173 
 6835      6500
 6836              	.LASF238:
 6837 09f1 43795F53 		.ascii	"Cy_SAR_StartConvert\000"
 6837      41525F53 
 6837      74617274 
 6837      436F6E76 
 6837      65727400 
 6838              	.LASF37:
 6839 0a05 4348414E 		.ascii	"CHAN_RESULT\000"
 6839      5F524553 
 6839      554C5400 
 6840              	.LASF157:
 6841 0a11 63707573 		.ascii	"cpussRam1Ctl0\000"
 6841      7352616D 
 6841      3143746C 
 6841      3000
 6842              	.LASF130:
 6843 0a1f 70657269 		.ascii	"periTrGrOffset\000"
 6843      54724772 
 6843      4F666673 
 6843      657400
 6844              	.LASF51:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 190


 6845 0a2e 52414E47 		.ascii	"RANGE_INTR\000"
 6845      455F494E 
 6845      545200
 6846              	.LASF96:
 6847 0a39 63707573 		.ascii	"cpussDwChNr\000"
 6847      73447743 
 6847      684E7200 
 6848              	.LASF45:
 6849 0a45 494E5452 		.ascii	"INTR_MASK\000"
 6849      5F4D4153 
 6849      4B00
 6850              	.LASF24:
 6851 0a4f 53414D50 		.ascii	"SAMPLE_CTRL\000"
 6851      4C455F43 
 6851      54524C00 
 6852              	.LASF292:
 6853 0a5b 73776974 		.ascii	"switchReg\000"
 6853      63685265 
 6853      6700
 6854              	.LASF94:
 6855 0a65 63707573 		.ascii	"cpussIpcNr\000"
 6855      73497063 
 6855      4E7200
 6856              	.LASF65:
 6857 0a70 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 6857      53574954 
 6857      43485F43 
 6857      4C454152 
 6857      3000
 6858              	.LASF106:
 6859 0a82 70617373 		.ascii	"passSarChannels\000"
 6859      53617243 
 6859      68616E6E 
 6859      656C7300 
 6860              	.LASF158:
 6861 0a92 63707573 		.ascii	"cpussRam2Ctl0\000"
 6861      7352616D 
 6861      3243746C 
 6861      3000
 6862              	.LASF302:
 6863 0aa0 43795F53 		.ascii	"Cy_SAR_countsPer10Volt\000"
 6863      41525F63 
 6863      6F756E74 
 6863      73506572 
 6863      3130566F 
 6864              	.LASF187:
 6865 0ab7 43595F53 		.ascii	"CY_SAR_START_CONVERT_SINGLE_SHOT\000"
 6865      41525F53 
 6865      54415254 
 6865      5F434F4E 
 6865      56455254 
 6866              	.LASF298:
 6867 0ad8 72657475 		.ascii	"returnValue\000"
 6867      726E5661 
 6867      6C756500 
 6868              	.LASF31:
 6869 0ae4 53544152 		.ascii	"START_CTRL\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 191


 6869      545F4354 
 6869      524C00
 6870              	.LASF184:
 6871 0aef 43595F53 		.ascii	"CY_SAR_TIMEOUT\000"
 6871      41525F54 
 6871      494D454F 
 6871      555400
 6872              	.LASF250:
 6873 0afe 636F756E 		.ascii	"counts\000"
 6873      747300
 6874              	.LASF137:
 6875 0b05 70657269 		.ascii	"periDiv16CtlOffset\000"
 6875      44697631 
 6875      3643746C 
 6875      4F666673 
 6875      657400
 6876              	.LASF206:
 6877 0b18 43595F53 		.ascii	"CY_SAR_NEG_SEL_ACORE\000"
 6877      41525F4E 
 6877      45475F53 
 6877      454C5F41 
 6877      434F5245 
 6878              	.LASF11:
 6879 0b2d 5F5F696E 		.ascii	"__int64_t\000"
 6879      7436345F 
 6879      7400
 6880              	.LASF228:
 6881 0b37 6D757853 		.ascii	"muxSwitch\000"
 6881      77697463 
 6881      6800
 6882              	.LASF6:
 6883 0b41 73686F72 		.ascii	"short unsigned int\000"
 6883      7420756E 
 6883      7369676E 
 6883      65642069 
 6883      6E7400
 6884              	.LASF21:
 6885 0b54 6C6F6E67 		.ascii	"long double\000"
 6885      20646F75 
 6885      626C6500 
 6886              	.LASF17:
 6887 0b60 75696E74 		.ascii	"uint16_t\000"
 6887      31365F74 
 6887      00
 6888              	.LASF79:
 6889 0b69 70726F74 		.ascii	"protBase\000"
 6889      42617365 
 6889      00
 6890              	.LASF129:
 6891 0b72 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 6891      5472436D 
 6891      64477253 
 6891      656C4D73 
 6891      6B00
 6892              	.LASF219:
 6893 0b84 73616D70 		.ascii	"sampleTime01\000"
 6893      6C655469 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 192


 6893      6D653031 
 6893      00
 6894              	.LASF103:
 6895 0b91 73727373 		.ascii	"srssNumHfroot\000"
 6895      4E756D48 
 6895      66726F6F 
 6895      7400
 6896              	.LASF87:
 6897 0b9f 64775665 		.ascii	"dwVersion\000"
 6897      7273696F 
 6897      6E00
 6898              	.LASF119:
 6899 0ba9 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 6899      6843746C 
 6899      4D61696E 
 6899      57733246 
 6899      72657100 
 6900              	.LASF248:
 6901 0bbd 636F6E66 		.ascii	"config\000"
 6901      696700
 6902              	.LASF306:
 6903 0bc4 43795F53 		.ascii	"Cy_SAR_IsChannelDifferential\000"
 6903      41525F49 
 6903      73436861 
 6903      6E6E656C 
 6903      44696666 
 6904              	.LASF22:
 6905 0be1 73697A65 		.ascii	"sizetype\000"
 6905      74797065 
 6905      00
 6906              	.LASF190:
 6907 0bea 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 6907      41525F52 
 6907      45545552 
 6907      4E5F5354 
 6907      41545553 
 6908              	.LASF285:
 6909 0bff 72657375 		.ascii	"result_mVolts\000"
 6909      6C745F6D 
 6909      566F6C74 
 6909      7300
 6910              	.LASF148:
 6911 0c0d 63707573 		.ascii	"cpussCm0StatusOffset\000"
 6911      73436D30 
 6911      53746174 
 6911      75734F66 
 6911      66736574 
 6912              	.LASF136:
 6913 0c22 70657269 		.ascii	"periDiv8CtlOffset\000"
 6913      44697638 
 6913      43746C4F 
 6913      66667365 
 6913      7400
 6914              	.LASF34:
 6915 0c34 52455345 		.ascii	"RESERVED2\000"
 6915      52564544 
 6915      3200
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 193


 6916              	.LASF36:
 6917 0c3e 52455345 		.ascii	"RESERVED3\000"
 6917      52564544 
 6917      3300
 6918              	.LASF38:
 6919 0c48 52455345 		.ascii	"RESERVED4\000"
 6919      52564544 
 6919      3400
 6920              	.LASF56:
 6921 0c52 52455345 		.ascii	"RESERVED5\000"
 6921      52564544 
 6921      3500
 6922              	.LASF58:
 6923 0c5c 52455345 		.ascii	"RESERVED6\000"
 6923      52564544 
 6923      3600
 6924              	.LASF60:
 6925 0c66 52455345 		.ascii	"RESERVED7\000"
 6925      52564544 
 6925      3700
 6926              	.LASF63:
 6927 0c70 52455345 		.ascii	"RESERVED8\000"
 6927      52564544 
 6927      3800
 6928              	.LASF66:
 6929 0c7a 52455345 		.ascii	"RESERVED9\000"
 6929      52564544 
 6929      3900
 6930              	.LASF178:
 6931 0c84 63795F65 		.ascii	"cy_en_syspm_callback_mode_t\000"
 6931      6E5F7379 
 6931      73706D5F 
 6931      63616C6C 
 6931      6261636B 
 6932              	.LASF68:
 6933 0ca0 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 6933      53574954 
 6933      43485F53 
 6933      515F4354 
 6933      524C00
 6934              	.LASF8:
 6935 0cb3 6C6F6E67 		.ascii	"long int\000"
 6935      20696E74 
 6935      00
 6936              	.LASF236:
 6937 0cbc 63795F73 		.ascii	"cy_stc_sar_state_backup_t\000"
 6937      74635F73 
 6937      61725F73 
 6937      74617465 
 6937      5F626163 
 6938              	.LASF85:
 6939 0cd6 63707573 		.ascii	"cpussVersion\000"
 6939      73566572 
 6939      73696F6E 
 6939      00
 6940              	.LASF98:
 6941 0ce3 63707573 		.ascii	"cpussIpc0Irq\000"
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 194


 6941      73497063 
 6941      30497271 
 6941      00
 6942              	.LASF259:
 6943 0cf0 6374726C 		.ascii	"ctrlReg\000"
 6943      52656700 
 6944              	.LASF89:
 6945 0cf8 6770696F 		.ascii	"gpioVersion\000"
 6945      56657273 
 6945      696F6E00 
 6946              	.LASF88:
 6947 0d04 666C6173 		.ascii	"flashcVersion\000"
 6947      68635665 
 6947      7273696F 
 6947      6E00
 6948              	.LASF110:
 6949 0d12 70726F74 		.ascii	"protBusMasterMask\000"
 6949      4275734D 
 6949      61737465 
 6949      724D6173 
 6949      6B00
 6950              	.LASF211:
 6951 0d24 63795F65 		.ascii	"cy_en_sar_sample_ctrl_trigger_mode_t\000"
 6951      6E5F7361 
 6951      725F7361 
 6951      6D706C65 
 6951      5F637472 
 6952              	.LASF246:
 6953 0d49 74656D70 		.ascii	"temp\000"
 6953      00
 6954              	.LASF28:
 6955 0d4e 52414E47 		.ascii	"RANGE_THRES\000"
 6955      455F5448 
 6955      52455300 
 6956              	.LASF290:
 6957 0d5a 73776974 		.ascii	"switchMask\000"
 6957      63684D61 
 6957      736B00
 6958              	.LASF197:
 6959 0d65 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_ENABLE\000"
 6959      41525F53 
 6959      57495443 
 6959      485F5345 
 6959      515F4354 
 6960              	.LASF247:
 6961 0d83 61766572 		.ascii	"averageAdcSamplesDiv\000"
 6961      61676541 
 6961      64635361 
 6961      6D706C65 
 6961      73446976 
 6962              	.LASF208:
 6963 0d98 43595F53 		.ascii	"CY_SAR_TRIGGER_MODE_FW_ONLY\000"
 6963      41525F54 
 6963      52494747 
 6963      45525F4D 
 6963      4F44455F 
 6964              	.LASF35:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 195


 6965 0db4 4348414E 		.ascii	"CHAN_WORK\000"
 6965      5F574F52 
 6965      4B00
 6966              	.LASF200:
 6967 0dbe 63795F65 		.ascii	"cy_en_sar_switch_register_sel_t\000"
 6967      6E5F7361 
 6967      725F7377 
 6967      69746368 
 6967      5F726567 
 6968              	.LASF261:
 6969 0dde 6D6F6465 		.ascii	"mode\000"
 6969      00
 6970              	.LASF258:
 6971 0de3 43795F53 		.ascii	"Cy_SAR_DeepSleep\000"
 6971      41525F44 
 6971      65657053 
 6971      6C656570 
 6971      00
 6972              	.LASF277:
 6973 0df4 68696768 		.ascii	"highLimit\000"
 6973      4C696D69 
 6973      7400
 6974              	.LASF235:
 6975 0dfe 636F6E74 		.ascii	"continuous\000"
 6975      696E756F 
 6975      757300
 6976              	.LASF149:
 6977 0e09 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 6977      73436D34 
 6977      50777243 
 6977      746C4F66 
 6977      66736574 
 6978              	.LASF2:
 6979 0e1e 5F5F7569 		.ascii	"__uint8_t\000"
 6979      6E74385F 
 6979      7400
 6980              	.LASF304:
 6981 0e28 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 6981      72617465 
 6981      645F536F 
 6981      75726365 
 6981      5C50536F 
 6982 0e56 7361725C 		.ascii	"sar\\cy_sar.c\000"
 6982      63795F73 
 6982      61722E63 
 6982      00
 6983              	.LASF280:
 6984 0e63 43795F53 		.ascii	"Cy_SAR_SetGain\000"
 6984      41525F53 
 6984      65744761 
 6984      696E00
 6985              	.LASF140:
 6986 0e72 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 6986      50727449 
 6986      6E747243 
 6986      66674F66 
 6986      66736574 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 196


 6987              	.LASF146:
 6988 0e87 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 6988      73436D34 
 6988      436C6F63 
 6988      6B43746C 
 6988      4F666673 
 6989              	.LASF46:
 6990 0e9e 494E5452 		.ascii	"INTR_MASKED\000"
 6990      5F4D4153 
 6990      4B454400 
 6991              	.LASF151:
 6992 0eaa 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 6992      73547269 
 6992      6D526F6D 
 6992      43746C4F 
 6992      66667365 
 6993              	.LASF220:
 6994 0ec0 73616D70 		.ascii	"sampleTime23\000"
 6994      6C655469 
 6994      6D653233 
 6994      00
 6995              	.LASF303:
 6996 0ecd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6996      43313120 
 6996      352E342E 
 6996      31203230 
 6996      31363036 
 6997 0f00 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 6997      20726576 
 6997      6973696F 
 6997      6E203233 
 6997      37373135 
 6998 0f33 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 6998      73202D66 
 6998      66756E63 
 6998      74696F6E 
 6998      2D736563 
 6999              	.LASF237:
 7000 0f5f 43795F53 		.ascii	"Cy_SAR_Enable\000"
 7000      41525F45 
 7000      6E61626C 
 7000      6500
 7001              	.LASF90:
 7002 0f6d 6873696F 		.ascii	"hsiomVersion\000"
 7002      6D566572 
 7002      73696F6E 
 7002      00
 7003              	.LASF10:
 7004 0f7a 6C6F6E67 		.ascii	"long unsigned int\000"
 7004      20756E73 
 7004      69676E65 
 7004      6420696E 
 7004      7400
 7005              	.LASF155:
 7006 0f8c 63707573 		.ascii	"cpussRomCtl\000"
 7006      73526F6D 
 7006      43746C00 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 197


 7007              	.LASF268:
 7008 0f98 43795F53 		.ascii	"Cy_SAR_GetResult16\000"
 7008      41525F47 
 7008      65745265 
 7008      73756C74 
 7008      313600
 7009              	.LASF18:
 7010 0fab 696E7433 		.ascii	"int32_t\000"
 7010      325F7400 
 7011              	.LASF64:
 7012 0fb3 4D55585F 		.ascii	"MUX_SWITCH0\000"
 7012      53574954 
 7012      43483000 
 7013              	.LASF40:
 7014 0fbf 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 7014      5F524553 
 7014      554C545F 
 7014      55504441 
 7014      54454400 
 7015              	.LASF192:
 7016 0fd3 63795F65 		.ascii	"cy_en_sar_return_mode_t\000"
 7016      6E5F7361 
 7016      725F7265 
 7016      7475726E 
 7016      5F6D6F64 
 7017              	.LASF269:
 7018 0feb 61646352 		.ascii	"adcResult\000"
 7018      6573756C 
 7018      7400
 7019              	.LASF201:
 7020 0ff5 43595F53 		.ascii	"CY_SAR_NEG_SEL_VSSA_KELVIN\000"
 7020      41525F4E 
 7020      45475F53 
 7020      454C5F56 
 7020      5353415F 
 7021              	.LASF33:
 7022 1010 4348414E 		.ascii	"CHAN_CONFIG\000"
 7022      5F434F4E 
 7022      46494700 
 7023              	.LASF307:
 7024 101c 43795F53 		.ascii	"Cy_SysLib_DelayUs\000"
 7024      79734C69 
 7024      625F4465 
 7024      6C617955 
 7024      7300
 7025              	.LASF218:
 7026 102e 73616D70 		.ascii	"sampleCtrl\000"
 7026      6C654374 
 7026      726C00
 7027              	.LASF251:
 7028 1039 76726566 		.ascii	"vrefNegSelect\000"
 7028      4E656753 
 7028      656C6563 
 7028      7400
 7029              	.LASF1:
 7030 1047 756E7369 		.ascii	"unsigned char\000"
 7030      676E6564 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 198


 7030      20636861 
 7030      7200
 7031              	.LASF71:
 7032 1055 414E415F 		.ascii	"ANA_TRIM0\000"
 7032      5452494D 
 7032      3000
 7033              	.LASF72:
 7034 105f 414E415F 		.ascii	"ANA_TRIM1\000"
 7034      5452494D 
 7034      3100
 7035              	.LASF9:
 7036 1069 5F5F7569 		.ascii	"__uint32_t\000"
 7036      6E743332 
 7036      5F7400
 7037              	.LASF282:
 7038 1074 43795F53 		.ascii	"Cy_SAR_CountsTo_Volts\000"
 7038      41525F43 
 7038      6F756E74 
 7038      73546F5F 
 7038      566F6C74 
 7039              	.LASF160:
 7040 108a 6970634C 		.ascii	"ipcLockStatusOffset\000"
 7040      6F636B53 
 7040      74617475 
 7040      734F6666 
 7040      73657400 
 7041              	.LASF193:
 7042 109e 43595F53 		.ascii	"CY_SAR_SWITCH_OPEN\000"
 7042      41525F53 
 7042      57495443 
 7042      485F4F50 
 7042      454E00
 7043              	.LASF154:
 7044 10b1 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 7044      73436D34 
 7044      4E6D6943 
 7044      746C4F66 
 7044      66736574 
 7045              	.LASF49:
 7046 10c6 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 7046      52415445 
 7046      5F494E54 
 7046      525F4D41 
 7046      534B00
 7047              	.LASF264:
 7048 10d9 7265744D 		.ascii	"retMode\000"
 7048      6F646500 
 7049              	.LASF70:
 7050 10e1 52455345 		.ascii	"RESERVED10\000"
 7050      52564544 
 7050      313000
 7051              	.LASF172:
 7052 10ec 43595F53 		.ascii	"CY_SYSPM_FAIL\000"
 7052      5953504D 
 7052      5F464149 
 7052      4C00
 7053              	.LASF116:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 199


 7054 10fa 666C6173 		.ascii	"flashEraseDelay\000"
 7054      68457261 
 7054      73654465 
 7054      6C617900 
 7055              	.LASF288:
 7056 110a 43795F53 		.ascii	"Cy_SAR_SetAnalogSwitch\000"
 7056      41525F53 
 7056      6574416E 
 7056      616C6F67 
 7056      53776974 
 7057              	.LASF291:
 7058 1121 73746174 		.ascii	"state\000"
 7058      6500
 7059              	.LASF265:
 7060 1127 656E644F 		.ascii	"endOfConversion\000"
 7060      66436F6E 
 7060      76657273 
 7060      696F6E00 
 7061              	.LASF196:
 7062 1137 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_DISABLE\000"
 7062      41525F53 
 7062      57495443 
 7062      485F5345 
 7062      515F4354 
 7063              	.LASF145:
 7064 1156 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 7064      73436D30 
 7064      436C6F63 
 7064      6B43746C 
 7064      4F666673 
 7065              	.LASF254:
 7066 116d 43795F53 		.ascii	"Cy_SAR_Init\000"
 7066      41525F49 
 7066      6E697400 
 7067              	.LASF112:
 7068 1179 666C6173 		.ascii	"flashRwwRequired\000"
 7068      68527777 
 7068      52657175 
 7068      69726564 
 7068      00
 7069              	.LASF141:
 7070 118a 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 7070      50727443 
 7070      66674F66 
 7070      66736574 
 7070      00
 7071              	.LASF107:
 7072 119b 65704D6F 		.ascii	"epMonitorNr\000"
 7072      6E69746F 
 7072      724E7200 
 7073              	.LASF168:
 7074 11a7 43595F53 		.ascii	"CY_SYSPM_BAD_PARAM\000"
 7074      5953504D 
 7074      5F424144 
 7074      5F504152 
 7074      414D00
 7075              	.LASF297:
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 200


 7076 11ba 63616C6C 		.ascii	"callbackParams\000"
 7076      6261636B 
 7076      50617261 
 7076      6D7300
 7077              	.LASF0:
 7078 11c9 7369676E 		.ascii	"signed char\000"
 7078      65642063 
 7078      68617200 
 7079              	.LASF122:
 7080 11d5 64774368 		.ascii	"dwChOffset\000"
 7080      4F666673 
 7080      657400
 7081              	.LASF95:
 7082 11e0 63707573 		.ascii	"cpussIpcIrqNr\000"
 7082      73497063 
 7082      4972714E 
 7082      7200
 7083              	.LASF125:
 7084 11ee 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 7084      43746C50 
 7084      7265656D 
 7084      70746162 
 7084      6C65506F 
 7085              	.LASF270:
 7086 1204 43795F53 		.ascii	"Cy_SAR_GetResult32\000"
 7086      41525F47 
 7086      65745265 
 7086      73756C74 
 7086      333200
 7087              	.LASF147:
 7088 1217 63707573 		.ascii	"cpussCm4StatusOffset\000"
 7088      73436D34 
 7088      53746174 
 7088      75734F66 
 7088      66736574 
 7089              	.LASF224:
 7090 122c 6368616E 		.ascii	"chanConfig\000"
 7090      436F6E66 
 7090      696700
 7091              	.LASF69:
 7092 1237 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 7092      53574954 
 7092      43485F53 
 7092      54415455 
 7092      5300
 7093              	.LASF92:
 7094 1249 70657269 		.ascii	"periVersion\000"
 7094      56657273 
 7094      696F6E00 
 7095              	.LASF262:
 7096 1255 73616D70 		.ascii	"sampleCtrlReg\000"
 7096      6C654374 
 7096      726C5265 
 7096      6700
 7097              	.LASF256:
 7098 1263 6465496E 		.ascii	"deInitRouting\000"
 7098      6974526F 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 201


 7098      7574696E 
 7098      6700
 7099              	.LASF230:
 7100 1271 636F6E66 		.ascii	"configRouting\000"
 7100      6967526F 
 7100      7574696E 
 7100      6700
 7101              	.LASF82:
 7102 127f 70617373 		.ascii	"passBase\000"
 7102      42617365 
 7102      00
 7103              	.LASF32:
 7104 1288 52455345 		.ascii	"RESERVED1\000"
 7104      52564544 
 7104      3100
 7105              	.LASF101:
 7106 1292 73727373 		.ascii	"srssNumClkpath\000"
 7106      4E756D43 
 7106      6C6B7061 
 7106      746800
 7107              	.LASF61:
 7108 12a1 53544154 		.ascii	"STATUS\000"
 7108      555300
 7109              	.LASF278:
 7110 12a8 43795F53 		.ascii	"Cy_SAR_SetOffset\000"
 7110      41525F53 
 7110      65744F66 
 7110      66736574 
 7110      00
 7111              	.LASF121:
 7112 12b9 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 7112      6843746C 
 7112      4D61696E 
 7112      57733446 
 7112      72657100 
 7113              	.LASF227:
 7114 12cd 72616E67 		.ascii	"rangeIntrMask\000"
 7114      65496E74 
 7114      724D6173 
 7114      6B00
 7115              	.LASF194:
 7116 12db 43595F53 		.ascii	"CY_SAR_SWITCH_CLOSE\000"
 7116      41525F53 
 7116      57495443 
 7116      485F434C 
 7116      4F534500 
 7117              	.LASF216:
 7118 12ef 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 7118      6E5F7361 
 7118      725F7261 
 7118      6E67655F 
 7118      64657465 
 7119              	.LASF257:
 7120 1312 43795F53 		.ascii	"Cy_SAR_StopConvert\000"
 7120      41525F53 
 7120      746F7043 
 7120      6F6E7665 
ARM GAS  C:\Users\mcfdo\AppData\Local\Temp\ccMxPWpZ.s 			page 202


 7120      727400
 7121              	.LASF188:
 7122 1325 43595F53 		.ascii	"CY_SAR_START_CONVERT_CONTINUOUS\000"
 7122      41525F53 
 7122      54415254 
 7122      5F434F4E 
 7122      56455254 
 7123              	.LASF299:
 7124 1345 656E6162 		.ascii	"enabledBeforeSleep\000"
 7124      6C656442 
 7124      65666F72 
 7124      65536C65 
 7124      657000
 7125              	.LASF91:
 7126 1358 69706356 		.ascii	"ipcVersion\000"
 7126      65727369 
 7126      6F6E00
 7127              	.LASF225:
 7128 1363 696E7472 		.ascii	"intrMask\000"
 7128      4D61736B 
 7128      00
 7129              	.LASF128:
 7130 136c 70657269 		.ascii	"periTrCmdOffset\000"
 7130      5472436D 
 7130      644F6666 
 7130      73657400 
 7131              	.LASF263:
 7132 137c 43795F53 		.ascii	"Cy_SAR_IsEndConversion\000"
 7132      41525F49 
 7132      73456E64 
 7132      436F6E76 
 7132      65727369 
 7133              	.LASF23:
 7134 1393 4354524C 		.ascii	"CTRL\000"
 7134      00
 7135              	.LASF176:
 7136 1398 43595F53 		.ascii	"CY_SYSPM_BEFORE_TRANSITION\000"
 7136      5953504D 
 7136      5F424546 
 7136      4F52455F 
 7136      5452414E 
 7137              	.LASF177:
 7138 13b3 43595F53 		.ascii	"CY_SYSPM_AFTER_TRANSITION\000"
 7138      5953504D 
 7138      5F414654 
 7138      45525F54 
 7138      52414E53 
 7139              	.LASF174:
 7140 13cd 43595F53 		.ascii	"CY_SYSPM_CHECK_READY\000"
 7140      5953504D 
 7140      5F434845 
 7140      434B5F52 
 7140      45414459 
 7141              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
